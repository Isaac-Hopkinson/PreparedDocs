{"prompt":"title: \"Advanced app examples\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn about advanced Retool examples and download them to use with your own apps.\"\nhidden: true\n\n###\n\n","completion":" These examples explain how to use Retool's components, queries, and logic to create more complex applications. They provide additional context related to common components, resources, and options. END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" This guide assumes that: END"}
{"prompt":"Unnest objects into individual columns\n\n###\n\n","completion":" API responses sometimes have nested objects that don’t map well to the Retool Table component. This can cause undesirable nested text when you visualize the data. END"}
{"prompt":"API responses sometimes have nested objects that don’t map well to the Retool Table component. This can cause undesirable nested text when you visualize the data.\n\n###\n\n","completion":" There are two solutions that can solve this issue: END"}
{"prompt":"There are two solutions that can solve this issue:\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/99e13dc0-1284-4694-8c7a-45e631a61552\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/99e13dc0-1284-4694-8c7a-45e631a61552\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In the first solution, we use the Table component’s mapped value attribute to unnest the objects and create a legible address in a single column. END"}
{"prompt":"In the first solution, we use the Table component’s mapped value attribute to unnest the objects and create a legible address in a single column.\n\n###\n\n","completion":" Inspect the Table component, select the column with the nested object, and add the following to **Mapped value**:\n`{{ self.street.concat(\" \", self.city, \", \", \"self.state, \", \", self.zipcode) }}` END"}
{"prompt":"Inspect the Table component, select the column with the nested object, and add the following to **Mapped value**:\n`{{ self.street.concat(\" \", self.city, \", \", \"self.state, \", \", self.zipcode) }}`\n\n###\n\n","completion":" In the second solution, we split the nested object into individual legible columns by using the Table's custom columns. END"}
{"prompt":"In the second solution, we split the nested object into individual legible columns by using the Table's custom columns.\n\n###\n\n","completion":" Inspect the Table component, and add a new custom column for each nested object like the following: `currentRow.address.street`. END"}
{"prompt":"Inspect the Table component, and add a new custom column for each nested object like the following: `currentRow.address.street`.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/f45d176d-0674-45c2-b212-57162e8fea78.json) to try it out yourself. END"}
{"prompt":"Auto populate a modal with selected table row metadata\n\n###\n\n","completion":" A common Retool use case is to build a view for an Operations team to edit data from a table in a modal view. Auto-populating fields is a common best practice we recommend. END"}
{"prompt":"A common Retool use case is to build a view for an Operations team to edit data from a table in a modal view. Auto-populating fields is a common best practice we recommend.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/ca17eb4d-5f1a-410c-bb5a-95ac4df357ec\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/ca17eb4d-5f1a-410c-bb5a-95ac4df357ec\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" There are two solutions here: END"}
{"prompt":"There are two solutions here:\n\n###\n\n","completion":" In the first solution, we use a modal component. This modal has various text input components that use the table’s `selectedRow.data` fields. For each text input component, you can use the selected row’s metadata and set the **Default value** to `{{ table1.selectedRow.data.name }}`. END"}
{"prompt":"In the first solution, we use a modal component. This modal has various text input components that use the table’s `selectedRow.data` fields. For each text input component, you can use the selected row’s metadata and set the **Default value** to `{{ table1.selectedRow.data.name }}`.\n\n###\n\n","completion":" The second solution is similar but it uses the Table’s Action column. Select your table, and scroll down to **Actions** and add an action. Actions can run a query, open another Retool page, open a web page, or copy to a clipboard. In this use case, it runs a query to open a modal. END"}
{"prompt":"The second solution is similar but it uses the Table’s Action column. Select your table, and scroll down to **Actions** and add an action. Actions can run a query, open another Retool page, open a web page, or copy to a clipboard. In this use case, it runs a query to open a modal.\n\n###\n\n","completion":" Add a modal to your app and set the **Hidden** value to true; seeing the modal button is not necessary here since we have action buttons on our table. Next, add a JavaScript query to trigger opening the modal component, `modal1.open()`. We can now hook these queries and components together. Go back to your Table’s Actions, set the action button type to **Run a query** and the **Action query** to your JavaScript query. Like the first solution, you can use a table’s selected row metadata and auto populate your components. END"}
{"prompt":"Add a modal to your app and set the **Hidden** value to true; seeing the modal button is not necessary here since we have action buttons on our table. Next, add a JavaScript query to trigger opening the modal component, `modal1.open()`. We can now hook these queries and components together. Go back to your Table’s Actions, set the action button type to **Run a query** and the **Action query** to your JavaScript query. Like the first solution, you can use a table’s selected row metadata and auto populate your components.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/2384e5d6-7a9c-4fa3-b69d-fb530df9ae66.json) to try it out yourself. END"}
{"prompt":"Auto populate filters with table values\n\n###\n\n","completion":" Filters are commonly created for data tables. In this example, filters are auto populated with values from the table. Additionally, this example explains how to auto populate values that are duplicated in columns. END"}
{"prompt":"Filters are commonly created for data tables. In this example, filters are auto populated with values from the table. Additionally, this example explains how to auto populate values that are duplicated in columns.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/c5a6e14f-4780-4d8b-beed-6e7ec63c6fda\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/c5a6e14f-4780-4d8b-beed-6e7ec63c6fda\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" After loading your data into a table, pull in Select components to facilitate filtering. For each Select component, set the **Option** to **Mapped** and wrap your data in JavaScript like this: `{{ Array.from(new Set(raw_data.value.map(x => x.company))) }}` END"}
{"prompt":"After loading your data into a table, pull in Select components to facilitate filtering. For each Select component, set the **Option** to **Mapped** and wrap your data in JavaScript like this: `{{ Array.from(new Set(raw_data.value.map(x => x.company))) }}`\n\n###\n\n","completion":" After all the filters are created, go to the Query Builder and add a JavaScript transformer to filter data based on the user’s selected filters: END"}
{"prompt":"After all the filters are created, go to the Query Builder and add a JavaScript transformer to filter data based on the user’s selected filters:\n\n###\n\n","completion":" Go back to your table and set the data to the JavaScript transformer data to complete the filters. END"}
{"prompt":"Go back to your table and set the data to the JavaScript transformer data to complete the filters.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff3248b0-0657-4510-817a-c2dbe4c15626.json) to try it out yourself. END"}
{"prompt":"User configurable table columns\n\n###\n\n","completion":" When displaying tabular data with lots of columns, it's more efficient to display a subset of columns.\nIn such situations, you can reduce an application's data density using the Table component's [dynamic column settings](https:\/\/docs.retool.com\/docs\/data-in-tables#dynamic-column-settings) feature as demonstrated in this app. END"}
{"prompt":"When displaying tabular data with lots of columns, it's more efficient to display a subset of columns.\nIn such situations, you can reduce an application's data density using the Table component's [dynamic column settings](https:\/\/docs.retool.com\/docs\/data-in-tables#dynamic-column-settings) feature as demonstrated in this app.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/5cfa8fb3-e48a-4348-8676-313bf506dfb8\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/5cfa8fb3-e48a-4348-8676-313bf506dfb8\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/b9ae80a5-c1bf-409a-8ac9-ad7947caa7eb.json) to try it out yourself. END"}
{"prompt":"Color code columns and rows in a table\n\n###\n\n","completion":" Table components are commonly designed to color code columns and rows depending on a condition. In this example, we'll build out this design pattern using the row background color table properties. END"}
{"prompt":"Table components are commonly designed to color code columns and rows depending on a condition. In this example, we'll build out this design pattern using the row background color table properties.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/d6f26ceb-ea5b-4f92-9045-366190ab5d89\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/d6f26ceb-ea5b-4f92-9045-366190ab5d89\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" We'll walk through these solutions after loading your data into a table: END"}
{"prompt":"We'll walk through these solutions after loading your data into a table:\n\n###\n\n","completion":" For the first design pattern, in addition to adding a Table component, we'll use a TextInput and NumberInput component to set the conditional. The user will be allowed to specify the color of the row through the TextInput and set the row color code condition based on the NumberInput. Next, inspect your table, and under the **Styles** section, insert the following JavaScript snippet into the **Row color** property. Note that we'll also use the `{{ currentRow }}` table variable to access the row that we are evaluating the conditional on. END"}
{"prompt":"For the first design pattern, in addition to adding a Table component, we'll use a TextInput and NumberInput component to set the conditional. The user will be allowed to specify the color of the row through the TextInput and set the row color code condition based on the NumberInput. Next, inspect your table, and under the **Styles** section, insert the following JavaScript snippet into the **Row color** property. Note that we'll also use the `{{ currentRow }}` table variable to access the row that we are evaluating the conditional on.\n\n###\n\n","completion":" For the second design pattern, inspect the column you want to color code. Under the **Styles** section, use the **Background** color property to color code the column. In this example, we'll use the value in each cell of the color column to color code by indexing into the `{{ currentRow.color }}` value. END"}
{"prompt":"For the second design pattern, inspect the column you want to color code. Under the **Styles** section, use the **Background** color property to color code the column. In this example, we'll use the value in each cell of the color column to color code by indexing into the `{{ currentRow.color }}` value.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/fe6674b6-d5b2-4e3a-919b-b75f3ced9dce.json) to try it out yourself. END"}
{"prompt":"GraphQL cursor based pagination\n\n###\n\n","completion":" Cursor based pagination is often used when working with large datasets to increase performance and reduce latency. This examples uses GraphQL cursor based pagination with the Table component to limit how much data queries return. END"}
{"prompt":"Cursor based pagination is often used when working with large datasets to increase performance and reduce latency. This examples uses GraphQL cursor based pagination with the Table component to limit how much data queries return.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/03d52353-0c16-431a-9f3e-ebb9fb1df360\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"1. Server side table pagination\n\n###\n\n","completion":" The Table component supports server side pagination, which you can enable in the **Pagination** section. Set the **Pagination** type to **GraphQL Relay cursor based**. This surfaces three variables that you can use in our GraphQL query: Previous cursor, Next cursor, Has next page. END"}
{"prompt":"2. GraphQL pagination query\n\n###\n\n","completion":" When writing the query, you might want use numerous variables to enable [GraphQL pagination](https:\/\/graphql.org\/learn\/pagination\/). Most importantly, you need to pass the `first`, `last`, `after_cursor`, and `before_cursor` variables in the query. After that, you can leverage the Table pagination variables detailed in the previous section to correctly pass cursor information in the Query Builder. END"}
{"prompt":"3. Connecting table component and query\n\n###\n\n","completion":" You can now go back to your Table component's **Pagination** section, and fill in the **Previous cursor**, **Next cursor**, and **Has next page** variables with references to your GraphQL query data. END"}
{"prompt":"You can now go back to your Table component's **Pagination** section, and fill in the **Previous cursor**, **Next cursor**, and **Has next page** variables with references to your GraphQL query data.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/0e9a9671-71da-4b12-9308-b0ddc537ffc5.json) to try it out yourself. END"}
{"prompt":"[Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/0e9a9671-71da-4b12-9308-b0ddc537ffc5.json) to try it out yourself.\n\n###\n\n","completion":" For more examples and information on pagination, see the guide to [Server Side Pagination](https:\/\/docs.retool.com\/docs\/server-side-pagination#graphql-relay-cursor-based). END"}
{"prompt":"Return all paginated results\n\n###\n\n","completion":" In some scenarios, you might need to access all data from a pagination resource. This example explains how to do this with a REST API and a JavaScript query, which calls the API query as many times as you need. END"}
{"prompt":"In some scenarios, you might need to access all data from a pagination resource. This example explains how to do this with a REST API and a JavaScript query, which calls the API query as many times as you need.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/f8d79a23-1fdb-4a61-8a14-1ed6c9ccfbb3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/f8d79a23-1fdb-4a61-8a14-1ed6c9ccfbb3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" First, instantiate a cursor by creating an `offset` URL parameter with the value set to `{{ offset }}` in the REST API query. Note that `offset` is undefined -- the JavaScript query will inject the value using `additionalScope`. See the [JavaScript API reference](\/reference\/javascript-api-methods-query#querytrigger) for more information. END"}
{"prompt":"First, instantiate a cursor by creating an `offset` URL parameter with the value set to `{{ offset }}` in the REST API query. Note that `offset` is undefined -- the JavaScript query will inject the value using `additionalScope`. See the [JavaScript API reference](\/reference\/javascript-api-methods-query#querytrigger) for more information.\n\n###\n\n","completion":" Then write a JavaScript query that recursively calls the API query until you receive all the data. If your resource returns an offset value, you can use that returned offset in the JavaScript query and have this query loop as many times as the `offset` is returned (i.e., until all the data is returned). If your resource does not return an offset value, the query code in this app will instead use the query limit length to determine when all data has been received (i.e., when the query data length is less than the limit, all data has been returned). END"}
{"prompt":"Then write a JavaScript query that recursively calls the API query until you receive all the data. If your resource returns an offset value, you can use that returned offset in the JavaScript query and have this query loop as many times as the `offset` is returned (i.e., until all the data is returned). If your resource does not return an offset value, the query code in this app will instead use the query limit length to determine when all data has been received (i.e., when the query data length is less than the limit, all data has been returned).\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/f1fb70f3-7aff-4a11-ad86-2f13cfb08e98.json) to try it out yourself. END"}
{"prompt":"[Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/f1fb70f3-7aff-4a11-ad86-2f13cfb08e98.json) to try it out yourself.\n\n###\n\n","completion":" For more examples and information on pagination, read the guide to [Server Side Pagination](https:\/\/docs.retool.com\/docs\/https:\/\/docs.retool.com\/docs\/server-side-pagination#graphql-relay-cursor-based). END"}
{"prompt":"Searchable dropdowns\n\n###\n\n","completion":" Retool's Select, Multiselect, and Listbox components support captions and icons that make long option lists easier to understand. END"}
{"prompt":"Retool's Select, Multiselect, and Listbox components support captions and icons that make long option lists easier to understand.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b8b0a250-bd12-488d-8e6a-99ec8a0364db\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b8b0a250-bd12-488d-8e6a-99ec8a0364db\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" These components support fuzzy searching as well as captions, which make it possible for users to see a subset of options that correspond to a search term. Try searching for \"incident\" in the application dropdown to see this in action.\nOther search methodologies (e.g., case sensitive search) are also supported - see the **Search** option under the **Advanced** section of the Inspector. END"}
{"prompt":"These components support fuzzy searching as well as captions, which make it possible for users to see a subset of options that correspond to a search term. Try searching for \"incident\" in the application dropdown to see this in action.\nOther search methodologies (e.g., case sensitive search) are also supported - see the **Search** option under the **Advanced** section of the Inspector.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/3c3e3630-4c33-4aff-a452-b14a8a6eed3e.json) to try it out yourself. END"}
{"prompt":"Charts\n\n###\n\n","completion":" The Chart component uses Plotly, and can build a wide variety of different charts (check out [Plotly's documentation](https:\/\/plotly.com\/javascript\/)). In this example, we cover a wide variety of charts: bubble, double y-axis, funnel, gantt, bullet, and 3D charts. END"}
{"prompt":"The Chart component uses Plotly, and can build a wide variety of different charts (check out [Plotly's documentation](https:\/\/plotly.com\/javascript\/)). In this example, we cover a wide variety of charts: bubble, double y-axis, funnel, gantt, bullet, and 3D charts.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/e995b7e7-b7ea-4f51-83d0-ec8f4efb8003\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/e995b7e7-b7ea-4f51-83d0-ec8f4efb8003\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Oftentimes you have to reconstruct your data to match the Plotly data schema in order to render a chart correctly. We recommend using a JavaScript transformer to iterate through your dataset to accomplish this. You can check out the code in the app export. END"}
{"prompt":"Oftentimes you have to reconstruct your data to match the Plotly data schema in order to render a chart correctly. We recommend using a JavaScript transformer to iterate through your dataset to accomplish this. You can check out the code in the app export.\n\n###\n\n","completion":" Additionally, for more complex charts (beyond simple bar, line, scatter, and pie charts), you need to modify the Layout Plotly JSON object which can be found in the Inspection tab. END"}
{"prompt":"Additionally, for more complex charts (beyond simple bar, line, scatter, and pie charts), you need to modify the Layout Plotly JSON object which can be found in the Inspection tab.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/464e7351-5d92-4544-8ee4-36232159d66a.json)) to try it out yourself. END"}
{"prompt":"Customize Plotly Hovertext\n\n###\n\n","completion":" In this example, we'll walk through adding the ability to customize the hovertext of a graph in Plotly using the chart component. END"}
{"prompt":"In this example, we'll walk through adding the ability to customize the hovertext of a graph in Plotly using the chart component.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/781ce1da-defd-4c81-867e-64141e9ff184\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/781ce1da-defd-4c81-867e-64141e9ff184\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" After loading data into the chart, inspect the component and select the **Plotly JSON** tab. Define a separate text property within the data field that is set to the array of values you'd like to display as hovertext. Then in the **hovertemplate** field, reference the text property to set the new values for the hovertext (check out the [plotly hovertext docs for more information](https:\/\/plotly.com\/javascript\/hover-text-and-formatting\/#hovertemplate)). END"}
{"prompt":"After loading data into the chart, inspect the component and select the **Plotly JSON** tab. Define a separate text property within the data field that is set to the array of values you'd like to display as hovertext. Then in the **hovertemplate** field, reference the text property to set the new values for the hovertext (check out the [plotly hovertext docs for more information](https:\/\/plotly.com\/javascript\/hover-text-and-formatting\/#hovertemplate)).\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/4e5fa7f4-bfe3-41dd-9926-b5c938f7de19.json) to try it out yourself. END"}
{"prompt":"Dynamically show or hide components based on environments\n\n###\n\n","completion":" You can dynamically alter an app's design depending on the current environment. In this example, we'll walk through how to dynamically show or hide components based on the current environment. We'll use the **Hidden** property in our components and leverage the `{{retoolContext.environment}}` property in Retool, whose value displays the name of the environment currently in use. END"}
{"prompt":"You can dynamically alter an app's design depending on the current environment. In this example, we'll walk through how to dynamically show or hide components based on the current environment. We'll use the **Hidden** property in our components and leverage the `{{retoolContext.environment}}` property in Retool, whose value displays the name of the environment currently in use.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/72a10cf4-d3c8-44f1-a7d2-5abef0a6e2d8\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/72a10cf4-d3c8-44f1-a7d2-5abef0a6e2d8\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Drag the components that you want to dynamically hide or show to the Canvas. In this example, an Alert component and a Button component are used to programatically switch the environment. Inspect the Alert component and set the **Hidden** property to `{{ retoolContext.environment == 'production' }}` and `{{ retoolContext.environment == 'staging' }}` accordingly. END"}
{"prompt":"Drag the components that you want to dynamically hide or show to the Canvas. In this example, an Alert component and a Button component are used to programatically switch the environment. Inspect the Alert component and set the **Hidden** property to `{{ retoolContext.environment == 'production' }}` and `{{ retoolContext.environment == 'staging' }}` accordingly.\n\n###\n\n","completion":" Create a JavaScript query, and add the following, which uses the `_environment` variable to open the Retool app with the corresponding environment credentials. Use an event handler to trigger this query upon clicking the button component. END"}
{"prompt":"Create a JavaScript query, and add the following, which uses the `_environment` variable to open the Retool app with the corresponding environment credentials. Use an event handler to trigger this query upon clicking the button component.\n\n###\n\n","completion":" You can then create a Resource with `staging` and `production` environments defined. Once you've configured your environment, write a JavaScript query that connects to this resource and store the query data inside a table. When you click on the component, notice that both the alert and table components dynamically change. END"}
{"prompt":"You can then create a Resource with `staging` and `production` environments defined. Once you've configured your environment, write a JavaScript query that connects to this resource and store the query data inside a table. When you click on the component, notice that both the alert and table components dynamically change.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/c581fbd2-e706-4106-8e2f-36b291968b8f.json) to try it out yourself. END"}
{"prompt":"Using CSS to change an app's font\n\n###\n\n","completion":" A common Retool design pattern is to universally change the font of all components. In this example, we'll use CSS to customize a script that changes the font at an app-level. Retool's `{{...}}` syntax can be used in conjunction with [Custom CSS](https:\/\/docs.retool.com\/docs\/design-and-usability#override-css) to build dynamically styled applications. END"}
{"prompt":"A common Retool design pattern is to universally change the font of all components. In this example, we'll use CSS to customize a script that changes the font at an app-level. Retool's `{{...}}` syntax can be used in conjunction with [Custom CSS](https:\/\/docs.retool.com\/docs\/design-and-usability#override-css) to build dynamically styled applications.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/ed20a969-ee3c-48bb-acf4-ac724d73a3b3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/ed20a969-ee3c-48bb-acf4-ac724d73a3b3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Click the **App actions** menu at the top right and select **Scripts and styles**. Under the CSS tab, add the following snippet: END"}
{"prompt":"Click the **App actions** menu at the top right and select **Scripts and styles**. Under the CSS tab, add the following snippet:\n\n###\n\n","completion":" After you save this snippet, go back to the app canvas and you'll see the font changes reflect across all components. END"}
{"prompt":"After you save this snippet, go back to the app canvas and you'll see the font changes reflect across all components.\n\n###\n\n","completion":" [Download the JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/a0d99147-40a0-4bb9-977c-ab8707a4b233.json) to try it out yourself. END"}
{"prompt":"Customizing URL parameters\n\n###\n\n","completion":" As you begin to build more apps on Retool, a common pattern is to send information from one app to another. In this example, we'll walk through how to customize URL query parameters to include specific values in the first app and use them to set the state of the second app. END"}
{"prompt":"As you begin to build more apps on Retool, a common pattern is to send information from one app to another. In this example, we'll walk through how to customize URL query parameters to include specific values in the first app and use them to set the state of the second app.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b64f99f3-4e15-4de5-8668-f4116d8b7709\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b64f99f3-4e15-4de5-8668-f4116d8b7709\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In the first app, after setting the data inside your table component, add the ability to click into another application by inspecting a column, changing it to the **Button** column type, and configure the on click property to open another Retool page. Then, configure the URL by adding a **memberID** parameter that is set to the value of the cell with the `{{ self }}` keyword. END"}
{"prompt":"In the first app, after setting the data inside your table component, add the ability to click into another application by inspecting a column, changing it to the **Button** column type, and configure the on click property to open another Retool page. Then, configure the URL by adding a **memberID** parameter that is set to the value of the cell with the `{{ self }}` keyword.\n\n###\n\n","completion":" Now, when you click to go to the second app, the page will have a URL that looks like this: `https:\/\/yourdomain.tryretool.com\/AppName\/#memberID=1`. END"}
{"prompt":"Now, when you click to go to the second app, the page will have a URL that looks like this: `https:\/\/yourdomain.tryretool.com\/AppName\/#memberID=1`.\n\n###\n\n","completion":" To set the state of the second app based on the custom URl parameter we just defined, use the `{{ urlparams.hash.memberID }}` field to selectively filter through the table. END"}
{"prompt":"To set the state of the second app based on the custom URl parameter we just defined, use the `{{ urlparams.hash.memberID }}` field to selectively filter through the table.\n\n###\n\n","completion":" Download the JSON files to try it out yourself: END"}
{"prompt":"title: \"AI features in Retool\"\nexcerpt: \"Learn more about using Retool’s AI-powered features and how AI can be used to generate and explain code in Retool.\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-concepts\"\n\n###\n\n","completion":" Retool’s AI capabilities use OpenAI’s [GPT model](https:\/\/platform.openai.com\/docs\/models\/overview) to help you write and edit SQL queries using natural language. When enabled, you can access them in the [Query Library](https:\/\/docs.retool.com\/docs\/query-library) and [App editor](https:\/\/docs.retool.com\/docs\/app-editor) when editing any SQL query. Click the AI icon in the bottom right corner, or use the keyboard shortcut <span class=\"sck key_Alt\">Alt<\/span> <span class=\"sck key_Ctrl\">Ctrl<\/span> <span class=\"sck key\">.<\/span> to get started. END"}
{"prompt":"Modes\n\n###\n\n","completion":" Retool’s AI operates in three modes: generate, edit, and explain. When your query is empty, the AI operates in generate mode and can write you a query using plain English. END"}
{"prompt":"Retool’s AI operates in three modes: generate, edit, and explain. When your query is empty, the AI operates in generate mode and can write you a query using plain English.\n\n###\n\n","completion":" ![Using AI to generate a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b87ac5bc-fa3b-4685-9af2-d0fd9098f718.png) END"}
{"prompt":"![Using AI to generate a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b87ac5bc-fa3b-4685-9af2-d0fd9098f718.png)\n\n###\n\n","completion":" If you have a query already, Retool’s AI operates in edit mode and can modify the existing query. END"}
{"prompt":"If you have a query already, Retool’s AI operates in edit mode and can modify the existing query.\n\n###\n\n","completion":" ![Using AI to edit a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/58cbe845-fe6b-4dca-9685-35971f514a01.png) END"}
{"prompt":"![Using AI to edit a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/58cbe845-fe6b-4dca-9685-35971f514a01.png)\n\n###\n\n","completion":" For existing queries, you can also set Retool’s AI to operate in explain mode, which describes the functionality of the existing query by adding a comment. END"}
{"prompt":"For existing queries, you can also set Retool’s AI to operate in explain mode, which describes the functionality of the existing query by adding a comment.\n\n###\n\n","completion":" ![Using AI to explain a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2f268912-eedf-4048-943a-c9e4aab6dbcb.png) END"}
{"prompt":"Data sharing and AI output\n\n###\n\n","completion":" This SQL feature does not share your table contents, such as the results of any query you run with AI partners. It does share metadata, like your database schema, with OpenAI so that GPT can more effectively help you write queries. If you have sensitive data you do not want to share as part of your metadata, you should not use Retool’s AI features. END"}
{"prompt":"This SQL feature does not share your table contents, such as the results of any query you run with AI partners. It does share metadata, like your database schema, with OpenAI so that GPT can more effectively help you write queries. If you have sensitive data you do not want to share as part of your metadata, you should not use Retool’s AI features.\n\n###\n\n","completion":" Also note that as with other experimental AI features, Retool cannot guarantee that the output is always accurate. It's ultimately your responsibility to evaluate a query before running it. END"}
{"prompt":"Also note that as with other experimental AI features, Retool cannot guarantee that the output is always accurate. It's ultimately your responsibility to evaluate a query before running it.\n\n###\n\n","completion":" If you have feedback or questions about Retool's AI features, contact [ask-ai@retool.com](mailto:ask-ai@retool.com). END"}
{"prompt":"title: \"Allow Retool to access data sources\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn how to give Retool Cloud access to your resources.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-purple\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Cloud only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-purple\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Cloud only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Retool Cloud organizations must ensure that any configured resources, such as APIs and databases, allow access from Retool's IP addresses. If you make use of inbound firewall rules, include the following IP addresses in its allowlist. Refer to your data source or firewall documentation for specific guidance. END"}
{"prompt":"Retool Cloud organizations must ensure that any configured resources, such as APIs and databases, allow access from Retool's IP addresses. If you make use of inbound firewall rules, include the following IP addresses in its allowlist. Refer to your data source or firewall documentation for specific guidance.\n\n###\n\n","completion":" If you use Retool Self-hosted, refer to the [self-hosted network and storage requirements](https:\/\/docs.retool.com\/docs\/network-storage-requirements) for additional details. END"}
{"prompt":"title: \"Connect to AlloyDB\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your AlloyDB database to Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool's AlloyDB for PostgreSQL integration provides a convenient UI for connecting to and interacting with your [Google Cloud Platform AlloyDB](https:\/\/cloud.google.com\/alloydb) databases. END"}
{"prompt":"Connect to an AlloyDB database\n\n###\n\n","completion":" First, create a new _resource_ to connect to your AlloyDB database. Resources sit on top of our integrations and store the authentication and metadata fields required to connect to your data source. END"}
{"prompt":"First, create a new _resource_ to connect to your AlloyDB database. Resources sit on top of our integrations and store the authentication and metadata fields required to connect to your data source.\n\n###\n\n","completion":" To get started, log in to Retool and select the **Resources** tab. Click **Create new** and then select **AlloyDB** as your resource type. Give your resource a name (e.g., Transaction Database), enter the host, port, and name of your database, and your authentication credentials. These are the credentials Retool uses when your apps run queries. END"}
{"prompt":"Accessing AlloyDB from the cloud\n\n###\n\n","completion":" AlloyDB currently only supports network connectivity through private, internal IP addresses configured for private services access. To connect to your database from Retool's cloud product, configure an [AlloyDB Auth proxy on GCP](https:\/\/cloud.google.com\/alloydb\/docs\/auth-proxy\/overview), or use Retool's SSH connection option to go through a bastion host in your VPC. END"}
{"prompt":"Query AlloyDB\n\n###\n\n","completion":" You can now select your newly-created AlloyDB resource from the _Select Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements, or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes). END"}
{"prompt":"You can now select your newly-created AlloyDB resource from the _Select Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements, or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes).\n\n###\n\n","completion":" Since AlloyDB is fully compatible with PostgreSQL, our SQL query editor provides PostgreSQL syntax highlighting and auto-complete. END"}
{"prompt":"title: \"Connect to analytics vendors\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn how to enable analytics for your Retool apps.\"\nhidden: false\n\n###\n\n","completion":" Retool’s analytics feature makes it easy to collect analytics from your apps, and supports integrations with Segment and Google Analytics. END"}
{"prompt":"Getting Started\n\n###\n\n","completion":" In the Settings > Advanced tab, an Instrumentation section has options to integrate with third party analytics vendors. Retool's Enterprise plan currently supports Segment, Google Analytics, and logging to standard out. END"}
{"prompt":"In the Settings > Advanced tab, an Instrumentation section has options to integrate with third party analytics vendors. Retool's Enterprise plan currently supports Segment, Google Analytics, and logging to standard out.\n\n###\n\n","completion":" Events will be sent to all enabled integrations. END"}
{"prompt":"Events will be sent to all enabled integrations.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/330966d-Screen_Shot_2021-02-03_at_11.58.48_AM.png) END"}
{"prompt":"Configuration\n\n###\n\n","completion":" Once analytics have been enabled, a new type will appear in the \"+ New\" dropdown in the bottom panel. END"}
{"prompt":"Once analytics have been enabled, a new type will appear in the \"+ New\" dropdown in the bottom panel.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6622ab7-Screen_Shot_2021-02-03_at_12.00.51_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6622ab7-Screen_Shot_2021-02-03_at_12.00.51_PM.png)\n\n###\n\n","completion":" Each analytics event has 3 configurable sections: when to trigger, what conditions have to be met, and what fields should be included in the payload. END"}
{"prompt":"Each analytics event has 3 configurable sections: when to trigger, what conditions have to be met, and what fields should be included in the payload.\n\n###\n\n","completion":" Here’s an example of an event that is triggered when `query1`'s `finished` property changes, and the query returns more than 10 items. The payload includes the current time, the user who triggered the query, how long the query took to run, and the value of `textinput1`. END"}
{"prompt":"Here’s an example of an event that is triggered when `query1`'s `finished` property changes, and the query returns more than 10 items. The payload includes the current time, the user who triggered the query, how long the query took to run, and the value of `textinput1`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d819229-Screen_Shot_2021-02-03_at_12.04.10_PM.png) END"}
{"prompt":"Triggering\n\n###\n\n","completion":" The instrumentation event will be triggered when any of the listed plugin properties have changed. If you want to limit when the payload is sent, enable a condition. The condition can access properties outside of your “trigger when” clauses. END"}
{"prompt":"Google Analytics guide\n\n###\n\n","completion":" If you would like to track additional properties that are not directly built into Google Analytics, you will have to use [custom dimensions](https:\/\/support.google.com\/analytics\/answer\/2709829?hl=en). END"}
{"prompt":"If you would like to track additional properties that are not directly built into Google Analytics, you will have to use [custom dimensions](https:\/\/support.google.com\/analytics\/answer\/2709829?hl=en).\n\n###\n\n","completion":" Here's a guide on how you can define additional custom dimensions, map them in Retool, and then track them in analytics events. END"}
{"prompt":"Here's a guide on how you can define additional custom dimensions, map them in Retool, and then track them in analytics events.\n\n###\n\n","completion":" Navigate to your **Admin** section, and then click on **Custom Dimensions.** From there, you can create up to 20 custom dimensions. In this screenshot, we've configured three dimensions - user tier, user group, and user region. END"}
{"prompt":"Navigate to your **Admin** section, and then click on **Custom Dimensions.** From there, you can create up to 20 custom dimensions. In this screenshot, we've configured three dimensions - user tier, user group, and user region.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0f5af86-Screen_Shot_2021-02-09_at_4.55.56_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0f5af86-Screen_Shot_2021-02-09_at_4.55.56_AM.png)\n\n###\n\n","completion":" After creating the dimensions, you need to map them to dimensions in Retool. For an existing integration, click “Edit configuration” in “Advanced settings”: END"}
{"prompt":"After creating the dimensions, you need to map them to dimensions in Retool. For an existing integration, click “Edit configuration” in “Advanced settings”:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c525431-Screen_Shot_2021-02-03_at_12.11.00_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c525431-Screen_Shot_2021-02-03_at_12.11.00_PM.png)\n\n###\n\n","completion":" In the modal, map the dimensions you'd like to track here. The index should be the exact same as it appears in the Google Analytics settings page. END"}
{"prompt":"In the modal, map the dimensions you'd like to track here. The index should be the exact same as it appears in the Google Analytics settings page.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fdaafff-Screen_Shot_2021-02-09_at_5.20.58_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fdaafff-Screen_Shot_2021-02-09_at_5.20.58_AM.png)\n\n###\n\n","completion":" Now when those keys are included in your analytics event payloads they will show up in your GA dashboard. END"}
{"prompt":"Now when those keys are included in your analytics event payloads they will show up in your GA dashboard.\n\n###\n\n","completion":" Try making an analytics event like this and then manually triggering it a few times. END"}
{"prompt":"Try making an analytics event like this and then manually triggering it a few times.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2d51b4d-Screen_Shot_2021-02-09_at_4.59.23_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2d51b4d-Screen_Shot_2021-02-09_at_4.59.23_AM.png)\n\n###\n\n","completion":" After that you should immediately start seeing active users in your **Realtime Dashboard** to see active users. END"}
{"prompt":"After that you should immediately start seeing active users in your **Realtime Dashboard** to see active users.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6e29af2-Screen_Shot_2021-02-04_at_2.21.38_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6e29af2-Screen_Shot_2021-02-04_at_2.21.38_PM.png)\n\n###\n\n","completion":" Google Analytics has a moderate processing time before the custom dimensions will start showing up (roughly 15-30 minutes). Once that time has passed, you can create a **Custom Report** to visualize the data from your custom dimensions. END"}
{"prompt":"Google Analytics has a moderate processing time before the custom dimensions will start showing up (roughly 15-30 minutes). Once that time has passed, you can create a **Custom Report** to visualize the data from your custom dimensions.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d56b779-Screen_Shot_2021-02-09_at_6.20.23_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d56b779-Screen_Shot_2021-02-09_at_6.20.23_AM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0284638-Screen_Shot_2021-02-09_at_6.21.18_AM.png) END"}
{"prompt":"title: \"API authentication\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn how to configure API authentication on your resources.\"\nhidden: false\n\n###\n\n","completion":" Retool supports many types of API authentication. You can use static authentication tokens or create auth that asks the end user to provide credentials each time they access the application. END"}
{"prompt":"Retool supports many types of API authentication. You can use static authentication tokens or create auth that asks the end user to provide credentials each time they access the application.\n\n###\n\n","completion":" If none of the following options work for your API, you can use [custom API authentication](https:\/\/docs.retool.com\/docs\/custom-api-authentication). END"}
{"prompt":"API authentication\n\n###\n\n","completion":" You can add authentication details for an API by navigating to the **Authentication** section of the Resource settings page. END"}
{"prompt":"You can add authentication details for an API by navigating to the **Authentication** section of the Resource settings page.\n\n###\n\n","completion":" This lists all the authentication types Retool support natively, and **Custom Auth** to create custom or multi-step flows. END"}
{"prompt":"This lists all the authentication types Retool support natively, and **Custom Auth** to create custom or multi-step flows.\n\n###\n\n","completion":" ![Dropdown to add authentication.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/72fa48c-Screen_Shot_2021-02-01_at_9.25.49_AM.png) END"}
{"prompt":"Bearer token authentication\n\n###\n\n","completion":" To use a bearer token authentication scheme in your API, add it as an authorization header in the Resource configuration screen. All API requests using the resource will then include this bearer auth header. END"}
{"prompt":"To use a bearer token authentication scheme in your API, add it as an authorization header in the Resource configuration screen. All API requests using the resource will then include this bearer auth header.\n\n###\n\n","completion":" ![Bearer authentication scheme](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/e3fe7cd0-ec4b-4744-a417-8ef785a05b81.png) END"}
{"prompt":"Basic authentication\n\n###\n\n","completion":" To use a basic authentication scheme in your API, choose **Basic Auth** in the **Authentication** dropdown and enter the username and password. END"}
{"prompt":"To use a basic authentication scheme in your API, choose **Basic Auth** in the **Authentication** dropdown and enter the username and password.\n\n###\n\n","completion":" ![Basic auth example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/caaaf5a6-6919-4080-b713-c38e5aca1720.png) END"}
{"prompt":"OAuth 2.0\n\n###\n\n","completion":" Retool also supports the OAuth 2.0 authentication scheme. In OAuth 2.0, authentication details are _not_ shared between your end users unless you enable the **Share OAuth2.0 credentials between users** option. END"}
{"prompt":"Retool also supports the OAuth 2.0 authentication scheme. In OAuth 2.0, authentication details are _not_ shared between your end users unless you enable the **Share OAuth2.0 credentials between users** option.\n\n###\n\n","completion":" When the share credentials option is disabled, each of your end users will be required to authenticate via the OAuth authentication flow. The Access\/Refresh token that is returned by the OAuth identity provider will be encrypted and then associated with the user's current session with Retool. This allows you to delegate authorization and authentication to the OAuth Identity provider. END"}
{"prompt":"When the share credentials option is disabled, each of your end users will be required to authenticate via the OAuth authentication flow. The Access\/Refresh token that is returned by the OAuth identity provider will be encrypted and then associated with the user's current session with Retool. This allows you to delegate authorization and authentication to the OAuth Identity provider.\n\n###\n\n","completion":" Here is a sample configuration of Retool connecting with Google's OAuth 2.0 API. Things to take note of: END"}
{"prompt":"Here is a sample configuration of Retool connecting with Google's OAuth 2.0 API. Things to take note of:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4afb596-OAuth2.png) END"}
{"prompt":"Auth verification endpoint\n\n###\n\n","completion":" You can add an **Auth verification endpoint** to determine whether to prompt a user to authenticate when they open apps using the resource. Retool sends a `GET` request to the URL, and if the response is not a `20x`, opens a modal to prompt the user to authenticate against the API. END"}
{"prompt":"You can add an **Auth verification endpoint** to determine whether to prompt a user to authenticate when they open apps using the resource. Retool sends a `GET` request to the URL, and if the response is not a `20x`, opens a modal to prompt the user to authenticate against the API.\n\n###\n\n","completion":" ![OAuth verification endpoint](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/70b498fe-9bd8-4397-ae3d-52a226794941.png) END"}
{"prompt":"Retool's consent screen\n\n###\n\n","completion":" Starting an OAuth2 flow redirects the user to Retool's consent screen, and upon consent, to the Identity Provider's consent screen. If you're [self-hosting Retool](https:\/\/docs.retool.com\/docs\/self-hosted), you can disable Retool's consent screen for a particular resource by toggling **Skip Retool consent screen & attempt login**. END"}
{"prompt":"Starting an OAuth2 flow redirects the user to Retool's consent screen, and upon consent, to the Identity Provider's consent screen. If you're [self-hosting Retool](https:\/\/docs.retool.com\/docs\/self-hosted), you can disable Retool's consent screen for a particular resource by toggling **Skip Retool consent screen & attempt login**.\n\n###\n\n","completion":" This is equivalent to sending an authorization request with the `?prompt=none` URL parameter set. If this request returns any error, Retool falls back to a consent-based flow. END"}
{"prompt":"This is equivalent to sending an authorization request with the `?prompt=none` URL parameter set. If this request returns any error, Retool falls back to a consent-based flow.\n\n###\n\n","completion":" ![Redirect directly to Identity Provider](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6d4cc04-RetoolConsent.png) END"}
{"prompt":"![Redirect directly to Identity Provider](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6d4cc04-RetoolConsent.png)\n\n###\n\n","completion":" At runtime, Retool substitutes the `OAUTH2_TOKEN` string with the OAuth Access Token. This is how you tell Retool how to use the access token in order to authenticate with your API. Similarly, you can use the `OAUTH2_ID_TOKEN` to substitute for the OAuth ID token when the `openid` scope is specified and sharing OAuth credentials between users is disabled. END"}
{"prompt":"Cookie-based APIs\n\n###\n\n","completion":" Retool also supports APIs that use cookies for authentication. In this scenario, the API authorizes a session by responding with a `Set-Cookie` header that contains an authorization token. The API then expects all future authenticated requests to send that same authorization token in the `Cookies` header. END"}
{"prompt":"Retool also supports APIs that use cookies for authentication. In this scenario, the API authorizes a session by responding with a `Set-Cookie` header that contains an authorization token. The API then expects all future authenticated requests to send that same authorization token in the `Cookies` header.\n\n###\n\n","completion":" Though Retool proxies all HTTP requests through the backend, Retool supports forwarding the cookies set by the API to the user's browser. This includes attributes such as the expiration date. The cookies are then stored in a `HTTPOnly` cookie in the user's browser, which is tied to the lifecycle of the user's current session. All future requests the user makes to the API have the same cookie added to their request. END"}
{"prompt":"Though Retool proxies all HTTP requests through the backend, Retool supports forwarding the cookies set by the API to the user's browser. This includes attributes such as the expiration date. The cookies are then stored in a `HTTPOnly` cookie in the user's browser, which is tied to the lifecycle of the user's current session. All future requests the user makes to the API have the same cookie added to their request.\n\n###\n\n","completion":" To configure this, tell Retool the name of the cookie that should be forwarded onto the user's browser. You can also specify a URL to check the user's authentication status. END"}
{"prompt":"To configure this, tell Retool the name of the cookie that should be forwarded onto the user's browser. You can also specify a URL to check the user's authentication status.\n\n###\n\n","completion":" After you configure the cookies, you must create a login page in Retool that asks the user for authentication details and makes an API request to the login endpoint. After a successful login, the authentication cookie is parsed from the response and forwarded along onto the user's session. END"}
{"prompt":"Double cookie submit pattern\n\n###\n\n","completion":" You can implement the double cookie submit pattern by passing a header with the prefix `COOKIE_`. END"}
{"prompt":"You can implement the double cookie submit pattern by passing a header with the prefix `COOKIE_`.\n\n###\n\n","completion":" ![Add cookie in headers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/6194df39-5fb7-48a8-a4d6-b8d8c7c873bc.png) END"}
{"prompt":"Forwarding cookies that are pre-set on your domain\n\n###\n\n","completion":" You can automatically forward specific cookies that are pre-set on the domain you are running Retool on. For example, say you have Retool hosted on `retool.yourdomain.com` and you want to automatically forward cookies named `someCookie1` and `someCookie2` that are set on the `yourdomain.com` domain. END"}
{"prompt":"You can automatically forward specific cookies that are pre-set on the domain you are running Retool on. For example, say you have Retool hosted on `retool.yourdomain.com` and you want to automatically forward cookies named `someCookie1` and `someCookie2` that are set on the `yourdomain.com` domain.\n\n###\n\n","completion":" First, you'll need to add these cookies to an allow-list with an environment variable. If you want to allow forwarding for multiple cookies, add them as a comma-separated string as below. END"}
{"prompt":"First, you'll need to add these cookies to an allow-list with an environment variable. If you want to allow forwarding for multiple cookies, add them as a comma-separated string as below.\n\n###\n\n","completion":" Next, in the resource settings page for the resource that should forward these cookies, add the cookies in the `List of cookies to forward` section, as below. END"}
{"prompt":"Next, in the resource settings page for the resource that should forward these cookies, add the cookies in the `List of cookies to forward` section, as below.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/527e230-CookiesForward.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/527e230-CookiesForward.png)\n\n###\n\n","completion":" `someCookie1` and `someCookie2` will now automatically be forwarded for this resource whenever you make a request. If you want to include one of the cookies in a header, you can follow the double cookie submit pattern (`COOKIE_someCookie1`) described [above](https:\/\/docs.retool.com\/docs\/api-authentication#double-cookie-submit-pattern). END"}
{"prompt":"Pass OpenID SSO provider tokens to API requests\n\n###\n\n","completion":" If you use SSO with OpenID, Retool allows you to use the JWT obtained from the SSO process in your API requests. You can use environment variables that were set up when integrating Retool with your OpenID SSO provider by following the docs [here](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#using-the-jwts-obtained-from-the-auth-flow-in-resources). END"}
{"prompt":"AWS v4 signature-based authentication\n\n###\n\n","completion":" You can also sign your API Requests using Amazon's v4 Signature Signing Process. To do that, you need to specify your AWS Region, Service Account Key, and Secret Key. END"}
{"prompt":"You can also sign your API Requests using Amazon's v4 Signature Signing Process. To do that, you need to specify your AWS Region, Service Account Key, and Secret Key.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/9e288482-f167-4fab-b215-921ea9cb3471.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/9e288482-f167-4fab-b215-921ea9cb3471.png)\n\n###\n\n","completion":" The AWS Service is an optional field that will be extracted from the base URL if left empty. Normally, the service corresponds to the subdomain of your API. For example, if you are making a request to a service hosted at `https:\/\/xyzabc.execute-api.us-east-1.amazonaws.com`, then your service should be `xyzabc.execute-api`. END"}
{"prompt":"The AWS Service is an optional field that will be extracted from the base URL if left empty. Normally, the service corresponds to the subdomain of your API. For example, if you are making a request to a service hosted at `https:\/\/xyzabc.execute-api.us-east-1.amazonaws.com`, then your service should be `xyzabc.execute-api`.\n\n###\n\n","completion":" For AWS v4, you can pass the authentication information in the query params or the `Authorization` header. By default, the **Authenticate using the HTTP Authorization header instead of query parameters** option is checked, as many AWS services only support authentication using the header. END"}
{"prompt":"title: \"Perform REST API requests\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to connect and query REST APIs in Retool.\"\nhidden: false\nmetadata: \n  title: \"Making REST and SOAP API Requests\"\n  description: \"You can make requests to any HTTP API in Retool. Learn how to query REST and SOAP APIs using Retool. Send POST, GET, PUT and DELETE requests.\"\n\n###\n\n","completion":" You can make requests to any REST, [GraphQL](https:\/\/docs.retool.com\/docs\/graphql), or [SOAP](https:\/\/docs.retool.com\/docs\/connect-api-resource#soap-apis) API. You can also use [custom authentication](https:\/\/docs.retool.com\/docs\/custom-api-authentication) to interact with private REST or GraphQL APIs, such as internal APIs. END"}
{"prompt":"Connect to a REST API\n\n###\n\n","completion":" You can connect to a REST API in two ways: END"}
{"prompt":"Query a REST API\n\n###\n\n","completion":" You can select a REST API resource in your Retool organization from the **Resource** field in the query editor. After selecting the resource, the configured API endpoint appears in the **URL** field. You can then specify the parameters and other options in the available fields. END"}
{"prompt":"You can select a REST API resource in your Retool organization from the **Resource** field in the query editor. After selecting the resource, the configured API endpoint appears in the **URL** field. You can then specify the parameters and other options in the available fields.\n\n###\n\n","completion":" To interact with a REST API that is not configured as a resource, select the **RESTQuery (restapi)** resource from the **Resource** field in the query editor. You manually define the API endpoint and other parameters in the available fields. END"}
{"prompt":"Action types\n\n###\n\n","completion":" Retool supports the following request methods for REST APIs: END"}
{"prompt":"Retool supports the following request methods for REST APIs:\n\n###\n\n","completion":" You specify the method to use by selecting an option in the **Action type** dropdown. END"}
{"prompt":"You specify the method to use by selecting an option in the **Action type** dropdown.\n\n###\n\n","completion":" Queries using **GET** methods automatically run whenever any of their parameters change by default (e.g., input field value changes). Queries using **POST**, **PUT**, **PATCH**, and **DELETE** methods must be manually triggered by default. You can choose whether a query should run automatically or manually in the query editor; select **Run query only when manually triggered** or **Run query automatically when inputs change** in the dropdown menu. END"}
{"prompt":"Path and URL parameters\n\n###\n\n","completion":" You can include additional path and URL parameters to any API request in the query editor. Path parameters can be included directly in your URL, and URL parameters can be added in the **URL parameters** section. Path and URL parameters can also read from values within curly braces (`{{ }}`). END"}
{"prompt":"You can include additional path and URL parameters to any API request in the query editor. Path parameters can be included directly in your URL, and URL parameters can be added in the **URL parameters** section. Path and URL parameters can also read from values within curly braces (`{{ }}`).\n\n###\n\n","completion":" When you specify URL parameters, Retool automatically appends them to the endpoint URL. Conversely, Retool detects any URL parameters added to the endpoint URL and populates the URL parameter fields. END"}
{"prompt":"When you specify URL parameters, Retool automatically appends them to the endpoint URL. Conversely, Retool detects any URL parameters added to the endpoint URL and populates the URL parameter fields.\n\n###\n\n","completion":" The following example shows a **GET** request which reads the currently selected row of a [Table component](https:\/\/retool.com\/components\/table) and passes it as a URL parameter with a key of `id`. END"}
{"prompt":"The following example shows a **GET** request which reads the currently selected row of a [Table component](https:\/\/retool.com\/components\/table) and passes it as a URL parameter with a key of `id`.\n\n###\n\n","completion":" ![Example GET request passing id as a URL parameter](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f39bce7-docs_apis_get.png) END"}
{"prompt":"Request headers\n\n###\n\n","completion":" For REST APIs configured as a resource, you can set request headers on the resource's configuration page. Headers set on resource configuration pages are always included on any requests using that resource. END"}
{"prompt":"For REST APIs configured as a resource, you can set request headers on the resource's configuration page. Headers set on resource configuration pages are always included on any requests using that resource.\n\n###\n\n","completion":" You can also add headers to any request using the **Headers** fields in the query editor. These headers are included in addition to any already configured for the resource. END"}
{"prompt":"Request bodies\n\n###\n\n","completion":" You can send requests with **JSON**, **raw**, **x-www-form-urlencoded**, **Form data**, or **binary** bodies. END"}
{"prompt":"JSON\n\n###\n\n","completion":" To construct a JSON request body, select **JSON** in the **Body** section of the query editor. You can then construct a JSON object using the key-value fields. A `Content-Type: application\/json` request header is automatically added to requests using **JSON** body types. The JSON body also supports nested objects within a single key. END"}
{"prompt":"To construct a JSON request body, select **JSON** in the **Body** section of the query editor. You can then construct a JSON object using the key-value fields. A `Content-Type: application\/json` request header is automatically added to requests using **JSON** body types. The JSON body also supports nested objects within a single key.\n\n###\n\n","completion":" ![Example of nested objects using a single key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7473eb5-docs_rest_api_nest.png) END"}
{"prompt":"Raw\n\n###\n\n","completion":" To send a request body without modifications, select **Raw** in the **Body** section of the query editor. For example, if you use the **Raw** body type and manually add a `Content-Type: application\/json` header, you can send more complex JSON objects. END"}
{"prompt":"To send a request body without modifications, select **Raw** in the **Body** section of the query editor. For example, if you use the **Raw** body type and manually add a `Content-Type: application\/json` header, you can send more complex JSON objects.\n\n###\n\n","completion":" ![Nested object in request using valid JSON](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9dd1fd1-rest_api_json_raw.png) END"}
{"prompt":"![Nested object in request using valid JSON](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9dd1fd1-rest_api_json_raw.png)\n\n###\n\n","completion":" You can include JSON in raw request bodies with some additional formatting. You can either wrap the entire body in curly braces to construct the object dynamically or manually format values in the following ways: END"}
{"prompt":"You can include JSON in raw request bodies with some additional formatting. You can either wrap the entire body in curly braces to construct the object dynamically or manually format values in the following ways:\n\n###\n\n","completion":" ![Nested object in request with JSON wrapped within curly braces](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b6d5133-rest_api_alternative.png) END"}
{"prompt":"x-www-form-urlencoded\n\n###\n\n","completion":" To send URL-encoded data, select **x-www-form-urlencoded** in the **Body** section of the query editor. Retool adds `Content-Type: application\/x-www-form-urlencoded` to the request header. END"}
{"prompt":"Form data\n\n###\n\n","completion":" To send form data in your request, select **Form data** in the **Body** section of the query editor. A `Content-Type: multipart\/form-data` header is added to the request. END"}
{"prompt":"To send form data in your request, select **Form data** in the **Body** section of the query editor. A `Content-Type: multipart\/form-data` header is added to the request.\n\n###\n\n","completion":" To upload a file using form data, you can set a **key** to `file`, select the **File** upload type, and set the **value** to the file to upload. END"}
{"prompt":"To upload a file using form data, you can set a **key** to `file`, select the **File** upload type, and set the **value** to the file to upload.\n\n###\n\n","completion":" The following example passes the [File button](https:\/\/retool.com\/components\/file-button) value as form data. END"}
{"prompt":"The following example passes the [File button](https:\/\/retool.com\/components\/file-button) value as form data.\n\n###\n\n","completion":" ![Upload file over REST using form data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/434fd55b-24f8-4599-b03b-1410dc9f7213.png) END"}
{"prompt":"Binary\n\n###\n\n","completion":" To send data that can't be formatted as form data—for example, an image, audio, or video—select **binary** in the **Body** section of the query editor. END"}
{"prompt":"To send data that can't be formatted as form data—for example, an image, audio, or video—select **binary** in the **Body** section of the query editor.\n\n###\n\n","completion":" The following examples passes the [File button](https:\/\/retool.com\/components\/file-button) upload value as binary data. END"}
{"prompt":"The following examples passes the [File button](https:\/\/retool.com\/components\/file-button) upload value as binary data.\n\n###\n\n","completion":" ![Upload file over REST using binary data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4a2ce85b-d6fb-4206-8073-0dd67d491999.png) END"}
{"prompt":"Cookies\n\n###\n\n","completion":" You can configure REST API resources to use [cookies-based authentication](https:\/\/docs.retool.com\/docs\/api-authentication#cookie-based-apis) for REST API resource support cookies for API authentication. You can also add cookie headers to API requests using the **Cookies** key-value field in the query editor. END"}
{"prompt":"Editor README\n\n###\n\n","completion":" README files are a staple of any programming project. They provide the first introduction to a new codebase and help you share important project details with collaborators. All Retool apps include a built-in README file, which you can access by clicking the app's title in the toolbar. END"}
{"prompt":"README files are a staple of any programming project. They provide the first introduction to a new codebase and help you share important project details with collaborators. All Retool apps include a built-in README file, which you can access by clicking the app's title in the toolbar.\n\n###\n\n","completion":" ![Opening the Edit app details modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/85306b5b-2e56-4d91-bfc0-08a4cfe1153d.png) END"}
{"prompt":"![Opening the Edit app details modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/85306b5b-2e56-4d91-bfc0-08a4cfe1153d.png)\n\n###\n\n","completion":" Inside the **Edit app details** modal, there's an **Editor README** section. This text area accepts GitHub-flavored Markdown. END"}
{"prompt":"Inside the **Edit app details** modal, there's an **Editor README** section. This text area accepts GitHub-flavored Markdown.\n\n###\n\n","completion":" ![Editing a README](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3b2e5f9e-484b-4b59-9b4f-fbdccc940833.png) END"}
{"prompt":"![Editing a README](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3b2e5f9e-484b-4b59-9b4f-fbdccc940833.png)\n\n###\n\n","completion":" Content in the README is only visible to users with _Edit_ or _Own_ permissions on the app. When other editors open the **Edit app details** modal, they’ll see the rendered Markdown, along with the last editor to update the text and a timestamp. Editors can also edit the README themselves. END"}
{"prompt":"User documentation\n\n###\n\n","completion":" If you're on a Business or Enterprise plan, you also have access to User documentation. This documentation is visible to your app’s users, and you can use it to explain how your app works or where to report issues. END"}
{"prompt":"If you're on a Business or Enterprise plan, you also have access to User documentation. This documentation is visible to your app’s users, and you can use it to explain how your app works or where to report issues.\n\n###\n\n","completion":" Editors can access User documentation by clicking the app's title in the toolbar. Inside the **Edit app details** modal, there's a **User documentation** section. This text area accepts GitHub-flavored Markdown. END"}
{"prompt":"Editors can access User documentation by clicking the app's title in the toolbar. Inside the **Edit app details** modal, there's a **User documentation** section. This text area accepts GitHub-flavored Markdown.\n\n###\n\n","completion":" ![Editing User documentation](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e8dffa63-df78-41c4-a2e6-f95b3ffe76f2.png) END"}
{"prompt":"![Editing User documentation](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e8dffa63-df78-41c4-a2e6-f95b3ffe76f2.png)\n\n###\n\n","completion":" You can also select **Open automatically for new users** to display the documentation modal the first time users open the app. User documentation can also be opened by clicking the documentation icon in the lower left corner. END"}
{"prompt":"You can also select **Open automatically for new users** to display the documentation modal the first time users open the app. User documentation can also be opened by clicking the documentation icon in the lower left corner.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e17820fd-2572-43fb-83c4-cb233ea0e098.png\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/da4c20ed-2bd6-4dbb-8358-df22ae516eb0.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"title: \"App editor\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-concepts\"\nexcerpt: \"Learn more about Retool's web app editor.\"\nhidden: false\n\n###\n\n","completion":" The _App editor_ is the interface you use to build Retool apps. It is made up of these primary areas: END"}
{"prompt":"The _App editor_ is the interface you use to build Retool apps. It is made up of these primary areas:\n\n###\n\n","completion":" ![App editor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/affd4f8cc32a35c95d5623fadcca47a8-1800.webp) END"}
{"prompt":"Canvas\n\n###\n\n","completion":" The _canvas_ is where you build the interface for your app. You drag and drop [<<glossary:components>>](https:\/\/retool.com\/components) from the right panel. END"}
{"prompt":"The _canvas_ is where you build the interface for your app. You drag and drop [<<glossary:components>>](https:\/\/retool.com\/components) from the right panel.\n\n###\n\n","completion":" The canvas contains three [frames](#frames) in which you can place components: END"}
{"prompt":"The canvas contains three [frames](#frames) in which you can place components:\n\n###\n\n","completion":" The Header and Sidebar frames are optional areas that are primarily designed for navigation. END"}
{"prompt":"The Header and Sidebar frames are optional areas that are primarily designed for navigation.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/oytqmLBrLY7Dmr0xSCob?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Canvas frames\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Main frame\n\n###\n\n","completion":" The Main frame is the primary area of your app. This is where you place and arrange the majority of your app's components and where most interactions take place. END"}
{"prompt":"The Main frame is the primary area of your app. This is where you place and arrange the majority of your app's components and where most interactions take place.\n\n###\n\n","completion":" The Main frame is always present and cannot be disabled. END"}
{"prompt":"Header frame\n\n###\n\n","completion":" The Header frame allows you to build a header for your app. Once enabled, it initially contains a [Navigation](https:\/\/retool.com\/components\/navigation) component to create a horizontal navigation menu. END"}
{"prompt":"The Header frame allows you to build a header for your app. Once enabled, it initially contains a [Navigation](https:\/\/retool.com\/components\/navigation) component to create a horizontal navigation menu.\n\n###\n\n","completion":" ![Header frame in user mode preview](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/1c478c5d-a29a-4317-9d87-eedfbdf00eb9.jpg) END"}
{"prompt":"Sidebar frame\n\n###\n\n","completion":" The Sidebar frame is primarily for building navigation into your apps. On first use, it initially contains the following components: END"}
{"prompt":"The Sidebar frame is primarily for building navigation into your apps. On first use, it initially contains the following components:\n\n###\n\n","completion":" ![Creating the Sidebar frame](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7a1be312-5b14-4013-9eb5-dc858900e027.png) END"}
{"prompt":"![Creating the Sidebar frame](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7a1be312-5b14-4013-9eb5-dc858900e027.png)\n\n###\n\n","completion":" You can drag any components into the Sidebar frame in much the same way as the Header and Main frames. As the Sidebar frame is designed to appear vertically, it has specific size and layout constraints: END"}
{"prompt":"You can drag any components into the Sidebar frame in much the same way as the Header and Main frames. As the Sidebar frame is designed to appear vertically, it has specific size and layout constraints:\n\n###\n\n","completion":" The Sidebar frame is also optimized for mobile. It is hidden by default when viewed on a mobile device and is accessible using a menu button that is automatically included. When pressed, the Sidebar frame slides into view. END"}
{"prompt":"Grid layout\n\n###\n\n","completion":" Canvas frames use a 12-column grid layout. As you arrange or resize components, the grid becomes visible and component edges snap into position. Each frame automatically grows as you add or resize components by adding more rows to the grid. END"}
{"prompt":"Canvas frames use a 12-column grid layout. As you arrange or resize components, the grid becomes visible and component edges snap into position. Each frame automatically grows as you add or resize components by adding more rows to the grid.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/2vHzqER3PG79v67tnhga?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Arrange components\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/2vHzqER3PG79v67tnhga?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Arrange components\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" All frames use the same fixed-height rows to ensure consistent vertical arrangement. The Main and Header frames dynamically adjust column width based on the size of the viewport, with a maximum width of 1560px. The Sidebar uses a single-column grid only so you cannot place components horizontally next to each other. END"}
{"prompt":"All frames use the same fixed-height rows to ensure consistent vertical arrangement. The Main and Header frames dynamically adjust column width based on the size of the viewport, with a maximum width of 1560px. The Sidebar uses a single-column grid only so you cannot place components horizontally next to each other.\n\n###\n\n","completion":" Retool provides flexible components to group other components together, such as [Container](https:\/\/retool.com\/components\/container) and [Form](https:\/\/retool.com\/components\/form). These components extend the 12-column grid layout so you can drag components directly into a container in the same way as directly on the canvas. This creates a group of _nested_ components. All components can be nested in this way. END"}
{"prompt":"Navbar\n\n###\n\n","completion":" The _navbar_ is where you customize the editor environment and configure high-level app settings. From here you can: END"}
{"prompt":"The _navbar_ is where you customize the editor environment and configure high-level app settings. From here you can:\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/pR3jPOBAZ0h5TWl64Ciq?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Navbar\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"App actions\n\n###\n\n","completion":" The `•••` menu contains various actions and settings for your app. Some available options include: END"}
{"prompt":"Left panel\n\n###\n\n","completion":" The _left panel_ contains the _Explorer_ and _State_ tabs. They provide you with a visualization of the contents of your app. END"}
{"prompt":"The _left panel_ contains the _Explorer_ and _State_ tabs. They provide you with a visualization of the contents of your app.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/RLFl1TBXfZ6EK2RgN4bh?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Left panel\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Explorer tab\n\n###\n\n","completion":" The **Explorer** tab allows you to view and interact with the components and code used in your app. END"}
{"prompt":"The **Explorer** tab allows you to view and interact with the components and code used in your app.\n\n###\n\n","completion":" The **Components** section contains a hierarchical tree from which you can select, rename, switch, or delete components. You can view and select components regardless of visibility including those within multiview containers, such as [Tabbed Container](https:\/\/retool.com\/components\/container) component views. Selecting a component makes it visible and, where necessary, switches a container's view to make it active. END"}
{"prompt":"The **Components** section contains a hierarchical tree from which you can select, rename, switch, or delete components. You can view and select components regardless of visibility including those within multiview containers, such as [Tabbed Container](https:\/\/retool.com\/components\/container) component views. Selecting a component makes it visible and, where necessary, switches a container's view to make it active.\n\n###\n\n","completion":" The **Code** section contains all of your app's queries, transformers, and temporary state. Selecting an item automatically displays the bottom panel for you to make changes. END"}
{"prompt":"State tab\n\n###\n\n","completion":" The **State** tab displays the current state of all code, components, and global parameters for your app. It organizes information into **Components** and **Code** sections that you can use to explore values across your Retool app, such as query data or component settings. END"}
{"prompt":"Right panel\n\n###\n\n","completion":" The _right panel_ contains the _Inspect_ and _Create_ tabs. This is the panel you most interact with when building apps. END"}
{"prompt":"The _right panel_ contains the _Inspect_ and _Create_ tabs. This is the panel you most interact with when building apps.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/m3T0CDmu8ENoYPaHPY2o?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Inspect and create components\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Inspect\n\n###\n\n","completion":" The **Inspect** tab (commonly known as the _Inspector_) contains all available settings to configure component properties. It is where you set values, update component names, create event handlers, etc. END"}
{"prompt":"The **Inspect** tab (commonly known as the _Inspector_) contains all available settings to configure component properties. It is where you set values, update component names, create event handlers, etc.\n\n###\n\n","completion":" The Inspector organizes settings into different sections, such as **Content**,  **Interaction**, and **Appearance**. As some components have many configurable properties, the Inspector groups some optional and less frequently used settings into subsections to reduce clutter. For instance, prefix and suffix text or icons appear in the **Add-ons** settings. END"}
{"prompt":"Create\n\n###\n\n","completion":" The **Create** tab is where you browse [components](\/docs\/components) and [modules](\/docs\/modules), then drag them onto the canvas. END"}
{"prompt":"The **Create** tab is where you browse [components](\/docs\/components) and [modules](\/docs\/modules), then drag them onto the canvas.\n\n###\n\n","completion":" The **Components** tab groups components by type and you can filter the list by entering a search term. END"}
{"prompt":"The **Components** tab groups components by type and you can filter the list by entering a search term.\n\n###\n\n","completion":" The **Modules** tab contains a list of all modules; reusable groups of components and queries that you can embed into other apps. END"}
{"prompt":"Bottom panel\n\n###\n\n","completion":" The bottom panel is where you write code for your app, such as: END"}
{"prompt":"The bottom panel is where you write code for your app, such as:\n\n###\n\n","completion":" The bottom panel also includes a **schema browser** to explore supported resources, such as databases and GraphQL APIs. END"}
{"prompt":"The bottom panel also includes a **schema browser** to explore supported resources, such as databases and GraphQL APIs.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/sY88USkLkUQNsthiGdNk?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Bottom panel\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Query sections\n\n###\n\n","completion":" The bottom panel contains sections for **General**, **Response**, and **Advanced** settings when editing queries. END"}
{"prompt":"General\n\n###\n\n","completion":" The **General** tab is where you write and configure general settings for a query. Queries can typically **run automatically when inputs change** or **run only when manually triggered**. END"}
{"prompt":" The **General** tab is where you write and configure general settings for a query. Queries can typically **run automatically when inputs change** or **run only when manually triggered**.\n\n###\n\n","completion":" You can write [SQL queries](\/docs\/sql-queries.md) using either **SQL mode** for reading data or **GUI mode** to write data using an interactive query builder. You can also configure query event handlers that trigger when a query runs or fails to run successfully. END"}
{"prompt":" You can write [SQL queries](\/docs\/sql-queries.md) using either **SQL mode** for reading data or **GUI mode** to write data using an interactive query builder. You can also configure query event handlers that trigger when a query runs or fails to run successfully.\n\n###\n\n","completion":" To protect your data, queries that perform write or delete operations (e.g., **POST** API requests or **GUI mode** SQL queries) are set to manually triggered by default. END"}
{"prompt":"Response\n\n###\n\n","completion":" The **Response** tab allows you to configure actions and conditions once a query is run. You can configure notifications or customize failure conditions. END"}
{"prompt":"Advanced\n\n###\n\n","completion":" The **Advanced** tab expands on the previous tab's settings. You can configure confirmation requests, timeouts, and disable queries under certain conditions. If you configure a query to run automatically on input change, you can specify which inputs to watch. This triggers the query only when a relevant input changes. END"}
{"prompt":"The **Advanced** tab expands on the previous tab's settings. You can configure confirmation requests, timeouts, and disable queries under certain conditions. If you configure a query to run automatically on input change, you can specify which inputs to watch. This triggers the query only when a relevant input changes.\n\n###\n\n","completion":" All components appear on the desktop layout by default. The mobile layout is enabled when you configure at least one component to show on mobile. Apps automatically switch to the mobile layout when the viewport width is less than 600px wide. END"}
{"prompt":"Status bar\n\n###\n\n","completion":" The status bar contains options to: END"}
{"prompt":"The status bar contains options to:\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/a1GMNJKxSXWn4bcElREc?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Status bar\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"App Management\"\ncategorySlug: \"legacy\"\nexcerpt: \"Using and sharing your Retool apps\"\nhidden: true\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/71ad74b-06_Management_No_Logo.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/71ad74b-06_Management_No_Logo.png)\n\n###\n\n","completion":" Your Retool app isn't worth much if it doesn't get used! This module will walk through different ways to use and share your Retool apps. END"}
{"prompt":"Your Retool app isn't worth much if it doesn't get used! This module will walk through different ways to use and share your Retool apps.\n\n###\n\n","completion":" Let's go! END"}
{"prompt":"End user mode\n\n###\n\n","completion":" Retool apps have two modes: editor mode and end user (preview) mode. END"}
{"prompt":"Retool apps have two modes: editor mode and end user (preview) mode.\n\n###\n\n","completion":" Here's what edit mode looks like: END"}
{"prompt":"Here's what edit mode looks like:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3fdc7b9-Apps-Edit_mode.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3fdc7b9-Apps-Edit_mode.png)\n\n###\n\n","completion":" When you click the \"Preview\" button on the top right in edit mode, your app changes to end user mode. END"}
{"prompt":"When you click the \"Preview\" button on the top right in edit mode, your app changes to end user mode.\n\n###\n\n","completion":" If you're using [releases and versioning](https:\/\/docs.retool.com\/docs\/releases) in Retool, clicking on the little dropdown arrow will let you select which release to display in end user mode. END"}
{"prompt":"Embedded and Public Retool apps\n\n###\n\n","completion":" Beyond end user mode for users in your organization, you can share Retool apps in a couple of other ways. END"}
{"prompt":"Embedding Retool apps\n\n###\n\n","completion":" You can embed Retool – and the apps you've built in it – in your favorite tools like a web page, or even something like [Front](https:\/\/frontapp.com\/). Embedding works through Retool's SDK, and a basic script: END"}
{"prompt":"You can embed Retool – and the apps you've built in it – in your favorite tools like a web page, or even something like [Front](https:\/\/frontapp.com\/). Embedding works through Retool's SDK, and a basic script:\n\n###\n\n","completion":" You can read more in depth in our docs [here](https:\/\/docs.retool.com\/docs\/share-retool-apps). END"}
{"prompt":"Public Retool apps\n\n###\n\n","completion":" You can make your Retool app publicly accessible via a URL without authentication, if you so choose. This is a good fit for public projects, dashboards, and forms, but not for internal apps that deal with sensitive information. And since your public app users aren't authenticated with Retool counts, you're not charged for them using your apps. END"}
{"prompt":"You can make your Retool app publicly accessible via a URL without authentication, if you so choose. This is a good fit for public projects, dashboards, and forms, but not for internal apps that deal with sensitive information. And since your public app users aren't authenticated with Retool counts, you're not charged for them using your apps.\n\n###\n\n","completion":" You can read more about public apps [here](https:\/\/docs.retool.com\/docs\/share-retool-apps#public-apps). END"}
{"prompt":"Exporting Retool apps\n\n###\n\n","completion":" To learn how to share Retool apps across your organization, see the guide to [importing and exporting apps in JSON](https:\/\/docs.retool.com\/docs\/import-export-apps). END"}
{"prompt":"User management\n\n###\n\n","completion":" Let’s step back from app-building and talk organizations, users, and permissions for a second. END"}
{"prompt":"Permissions\n\n###\n\n","completion":" Retool supports granular permissions across all of your apps. You can organize your organization's Retool users into groups, each group with unique access levels to individual applications and data sources, along with splits between admin, editor, and viewer levels. See the [User permissions](https:\/\/docs.retool.com\/docs\/user-permissions) documentation for more information. END"}
{"prompt":"Price Per User\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_C1D1E6680216F1CC4872490CE150EA54B3642CEE2E7D6A5B530A556EC7E6C9B0_1612396210105_image.png)\n![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_C1D1E6680216F1CC4872490CE150EA54B3642CEE2E7D6A5B530A556EC7E6C9B0_1612396231668_image.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_C1D1E6680216F1CC4872490CE150EA54B3642CEE2E7D6A5B530A556EC7E6C9B0_1612396210105_image.png)\n![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_C1D1E6680216F1CC4872490CE150EA54B3642CEE2E7D6A5B530A556EC7E6C9B0_1612396231668_image.png)\n\n###\n\n","completion":" Anyone with a Retool account counts as a user pricing-wise, editor or otherwise. On the Business and Enterprise plans, you do get the public apps feature, which lets you build unauthenticated apps that are publicly available to anyone with the URL. Whoever uses that link won't need a Retool account, so you won't be charged for them. Since the app is completely public though, you wouldn't want it to have any user-specific information or dangerous functionality (I.E. deleting rows in a database). END"}
{"prompt":"Archiving\n\n###\n\n","completion":" Right now, users can only belong to one organization at a time. If that user already created a Retool account before you invited them to your organization, then they already belong to another organization and aren’t invite-able to yours. END"}
{"prompt":"Right now, users can only belong to one organization at a time. If that user already created a Retool account before you invited them to your organization, then they already belong to another organization and aren’t invite-able to yours.\n\n###\n\n","completion":" The current solution is to write into support with permission from the user to have us archive the user’s account, then re-invite them. Users can’t carry their resource setups to new orgs, but can export their old org’s apps for import into their new org. END"}
{"prompt":"The current solution is to write into support with permission from the user to have us archive the user’s account, then re-invite them. Users can’t carry their resource setups to new orgs, but can export their old org’s apps for import into their new org.\n\n###\n\n","completion":" If you'd like to belong to multiple organizations at a time (or invite a user who wants to be in multiple organizations at a time), you can use aliases! Go ahead and invite your user with a `+insert_word_here` after their email and before the @, like victoria+something@retool.com. This way, they can still use one email but belong to as many organizations as needed. END"}
{"prompt":"Disabling\n\n###\n\n","completion":" Archiving a user removes their account from Retool’s list of active accounts, and allows the user to be invited to another org. Disabling a user, which can be done by admins in Settings > Users, simply removes their access to your org. END"}
{"prompt":"title: \"App performance best practices\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-concepts\"\nexcerpt: \"Learn about the best practices for building performant apps.\"\nhidden: false\n\n###\n\n","completion":" As your Retool apps become more complex and interact with an increasing number of data sources, it's important to monitor performance and make improvements where needed. Performance issues can happen for any number of reasons and can be difficult to replicate, especially when they involve external factors. END"}
{"prompt":"As your Retool apps become more complex and interact with an increasing number of data sources, it's important to monitor performance and make improvements where needed. Performance issues can happen for any number of reasons and can be difficult to replicate, especially when they involve external factors.\n\n###\n\n","completion":" Follow these practices to identify, resolve, and prevent performance degradation and keep your apps operating as efficiently as possible. END"}
{"prompt":"Investigate external factors\n\n###\n\n","completion":" Apps are a collection of components that query data from third-party services. Users interact with apps over the internet using a web browser. It's often useful to work backwards and rule out user issues first (internet connectivity issues, browser not up-to-date, poor Wi-Fi coverage, etc.), followed by potential service disruption with any connected API or database. END"}
{"prompt":"Break up large apps into smaller ones\n\n###\n\n","completion":" The more components and queries an app contains, the more work you need to do to maintain them. Break up larger apps that perform several distinct but separate functions into multiple apps that can focus on specific needs. END"}
{"prompt":"The more components and queries an app contains, the more work you need to do to maintain them. Break up larger apps that perform several distinct but separate functions into multiple apps that can focus on specific needs.\n\n###\n\n","completion":" You can link to other apps using components like [Navigation](https:\/\/retool.com\/components\/navigation) or [Button](https:\/\/retool.com\/components\/button) so that users can still quickly access other apps when needed. You can also use [modules](https:\/\/docs.retool.com\/docs\/modules) to create larger apps that combine separately developed apps together, streamlining maintenance. END"}
{"prompt":"Allow for additional query overhead\n\n###\n\n","completion":" Retool queries add a small amount of overhead to queries (approximately 150ms) when compared to a making an API request or querying a database directly. This additional overhead allows Retool to: END"}
{"prompt":"Retool queries add a small amount of overhead to queries (approximately 150ms) when compared to a making an API request or querying a database directly. This additional overhead allows Retool to:\n\n###\n\n","completion":" This overhead shouldn't have any noticeable affect and may only be apparent when compared to a direct request. END"}
{"prompt":"Separate query logic to reduce round trips\n\n###\n\n","completion":" If you have many similar queries (e.g., multiple queries for the same database table), consider using [query JSON as SQL](https:\/\/docs.retool.com\/docs\/sql-queries#query-json-with-sql) or JavaScript [transformers](https:\/\/docs.retool.com\/docs\/transformers) and reduce the number of requests sent to your resources. These allow you to query a resource once but then further manipulate or transform the data as needed. END"}
{"prompt":"Limit running queries on page load\n\n###\n\n","completion":" Your apps can run queries on page load with an optional delay. While this can be helpful to make sure users always see the most up-to-date data, they cannot fully interact with the app until those queries are complete, making the app feel unresponsive for a short time. Limit the number and size of queries you run on page load, and consider having them run when inputs change or manually. END"}
{"prompt":"Use query caching to your advantage\n\n###\n\n","completion":" You can [cache query results](https:\/\/docs.retool.com\/docs\/caching-in-retool) for a specified period of time to reduce the number of queries to a resource. You can also [cache queries for users across your organization](https:\/\/docs.retool.com\/docs\/caching-in-retool#cache-sharing-between-users). If you’re running large analytical queries, or don't need immediate data, consider using caching to help improve performance. END"}
{"prompt":"Share queries across your organization\n\n###\n\n","completion":" Use [Query Library](https:\/\/docs.retool.com\/docs\/query-library) to write queries that can be re-used across multiple apps. This allows you to manage queries centrally and make improvements once rather than per-app. END"}
{"prompt":"Avoid querying large datasets\n\n###\n\n","completion":" Rendering thousands of rows of data into a table will impact browser performance. Instead of loading large amounts of data, consider transforming or filtering data in the query. Many APIs support pagination so you can filter responses to only data you need. The [Table](https:\/\/retool.com\/components\/table) component supports using server-side pagination to allow for more specific data requests. END"}
{"prompt":"Minimize long dependency chains\n\n###\n\n","completion":" You can reference other queries and components almost anywhere using JavaScript. To enable this, Retool builds and maintains a dependency graph for each app. The deeper and more complex this becomes, the longer it takes to update this information. Avoid deep references to other components that result in long dependency chains. END"}
{"prompt":"Put complex logic in the Retool backend\n\n###\n\n","completion":" Overuse of complex JavaScript can impact the Retool frontend (the part of the app with which users interact). If you need to perform complex logic or querying of data, avoid doing this just with JavaScript. Put this logic into the Retool backend (the part of the app that interacts with resources) to handle as much of it as possible. END"}
{"prompt":"Consider deploying Retool on-premise\n\n###\n\n","completion":" You can [self-host Retool](https:\/\/docs.retool.com\/docs\/self-hosted) on your own infrastructure. You can run Retool in your own virtual private cloud (VPC) or behind your virtual private network (VPN), allowing the Retool backend to be located much closer to any data sources you use. END"}
{"prompt":"Debug query performance\n\n###\n\n","completion":" Queries display the total runtime in the query editor once they complete. Place the cursor over the runtime to display a popover menu with a breakdown of performance. END"}
{"prompt":"Queries display the total runtime in the query editor once they complete. Place the cursor over the runtime to display a popover menu with a breakdown of performance.\n\n###\n\n","completion":" ![Query runtime statistics are available on hover after the query has run](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6245915-query-runtime-stats.png) END"}
{"prompt":"![Query runtime statistics are available on hover after the query has run](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6245915-query-runtime-stats.png)\n\n###\n\n","completion":" Query performance includes the following information: END"}
{"prompt":"title: \"App scripting and events overview\"\ncategorySlug: \"app-scripting-and-events\"\nexcerpt: \"Use JavaScript almost anywhere, control behavior, and respond to user actions with Retool apps.\"\nhidden: false\n\n###\n\n","completion":" You can write JavaScript in Retool apps to transform data, control behavior, and configure component properties. You can also configure event handlers that perform actions based on user interactions, such as a button click—without needing to write any code. END"}
{"prompt":"Get started\n\n###\n\n","completion":" Learn how to add an event handler to apps, then start implementing your own to handle to user interactions. END"}
{"prompt":"Learn how to add an event handler to apps, then start implementing your own to handle to user interactions.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n\\n  \\n  ul.ctas li a {\\n    width: 100%;\\n  }\\n  \\nhr.landing-divider {\\nmargin: 60px 0;\\nborder-width: 0;\\n}\\n  \\n   section.get-started {\\n display: flex;\\n      margin-bottom: 25px;\\n }\\n  \\n   section.get-started div.get-started-description {\\n width: 50%;\\n flex-shrink: 0;\\n flex-direction: column;\\n }\\n  \\n   section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n }\\n\\n   section.two-column ul.ctas {\\n grid-template-columns: repeat(2,1fr);\\n }\\n\\n section.three-column ul.ctas {\\n grid-template-columns: repeat(3,1fr);\\n }\\n\\n   section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n border: 1px solid rgb(240, 241, 255);\\n background: #fbfbfb;\\n border-radius: 5px;\\n transition: background 200ms ease 0s, color 200ms ease 0s, box-shadow 200ms ease 0s, border 200ms\\n }\\n\\n section ul.ctas li a {\\n padding: 10px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transform 400ms ease 0s;\\n }\\n\\n section ul.ctas li:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n border: 1px solid rgb(209, 214, 255);\\n }\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight,600);\\n color: rgb(104, 117, 217);\\n }\\n \\n\\n section.get-started div.get-started-image {\\n width: 100%;\\n margin-left: 20px;\\n }\\n \\n section.get-started .get-started-image img {\\n border-radius: 6px;\\n }\\n\\n\\n\\n\\n @media only screen and (max-width:1029px) {\\n\\n section.two-column ul.ctas, section.three-column ul.ctas {\\n grid-template-columns: repeat(1,1fr) !important;\\n }\\n\\n section.get-started {\\n flex-direction: column-reverse;\\n }\\n\\n section.get-started div.get-started-description {\\n width: 100%;\\n }\\n\\n section.get-started div.get-started-image, div.CodeTabs {\\n margin-left: 0;\\n }\\n \\nsection.get-started div.get-started-components-image {\\n margin-right: 0;\\n margin-top: 20px;\\n }\\n\\n }\\n<\/style>\\n\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n\\n  \\n  ul.ctas li a {\\n    width: 100%;\\n  }\\n  \\nhr.landing-divider {\\nmargin: 60px 0;\\nborder-width: 0;\\n}\\n  \\n   section.get-started {\\n display: flex;\\n      margin-bottom: 25px;\\n }\\n  \\n   section.get-started div.get-started-description {\\n width: 50%;\\n flex-shrink: 0;\\n flex-direction: column;\\n }\\n  \\n   section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n }\\n\\n   section.two-column ul.ctas {\\n grid-template-columns: repeat(2,1fr);\\n }\\n\\n section.three-column ul.ctas {\\n grid-template-columns: repeat(3,1fr);\\n }\\n\\n   section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n border: 1px solid rgb(240, 241, 255);\\n background: #fbfbfb;\\n border-radius: 5px;\\n transition: background 200ms ease 0s, color 200ms ease 0s, box-shadow 200ms ease 0s, border 200ms\\n }\\n\\n section ul.ctas li a {\\n padding: 10px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transform 400ms ease 0s;\\n }\\n\\n section ul.ctas li:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n border: 1px solid rgb(209, 214, 255);\\n }\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight,600);\\n color: rgb(104, 117, 217);\\n }\\n \\n\\n section.get-started div.get-started-image {\\n width: 100%;\\n margin-left: 20px;\\n }\\n \\n section.get-started .get-started-image img {\\n border-radius: 6px;\\n }\\n\\n\\n\\n\\n @media only screen and (max-width:1029px) {\\n\\n section.two-column ul.ctas, section.three-column ul.ctas {\\n grid-template-columns: repeat(1,1fr) !important;\\n }\\n\\n section.get-started {\\n flex-direction: column-reverse;\\n }\\n\\n section.get-started div.get-started-description {\\n width: 100%;\\n }\\n\\n section.get-started div.get-started-image, div.CodeTabs {\\n margin-left: 0;\\n }\\n \\nsection.get-started div.get-started-components-image {\\n margin-right: 0;\\n margin-top: 20px;\\n }\\n\\n }\\n<\/style>\\n\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/7Ms9SHt7bvauO7ftzKlv?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Configure event handlers\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/7Ms9SHt7bvauO7ftzKlv?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Configure event handlers\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n    <li>\\n <a\\n href=\\\"scripting-retool\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">JavaScript<\/div>\\n <div class=\\\"description\\\">\\nUse JavaScript almost anywhere to set values, control behavior, and manipulate data.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"event-handlers\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Configure event handlers<\/div>\\n <div class=\\\"description\\\">\\nTrigger actions in response to user actions.\\n <\/div>\\n <\/a>\\n <\/li>\\n       <li>\\n <a\\n href=\\\"define-option-lists\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Define option lists<\/div>\\n <div class=\\\"description\\\">\\nManually define options or dynamically map values from arrays.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"manage-time-zones\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Manage time zones<\/div>\\n <div class=\\\"description\\\">\\nConfigure time zone offsets and differences in components.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a\\n href=\\\"\/docs\/app-scripting-events-guides\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Guides<\/div>\\n <div class=\\\"description\\\">\\nLearn how to script apps and handle events. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"\/docs\/app-scripting-events-concepts\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Concepts<\/div>\\n <div class=\\\"description\\\">\\nLearn about the concepts related to scripting and event handling.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"\/reference\/javascript-api\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Reference<\/div>\\n <div class=\\\"description\\\">\\nReference documentation related to app scripting and events.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Implement an approval process for users\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to create approval processes for your apps (e.g., managing loan processes or issuing refunds).\"\nhidden: true\n\n###\n\n","completion":" Approval Workflows let you create, manage and approve tasks across your company. Tasks created using Approval Workflows can be accessed throughout Retool, allowing you to create multiple apps for different stages of your workflow. END"}
{"prompt":"Features and use cases\n\n###\n\n","completion":" Approval workflows support: END"}
{"prompt":"Permissions\n\n###\n\n","completion":" Retool uses Retool user groups to determine who can submit requests and who can approve requests. You can also request that multiple user groups approve a request before it is considered “approved.” For example, you could configure a loan approval request to require approvals from 2 users in the “company_accountants” group and 1 user in the “company_managers” group. END"}
{"prompt":"Tutorial\n\n###\n\n","completion":" Let’s build a budget approval app that will take us through the key concepts. Retool’s approval workflow engine is based on three core steps. END"}
{"prompt":"Let’s build a budget approval app that will take us through the key concepts. Retool’s approval workflow engine is based on three core steps.\n\n###\n\n","completion":" Before we get started, we’ll need make sure Approval Workflows are enabled for our organization.  \nGo to Organization Settings → Beta, and enable Approval Workflows. END"}
{"prompt":"Before we get started, we’ll need make sure Approval Workflows are enabled for our organization.  \nGo to Organization Settings → Beta, and enable Approval Workflows.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f6cb9bc-1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f6cb9bc-1.png)\n\n###\n\n","completion":" Now let’s set up an Approval Workflows resource. Go to **Resources → Create New**, and at the bottom, you should see an **Approval Manager** resource in the beta section. Fill out the resource with the following fields and save it. END"}
{"prompt":"Now let’s set up an Approval Workflows resource. Go to **Resources → Create New**, and at the bottom, you should see an **Approval Manager** resource in the beta section. Fill out the resource with the following fields and save it.\n\n###\n\n","completion":" Some things to note: END"}
{"prompt":"Some things to note:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e6060f5-2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e6060f5-2.png)\n\n###\n\n","completion":" Now we can build an app using this newly created resource. In your app, when you select the **budget_approvals** resource, you should see a menu with many different **Actions**. In this tutorial, we’ll be using **Get All Tasks**, **Create \/ Edit Task** and **Vote on Task**. END"}
{"prompt":"Now we can build an app using this newly created resource. In your app, when you select the **budget_approvals** resource, you should see a menu with many different **Actions**. In this tutorial, we’ll be using **Get All Tasks**, **Create \/ Edit Task** and **Vote on Task**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f485115-3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f485115-3.png)\n\n###\n\n","completion":" Select **Create \/ Edit Task**. This action takes in a **key** and **data** related to your task, and when run, creates an approval task (or edits an existing one). Set up a simple form, and add the fields to the data field like so. The key field needs to be a unique identifier. You can generate one, or use one that you can associate with your own business data (ex: a Stripe customer id). Set your submit button to run your create query on click. One last note, you’ll have to set **Finalized** to `true`, to mark your task as ready for review. Tasks that are not finalized can be edited, but approvers won’t be able to approve your task. END"}
{"prompt":"Select **Create \/ Edit Task**. This action takes in a **key** and **data** related to your task, and when run, creates an approval task (or edits an existing one). Set up a simple form, and add the fields to the data field like so. The key field needs to be a unique identifier. You can generate one, or use one that you can associate with your own business data (ex: a Stripe customer id). Set your submit button to run your create query on click. One last note, you’ll have to set **Finalized** to `true`, to mark your task as ready for review. Tasks that are not finalized can be edited, but approvers won’t be able to approve your task.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3a4d6e0-4.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3a4d6e0-4.png)\n\n###\n\n","completion":" Click on your submit button to create your task. Now we’ll use the **Get All Tasks** action to see the task you just submitted for approval. Create a query with this action and name it `getTasks`. Once you’ve created this query, you can hook it up to a table by using `{{ getTasks.data.tasks }}`. A reference for all the fields returned from this query is further down in this page, but note that there a field named `approved`, set to `false`. END"}
{"prompt":"Click on your submit button to create your task. Now we’ll use the **Get All Tasks** action to see the task you just submitted for approval. Create a query with this action and name it `getTasks`. Once you’ve created this query, you can hook it up to a table by using `{{ getTasks.data.tasks }}`. A reference for all the fields returned from this query is further down in this page, but note that there a field named `approved`, set to `false`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0be0944-5.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0be0944-5.png)\n\n###\n\n","completion":" Let’s write a query to approve this task. Create a new query, add a button and set it to trigger this new query. Set the query’s **Action** field to **Vote on Task**. To run this action, we need a key to know which request to approve and whether your choice is to `approve` or `reject` this request. You can get the `key` by using your table’s selected row field and set the choice manually or with some other Retool component, as show in the image below. END"}
{"prompt":"Let’s write a query to approve this task. Create a new query, add a button and set it to trigger this new query. Set the query’s **Action** field to **Vote on Task**. To run this action, we need a key to know which request to approve and whether your choice is to `approve` or `reject` this request. You can get the `key` by using your table’s selected row field and set the choice manually or with some other Retool component, as show in the image below.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7371980-6.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7371980-6.png)\n\n###\n\n","completion":" Once you press your button, you should see the value in the `approved` column switch to true. When configuring your resource, if you required more than one approval, or approval from multiple groups, you’ll need approvals from those groups before this field switches to approved. END"}
{"prompt":"Once you press your button, you should see the value in the `approved` column switch to true. When configuring your resource, if you required more than one approval, or approval from multiple groups, you’ll need approvals from those groups before this field switches to approved.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9682e87-7.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9682e87-7.png)\n\n###\n\n","completion":" Now that this request has been approved, you can ferry it where it is needed in your business. A next step could be to create an app that just shows finalized but unapproved queries, so approvers have an easy interface to approve\/reject requests. On approval, you could create a query to call an API or write back to a database. END"}
{"prompt":"Now that this request has been approved, you can ferry it where it is needed in your business. A next step could be to create an app that just shows finalized but unapproved queries, so approvers have an easy interface to approve\/reject requests. On approval, you could create a query to call an API or write back to a database.\n\n###\n\n","completion":" This marks the end of the tutorial! Check out the reference section for more detailed information on the various fields. END"}
{"prompt":"Get All Tasks\n\n###\n\n","completion":" _Approvable by user: string_  \nSet to the email of the user (ex: with `{{ current_user.email }}`), to only fetch tasks that this user can approve. END"}
{"prompt":"_Approvable by user: string_  \nSet to the email of the user (ex: with `{{ current_user.email }}`), to only fetch tasks that this user can approve.\n\n###\n\n","completion":" _finalized: boolean_  \nSet to true or false to filter for only tasks that have or have not been finalized. END"}
{"prompt":"_finalized: boolean_  \nSet to true or false to filter for only tasks that have or have not been finalized.\n\n###\n\n","completion":" _approved: boolean_  \nSet to true or false to filter for only tasks that have or have not been approved. END"}
{"prompt":"Get Task\n\n###\n\n","completion":" _key: string_  \nTask `key`. END"}
{"prompt":"Get User History\n\n###\n\n","completion":" A list of tasks the user has voted on.  \n_user email: string_  \nFor example, you can set this field to `{{ current_user.email }}` to show the user the tasks they have voted on. END"}
{"prompt":"Create \/ Edit Task\n\n###\n\n","completion":" This is the action used to create and edit tasks. If a task has not been finalized (finalized set to false), you can call this action again with the same key to edit it. END"}
{"prompt":"This is the action used to create and edit tasks. If a task has not been finalized (finalized set to false), you can call this action again with the same key to edit it.\n\n###\n\n","completion":" _key_  \nA unique key used to identify this task. This can be a uuid or any string of your choosing. One option is to use a primary key from another DB to associate this task with that row (ex: customer id or Stripe charge id). END"}
{"prompt":"_key_  \nA unique key used to identify this task. This can be a uuid or any string of your choosing. One option is to use a primary key from another DB to associate this task with that row (ex: customer id or Stripe charge id).\n\n###\n\n","completion":" _data: JSON_  \nAny information you’d like to store as part of the task. END"}
{"prompt":"_data: JSON_  \nAny information you’d like to store as part of the task.\n\n###\n\n","completion":" _metadata: JSON_  \nAny info you would like to store about this task that isn’t directly related to the task itself. For example you might store the budget amount in data but might want to store the user’s timezone in `metadata`. END"}
{"prompt":"_metadata: JSON_  \nAny info you would like to store about this task that isn’t directly related to the task itself. For example you might store the budget amount in data but might want to store the user’s timezone in `metadata`.\n\n###\n\n","completion":" _finalized: boolean_  \nWhether or not the task is finalized. See the Finalize Task section for more information. END"}
{"prompt":"Delete Task\n\n###\n\n","completion":" _key: string_  \nTask `key` END"}
{"prompt":"Finalize Task\n\n###\n\n","completion":" _key: string_  \nTask `key` END"}
{"prompt":"_key: string_  \nTask `key`\n\n###\n\n","completion":" Marks a task as finalized. Finalized tasks can no longer be edited. Tasks need to be finalized before they can be voted on by an approver. END"}
{"prompt":"Vote on Task\n\n###\n\n","completion":" Lets an approver approve or reject a task.  \n_key: string_  \nTask `key` END"}
{"prompt":"Lets an approver approve or reject a task.  \n_key: string_  \nTask `key`\n\n###\n\n","completion":" _data: JSON_  \nInput can be any JSON object with info you want to track about this approval or reject (ex: a reason for rejection collected via a form) END"}
{"prompt":"_data: JSON_  \nInput can be any JSON object with info you want to track about this approval or reject (ex: a reason for rejection collected via a form)\n\n###\n\n","completion":" _choice: ‘approve’ | ‘reject’_  \nInputs must be one of `approve` or `reject` END"}
{"prompt":"Get Workflow Properties\n\n###\n\n","completion":" Returns which user groups can create tasks, and which user groups need to approve tasks before it is considered approved. END"}
{"prompt":"title: \"Approve new user sign-ups\"\ncategorySlug: \"legacy\"\nexcerpt: \"Build an app to review and approve users.\"\nhidden: true\n\n###\n\n","completion":" **Let's say we're a startup, and we have a product out in private beta.** Users can sign up, and we want a tool to approve certain users. **We'll build that in 5 minutes, from scratch.** END"}
{"prompt":"1. Show users\n\n###\n\n","completion":" Let's start by writing our SQL query to pull in our users: END"}
{"prompt":"Let's start by writing our SQL query to pull in our users:\n\n###\n\n","completion":" Your query should now look like this: END"}
{"prompt":"Your query should now look like this:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d673b31-Screenshot_2021-06-24_at_2.32.06_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d673b31-Screenshot_2021-06-24_at_2.32.06_AM.png)\n\n###\n\n","completion":" Let's hit `Run` (or ⌘⏎) to preview the query. Once that looks good, we can hit \"Save\" (or ⌘S). Next, let's drag on a `Table` from the right hand side. It should automatically be populated with data from the query we just wrote. END"}
{"prompt":"Let's hit `Run` (or ⌘⏎) to preview the query. Once that looks good, we can hit \"Save\" (or ⌘S). Next, let's drag on a `Table` from the right hand side. It should automatically be populated with data from the query we just wrote.\n\n###\n\n","completion":" Nice! Now we have a table of our users. Let's go search them now! END"}
{"prompt":"Nice! Now we have a table of our users. Let's go search them now!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cf16b2d-drag_table_approve_signups.gif) END"}
{"prompt":"2. Search users\n\n###\n\n","completion":" To search users, let's drag on a `TextInput` from the right hand side: END"}
{"prompt":"To search users, let's drag on a `TextInput` from the right hand side:\n\n###\n\n","completion":" ![Placing a TextInput on top of the Table.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bc4ce3a-drag_text_input.gif) END"}
{"prompt":"![Placing a TextInput on top of the Table.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bc4ce3a-drag_text_input.gif)\n\n###\n\n","completion":" Nice! Now we have to modify our SQL query to search by the value in our `TextInput`. Let's change our SQL query to: END"}
{"prompt":"Nice! Now we have to modify our SQL query to search by the value in our `TextInput`. Let's change our SQL query to:\n\n###\n\n","completion":" We're adding the `%` in order to do partial matching. Without them, \"mary\" would match \"Mary\", but \"mar\" wouldn't. With them, \"ma\" matches both \"Mary\" and \"Marilyn\". END"}
{"prompt":"We're adding the `%` in order to do partial matching. Without them, \"mary\" would match \"Mary\", but \"mar\" wouldn't. With them, \"ma\" matches both \"Mary\" and \"Marilyn\".\n\n###\n\n","completion":" Now when you type different names into the `TextInput`, the query will automatically refresh, which'll cause your `Table` to refresh as well. Great - fuzzy search built in just a few minutes! END"}
{"prompt":"3. Approve users\n\n###\n\n","completion":" To approve users, let's drag on two separate buttons - one for approving and one for rejecting. Let's give them labels, and perhaps make the reject button red. Your app should now look like this: END"}
{"prompt":"To approve users, let's drag on two separate buttons - one for approving and one for rejecting. Let's give them labels, and perhaps make the reject button red. Your app should now look like this:\n\n###\n\n","completion":" ![An approve button. A reject button.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8ee168f-Screenshot_2021-06-24_at_2.40.01_AM.png) END"}
{"prompt":"![An approve button. A reject button.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8ee168f-Screenshot_2021-06-24_at_2.40.01_AM.png)\n\n###\n\n","completion":" Okay - cool. Now we need another query, `query2`, to update the active flag. For `query2`, we want to perform an update using a REST API so let's fill in the `PUT` request, and set `active` to `true`. END"}
{"prompt":"Okay - cool. Now we need another query, `query2`, to update the active flag. For `query2`, we want to perform an update using a REST API so let's fill in the `PUT` request, and set `active` to `true`.\n\n###\n\n","completion":" ![Changing the action for the approve Button.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/293bf6f-Screenshot_2021-06-24_at_3.01.16_AM.png) END"}
{"prompt":"![Changing the action for the approve Button.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/293bf6f-Screenshot_2021-06-24_at_3.01.16_AM.png)\n\n###\n\n","completion":" After we approve a user, we also want to refresh the original `users` query, so we can see the active boolean changing in the `Table`. To do that, let's scroll down to the `After this query runs` section, and choose to refresh `query1` (or whatever the name of your query is). END"}
{"prompt":"After we approve a user, we also want to refresh the original `users` query, so we can see the active boolean changing in the `Table`. To do that, let's scroll down to the `After this query runs` section, and choose to refresh `query1` (or whatever the name of your query is).\n\n###\n\n","completion":" ![Writing a PUT query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/acbb19d-Screenshot_2021-06-24_at_3.03.03_AM.png) END"}
{"prompt":"![Writing a PUT query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/acbb19d-Screenshot_2021-06-24_at_3.03.03_AM.png)\n\n###\n\n","completion":" Finally, let's hook up our button to trigger `query2` on click. END"}
{"prompt":"Finally, let's hook up our button to trigger `query2` on click.\n\n###\n\n","completion":" Let's select the approve `Button`. Let's click on `+New` and create a new [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers). Now select our event handler's `Action` as `Trigger query` and `Query` is set to `query2`. END"}
{"prompt":"Let's select the approve `Button`. Let's click on `+New` and create a new [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers). Now select our event handler's `Action` as `Trigger query` and `Query` is set to `query2`.\n\n###\n\n","completion":" ![Choosing the queries to refresh on success.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d443063-Screenshot_2021-06-24_at_2.52.38_AM.png) END"}
{"prompt":"![Choosing the queries to refresh on success.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d443063-Screenshot_2021-06-24_at_2.52.38_AM.png)\n\n###\n\n","completion":" Great! Let's save the query, and repeat the same for the \"Reject\" button. END"}
{"prompt":"Great! Let's save the query, and repeat the same for the \"Reject\" button.\n\n###\n\n","completion":" For now, we'll need two queries, so let's just duplicate this query, but change the `active` to `false`. Then, let's head back to the button and tell it to run this new query on click: END"}
{"prompt":"For now, we'll need two queries, so let's just duplicate this query, but change the `active` to `false`. Then, let's head back to the button and tell it to run this new query on click:\n\n###\n\n","completion":" ![Connect our reject button to our rejection query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/512c2c9-Screenshot_2021-06-24_at_3.05.19_AM.png) END"}
{"prompt":"![Connect our reject button to our rejection query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/512c2c9-Screenshot_2021-06-24_at_3.05.19_AM.png)\n\n###\n\n","completion":" Great! That's it! We should be able to hit the approve or reject button on a user, and it'll cause the user to become `active` or `inactive`. Well done! END"}
{"prompt":"4. Actually using it\n\n###\n\n","completion":" **This tool is now production-ready**. If your coworkers want to use it themselves (without having to bug you), just send them the link to this tool! If you [give them specific permissions](https:\/\/docs.retool.com\/docs\/user-permissions), they won't be able to edit the tool and change the queries - they'll just be able to use the tool you've created. END"}
{"prompt":"title: \"Assemble mobile layouts for web apps\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to assemble mobile layouts for Retool web apps.\"\nhidden: false\n\n###\n\n","completion":" Retool apps are responsive and support different viewport widths. You can configure separate desktop and mobile layouts to customize your app for mobile web users. To do this, you optionally show or hide components on the mobile layout and arrange them as needed. The mobile layout also uses a narrower [12-column grid layout](\/docs\/app-editor#grid-layout) to accommodate the smaller viewport size. END"}
{"prompt":"Retool apps are responsive and support different viewport widths. You can configure separate desktop and mobile layouts to customize your app for mobile web users. To do this, you optionally show or hide components on the mobile layout and arrange them as needed. The mobile layout also uses a narrower [12-column grid layout](\/docs\/app-editor#grid-layout) to accommodate the smaller viewport size.\n\n###\n\n","completion":" Both desktop and mobile layouts use the same component but allow you to change their position independently. Any changes you make to a component's settings, such as labels or event handlers, apply to both views. END"}
{"prompt":"Both desktop and mobile layouts use the same component but allow you to change their position independently. Any changes you make to a component's settings, such as labels or event handlers, apply to both views.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/nlG6DvYpR7Ob1JrjEKvm?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Web app mobile layouts\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Switch between desktop and mobile layouts\n\n###\n\n","completion":" No components are included in the mobile layout by default. Once you add a component, the App editor [navbar](\/docs\/app-editor#navbar) displays a toggle to switch between desktop and mobile layouts. END"}
{"prompt":"No components are included in the mobile layout by default. Once you add a component, the App editor [navbar](\/docs\/app-editor#navbar) displays a toggle to switch between desktop and mobile layouts.\n\n###\n\n","completion":" Use the layout controls to switch between **Desktop** and **Mobile** layouts. Components you add to either layout appear only in the layout you're currently viewing. For example, if you add a component while viewing the mobile layout, it does not appear in the desktop layout until you enable it. END"}
{"prompt":"Add components to the mobile layout\n\n###\n\n","completion":" Use the Inspector in the right panel to add selected components to the mobile layout. Click the **Advanced settings** icon in the **Appearance** section, then enable **Show on mobile**. END"}
{"prompt":"Use the Inspector in the right panel to add selected components to the mobile layout. Click the **Advanced settings** icon in the **Appearance** section, then enable **Show on mobile**.\n\n###\n\n","completion":" Retool initially positions components in the mobile layout similar to the desktop layout. If another component is already in the same position on the mobile layout, the App editor notifies you. Should this occur, reposition any existing components on the mobile layout first to allow for the addition of the other component. END"}
{"prompt":"Arrange components in the mobile layout\n\n###\n\n","completion":" You can customize the arrangement of components for each layout separately—repositioning a component in the desktop layout does not alter its position for the mobile layout. Switch to the mobile layout and then position or resize components as needed. END"}
{"prompt":"title: \"Retool apps overview\"\ncategorySlug: \"web-apps\"\nhidden: false\n\n###\n\n","completion":" Retool enables you to quickly build and deploy internal apps for your team. Connect to your databases and APIs, assemble UIs with drag-and-drop building blocks like tables and forms, and write queries to interact with data using SQL and JavaScript. END"}
{"prompt":"Get started\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<hr class=\\\"landing-divider\\\" \/>\\n<section class=\\\"get-started landing\\\">\\n  <div class=\\\"get-started-description\\\">\\n    <p>\\n      Watch a video, learn with a tutorial, or follow the quickstart to build\\n      your first app.\\n    <\/p>\\n  <\/div>\\n  <div class=\\\"get-started-image\\\" style=\\\"--aspect-ratio: 16\/9\\\">\\n    <iframe\\n      width=\\\"560\\\"\\n      height=\\\"315\\\"\\n      src=\\\"https:\/\/www.youtube.com\/embed\/ROBkblVAJu0\\\"\\n      title=\\\"YouTube video player\\\"\\n      frameborder=\\\"0\\\"\\n      allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\"\\n      allowfullscreen\\n    ><\/iframe>\\n  <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a href=\\\"apps-tutorial\\\">\\n        <div class=\\\"name\\\">Tutorial<\/div>\\n        <div class=\\\"description\\\">\\n          Learn how to build Retool apps from start to finish.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"quickstart\\\">\\n        <div class=\\\"name\\\">Quickstart<\/div>\\n        <div class=\\\"description\\\">\\n          Build your first Retool app in just a few minutes.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Connect data sources\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n  <div class=\\\"get-started-description\\\">\\n    <p>\\n      Quickly connect to data sources using built-in integrations for\\n      PostgreSQL, APIs, Salesforce, and more.\\n    <\/p>\\n  <\/div>\\n  <div class=\\\"get-started-image\\\">\\n    <img\\n      src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/628b76e9-060b-45d5-8bf7-86624f5ef6da.webp\\\"\\n    \/>\\n  <\/div>\\n<\/section>\\n<section class=\\\"landing three-column\\\">\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a href=\\\"data-sources\\\">\\n        <div class=\\\"name\\\">Data sources<\/div>\\n        <div class=\\\"description\\\">Connect to almost any API or database.<\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a\\n        href=\\\"resources\\\">\\n        <div class=\\\"name\\\">Resources<\/div>\\n        <div class=\\\"description\\\">Learn how Retool connects to data sources.<\/div>\\n      <\/a>\\n    <\/li>\\n        <li>\\n      <a\\n        href=\\\"api-connection-guides\\\">\\n        <div class=\\\"name\\\">Environments<\/div>\\n        <div class=\\\"description\\\">Configure data sources for multiple environments.<\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Interact with data\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n  <div class=\\\"get-started-description\\\">\\n    <p>\\n      Write queries that interact with data and use JavaScript almost anywhere.\\n    <\/p>\\n  <\/div>\\n  <div class=\\\"get-started-image\\\">\\n    <img\\n      src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/53379089-67f5-4850-b3a8-1ce473b233a3.webp\\\"\\n    \/>\\n  <\/div>\\n<\/section>\\n<section class=\\\"landing three-column\\\">\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a\\n        href=\\\"\/docs\/data-queries\\\">\\n        <div class=\\\"name\\\">Data queries<\/div>\\n        <div class=\\\"description\\\">\\n          Perform CRUD operations with your data sources.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/sql-queries\\\">\\n        <div class=\\\"name\\\">Write SQL queries<\/div>\\n        <div class=\\\"description\\\">Query data with SQL.<\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a\\n        href=\\\"api-requests\\\">\\n        <div class=\\\"name\\\">Write API queries<\/div>\\n        <div class=\\\"description\\\">Perform API requests.<\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"Assemble the UI\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n  <div class=\\\"get-started-description\\\">\\n    <p>\\n      Assemble highly polished interfaces with our extensive library of UI\\n      components.\\n    <\/p>\\n  <\/div>\\n  <div class=\\\"get-started-image\\\">\\n    <img\\n      src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/64f44cba-5161-4093-90ac-394e591e033e.webp\\\"\\n    \/>\\n  <\/div>\\n<\/section>\\n<section class=\\\"landing three-column\\\">\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a\\n        href=\\\"data-in-tables\\\"\\n        style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n      >\\n        <div class=\\\"name\\\">Tables<\/div>\\n        <div class=\\\"description\\\">\\n          Display and interact with data using highly configurable tables.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"forms\\\" style=\\\"--ctaColor: #f6f6f6; --textColor: #3d3d3d\\\">\\n        <div class=\\\"name\\\">Forms<\/div>\\n        <div class=\\\"description\\\">\\n          Build input forms or generate them using a database schema.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"components\\\" style=\\\"--ctaColor: #f6f6f6; --textColor: #3d3d3d\\\">\\n        <div class=\\\"name\\\">Components<\/div>\\n        <div class=\\\"description\\\">\\n          Assemble components with a drag-and-drop interface.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Script apps and respond to user events\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n  <div class=\\\"get-started-description\\\">\\n    <p>\\n      Use JavaScript anywhere, control app behavior, and respond to user\\n      actions.\\n    <\/p>\\n  <\/div>\\n  <div class=\\\"get-started-image\\\">\\n    <img\\n      src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/229f4bd2-6264-4617-b976-c7a6de6a91cf.webp\\\"\\n    \/>\\n  <\/div>\\n<\/section>\\n<section class=\\\"landing three-column\\\">\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a href=\\\"app-scripting-events\\\">\\n        <div class=\\\"name\\\">Scripting and events<\/div>\\n        <div class=\\\"description\\\">\\n          Write JavaScript to control apps and handle user interactions.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a\\n        href=\\\"define-option-lists\\\"\\n        style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\"\\n      >\\n        <div class=\\\"name\\\">Dynamically map options<\/div>\\n        <div class=\\\"description\\\">\\n          Automatically map data to generate component value options.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"event-handlers\\\">\\n        <div class=\\\"name\\\">Handle user events<\/div>\\n        <div class=\\\"description\\\">\\n          Trigger actions and queries in response to user interaction.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Connecting to Asana\n\n###\n\n","completion":" To build Retool apps with your Asana data you'll first need to create a resource for querying the Asana API. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to a data source. END"}
{"prompt":"To build Retool apps with your Asana data you'll first need to create a resource for querying the Asana API. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to a data source.\n\n###\n\n","completion":" Get started by navigating to the **Resources** page, clicking **Create new**, and then selecting **Asana** as your resource type. END"}
{"prompt":"Get started by navigating to the **Resources** page, clicking **Create new**, and then selecting **Asana** as your resource type.\n\n###\n\n","completion":" You have two options for authenticating your Asana account in Retool. You can either use oAuth2 or provide Retool with an Asana personal access token to use when querying the Asana APIs. END"}
{"prompt":"You have two options for authenticating your Asana account in Retool. You can either use oAuth2 or provide Retool with an Asana personal access token to use when querying the Asana APIs.\n\n###\n\n","completion":" You can read more about what type of authentication Asana recommends for different use cases [here](https:\/\/developers.asana.com\/docs\/authentication) but essentially: END"}
{"prompt":"Connecting with oAuth2\n\n###\n\n","completion":" To connect Asana to Retool with oAuth2 simply give your resource a unique name and hit Create resource. Once the resource is created and you begin using it in your app, all users who open your app will be asked to grant Retool permission to make calls on their behalf. END"}
{"prompt":"To connect Asana to Retool with oAuth2 simply give your resource a unique name and hit Create resource. Once the resource is created and you begin using it in your app, all users who open your app will be asked to grant Retool permission to make calls on their behalf.\n\n###\n\n","completion":" If you want to test the oAuth2 integration and see what users of your application will see, you can press the \"Test oAuth integration\" button to authenticate your account (this will create the resource for you). Otherwise, just hit \"Create resource\" and start building. END"}
{"prompt":"If you want to test the oAuth2 integration and see what users of your application will see, you can press the \"Test oAuth integration\" button to authenticate your account (this will create the resource for you). Otherwise, just hit \"Create resource\" and start building.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d89c44f-Screen_Shot_2021-03-01_at_3.10.06_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d89c44f-Screen_Shot_2021-03-01_at_3.10.06_PM.png)\n\n###\n\n","completion":" After your Retool application's users have granted Retool access to call Asana APIs on their behalf, Retool will take care of validating and refreshing their tokens as well as re-requesting access if necessary. END"}
{"prompt":"Connecting with oAuth2 in an on-prem deployment\n\n###\n\n","completion":" If you have an on-premise deployment of Retool, you'll need to register an application with Asana to get a Client ID and Client Secret and provide those to Retool. END"}
{"prompt":"If you have an on-premise deployment of Retool, you'll need to register an application with Asana to get a Client ID and Client Secret and provide those to Retool.\n\n###\n\n","completion":" Start by going to the [Asana Developers Console](https:\/\/app.asana.com\/0\/developer-console) and adding a new app. END"}
{"prompt":"Start by going to the [Asana Developers Console](https:\/\/app.asana.com\/0\/developer-console) and adding a new app.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/88af8e5-Component_5.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/88af8e5-Component_5.png)\n\n###\n\n","completion":" Once you've given your application a descriptive name and created it, you'll be given a Client ID and Client Secret. END"}
{"prompt":"Once you've given your application a descriptive name and created it, you'll be given a Client ID and Client Secret.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7be763b-Component_6.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7be763b-Component_6.png)\n\n###\n\n","completion":" Copy those to the Retool resource configuration page END"}
{"prompt":"Copy those to the Retool resource configuration page\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c2e59c8-Component_7.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c2e59c8-Component_7.png)\n\n###\n\n","completion":" Finally, copy the \"OAuth callback URL\" field provided by Retool into the \"Redirect URLs\" section of the Asana Developer Console app page and press Add. The final page should look like this. END"}
{"prompt":"Finally, copy the \"OAuth callback URL\" field provided by Retool into the \"Redirect URLs\" section of the Asana Developer Console app page and press Add. The final page should look like this.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f27c745-Component_8.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f27c745-Component_8.png)\n\n###\n\n","completion":" Now you can hit \"Create resource\" in Retool and start building with your Asana integration. END"}
{"prompt":"Connecting with a personal access token\n\n###\n\n","completion":" To connect to Asana with a personal access token, you'll need to create a new token in the [Asana Developers Console](https:\/\/app.asana.com\/0\/developer-console) and provide it to Retool. END"}
{"prompt":"To connect to Asana with a personal access token, you'll need to create a new token in the [Asana Developers Console](https:\/\/app.asana.com\/0\/developer-console) and provide it to Retool.\n\n###\n\n","completion":" We recommend creating a new secret API key specifically for Retool. Using a Retool-specific key ensures that your Retool apps will not be impacted but updates to the default secret key, and that other applications or services that are using your Asana API key are not impacted if you need to turn off Retool access. Remember to give your key a clear name. END"}
{"prompt":"We recommend creating a new secret API key specifically for Retool. Using a Retool-specific key ensures that your Retool apps will not be impacted but updates to the default secret key, and that other applications or services that are using your Asana API key are not impacted if you need to turn off Retool access. Remember to give your key a clear name.\n\n###\n\n","completion":" ![Access the Asana Developer Console at https:\/\/app.asana.com\/0\/developer-console](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2c30737-Component_1.png) END"}
{"prompt":"![Access the Asana Developer Console at https:\/\/app.asana.com\/0\/developer-console](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2c30737-Component_1.png)\n\n###\n\n","completion":" Next, provide this token to Retool by creating a new Asana resource and clicking \"Continue with Personal Token\" END"}
{"prompt":"Next, provide this token to Retool by creating a new Asana resource and clicking \"Continue with Personal Token\"\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c931ed2-Component_2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c931ed2-Component_2.png)\n\n###\n\n","completion":" and paste your token into the provided field. Press \"Create resource\" and start building! END"}
{"prompt":"and paste your token into the provided field. Press \"Create resource\" and start building!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/815ecd1-Component_3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/815ecd1-Component_3.png)\n\n###\n\n","completion":" If you'd like to learn more about how personal access tokens work refer to [Asana's personal access token documentation](https:\/\/developers.asana.com\/docs\/personal-access-token). END"}
{"prompt":"Querying Asana\n\n###\n\n","completion":" You can now select your newly-created Asana resource from the _Resource_ dropdown when creating queries in your Retool apps. END"}
{"prompt":"You can now select your newly-created Asana resource from the _Resource_ dropdown when creating queries in your Retool apps.\n\n###\n\n","completion":" You can display the results of Asana queries as with any other query in Retool. You will have to examine the response to see which part of it you actually want to display. A good place to start looking is always in the top-level `data` field - `{{asanaQuery.data}}`. END"}
{"prompt":"You can display the results of Asana queries as with any other query in Retool. You will have to examine the response to see which part of it you actually want to display. A good place to start looking is always in the top-level `data` field - `{{asanaQuery.data}}`.\n\n###\n\n","completion":" If you're getting UNAUTHORIZED errors while building apps with this resource, it means you haven't authenticated your session with the OAuth2 flow. You can do this by pressing the Re-auth API button in the query editor and trying to run the query again. END"}
{"prompt":"Reading data\n\n###\n\n","completion":" ![GET \/tasks endpoint with the project specified from a dropdown.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0c1ffcc-getTasksForProject.png) END"}
{"prompt":"Updating data\n\n###\n\n","completion":" ![POST \/tasks\/{task_gid} endpoint. Make sure to pass in the GID.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/424f58d-editTask.png) END"}
{"prompt":"Bulk updating data\n\n###\n\n","completion":" Since there is no native bulk edit endpoint, you'll need to create a JS query to loop through the `.recordUpdates` array, trigger the edit query for each edited row with the additionalScope passed in, then trigger the get all query (`getTasksForProject` in this example) to render the new data in the table. END"}
{"prompt":"Since there is no native bulk edit endpoint, you'll need to create a JS query to loop through the `.recordUpdates` array, trigger the edit query for each edited row with the additionalScope passed in, then trigger the get all query (`getTasksForProject` in this example) to render the new data in the table.\n\n###\n\n","completion":" Code sample here: END"}
{"prompt":"Code sample here:\n\n###\n\n","completion":" ![JS query to trigger the editTaskName query, with the name and gid passed in for each row.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8491674-bulkEditTaskName.png) END"}
{"prompt":"![JS query to trigger the editTaskName query, with the name and gid passed in for each row.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8491674-bulkEditTaskName.png)\n\n###\n\n","completion":" ![{{gid}} and {{name}} will both be undefined until they get passed in as additionalScope from the JavaScript query above.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/31d71d0-editTaskName.png) END"}
{"prompt":"title: \"Position and arrange components\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to assemble web app components.\"\nhidden: false\n\n###\n\n","completion":" Drag-and-drop components to rearrange them on the canvas. Components cannot overlap, so as you move components around, the layout of your app automatically updates and adjusts. All components have a default size (e.g., 2 columns x 5 rows) and built-in spacing. END"}
{"prompt":"Drag-and-drop components to rearrange them on the canvas. Components cannot overlap, so as you move components around, the layout of your app automatically updates and adjusts. All components have a default size (e.g., 2 columns x 5 rows) and built-in spacing.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/2vHzqER3PG79v67tnhga?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Position and arrange components\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Resize components\n\n###\n\n","completion":" Most components can be resized to fit a custom area—select a component and then drag from a corner or edge. Certain components, such as [Container](https:\/\/retool.com\/components\/container) or [Text Area](https:\/\/retool.com\/components\/text-area), have fixed sizes that expand to automatically grow with their content. You can set their **Overflow** setting to **Scroll** or **Hidden** using the **Inspect** tab of the right panel to control this behavior. END"}
{"prompt":"Most components can be resized to fit a custom area—select a component and then drag from a corner or edge. Certain components, such as [Container](https:\/\/retool.com\/components\/container) or [Text Area](https:\/\/retool.com\/components\/text-area), have fixed sizes that expand to automatically grow with their content. You can set their **Overflow** setting to **Scroll** or **Hidden** using the **Inspect** tab of the right panel to control this behavior.\n\n###\n\n","completion":" You can configure containers to dynamically adjust their size based on their contents. Set the component's **Height** to **Hug Contents** in the component's **Layout** settings, available in the **Inspect** tab of the right panel. END"}
{"prompt":"Duplicate components\n\n###\n\n","completion":" You can duplicate existing components in the following ways: END"}
{"prompt":"You can duplicate existing components in the following ways:\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/pG9wxv0RKCKM6I2hagRY?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Duplicate components\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Hide or disable components\n\n###\n\n","completion":" You can hide any component by setting **Hidden** to `true`. You can also disable input components, or set them as read-only, using **Disabled** or **Read only** respectively. END"}
{"prompt":"You can hide any component by setting **Hidden** to `true`. You can also disable input components, or set them as read-only, using **Disabled** or **Read only** respectively.\n\n###\n\n","completion":" These values evaluate to `true` based on a <<glossary:truthy value>>. For example, you can use the state of one component to toggle the **Hidden** property of another component. [Checkbox](https:\/\/retool.com\/components\/checkbox) can be used to toggle the visibility of another component when checked. To do this, set **Hidden** to `{{ checkbox1.value }}` on the component you want to hide . This evaluates to `true` when the checkbox is checked, and `false` when unchecked. END"}
{"prompt":"These values evaluate to `true` based on a <<glossary:truthy value>>. For example, you can use the state of one component to toggle the **Hidden** property of another component. [Checkbox](https:\/\/retool.com\/components\/checkbox) can be used to toggle the visibility of another component when checked. To do this, set **Hidden** to `{{ checkbox1.value }}` on the component you want to hide . This evaluates to `true` when the checkbox is checked, and `false` when unchecked.\n\n###\n\n","completion":" ![Disable a component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4ff28f3f66fd7367c19bec330e6b40e1-1800.webp) END"}
{"prompt":"![Disable a component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4ff28f3f66fd7367c19bec330e6b40e1-1800.webp)\n\n###\n\n","completion":" You can also use [<<glossary:event handlers>>](https:\/\/docs.retool.com\/docs\/event-handlers) if you need to control components based on user actions. For example, you could use a [Button](https:\/\/retool.com\/components\/button) to show or hide a [Text Area](https:\/\/retool.com\/components\/text-area) component. END"}
{"prompt":"title: \"Assemble components\"\ncategorySlug: \"legacy\"\nexcerpt: \"Assemble your app's user interface with our library of UI components.\"\nhidden: true\n\n###\n\n","completion":" Components are one of the fundamental building blocks of Retool. They function similar to React components as you can pass properties and they have internal state. You can combine Retool's [library of components](https:\/\/retool.com\/components) with your [data](https:\/\/docs.retool.com\/docs\/resources) to build interactive apps. END"}
{"prompt":"Components are one of the fundamental building blocks of Retool. They function similar to React components as you can pass properties and they have internal state. You can combine Retool's [library of components](https:\/\/retool.com\/components) with your [data](https:\/\/docs.retool.com\/docs\/resources) to build interactive apps.\n\n###\n\n","completion":" Some commonly used components include: END"}
{"prompt":"Adding, editing, and deleting components\n\n###\n\n","completion":" Adding a new component to your Retool app is as simple as opening up the Components tab in the right panel, selecting a component from the list, and dragging the component where you want into the editor grid (the canvas). You can always bring up the components list by clicking on a blank area of the canvas. END"}
{"prompt":"Adding a new component to your Retool app is as simple as opening up the Components tab in the right panel, selecting a component from the list, and dragging the component where you want into the editor grid (the canvas). You can always bring up the components list by clicking on a blank area of the canvas.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2d717e7-addComponent.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2d717e7-addComponent.gif)\n\n###\n\n","completion":" Editing is best done from the Inspector tab in the right pane. To open the Inspector tab, click on the component you want to edit. From here you’ll be able to change your component’s name as well as edit its properties like its text, color, or on-click handler (for more information on component properties, keep reading!). You can also resize your component by clicking on it and dragging it by one of its corners. END"}
{"prompt":"Editing is best done from the Inspector tab in the right pane. To open the Inspector tab, click on the component you want to edit. From here you’ll be able to change your component’s name as well as edit its properties like its text, color, or on-click handler (for more information on component properties, keep reading!). You can also resize your component by clicking on it and dragging it by one of its corners.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8eecd96-Screen_Recording_2020-03-19_at_03.37_PM.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8eecd96-Screen_Recording_2020-03-19_at_03.37_PM.gif)\n\n###\n\n","completion":" To delete a component, select it by clicking on it and press the delete icon in the Inspector tab of the right pane (or press the Delete key on your keyboard while your component is selected). END"}
{"prompt":"To delete a component, select it by clicking on it and press the delete icon in the Inspector tab of the right pane (or press the Delete key on your keyboard while your component is selected).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ebd576d-Screen_Recording_2020-03-19_at_03.38_PM.gif) END"}
{"prompt":"Component properties\n\n###\n\n","completion":" It’s useful to think of Retool components as being backed by a simple JavaScript object. Every component has a name (like a variable name e.g. `table1`) and its corresponding object, which might have properties like `label` for a Checkbox or `imageUrl` for an Image component. END"}
{"prompt":"It’s useful to think of Retool components as being backed by a simple JavaScript object. Every component has a name (like a variable name e.g. `table1`) and its corresponding object, which might have properties like `label` for a Checkbox or `imageUrl` for an Image component.\n\n###\n\n","completion":" The values of these properties can be static (e.g. the string “Submit a new claim” - often used for titles, labels and instructional text blocks) or dynamic (e.g. `Hello {{current_user.firstName}}` - for when you want to change how or what is displayed based on inputs). Dynamic values are always wrapped in double curly braces `{{}}`, which evaluate to JavaScript. END"}
{"prompt":"The values of these properties can be static (e.g. the string “Submit a new claim” - often used for titles, labels and instructional text blocks) or dynamic (e.g. `Hello {{current_user.firstName}}` - for when you want to change how or what is displayed based on inputs). Dynamic values are always wrapped in double curly braces `{{}}`, which evaluate to JavaScript.\n\n###\n\n","completion":" Some useful and common dynamic property values: END"}
{"prompt":"Some useful and common dynamic property values:\n\n###\n\n","completion":" The best part is a component’s properties are available globally in the scope of your app - any component can access and change any other component’s properties! END"}
{"prompt":"The best part is a component’s properties are available globally in the scope of your app - any component can access and change any other component’s properties!\n\n###\n\n","completion":" To demonstrate why this is useful, lets build a simple app that dynamically shows and hides an image based on a toggle. END"}
{"prompt":"To demonstrate why this is useful, lets build a simple app that dynamically shows and hides an image based on a toggle.\n\n###\n\n","completion":" First drag on a Toggle component followed by an Image component. END"}
{"prompt":"First drag on a Toggle component followed by an Image component.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c943316-Screen_Shot_2020-03-19_at_3.40.13_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c943316-Screen_Shot_2020-03-19_at_3.40.13_PM.png)\n\n###\n\n","completion":" Next, select the Image component and in the right pane set its “Hide when true” property to refer to your toggle’s value: `{{toggle1.value}}` END"}
{"prompt":"Next, select the Image component and in the right pane set its “Hide when true” property to refer to your toggle’s value: `{{toggle1.value}}`\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ff26644-Screen_Shot_2020-03-19_at_3.41.53_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ff26644-Screen_Shot_2020-03-19_at_3.41.53_PM.png)\n\n###\n\n","completion":" Finally, flip the toggle - your cat should disappear (unfortunately)! END"}
{"prompt":"Finally, flip the toggle - your cat should disappear (unfortunately)!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7e3010f-Screen_Recording_2020-03-19_at_03.44_PM.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7e3010f-Screen_Recording_2020-03-19_at_03.44_PM.gif)\n\n###\n\n","completion":" Your image’s “hidden” property is now dynamically set based on your toggle’s value. You can see this in action by opening up the left pane (⌘B) and expanding image1 in components. As you flip the toggle, you should see `hidden` flip from `false` to `true`. END"}
{"prompt":"Your image’s “hidden” property is now dynamically set based on your toggle’s value. You can see this in action by opening up the left pane (⌘B) and expanding image1 in components. As you flip the toggle, you should see `hidden` flip from `false` to `true`.\n\n###\n\n","completion":" Try adding some other components to your editor and using the left panel to see which properties are available to you (e.g. Table’s `selectedRow.data` or Bar Chart’s `datasets`). END"}
{"prompt":"Try adding some other components to your editor and using the left panel to see which properties are available to you (e.g. Table’s `selectedRow.data` or Bar Chart’s `datasets`).\n\n###\n\n","completion":" **Can’t find the component you’re looking for?** END"}
{"prompt":"**Can’t find the component you’re looking for?**\n\n###\n\n","completion":" If Retool's built-in components don't meet your needs, you can set the `html` value of a Text component to `true` and then pass custom HTML, CSS, and JavaScript to it. This approach may be good enough if you just need custom content, styles, or behavior for that one particular component. If you need your custom component to interact with the rest of your app, you can [build your own custom component using React or pure JavaScript](https:\/\/docs.retool.com\/docs\/custom-components). END"}
{"prompt":"If Retool's built-in components don't meet your needs, you can set the `html` value of a Text component to `true` and then pass custom HTML, CSS, and JavaScript to it. This approach may be good enough if you just need custom content, styles, or behavior for that one particular component. If you need your custom component to interact with the rest of your app, you can [build your own custom component using React or pure JavaScript](https:\/\/docs.retool.com\/docs\/custom-components).\n\n###\n\n","completion":" Armed with this knowledge you can now unlock a trove of amazing uses for Retool - for a little bit of inspiration, check out our [templates](http:\/\/www.retool.com\/templates). END"}
{"prompt":"title: \"View user audit logs\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to view and query user audit logs.\"\nhidden: false\n\n###\n\n","completion":" Retool automatically logs user actions, such as query runs and password resets. The logs include the user's name, the action taken, and when the action took place. END"}
{"prompt":"Retool automatically logs user actions, such as query runs and password resets. The logs include the user's name, the action taken, and when the action took place.\n\n###\n\n","completion":" You can access audit logs from either: END"}
{"prompt":"You can access audit logs from either:\n\n###\n\n","completion":" ![Viewing audit logs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4c500738-723c-4873-a42f-04377c2a45b2.png) END"}
{"prompt":"Logged events\n\n###\n\n","completion":" By default, Retool captures the following events in the audit log: END"}
{"prompt":"By default, Retool captures the following events in the audit log:\n\n###\n\n","completion":" To access the audit log, visit `\/audit`. You can see a list of all the events, the user who performed them, and the time. You can also explore more detailed information, including the exact query, the parameters passed, the user's IP address, or response time. END"}
{"prompt":"To access the audit log, visit `\/audit`. You can see a list of all the events, the user who performed them, and the time. You can also explore more detailed information, including the exact query, the parameters passed, the user's IP address, or response time.\n\n###\n\n","completion":" Audit logs for Retool Cloud organizations are retained for one year. Self-hosted deployments manage their own audit log retention. END"}
{"prompt":"Hide query data from logs\n\n###\n\n","completion":" You can hide parameters from logs on a per-query basis. See [documentation on queries](https:\/\/docs.tryretool.com\/docs\/queries#hide-parameters-from-audit-logs) for more details. END"}
{"prompt":"You can hide parameters from logs on a per-query basis. See [documentation on queries](https:\/\/docs.tryretool.com\/docs\/queries#hide-parameters-from-audit-logs) for more details.\n\n###\n\n","completion":" To prevent all headers in queries from getting added to audit logs, enable the `HIDE_ALL_HEADERS_IN_AUDIT_LOG_EVENTS` [environment variable](https:\/\/docs.retool.com\/reference\/environment-variables-reference#hide_all_headers_in_audit_log_events). This is only available on self-hosted deployments. END"}
{"prompt":"Access audit logs in SQL or stdout\n\n###\n\n","completion":" Self-hosted Retool deployments can use SQL to query the audit logs database table or output audit log events to `stdout`. END"}
{"prompt":"Query audit logs in SQL\n\n###\n\n","completion":" Retool logs events to the `audit_trail_events` table in the Retool Postgres database. This table's schema contains the following columns. END"}
{"prompt":"Retool logs events to the `audit_trail_events` table in the Retool Postgres database. This table's schema contains the following columns.\n\n###\n\n","completion":" You can join the `audit_trail_events` table with the `users` table to learn more details about the users who performed actions. For example, the following query returns records of groups created and the user who created each group. END"}
{"prompt":"Output audit logs to stdout\n\n###\n\n","completion":" Set the [environment variable](https:\/\/docs.retool.com\/reference\/environment-variables-reference#log_audit_events) `LOG_AUDIT_EVENTS=true` to output all audit log events to `stdout`. This is useful if you use external services to monitor `stdout`, such as [Datadog](https:\/\/www.datadoghq.com\/). END"}
{"prompt":"title: \"Automate ETL tasks with Retool Workflows\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to retrieve account and event data from Salesforce and Google Sheets, transform the results using JavaScript, and save to a PostgreSQL database.\"\nhidden: false\n\n###\n\n","completion":" [Retool Workflows](https:\/\/retool.com\/products\/workflows) enables you to build complex automations that interact with your data sources. END"}
{"prompt":"Use case\n\n###\n\n","completion":" A common use case for Retool Workflows is to automate <<glossary:ETL>> tasks. Retool apps can query data from a variety of sources but it's much more efficient to prepare data outside of the frontend application. END"}
{"prompt":"A common use case for Retool Workflows is to automate <<glossary:ETL>> tasks. Retool apps can query data from a variety of sources but it's much more efficient to prepare data outside of the frontend application.\n\n###\n\n","completion":" This tutorial explains how to build an ETL workflow that: END"}
{"prompt":"This tutorial explains how to build an ETL workflow that:\n\n###\n\n","completion":" The transformed data is then available to all Retool apps without the need for complex queries that run every time the app launches. END"}
{"prompt":"The transformed data is then available to all Retool apps without the need for complex queries that run every time the app launches.\n\n###\n\n","completion":" ![ETL workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/400f8f21-5160-4b7f-891b-643f2ee52b29.webp) END"}
{"prompt":"Considerations\n\n###\n\n","completion":" This tutorial uses the following resources to demonstrate a real-world use case of Retool Workflows: END"}
{"prompt":"This tutorial uses the following resources to demonstrate a real-world use case of Retool Workflows:\n\n###\n\n","completion":" Much of what you'll learn can also apply to other resources and data. END"}
{"prompt":"Much of what you'll learn can also apply to other resources and data.\n\n###\n\n","completion":" You can [generate your own test API and sample data](https:\/\/retool.com\/api-generator) to try out Retool Workflows without using any data sources of your own. END"}
{"prompt":"1. Create a new workflow\n\n###\n\n","completion":" Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `ETL workflow`. END"}
{"prompt":"Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `ETL workflow`.\n\n###\n\n","completion":" ![Create a new workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9bffef71-4628-4016-b743-b3f18a5cc64b.webp) END"}
{"prompt":"2. Configure Start block\n\n###\n\n","completion":" The workflow initially contains two blocks: [Start](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#start-block) and [Resource query](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#resource-query). This workflow should run every day at 9:00 AM. END"}
{"prompt":"The workflow initially contains two blocks: [Start](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#start-block) and [Resource query](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#resource-query). This workflow should run every day at 9:00 AM.\n\n###\n\n","completion":" To configure a daily [schedule](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#schedule): END"}
{"prompt":"To configure a daily [schedule](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#schedule):\n\n###\n\n","completion":" ![Configure a schedule](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/cfc90db1-b46c-4e66-9b03-657d31af7ecb.webp) END"}
{"prompt":"![Configure a schedule](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/cfc90db1-b46c-4e66-9b03-657d31af7ecb.webp)\n\n###\n\n","completion":" The connecting lines between blocks in a workflow represent the [control flow](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#control-flow). Workflow blocks connect together to perform specific actions in sequential order, beginning with the Start block. Once a block has completed its action, it triggers the next block in the chain, and so on. END"}
{"prompt":"3. Retrieve Salesforce account data\n\n###\n\n","completion":" The first [Resource query](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#resource-query) block in this workflow retrieves all [Salesforce](https:\/\/docs.retool.com\/docs\/salesforce-integration) accounts with an account number, which excludes any test accounts from the resulting data set. END"}
{"prompt":"The first [Resource query](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#resource-query) block in this workflow retrieves all [Salesforce](https:\/\/docs.retool.com\/docs\/salesforce-integration) accounts with an account number, which excludes any test accounts from the resulting data set.\n\n###\n\n","completion":" Select your **Salesforce** resource and update the query with the following <<glossary:SOQL>> statement: END"}
{"prompt":"Select your **Salesforce** resource and update the query with the following <<glossary:SOQL>> statement:\n\n###\n\n","completion":" Click **▸** to run the query and rename the block to `getSfdcAccounts`. END"}
{"prompt":"Click **▸** to run the query and rename the block to `getSfdcAccounts`.\n\n###\n\n","completion":" ![Salesforce SOQL query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b87b98eb-2454-4677-aa8c-f661f2cc7ff7.webp) END"}
{"prompt":"4. Transform account records\n\n###\n\n","completion":" Now that the workflow has a list of accounts to start from, it can pass this data to a block and transform it further. Click and drag **⦿** to create a [connected Query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#add-and-connect-blocks) and set its name to `formatAccounts`. This also displays a label with the connected block's name. You can preview the data passed into the block by hovering the cursor over the label. END"}
{"prompt":"Now that the workflow has a list of accounts to start from, it can pass this data to a block and transform it further. Click and drag **⦿** to create a [connected Query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#add-and-connect-blocks) and set its name to `formatAccounts`. This also displays a label with the connected block's name. You can preview the data passed into the block by hovering the cursor over the label.\n\n###\n\n","completion":" You transform the array of account records using JavaScript so it conforms to the table schema of the PostgreSQL database. The transformation also removes the `attributes` field that Salesforce returned but which is not required. END"}
{"prompt":"You transform the array of account records using JavaScript so it conforms to the table schema of the PostgreSQL database. The transformation also removes the `attributes` field that Salesforce returned but which is not required.\n\n###\n\n","completion":" Select **Run JS Code** as the resource and then insert the following JavaScript: END"}
{"prompt":"Select **Run JS Code** as the resource and then insert the following JavaScript:\n\n###\n\n","completion":" ![Transform data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/af8a8e31-70bc-4b30-9c44-13a58fc77d50.webp) END"}
{"prompt":"5. Upsert account records into the database\n\n###\n\n","completion":" The `formatAccounts` Query block transforms the account records and returns account records to upsert into the PostgreSQL database. Click and drag ⦿ to create a connected Query block and select the write-enabled **postgresql** resource. You then construct a query in <<glossary:GUI mode>> for this use case: END"}
{"prompt":"The `formatAccounts` Query block transforms the account records and returns account records to upsert into the PostgreSQL database. Click and drag ⦿ to create a connected Query block and select the write-enabled **postgresql** resource. You then construct a query in <<glossary:GUI mode>> for this use case:\n\n###\n\n","completion":" ![Upsert data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/77bde1df-2e24-433e-9140-c74118c64832.webp) END"}
{"prompt":"![Upsert data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/77bde1df-2e24-433e-9140-c74118c64832.webp)\n\n###\n\n","completion":" An alternative method would be to use a [Loop](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#loop) block and iterate through each account to upsert them individually. In this case, transforming the data and performing a bulk upsert is more efficient as it reduces the number of database operations required. END"}
{"prompt":"6. Retrieve behavioral event data from Google Sheets\n\n###\n\n","completion":" In this use case, behavioral event data is being stored in [Google Sheets](https:\/\/docs.retool.com\/docs\/google-sheets-integration). Click and drag ⦿ to create a connected Query block and select the **Google Sheets** resource, then rename the block to `getEvents`. END"}
{"prompt":"In this use case, behavioral event data is being stored in [Google Sheets](https:\/\/docs.retool.com\/docs\/google-sheets-integration). Click and drag ⦿ to create a connected Query block and select the **Google Sheets** resource, then rename the block to `getEvents`.\n\n###\n\n","completion":" ![Query data from Google Sheets](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/30cd80eb-750e-4340-8019-705f4b98fe37.webp) END"}
{"prompt":"![Query data from Google Sheets](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/30cd80eb-750e-4340-8019-705f4b98fe37.webp)\n\n###\n\n","completion":" Click ▸ to run the query. END"}
{"prompt":"Click ▸ to run the query.\n\n###\n\n","completion":" Although the `getEvents` block is connected, it does not rely on the response from the `upsertAccounts` block. It is connected so that it only runs when the formatted account data is upserted to the database. The rest of the workflow requires the account data to be available first before continuing. END"}
{"prompt":"7. Aggregate event records and calculate metrics\n\n###\n\n","completion":" With account and behavioral event data now available, the next step in the workflow is to process events and aggregate them by account and date. Similar to the earlier transformation of account data, the resulting data must conform to a database table schema. END"}
{"prompt":"With account and behavioral event data now available, the next step in the workflow is to process events and aggregate them by account and date. Similar to the earlier transformation of account data, the resulting data must conform to a database table schema.\n\n###\n\n","completion":" Click and drag ⦿ to create a connected Query block named `aggregateLoop` and select the **Run JS Code** resource. The following JavaScript includes comments to describe each step in the process. END"}
{"prompt":"Click and drag ⦿ to create a connected Query block named `aggregateLoop` and select the **Run JS Code** resource. The following JavaScript includes comments to describe each step in the process.\n\n###\n\n","completion":" ![Expand code editor for more space](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/14a37f86-03b4-4d1f-b04e-2c02e6199e80.webp) END"}
{"prompt":"8. Check for any returned metric records\n\n###\n\n","completion":" The `{{ workflowContext }}` property contains information about the current workflow. The `aggregateLoop` block uses `workflowContext.lastSuccessfulRun.startedAtEpochMs` to filter out events triggered more than 24 hours ago, since this workflow is scheduled to run daily. If no events were received during this time, no results are returned. END"}
{"prompt":"The `{{ workflowContext }}` property contains information about the current workflow. The `aggregateLoop` block uses `workflowContext.lastSuccessfulRun.startedAtEpochMs` to filter out events triggered more than 24 hours ago, since this workflow is scheduled to run daily. If no events were received during this time, no results are returned.\n\n###\n\n","completion":" This workflow uses the [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#branchs) block to check if any metric records were returned. Branch blocks enable you to visually construct `if...else` statements that evaluate data and perform conditional actions. If the condition evaluates as a <<glossary:truthy value>>, it triggers the block to which it's connected. If not, it triggers another block. END"}
{"prompt":"This workflow uses the [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#branchs) block to check if any metric records were returned. Branch blocks enable you to visually construct `if...else` statements that evaluate data and perform conditional actions. If the condition evaluates as a <<glossary:truthy value>>, it triggers the block to which it's connected. If not, it triggers another block.\n\n###\n\n","completion":" Click and drag ⦿ to create a new Branch block and set the **If** condition to `aggregateLoop.data.length > 0`. If the number of items in `aggregateLoop.data` is greater than zero, this evaluates as `true`. END"}
{"prompt":"Click and drag ⦿ to create a new Branch block and set the **If** condition to `aggregateLoop.data.length > 0`. If the number of items in `aggregateLoop.data` is greater than zero, this evaluates as `true`.\n\n###\n\n","completion":" ![Perform conditional action with a Branch block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/30afa2b0-25f3-4d3f-bbbc-cde11b703906.webp) END"}
{"prompt":"![Perform conditional action with a Branch block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/30afa2b0-25f3-4d3f-bbbc-cde11b703906.webp)\n\n###\n\n","completion":" Click ▸ to run the code. As you test your workflow, the condition that evaluates as `true` highlights in green. END"}
{"prompt":"9. Upsert metric records\n\n###\n\n","completion":" The final step is to upsert the aggregated metric records into the PostgreSQL database. Click and drag ⦿ to create a connected Query block named `insertMetrics`, then select the write-enabled **postgresql** resource. END"}
{"prompt":"The final step is to upsert the aggregated metric records into the PostgreSQL database. Click and drag ⦿ to create a connected Query block named `insertMetrics`, then select the write-enabled **postgresql** resource.\n\n###\n\n","completion":" ![Upsert metrics records](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/461790c4-0ecc-41fe-8bd5-73e047d77379.webp) END"}
{"prompt":"10. Test and enable the workflow\n\n###\n\n","completion":" Now that the workflow is complete, manually run the workflow by clicking **Run** on the right of the Workflow editor toolbar. END"}
{"prompt":"Now that the workflow is complete, manually run the workflow by clicking **Run** on the right of the Workflow editor toolbar.\n\n###\n\n","completion":" Workflows are not triggered automatically by default. After verifying that the workflow runs as expected, toggle **Enable**. This activates the **Start** block's trigger so that it runs on its configured schedule automatically. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Using Retool Workflows, you have now fully automated a complex ETL task that interacts with multiple database tables, transforms data, and aggregates the results. END"}
{"prompt":"Using Retool Workflows, you have now fully automated a complex ETL task that interacts with multiple database tables, transforms data, and aggregates the results.\n\n###\n\n","completion":" By applying the lessons learned here and following the same patterns, you can extend the workflow's functionality further, such as sending conditional notifications or using integrations like Slack. END"}
{"prompt":"title: \"Automate incident notifications with Retool Workflows\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to log incidents in Linear and PagerDuty, assign them to on-call engineers, and notify account managers on Slack.\"\nhidden: false\n\n###\n\n","completion":" [Retool Workflows](https:\/\/retool.com\/products\/workflows) enables you to build complex automations that interact with your data sources. END"}
{"prompt":"Use case\n\n###\n\n","completion":" A common use case for Retool Workflows is to automatically alert on-call engineers and customer account managers if an incident occurs that is affecting customers, such as a service outage or downtime. END"}
{"prompt":"A common use case for Retool Workflows is to automatically alert on-call engineers and customer account managers if an incident occurs that is affecting customers, such as a service outage or downtime.\n\n###\n\n","completion":" This tutorial explains how to build a notification workflow that: END"}
{"prompt":"This tutorial explains how to build a notification workflow that:\n\n###\n\n","completion":" ![Incident alert workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/2c585e43-0f84-402a-a347-6217ef829785.webp) END"}
{"prompt":"1. Create a new workflow\n\n###\n\n","completion":" Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `Incident alert workflow`. END"}
{"prompt":"Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `Incident alert workflow`.\n\n###\n\n","completion":" ![Create a new workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9bffef71-4628-4016-b743-b3f18a5cc64b.webp) END"}
{"prompt":"2. Configure the webhook trigger\n\n###\n\n","completion":" Every workflow contains a [Start block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#start-block) that contains **Trigger** settings for you to configure. Whenever these trigger conditions are met, the Start block triggers the workflow to run automatically. END"}
{"prompt":"Every workflow contains a [Start block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#start-block) that contains **Trigger** settings for you to configure. Whenever these trigger conditions are met, the Start block triggers the workflow to run automatically.\n\n###\n\n","completion":" For this use case, the workflow must run in response to a [webhook event](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#webhook) that Intercom sends whenever an incident occurs. Every workflow has a unique webhook endpoint URL that can receive webhook events from other services. You can also configure the webhook trigger to parse specific parameters from the received JSON payload. END"}
{"prompt":"For this use case, the workflow must run in response to a [webhook event](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#webhook) that Intercom sends whenever an incident occurs. Every workflow has a unique webhook endpoint URL that can receive webhook events from other services. You can also configure the webhook trigger to parse specific parameters from the received JSON payload.\n\n###\n\n","completion":" To configure a webhook trigger for this workflow: END"}
{"prompt":"To configure a webhook trigger for this workflow:\n\n###\n\n","completion":" ![Webhook trigger](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9234ce8e-d4ea-4302-9a4c-d8763a78283b.webp) END"}
{"prompt":"![Webhook trigger](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9234ce8e-d4ea-4302-9a4c-d8763a78283b.webp)\n\n###\n\n","completion":" The connecting lines between blocks in a workflow represent the [control flow](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#control-flow). Workflow blocks connect together to perform specific actions in sequential order, beginning with the Start block. Once a block has completed its action, it triggers the next block in the chain, and so on. END"}
{"prompt":"3. Check if an incident is urgent\n\n###\n\n","completion":" If the severity of an incident is urgent, the workflow must notify the relevant on-call engineer and the customer's account manager. END"}
{"prompt":"If the severity of an incident is urgent, the workflow must notify the relevant on-call engineer and the customer's account manager.\n\n###\n\n","completion":" The [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#branchs) block enables you to visually construct `if...else` statements that evaluate data and perform conditional actions. If the condition evaluates as a <<glossary:truthy value>>, it triggers the block to which it's connected. If not, it triggers another block. END"}
{"prompt":"The [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#branchs) block enables you to visually construct `if...else` statements that evaluate data and perform conditional actions. If the condition evaluates as a <<glossary:truthy value>>, it triggers the block to which it's connected. If not, it triggers another block.\n\n###\n\n","completion":" Click **+** in the toolbar, add a **Branch** block named `checkSeverity`, and set the **If** condition to `startTrigger.value.severity == \"urgent\"`. If the received `severity` parameter has a value of `urgent` , this evaluates as `true`. END"}
{"prompt":"Click **+** in the toolbar, add a **Branch** block named `checkSeverity`, and set the **If** condition to `startTrigger.value.severity == \"urgent\"`. If the received `severity` parameter has a value of `urgent` , this evaluates as `true`.\n\n###\n\n","completion":" ![Branch block to check severity level](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a2b21c39-0b21-4d0d-ab29-3ed9bcbc5ef9.webp) END"}
{"prompt":"![Branch block to check severity level](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a2b21c39-0b21-4d0d-ab29-3ed9bcbc5ef9.webp)\n\n###\n\n","completion":" Click ▸ to run the code. As you test your workflow, the condition that evaluates as `true` highlights in green. END"}
{"prompt":"4. Build functions to perform required actions\n\n###\n\n","completion":" The workflow needs to perform the same set of actions for incidents of any severity. But in the case of urgent incidents, it should also log the incident in PagerDuty. END"}
{"prompt":"The workflow needs to perform the same set of actions for incidents of any severity. But in the case of urgent incidents, it should also log the incident in PagerDuty.\n\n###\n\n","completion":" Instead of building out two conditional flows that repeat the same set of actions, the workflow uses [Function](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#functions) blocks. These reusable blocks operate outside of the workflow control flow and can be called at any time. Functions also accept parameters which other blocks can provide. END"}
{"prompt":"Instead of building out two conditional flows that repeat the same set of actions, the workflow uses [Function](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#functions) blocks. These reusable blocks operate outside of the workflow control flow and can be called at any time. Functions also accept parameters which other blocks can provide.\n\n###\n\n","completion":" This workflow uses Function blocks to: END"}
{"prompt":"This workflow uses Function blocks to:\n\n###\n\n","completion":" After creating the Function blocks, each condition of the Branch block triggers custom JavaScript code that calls the required Functions to perform the necessary actions. As a result, the workflow only needs one Function block to create a Linear ticket instead of two Query blocks for each condition. END"}
{"prompt":"Identify the on-call engineer in PagerDuty\n\n###\n\n","completion":" The workflow needs to identify who is on-call for a particular product area. For this use case, on-call information is available in [PagerDuty](https:\/\/www.pagerduty.com\/), the incident handling and response platform. END"}
{"prompt":"The workflow needs to identify who is on-call for a particular product area. For this use case, on-call information is available in [PagerDuty](https:\/\/www.pagerduty.com\/), the incident handling and response platform.\n\n###\n\n","completion":" When run, this request needs to include a schedule ID that corresponds to a particular product area. END"}
{"prompt":"When run, this request needs to include a schedule ID that corresponds to a particular product area.\n\n###\n\n","completion":" To add a Function block: END"}
{"prompt":"To add a Function block:\n\n###\n\n","completion":" Function block parameters can include an initial value so that the block can still run if no parameter values are provided. Set the value for `schedule` to any valid PagerDuty schedule. END"}
{"prompt":"Function block parameters can include an initial value so that the block can still run if no parameter values are provided. Set the value for `schedule` to any valid PagerDuty schedule.\n\n###\n\n","completion":" Next, set the request type to **GET** and the **URL** to: END"}
{"prompt":"Next, set the request type to **GET** and the **URL** to:\n\n###\n\n","completion":" ![Identify the on-call engineer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/4db6cda0-ade8-44e6-8d5b-b7244541dbdc.webp) END"}
{"prompt":"![Identify the on-call engineer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/4db6cda0-ade8-44e6-8d5b-b7244541dbdc.webp)\n\n###\n\n","completion":" This GET request returns the on-call engineer for the specified product area by including `{{ schedule }}`. It also filters the result to include only the engineer who has been on-call in the last minute, ensuring it only returns the current on-call engineer. END"}
{"prompt":"Create an incident in PagerDuty\n\n###\n\n","completion":" If the incident is urgent, the workflow must also create an incident in PagerDuty. Create a function named `triggerPagerDutyIncident` with two parameters: `incidentCreator` and `incident`. This is used to identify who created the incident and pass details about it. END"}
{"prompt":"If the incident is urgent, the workflow must also create an incident in PagerDuty. Create a function named `triggerPagerDutyIncident` with two parameters: `incidentCreator` and `incident`. This is used to identify who created the incident and pass details about it.\n\n###\n\n","completion":" To [create a PagerDuty incident](https:\/\/developer.pagerduty.com\/api-reference\/a7d81b0e9200f-create-an-incident), the workflow must make a `POST` request to the `\/incidents` endpoint. It must include additional request headers and a JSON body. END"}
{"prompt":"To [create a PagerDuty incident](https:\/\/developer.pagerduty.com\/api-reference\/a7d81b0e9200f-create-an-incident), the workflow must make a `POST` request to the `\/incidents` endpoint. It must include additional request headers and a JSON body.\n\n###\n\n","completion":" First, set the request type to **POST** and the **URL** to `https:\/\/api.pagerduty.com\/incidents`. END"}
{"prompt":"First, set the request type to **POST** and the **URL** to `https:\/\/api.pagerduty.com\/incidents`.\n\n###\n\n","completion":" Next, define the following request headers in the **Headers** section: END"}
{"prompt":"Next, define the following request headers in the **Headers** section:\n\n###\n\n","completion":" Finally, set the **Body** to **JSON** and set an `incident` parameter name to `{{ incident }}`. END"}
{"prompt":"Finally, set the **Body** to **JSON** and set an `incident` parameter name to `{{ incident }}`.\n\n###\n\n","completion":" ![Trigger a PagerDuty incident](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/1d908a1a-ef2b-43d5-b61e-cf503f3f1396.webp) END"}
{"prompt":"Create a ticket in Linear\n\n###\n\n","completion":" The workflow must create a Linear ticket for all incidents, regardless of severity, to track progress. This requires two Function blocks that use the [Linear](https:\/\/docs.retool.com\/docs\/linear-integration) integration to interact with Linear's API using GraphQL: END"}
{"prompt":"Look up the user ID\n\n###\n\n","completion":" First, create a function named `getOnCallLinearUser`, define an `email` parameter, and select the Linear GraphQL resource. Insert the following GraphQL query to look up a user by their email address: END"}
{"prompt":"First, create a function named `getOnCallLinearUser`, define an `email` parameter, and select the Linear GraphQL resource. Insert the following GraphQL query to look up a user by their email address:\n\n###\n\n","completion":" When run, this query looks up the user ID of the on-call engineer using their email address. END"}
{"prompt":"When run, this query looks up the user ID of the on-call engineer using their email address.\n\n###\n\n","completion":" ![Get user ID of on-call engineer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/532f990b-f2b7-4c42-ad72-7645c74268f9.webp) END"}
{"prompt":"Create and assign a ticket\n\n###\n\n","completion":" To create a Linear ticket and assign it to a user, the GraphQL request must include the parameters: END"}
{"prompt":"To create a Linear ticket and assign it to a user, the GraphQL request must include the parameters:\n\n###\n\n","completion":" Create a function named `createLinearTicket` that uses the Linear resource and set two parameters: `linearTitle` and `linearAssigneeId`. The values for these parameters are passed when the function is called. The remaining values are written in the query itself. END"}
{"prompt":"Create a function named `createLinearTicket` that uses the Linear resource and set two parameters: `linearTitle` and `linearAssigneeId`. The values for these parameters are passed when the function is called. The remaining values are written in the query itself.\n\n###\n\n","completion":" Insert the following GraphQL query to create a ticket: END"}
{"prompt":"Insert the following GraphQL query to create a ticket:\n\n###\n\n","completion":" ![GraphQL query to create a ticket in Linear](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/7cca8067-01e6-430f-889b-ef3787ca7efc.webp) END"}
{"prompt":"Notify the account manager on Slack\n\n###\n\n","completion":" When an incident occurs, the workflow must also notify the customer's account manager. For this use case, the workflow must first get some customer details from Salesforce so it can determine which account manager to notify. END"}
{"prompt":"Look up customer ID in Salesforce\n\n###\n\n","completion":" First, create a function named `getSalesforceOwnerId` that uses the Salesforce resource and define the `customer` parameter. This function looks up the owner ID of the customer's account. END"}
{"prompt":"Look up account owner in Salesforce\n\n###\n\n","completion":" Next, create another function named `getSalesforceOwner` that uses the Salesforce resource and define the `ownerId` parameter. This function looks up the required details using the owner ID from the previous function. END"}
{"prompt":"Send a Slack notification\n\n###\n\n","completion":" For this use case, the workflow must send a Slack notification and @mention the account manager. As with Linear and Salesforce, the workflow needs to look up the account manager's Slack ID. END"}
{"prompt":"Look up Slack user by email address\n\n###\n\n","completion":" First, create a Function block named `getSlackId` and define the `email` parameter. Retool's built-in [Slack integration](https:\/\/docs.retool.com\/docs\/slack-integration) enables you to send messages only. To look up user information or perform non-messaging actions with Slack, you must use [Slack's REST API](https:\/\/api.slack.com\/). To do this, you must first set up the Slack API as a resource on your Retool instance. END"}
{"prompt":"First, create a Function block named `getSlackId` and define the `email` parameter. Retool's built-in [Slack integration](https:\/\/docs.retool.com\/docs\/slack-integration) enables you to send messages only. To look up user information or perform non-messaging actions with Slack, you must use [Slack's REST API](https:\/\/api.slack.com\/). To do this, you must first set up the Slack API as a resource on your Retool instance.\n\n###\n\n","completion":" Once configured, you can perform a **GET** request to look up a user by email with the URL `https:\/\/slack.com\/api\/users.lookupByEmail?email={{email}}`. END"}
{"prompt":"Once configured, you can perform a **GET** request to look up a user by email with the URL `https:\/\/slack.com\/api\/users.lookupByEmail?email={{email}}`.\n\n###\n\n","completion":" ![Get Slack ID of on-call engineer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/4c68e5cd-7206-4d90-b91a-c76fe19c80e2.webp) END"}
{"prompt":"Send notification\n\n###\n\n","completion":" Next, create another Function block named `sendSlack` that uses the Slack resource and define the `message` parameter. The message itself will be defined in the next step. END"}
{"prompt":"Next, create another Function block named `sendSlack` that uses the Slack resource and define the `message` parameter. The message itself will be defined in the next step.\n\n###\n\n","completion":" ![Send Slack message](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b9525b81-addd-45e5-84e3-82bb9ec58e2c.webp) END"}
{"prompt":"8. Write JavaScript to trigger functions\n\n###\n\n","completion":" This workflow now contains functions that can trigger all required actions in response to an incident. The last step is to write custom JavaScript to trigger these Function blocks accordingly. END"}
{"prompt":"This workflow now contains functions that can trigger all required actions in response to an incident. The last step is to write custom JavaScript to trigger these Function blocks accordingly.\n\n###\n\n","completion":" First, click and drag **⦿** from the Branch block's **If** condition to create a connected Query block, set its name to `alertUrgent`, and select the **Run JS Code** resource. END"}
{"prompt":"First, click and drag **⦿** from the Branch block's **If** condition to create a connected Query block, set its name to `alertUrgent`, and select the **Run JS Code** resource.\n\n###\n\n","completion":" Next, add an **Else** condition to the Branch block. Click and drag **⦿** from this condition to create another connected Query block, set its name to `alert`, and select the **Run JS Code** resource. END"}
{"prompt":"Next, add an **Else** condition to the Branch block. Click and drag **⦿** from this condition to create another connected Query block, set its name to `alert`, and select the **Run JS Code** resource.\n\n###\n\n","completion":" Both Query blocks uses JavaScript to perform a number of actions depending on the severity. The table below lists all possible workflow actions and whether they run if an incident is urgent or not. END"}
{"prompt":"Both Query blocks uses JavaScript to perform a number of actions depending on the severity. The table below lists all possible workflow actions and whether they run if an incident is urgent or not.\n\n###\n\n","completion":" Use the following JavaScript in the respective Query blocks. Refer to the comments for more details on what occurs during each step in the process. END"}
{"prompt":"Use the following JavaScript in the respective Query blocks. Refer to the comments for more details on what occurs during each step in the process.\n\n###\n\n","completion":" ![Query blocks with custom JavaScript](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/1885dfe2-cd97-440f-b976-db3f8e167bfe.webp) END"}
{"prompt":"9. Test and enable the workflow\n\n###\n\n","completion":" Now that the workflow is complete, manually run the workflow by clicking **Run** on the right of the Workflow editor toolbar. You can also test the workflow's webhook trigger using [cURL](https:\/\/curl.se\/). Click **Copy** to copy the full command and then run it from a CLI. END"}
{"prompt":"Now that the workflow is complete, manually run the workflow by clicking **Run** on the right of the Workflow editor toolbar. You can also test the workflow's webhook trigger using [cURL](https:\/\/curl.se\/). Click **Copy** to copy the full command and then run it from a CLI.\n\n###\n\n","completion":" Workflows are not triggered automatically by default. After verifying that the workflow runs as expected, toggle **Enable**. This activates the **Start** block's trigger so that it runs in response to webhook events. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Using Retool Workflows, you have now built an autonomous incident alert tool. By applying the lessons learned here and following the same patterns, you can extend the workflow's functionality further, such as sending conditional notifications. END"}
{"prompt":"title: \"Automate metrics reporting with Retool Workflows\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to retrieve sales goal and target data from Salesforce and PostgreSQL, transform the data into a report using JavaScript, and send as an email report.\"\nhidden: false\n\n###\n\n","completion":" [Retool Workflows](https:\/\/retool.com\/products\/workflows) enables you to build complex automations that interact with your data sources. END"}
{"prompt":"Use case\n\n###\n\n","completion":" A common use case for Retool Workflows is to automatically compile metrics and generate reports by aggregating data from various sources. END"}
{"prompt":"A common use case for Retool Workflows is to automatically compile metrics and generate reports by aggregating data from various sources.\n\n###\n\n","completion":" This tutorial explains how to build a daily reporting workflow that: END"}
{"prompt":"This tutorial explains how to build a daily reporting workflow that:\n\n###\n\n","completion":" ![Metrics reporting workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/539bcc96-882e-4408-8444-4ea758591dcc.webp) END"}
{"prompt":"1. Create a new workflow\n\n###\n\n","completion":" Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `Metrics workflow`. END"}
{"prompt":"Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `Metrics workflow`.\n\n###\n\n","completion":" ![Create a new workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9bffef71-4628-4016-b743-b3f18a5cc64b.webp) END"}
{"prompt":"3. Retrieve Salesforce opportunities data\n\n###\n\n","completion":" The first query in this workflow retrieves data for all Salesforce opportunities that closed this year. This includes each opportunity's ID, name, close date, and amount. END"}
{"prompt":"The first query in this workflow retrieves data for all Salesforce opportunities that closed this year. This includes each opportunity's ID, name, close date, and amount.\n\n###\n\n","completion":" Select your **Salesforce** resource and update the query with the following <<glossary:SOQL>> statement: END"}
{"prompt":"Select your **Salesforce** resource and update the query with the following <<glossary:SOQL>> statement:\n\n###\n\n","completion":" Click **▸** to run the query and rename the block to `recentDealsClosed`. END"}
{"prompt":"4. Retrieve Salesforce revenue data\n\n###\n\n","completion":" This workflow needs to retrieve additional data from Salesforce: END"}
{"prompt":"This workflow needs to retrieve additional data from Salesforce:\n\n###\n\n","completion":" Rather than create Query blocks that run sequentially as part of the control flow, you can connect multiple blocks in parallel so they run at the same time. END"}
{"prompt":"Rather than create Query blocks that run sequentially as part of the control flow, you can connect multiple blocks in parallel so they run at the same time.\n\n###\n\n","completion":" Click and drag **⦿** to create a [connected Query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#add-and-connect-blocks), set its name to `RevenueSinceMonthStart`, and select the Salesforce resource. Repeat this process for each of the required queries and insert the following SOQL statements: END"}
{"prompt":"Click and drag **⦿** to create a [connected Query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#add-and-connect-blocks), set its name to `RevenueSinceMonthStart`, and select the Salesforce resource. Repeat this process for each of the required queries and insert the following SOQL statements:\n\n###\n\n","completion":" ![Salesforce SOQL queries](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a9eb3c84-1384-4cb3-8a89-1c7db3e12581.webp) END"}
{"prompt":"5. Retrieve goals data\n\n###\n\n","completion":" In this use case, a PostgreSQL database contains revenue goals information. This can also be retrieved in parallel. Add another connected Query block, select the PostgreSQL resource, and write a query to retrieve table data: END"}
{"prompt":"In this use case, a PostgreSQL database contains revenue goals information. This can also be retrieved in parallel. Add another connected Query block, select the PostgreSQL resource, and write a query to retrieve table data:\n\n###\n\n","completion":" Change the name of the block to `MonthlyGoals`. END"}
{"prompt":"Change the name of the block to `MonthlyGoals`.\n\n###\n\n","completion":" ![Query for goals](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/c0e27e9c-01a8-4571-984c-e2bae9abd223.webp) END"}
{"prompt":"6. Format email reports\n\n###\n\n","completion":" This workflow sends two email reports: END"}
{"prompt":"This workflow sends two email reports:\n\n###\n\n","completion":" The workflow must first format the reports in HTML before sending them as an email. END"}
{"prompt":"Recently closed deals\n\n###\n\n","completion":" The workflow iterates through the array of records from the `recentDealsClosed` block and construct the required HTML markup. To achieve this, you use a Loop block. END"}
{"prompt":"The workflow iterates through the array of records from the `recentDealsClosed` block and construct the required HTML markup. To achieve this, you use a Loop block.\n\n###\n\n","completion":" A [Loop](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#loop) block iterates through an array of items and triggers a Query block for each evaluated item. This is useful for automating repetitive actions or performing complex logic. Click and drag **⦿** from the `recentDealsClosed` block to create a connected Loop block and set its name to `formatClosedDeals`. END"}
{"prompt":"A [Loop](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#loop) block iterates through an array of items and triggers a Query block for each evaluated item. This is useful for automating repetitive actions or performing complex logic. Click and drag **⦿** from the `recentDealsClosed` block to create a connected Loop block and set its name to `formatClosedDeals`.\n\n###\n\n","completion":" The Query block has access to the `value` and `index` variables, which reflect the value of the array item and its index. For this use case, the Query block needs to format number values into currency-formatted amounts and include the required HTML markup for table rows and cells. END"}
{"prompt":"The Query block has access to the `value` and `index` variables, which reflect the value of the array item and its index. For this use case, the Query block needs to format number values into currency-formatted amounts and include the required HTML markup for table rows and cells.\n\n###\n\n","completion":" ![Format the message](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/2012586d-0bdd-48ca-b00f-0211780cc1d8.webp) END"}
{"prompt":"![Format the message](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/2012586d-0bdd-48ca-b00f-0211780cc1d8.webp)\n\n###\n\n","completion":" Loop blocks evaluate each array item individually. As a result, the Loop block produces an array of strings, each of which is an HTML-formatted table row. You combine these in a subsequent Query block using `join()`. END"}
{"prompt":"Loop blocks evaluate each array item individually. As a result, the Loop block produces an array of strings, each of which is an HTML-formatted table row. You combine these in a subsequent Query block using `join()`.\n\n###\n\n","completion":" Click and drag **⦿** from the `formatClosedDeals` block to create a connected Loop block, set its name to `joinClosedDeals`, and select the **Run JS Code** resource. Insert the following JavaScript to join the array items into a single string: END"}
{"prompt":"Overall business metrics\n\n###\n\n","completion":" The report for overall business metrics is formatted in much the same way. The difference between these reports is that this one combines data from the `totalSalesRevenue` and `currentBusinessCasePipeline` blocks. END"}
{"prompt":"The report for overall business metrics is formatted in much the same way. The difference between these reports is that this one combines data from the `totalSalesRevenue` and `currentBusinessCasePipeline` blocks.\n\n###\n\n","completion":" Click **+** in the toolbar, add a Query block named `businessMetricsFormat`, and select the **Run JS Code** resource. END"}
{"prompt":"Click **+** in the toolbar, add a Query block named `businessMetricsFormat`, and select the **Run JS Code** resource.\n\n###\n\n","completion":" Insert the following JavaScript to construct the HTML-formatted markup to send in an email: END"}
{"prompt":"Insert the following JavaScript to construct the HTML-formatted markup to send in an email:\n\n###\n\n","completion":" This block was initially unconnected. When adding references `RevenueSinceMonthStart.data`, `TotalSalesRevenue.data`, and `CurrentBusinessCasePipeline.data`, Retool Workflows automatically creates the block connections. END"}
{"prompt":"This block was initially unconnected. When adding references `RevenueSinceMonthStart.data`, `TotalSalesRevenue.data`, and `CurrentBusinessCasePipeline.data`, Retool Workflows automatically creates the block connections.\n\n###\n\n","completion":" ![Business metrics formatting](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/c2a7158d-15ca-41da-acd7-d2a1a9f6f5f2.webp) END"}
{"prompt":"7. Send email report\n\n###\n\n","completion":" Now that the workflow generates HTML-formatted email reports, add a Query block named `sendEmail` and select the **SMTP** resource. Specify the **From email**, **To email(s)**, and **Subject**. END"}
{"prompt":"Now that the workflow generates HTML-formatted email reports, add a Query block named `sendEmail` and select the **SMTP** resource. Specify the **From email**, **To email(s)**, and **Subject**.\n\n###\n\n","completion":" Insert additional HTML markup within the **Body** content to define the email's title and table, then include the output of `joinClosedDeals` and `businessMetricsFormat`: END"}
{"prompt":"Insert additional HTML markup within the **Body** content to define the email's title and table, then include the output of `joinClosedDeals` and `businessMetricsFormat`:\n\n###\n\n","completion":" ![SMTP query to send the report](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/594fdefa-cbd7-4cfb-90c5-91d06afde3f3.webp) END"}
{"prompt":"![SMTP query to send the report](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/594fdefa-cbd7-4cfb-90c5-91d06afde3f3.webp)\n\n###\n\n","completion":" The completed HTML formatting results in an email containing two sections: END"}
{"prompt":"8. Send Slack notifications for missed targets\n\n###\n\n","completion":" If current revenue is below the target for the month, the workflow needs to escalate this by sending a Slack notification. END"}
{"prompt":"If current revenue is below the target for the month, the workflow needs to escalate this by sending a Slack notification.\n\n###\n\n","completion":" The [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#branchs) block enables you to visually construct `if...else` statements that evaluate data and perform conditional actions. If the condition evaluates as a <<glossary:truthy value>>, it triggers the block to which it's connected. If not, it triggers another block. END"}
{"prompt":"The [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#branchs) block enables you to visually construct `if...else` statements that evaluate data and perform conditional actions. If the condition evaluates as a <<glossary:truthy value>>, it triggers the block to which it's connected. If not, it triggers another block.\n\n###\n\n","completion":" Click **+** in the toolbar, add a Branch block named `checkMonthGoal`, and set the **If** condition to `RevenueSinceMonthStart.data['0'].expr0 < CurrentMonthGoal.data`. If monthly revenue is below the current target, it evaluates as `true`. END"}
{"prompt":"Click **+** in the toolbar, add a Branch block named `checkMonthGoal`, and set the **If** condition to `RevenueSinceMonthStart.data['0'].expr0 < CurrentMonthGoal.data`. If monthly revenue is below the current target, it evaluates as `true`.\n\n###\n\n","completion":" ![Branch block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/fb50beaf-be6c-4567-8b7c-55b2da35ebad.webp) END"}
{"prompt":"![Branch block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/fb50beaf-be6c-4567-8b7c-55b2da35ebad.webp)\n\n###\n\n","completion":" Click ▸ to run the code. As you test your workflow, the condition that evaluates as `true` highlights in green. END"}
{"prompt":"Click ▸ to run the code. As you test your workflow, the condition that evaluates as `true` highlights in green.\n\n###\n\n","completion":" To send a notification, click and drag **⦿** from the Branch block's **If** condition to create a connected Query block. Set its name to `updateSlack`, select the Slack resource, and enter a message to send. END"}
{"prompt":"To send a notification, click and drag **⦿** from the Branch block's **If** condition to create a connected Query block. Set its name to `updateSlack`, select the Slack resource, and enter a message to send.\n\n###\n\n","completion":" ![Send slack message](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/ebca62d3-ad25-495c-a0c7-9c873b04778f.webp) END"}
{"prompt":"9. Test and enable the workflow\n\n###\n\n","completion":" Now that the workflow is complete, manually run the workflow by clicking **Run** on the right of the Workflow editor toolbar. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Using Retool Workflows, you have now fully automated a metrics reporting job that interacts with multiple resources, transforms data, and performs conditional actions. END"}
{"prompt":"Using Retool Workflows, you have now fully automated a metrics reporting job that interacts with multiple resources, transforms data, and performs conditional actions.\n\n###\n\n","completion":" By applying the lessons learned here and following the same patterns, you can extend the workflow's functionality further. END"}
{"prompt":"title: \"Automate trial expiration offers with Retool Workflows\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to retrieve subscription data from PostgreSQL, look up company information using Clearbit, then send special offers to customers.\"\nhidden: false\n\n###\n\n","completion":" [Retool Workflows](https:\/\/retool.com\/products\/workflows) enables you to build complex automations that interact with your data sources. END"}
{"prompt":"Use case\n\n###\n\n","completion":" A common use case for Retool Workflows is to automate ETL (extract, transform, and load) tasks that transform and process data. Retool apps can directly interact with data from a variety of sources but it's much more efficient to automate ETL tasks than perform them in a frontend application. END"}
{"prompt":"A common use case for Retool Workflows is to automate ETL (extract, transform, and load) tasks that transform and process data. Retool apps can directly interact with data from a variety of sources but it's much more efficient to automate ETL tasks than perform them in a frontend application.\n\n###\n\n","completion":" This tutorial explains how to build a daily ETL and notification workflow that: END"}
{"prompt":"This tutorial explains how to build a daily ETL and notification workflow that:\n\n###\n\n","completion":" ![Automate trial expiration offers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/56f8c0e7-2f7d-4c79-baf2-f41bb0e706a8.webp) END"}
{"prompt":"1. Create a new workflow\n\n###\n\n","completion":" Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `Trials Expiring Automation`. END"}
{"prompt":"Sign in to Retool, select the **Workflows** tab in the navigation bar, then click **Create new**. Set the name to `Trials Expiring Automation`.\n\n###\n\n","completion":" ![Create a new workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9bffef71-4628-4016-b743-b3f18a5cc64b.webp) END"}
{"prompt":"3. Look up customers with trials\n\n###\n\n","completion":" The first query in this workflow performs a GET request to a REST API that retrieves a list of customers who are currently signed up to a trial. The **RESTQuery** resource allows you to query an API without first configuring it as a resource. END"}
{"prompt":"The first query in this workflow performs a GET request to a REST API that retrieves a list of customers who are currently signed up to a trial. The **RESTQuery** resource allows you to query an API without first configuring it as a resource.\n\n###\n\n","completion":" When run, this query retrieves a list of customer email addresses with trials expiration dates. Click **▸** to save changes and run the query. Finally, rename the query to `getUsers`. END"}
{"prompt":"When run, this query retrieves a list of customer email addresses with trials expiration dates. Click **▸** to save changes and run the query. Finally, rename the query to `getUsers`.\n\n###\n\n","completion":" ![Retrieve a list of users with expiring trials](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/2ef343cd-2577-43e0-9187-a1cfc352e797.webp) END"}
{"prompt":"3. Filter trial expiration and customer email address data\n\n###\n\n","completion":" The data must be filtered to exclude trials that do not expire today and to exclude any personal email addresses. This is done using a [Filter](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#filter) block. END"}
{"prompt":"The data must be filtered to exclude trials that do not expire today and to exclude any personal email addresses. This is done using a [Filter](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#filter) block.\n\n###\n\n","completion":" Click and drag **⦿** to create a [connected block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#connect-blocks-together), and select **Filter**. You can also click **+** in the workflow editor toolbar to add a Filter block, then click and drag **⦿** from one block to another. END"}
{"prompt":"Click and drag **⦿** to create a [connected block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#connect-blocks-together), and select **Filter**. You can also click **+** in the workflow editor toolbar to add a Filter block, then click and drag **⦿** from one block to another.\n\n###\n\n","completion":" Filter blocks allow you to filter data using JavaScript expressions. You can also chain together expressions to create advanced filtering logic. The block loops through each item and returns only data that evaluates as `true`. END"}
{"prompt":"Filter blocks allow you to filter data using JavaScript expressions. You can also chain together expressions to create advanced filtering logic. The block loops through each item and returns only data that evaluates as `true`.\n\n###\n\n","completion":" With this block, you can exclude some common email provider domains and also check if a customer's trial is due to expire. The following JavaScript excludes email addresses from `gmail.com`, `hotmail.com`, and `yahoo.com`, and also checks if `trial_expiry_date` is within the next 24 hours. END"}
{"prompt":"With this block, you can exclude some common email provider domains and also check if a customer's trial is due to expire. The following JavaScript excludes email addresses from `gmail.com`, `hotmail.com`, and `yahoo.com`, and also checks if `trial_expiry_date` is within the next 24 hours.\n\n###\n\n","completion":" Click **▸** to run the query. Finally, rename the query to `filterUsers`. END"}
{"prompt":"Click **▸** to run the query. Finally, rename the query to `filterUsers`.\n\n###\n\n","completion":" ![Filter email addresses](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/dac0753d-4777-4dea-a3ef-65ef6a81a68f.webp) END"}
{"prompt":"4. Look up company size\n\n###\n\n","completion":" Now that you have a list of work email addresses, the workflow can perform an API request with each one to get the company size from [Clearbit](https:\/\/clearbit.com). First, click and drag ⦿ to create a Query block, then select **Loop**. END"}
{"prompt":"Now that you have a list of work email addresses, the workflow can perform an API request with each one to get the company size from [Clearbit](https:\/\/clearbit.com). First, click and drag ⦿ to create a Query block, then select **Loop**.\n\n###\n\n","completion":" A [Loop](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#loop) block automatically iterates through each record in an array of data. As the block loops, it outputs values for `value` and `index`. This loop needs to process each email address and make a GET request to Clearbit’s [Person API](https:\/\/dashboard.clearbit.com\/docs#enrichment-api-person-api-email-lookup). END"}
{"prompt":"A [Loop](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#loop) block automatically iterates through each record in an array of data. As the block loops, it outputs values for `value` and `index`. This loop needs to process each email address and make a GET request to Clearbit’s [Person API](https:\/\/dashboard.clearbit.com\/docs#enrichment-api-person-api-email-lookup).\n\n###\n\n","completion":" First, select **Clearbit** from the list of resources. Update the query to include a URL parameter of `email` with a value of `{{ value.email }}`. As the Loop block iterates, `value.email` corresponds to a different email address from the array. END"}
{"prompt":"First, select **Clearbit** from the list of resources. Update the query to include a URL parameter of `email` with a value of `{{ value.email }}`. As the Loop block iterates, `value.email` corresponds to a different email address from the array.\n\n###\n\n","completion":" Click **▸** to save changes and run the query. Once complete, the Loop block outputs all results from Clearbit, each with `person` and `company` objects. Finally, set the name to `companyLookup`. END"}
{"prompt":"Click **▸** to save changes and run the query. Once complete, the Loop block outputs all results from Clearbit, each with `person` and `company` objects. Finally, set the name to `companyLookup`.\n\n###\n\n","completion":" ![Look up with Clearbit](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/530f18c6-e7a8-45c2-996a-c9af245db177.webp) END"}
{"prompt":"5. Send emails or Slack notifications\n\n###\n\n","completion":" The workflow should only send a special offer email to companies with fewer than 50 employees. For companies larger than this, the Sales team should be notified in the **#new-leads** Slack channel instead. To achieve this, you use a [Loop](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#loop) block to trigger [Functions](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#functions). END"}
{"prompt":"The workflow should only send a special offer email to companies with fewer than 50 employees. For companies larger than this, the Sales team should be notified in the **#new-leads** Slack channel instead. To achieve this, you use a [Loop](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#loop) block to trigger [Functions](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#functions).\n\n###\n\n","completion":" Function blocks are reusable queries that operate outside of the workflow control flow. Any block in a workflow can call a function and pass data as _parameters_. You can provide test parameter values that allow you to test functions without first passing data from elsewhere. END"}
{"prompt":"Configure a Loop block\n\n###\n\n","completion":" Add a **Loop** block named `filterCompanySize` that's connected to the `companyLookup` block, them select **Run JS Code** as the resource. END"}
{"prompt":"Add a **Loop** block named `filterCompanySize` that's connected to the `companyLookup` block, them select **Run JS Code** as the resource.\n\n###\n\n","completion":" ![Loop block to check company size](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/e50db91c-7965-404d-8e87-7a37daef68bc.webp) END"}
{"prompt":"![Loop block to check company size](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/e50db91c-7965-404d-8e87-7a37daef68bc.webp)\n\n###\n\n","completion":" You will return to the Loop block to add the necessary JavaScript once you add the necessary functions. END"}
{"prompt":"Add a function to send emails\n\n###\n\n","completion":" To add a Function block, click **+** in the **Functions** section of the left panel and select an SMTP resource. This function needs the customer's email address and first name. Set the function's name to `emailCustomer` then configure the following parameters and test values: END"}
{"prompt":"To add a Function block, click **+** in the **Functions** section of the left panel and select an SMTP resource. This function needs the customer's email address and first name. Set the function's name to `emailCustomer` then configure the following parameters and test values:\n\n###\n\n","completion":" Finally, update the template fields using these parameters to compose the email that's sent to customers. Set the **To email** value to `{{email}}` and use `{{first_name}}` in the message body to personalize for each customer. END"}
{"prompt":"Add a function to send a Slack notification\n\n###\n\n","completion":" Add a Function block for a Slack resource and set its name to `pingSales`. This function only requires a single parameter, `company`, that will correspond to name of the company returned by Clearbit. Set this parameter's test value to `Test Company` and write the message to send: END"}
{"prompt":"Add a Function block for a Slack resource and set its name to `pingSales`. This function only requires a single parameter, `company`, that will correspond to name of the company returned by Clearbit. Set this parameter's test value to `Test Company` and write the message to send:\n\n###\n\n","completion":" ![Function blocks to send emails or Slack notifications](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b2195fef-ad4b-4ed1-9397-d9ca32a0295e.webp) END"}
{"prompt":"Update Loop block to conditionally call functions\n\n###\n\n","completion":" The data returned by Clearbit is available to the Loop block using `value`. END"}
{"prompt":"The data returned by Clearbit is available to the Loop block using `value`.\n\n###\n\n","completion":" The workflow should send an email if there are fewer than 50 employees at the company, otherwise it should send a Slack notification. Update the Loop block with a conditional statement to call each function based on the number of employees. Functions are called using `await`. END"}
{"prompt":"The workflow should send an email if there are fewer than 50 employees at the company, otherwise it should send a Slack notification. Update the Loop block with a conditional statement to call each function based on the number of employees. Functions are called using `await`.\n\n###\n\n","completion":" ![Configure Loop block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/12b5596b-d22d-49e9-abac-aebb828d29de.webp) END"}
{"prompt":"6. Test and enable the workflow\n\n###\n\n","completion":" Now that the workflow is complete, manually run the workflow by clicking **Run** on the right of the Workflow editor toolbar. END"}
{"prompt":"Using Retool Workflows, you have now fully automated a complex ETL task that interacts with multiple database tables, transforms data, and aggregates the results.\n\n###\n\n","completion":" By applying the lessons learned here and following the same patterns, you can extend the workflow's functionality further, such as sending conditional notifications. END"}
{"prompt":"title: \"Connect to Amazon Athena\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect AWS Athena to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Athena](https:\/\/aws.amazon.com\/athena\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Athena data. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Athena resource, you need authentication credentials for the AWS IAM user associated with your Athena service. END"}
{"prompt":"1. Create a new resource\n\n###\n\n","completion":" Sign in to your Retool organization and navigate to the **Resources** tab. Click **Create new**, then select **Resource**. END"}
{"prompt":"Sign in to your Retool organization and navigate to the **Resources** tab. Click **Create new**, then select **Resource**.\n\n###\n\n","completion":" ![Create a new resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/5f4c5f17-b674-473a-a508-2179863f90ef.webp) END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Amazon Athena** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Amazon Athena** resource type.\n\n###\n\n","completion":" ![Select Athena resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/bccef5e8-d64c-4302-93e8-665fd4fa857a.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Athena resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"Authentication\n\n###\n\n","completion":" ![Configure Amazon Athena settings page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c0df438b-9fd5-47ca-94ec-d4fecb05efa3.png) END"}
{"prompt":"![Configure Amazon Athena settings page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c0df438b-9fd5-47ca-94ec-d4fecb05efa3.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Athena. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"4. Save the resource\n\n###\n\n","completion":" Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Resource created with Athena data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/9ea1aec2-f4b3-4ee6-84b6-9958e1e1b96c.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Athena resource is now ready to use. To interact with Athena data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"1. Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"Basecamp\" as the _type_. Enter your Account SID and Auth Token. END"}
{"prompt":"Create a new resource in Retool, and select \"Basecamp\" as the _type_. Enter your Account SID and Auth Token.\n\n###\n\n","completion":" **Resources** > **Add** > **Basecamp** END"}
{"prompt":"**Resources** > **Add** > **Basecamp**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9db5dd9-Screen_Shot_2018-10-30_at_2.22.41_PM.png) END"}
{"prompt":"2. Authorize Retool\n\n###\n\n","completion":" Add a label for your Basecamp resource and press \"Save\". Press \"Edit\" in the popup modal, and then click on the \"Connect Basecamp\" button that will now show beneath the \"Label\" field. END"}
{"prompt":"Add a label for your Basecamp resource and press \"Save\". Press \"Edit\" in the popup modal, and then click on the \"Connect Basecamp\" button that will now show beneath the \"Label\" field.\n\n###\n\n","completion":" Press \"Authorize\" on the Retool OAuth window, and then \"Yes, I'll allow access\" on the Basecamp OAuth window. END"}
{"prompt":"Press \"Authorize\" on the Retool OAuth window, and then \"Yes, I'll allow access\" on the Basecamp OAuth window.\n\n###\n\n","completion":" You should be redirected back to your Basecamp resource page. Press \"Save\", and your Basecamp integration will be connected to Retool. END"}
{"prompt":"You should be redirected back to your Basecamp resource page. Press \"Save\", and your Basecamp integration will be connected to Retool.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/03d0fc7-bb55da4-Screen_Shot_2018-10-30_at_2.27.56_PM.png) END"}
{"prompt":"3. Create Queries\n\n###\n\n","completion":" You can now select your newly-created Basecamp resource from the _Resource_ dropdown when creating queries in your Retool apps. END"}
{"prompt":"You can now select your newly-created Basecamp resource from the _Resource_ dropdown when creating queries in your Retool apps.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0ee1d55-18d5fb9-Screen_Shot_2018-10-30_at_2.33.14_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0ee1d55-18d5fb9-Screen_Shot_2018-10-30_at_2.33.14_PM.png)\n\n###\n\n","completion":" The main Basecamp function currently supported by Retool is adding to-do items onto any of your Basecamp 3 to-do lists. Retool supports all the Basecamp 3 functions you need to: END"}
{"prompt":"title: \"Connect to BigQuery\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your BigQuery data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [BigQuery](https:\/\/cloud.google.com\/bigquery\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, you can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with your BigQuery data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a BigQuery resource, you need: END"}
{"prompt":"Google Cloud project configuration\n\n###\n\n","completion":" Retool authenticates with BigQuery using [service account](#service-account) or [OAuth](#oauth) credentials. The authentication method you use determines the type of access granted to Retool and the configuration settings required. END"}
{"prompt":"Service account\n\n###\n\n","completion":" A [service account](https:\/\/cloud.google.com\/bigquery\/docs\/authentication#service_accounts) is a Google Account that is associated with your Google Cloud project. This method allows Retool to access your BigQuery data by authenticating with a service account's credentials rather than user credentials. END"}
{"prompt":"A [service account](https:\/\/cloud.google.com\/bigquery\/docs\/authentication#service_accounts) is a Google Account that is associated with your Google Cloud project. This method allows Retool to access your BigQuery data by authenticating with a service account's credentials rather than user credentials.\n\n###\n\n","completion":" You must configure the service account with **BigQuery Data Viewer** and **BigQuery User** roles. These roles grant the necessary permissions for Retool to access your data. Once complete, you must generate a private key in JSON format. END"}
{"prompt":"OAuth\n\n###\n\n","completion":" [OAuth](https:\/\/cloud.google.com\/bigquery\/docs\/authentication#user_accounts) enables you to quickly authenticate with Google. You have some control over the scope of permissions that Retool has with your BigQuery data. END"}
{"prompt":"[OAuth](https:\/\/cloud.google.com\/bigquery\/docs\/authentication#user_accounts) enables you to quickly authenticate with Google. You have some control over the scope of permissions that Retool has with your BigQuery data.\n\n###\n\n","completion":" You must have access to a BigQuery project with an OAuth client ID that identifies Retool with Google's OAuth servers. If you need to create a OAuth client ID, use the **OAuth callback URL** provided by Retool as an **authorized redirect URI** when creating the client in the Google Cloud console. END"}
{"prompt":"1. Create a new resource\n\n###\n\n","completion":" Sign in to your Retool organization and click the **Resources** tab. Click **Create new > Resource** to start configuring your BigQuery resource. END"}
{"prompt":"Sign in to your Retool organization and click the **Resources** tab. Click **Create new > Resource** to start configuring your BigQuery resource.\n\n###\n\n","completion":" ![Create a new resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/5f4c5f17-b674-473a-a508-2179863f90ef.webp) END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select **BigQuery** to start configuring the resource. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select **BigQuery** to start configuring the resource.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/160eb04d-8135-4e98-bd42-7575d85cac1c.webp) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the BigQuery resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"Authentication\n\n###\n\n","completion":" Retool can authenticate to BigQuery using either [service account](#service-account-authentication) or [OAuth](#oauth-authentication) credentials. If you don't already have existing credentials, you can use the provided information to configure authentication in the Google Cloud console. END"}
{"prompt":"Retool can authenticate to BigQuery using either [service account](#service-account-authentication) or [OAuth](#oauth-authentication) credentials. If you don't already have existing credentials, you can use the provided information to configure authentication in the Google Cloud console.\n\n###\n\n","completion":" Select an authentication method to display relevant configuration settings. END"}
{"prompt":"Service account\n\n###\n\n","completion":" Select **Service Account** as the authentication method, then provide the entire JSON key. If you downloaded the JSON key, open the file in a suitable plain text editor to avoid incorrect input. END"}
{"prompt":"Select **Service Account** as the authentication method, then provide the entire JSON key. If you downloaded the JSON key, open the file in a suitable plain text editor to avoid incorrect input.\n\n###\n\n","completion":" ![Configure a BigQuery resource using service account authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/5384c366-131b-4fcb-ad53-ba7c0dd377a8.webp) END"}
{"prompt":"OAuth\n\n###\n\n","completion":" Select **OAuth** as the authentication method, then provide the required OAuth client information. If you have not yet created an OAuth client ID, create one using the OAuth callback URL. END"}
{"prompt":"Select **OAuth** as the authentication method, then provide the required OAuth client information. If you have not yet created an OAuth client ID, create one using the OAuth callback URL.\n\n###\n\n","completion":" Click **Test OAuth integration with your own account** to verify that OAuth authentication is configured correctly. END"}
{"prompt":"Click **Test OAuth integration with your own account** to verify that OAuth authentication is configured correctly.\n\n###\n\n","completion":" ![Configure a BigQuery resource using OAuth authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/63e3cf5c-8cbf-46c5-96ce-d7408509d483.webp) END"}
{"prompt":"Dataset region\n\n###\n\n","completion":" Regardless of which authentication method you use, you must set the **Region qualifier** to the dataset's location if it's located outside the United States. This allows Retool to fetch relevant metadata for query autocomplete. Refer to [Google Cloud dataset documentation](https:\/\/cloud.google.com\/bigquery\/docs\/locations) to learn more about data locations. END"}
{"prompt":"Regardless of which authentication method you use, you must set the **Region qualifier** to the dataset's location if it's located outside the United States. This allows Retool to fetch relevant metadata for query autocomplete. Refer to [Google Cloud dataset documentation](https:\/\/cloud.google.com\/bigquery\/docs\/locations) to learn more about data locations.\n\n###\n\n","completion":" Set **Authentication** to either **Service Account** or **OAuth**, then provide the necessary settings for the chosen method. END"}
{"prompt":"Advanced options\n\n###\n\n","completion":" Retool organization administrators can configure the following settings for BigQuery resources. END"}
{"prompt":"Retool organization administrators can configure the following settings for BigQuery resources.\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to BigQuery. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Resource created](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/886bbb13-228f-48ac-81ff-1f5facf093ee.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your BigQuery resource is now ready to use. To interact with BigQuery data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"title: \"Build charts and graphs\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to use your data to create charts and graphs.\"\nhidden: false\n\n###\n\n","completion":" The [Chart component](https:\/\/retool.com\/components\/chart) allows you to visualize data as graphs and charts. It's built using [Plotly.js](https:\/\/plotly.com\/javascript\/), so you can also customize charts to fit your needs. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Check out the demo to see the Chart component in action. END"}
{"prompt":"Check out the demo to see the Chart component in action.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/0cb5f077-bd32-4967-82f8-edbff83956bf\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Choose your data\n\n###\n\n","completion":" You can use [queries](https:\/\/docs.retool.com\/docs\/queries) and [transformers](https:\/\/docs.retool.com\/docs\/transformers), or [JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) to build charts. You can reference an array or an object in the **Data source** field for a chart and Retool automatically detects the data type and transforms it for graphing. If your data source is an array and you enable **Use JavaScript**, Retool's built-in `formatArrayAsObject` function wraps the data source reference. END"}
{"prompt":"You can use [queries](https:\/\/docs.retool.com\/docs\/queries) and [transformers](https:\/\/docs.retool.com\/docs\/transformers), or [JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) to build charts. You can reference an array or an object in the **Data source** field for a chart and Retool automatically detects the data type and transforms it for graphing. If your data source is an array and you enable **Use JavaScript**, Retool's built-in `formatArrayAsObject` function wraps the data source reference.\n\n###\n\n","completion":" After you select a data source, Retool parses the data and populates the chart. By default, the first non-numeric column populates the **X-axis** but you can change this and other properties like **Chart type**, **Group by**, etc. END"}
{"prompt":"After you select a data source, Retool parses the data and populates the chart. By default, the first non-numeric column populates the **X-axis** but you can change this and other properties like **Chart type**, **Group by**, etc.\n\n###\n\n","completion":" ![Choosing chart data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/charts-graphs\/26119ec7-2626-44d9-bf63-628b1bfe3dd0.webp) END"}
{"prompt":"Supported data structures\n\n###\n\n","completion":" The Chart component requires data in a tabular format. This can either be an array of objects, where every object field is a column, or as an object where each key represents a column and the value is an array of values for that column. END"}
{"prompt":"Group data\n\n###\n\n","completion":" One common use case is to chart time series data for a dynamic number of groups. For example, grouping revenue by product or headcount by team. Use the **Group by** property to choose a field from your data source to group and display this kind of data. END"}
{"prompt":"One common use case is to chart time series data for a dynamic number of groups. For example, grouping revenue by product or headcount by team. Use the **Group by** property to choose a field from your data source to group and display this kind of data.\n\n###\n\n","completion":" To see an example of this, create a JavaScript transformer using the code below. Make sure to save and run it before continuing. END"}
{"prompt":"To see an example of this, create a JavaScript transformer using the code below. Make sure to save and run it before continuing.\n\n###\n\n","completion":" Add a Chart component to the Canvas and set its **Data source** to the transformer you created. Change the chart type to **Line chart** and set **Group by** to `animal`. The chart now shows the number of animals over time. If you add more data points to the transformer, the chart updates automatically. END"}
{"prompt":"Add a Chart component to the Canvas and set its **Data source** to the transformer you created. Change the chart type to **Line chart** and set **Group by** to `animal`. The chart now shows the number of animals over time. If you add more data points to the transformer, the chart updates automatically.\n\n###\n\n","completion":" ![Line chart showing the number of animals over time](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0aade9b9-a6cb-4133-a128-fe541e78cf30.png) END"}
{"prompt":"Transformation types\n\n###\n\n","completion":" Retool supports two transformation types: END"}
{"prompt":"Customize the layout\n\n###\n\n","completion":" Edit the chart's layout using the **Layout** section in the **Inspect** tab of the right panel. Select **UI Form** to edit these settings directly or **Plotly JSON** to configure the layout using [Plotly layout JSON](https:\/\/plotly.com\/javascript\/reference\/layout\/) values. END"}
{"prompt":"Edit the chart's layout using the **Layout** section in the **Inspect** tab of the right panel. Select **UI Form** to edit these settings directly or **Plotly JSON** to configure the layout using [Plotly layout JSON](https:\/\/plotly.com\/javascript\/reference\/layout\/) values.\n\n###\n\n","completion":" ![Chart layout options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/charts-graphs\/2f367489-6c76-4382-b60f-67f1e0276fb8.webp) END"}
{"prompt":"Axis tick formats\n\n###\n\n","completion":" Use the **X-axis tick format** and **Y-axis tick format** fields to customize tick labels using a valid d3-format specifier. For a full list of numerical values, use d3-format specifier. See [d3-time-format](https:\/\/github.com\/d3\/d3-time-format#locale_format) for a list of date-time formatters and [d3-format](https:\/\/github.com\/d3\/d3-format#api-reference) for a list of numerical formatters. Here are a few examples of commonly used formats. END"}
{"prompt":"Add interactivity\n\n###\n\n","completion":" When you select points on a chart, Retool exposes the underlying data in the `.selectedPoints` array property on the chart. This means you can filter, transform, or update your app by referencing the `chart.selectedPoints` array property in any component, query, or JavaScript function. END"}
{"prompt":"When you select points on a chart, Retool exposes the underlying data in the `.selectedPoints` array property on the chart. This means you can filter, transform, or update your app by referencing the `chart.selectedPoints` array property in any component, query, or JavaScript function.\n\n###\n\n","completion":" For example, to use the `x` values of selected points to filter a query, you can write `{{ chart.selectedPoints.map(d => d.x) }}`. Here is an example in a [BigQuery](https:\/\/docs.retool.com\/docs\/bigquery) SQL query: END"}
{"prompt":"Advanced use cases\n\n###\n\n","completion":" Retool exposes chart information (chart type, aggregation methods, axes names, etc.) as JSON passed to the `data` and `layout` attributes. If you have an advanced use case, you can enable **Plotly JSON** to edit JSON directly. END"}
{"prompt":"Retool exposes chart information (chart type, aggregation methods, axes names, etc.) as JSON passed to the `data` and `layout` attributes. If you have an advanced use case, you can enable **Plotly JSON** to edit JSON directly.\n\n###\n\n","completion":" ![Editing Plotly JSON](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/96a5f71-plotly_json_inputs.png) END"}
{"prompt":"![Editing Plotly JSON](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/96a5f71-plotly_json_inputs.png)\n\n###\n\n","completion":" The **Data** field in Retool populates the Plotly `data` attribute. Use this attribute to define a list of traces (datasets) to chart. The schema of each trace is dependent on the type. END"}
{"prompt":"The **Data** field in Retool populates the Plotly `data` attribute. Use this attribute to define a list of traces (datasets) to chart. The schema of each trace is dependent on the type.\n\n###\n\n","completion":" The **Layout** field in Retool populates the Plotly `layout` attribute. Use this attribute to control positioning and to set the title, axes, colors, and legend. END"}
{"prompt":"The **Layout** field in Retool populates the Plotly `layout` attribute. Use this attribute to control positioning and to set the title, axes, colors, and legend.\n\n###\n\n","completion":" Visit the [Plotly docs](https:\/\/plotly.com\/javascript\/reference\/index\/) to read more about the data structure that the Plotly library operates on. END"}
{"prompt":"Visit the [Plotly docs](https:\/\/plotly.com\/javascript\/reference\/index\/) to read more about the data structure that the Plotly library operates on.\n\n###\n\n","completion":" Common `data` options: END"}
{"prompt":"Common `data` options:\n\n###\n\n","completion":" Common `layout` options: END"}
{"prompt":"Add multiple y-axes\n\n###\n\n","completion":" If you're working on a chart that shows absolute numbers and percentages, you might want to show additional y-axes on your chart. For example, you could chart the total number of visits to a website, and the percentage of those visits split between new and existing users. The left y-axis would map to a count, and the right one would map to a percentage. You can do this by editing the Plotly JSON directly with the following steps. END"}
{"prompt":"1. Add another y-axis to the Plotly Layout JSON\n\n###\n\n","completion":" Select the chart and click **Plotly JSON** in the right panel. In the existing JSON, there's an entry for an existing y-axis with a `\"yaxis\"` key. Add a second entry named `\"yaxis2\"`, and configure it to show up on the right side of the graph using `side: right` and `overlaying: y`. END"}
{"prompt":"Select the chart and click **Plotly JSON** in the right panel. In the existing JSON, there's an entry for an existing y-axis with a `\"yaxis\"` key. Add a second entry named `\"yaxis2\"`, and configure it to show up on the right side of the graph using `side: right` and `overlaying: y`.\n\n###\n\n","completion":" You can also add some optional fields to format the axis as a percentage and restrict the range to `[0,1]`. END"}
{"prompt":"2. Assign datasets to the axes\n\n###\n\n","completion":" For each dataset that you want to assign to the additional y-axis, add this property: END"}
{"prompt":"For each dataset that you want to assign to the additional y-axis, add this property:\n\n###\n\n","completion":" ![Chart with two y-axes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/016fc62-Screen_Shot_2020-11-02_at_6.54.25_PM.png) END"}
{"prompt":"Additional resources\n\n###\n\n","completion":" Check out these external resources for more information on building charts and using Plotly. END"}
{"prompt":"Building an operations dashboard\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/iN5nLpcu2J8%3Fstart%3D683%26feature%3Doembed%26start%3D683&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DiN5nLpcu2J8&image=https%3A\/\/i.ytimg.com\/vi\/iN5nLpcu2J8\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"640\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?t=683&v=iN5nLpcu2J8&feature=youtu.be\",\n\"title\": \"Technical Webinar: Building Data-Driven Dashboards in Retool\",\n\"favicon\": \"https:\/\/www.youtube.com\/s\/desktop\/d92f5e6b\/img\/favicon.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/iN5nLpcu2J8\/hqdefault.jpg\"\n}\n[\/block] END"}
{"prompt":"Customer case study with JetFuel\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/iN5nLpcu2J8%3Fstart%3D1358%26feature%3Doembed%26start%3D1358&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DiN5nLpcu2J8&image=https%3A\/\/i.ytimg.com\/vi\/iN5nLpcu2J8\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"640\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?t=1358&v=iN5nLpcu2J8&feature=youtu.be\",\n\"title\": \"Technical Webinar: Building Data-Driven Dashboards in Retool\",\n\"favicon\": \"https:\/\/www.youtube.com\/s\/desktop\/d92f5e6b\/img\/favicon.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/iN5nLpcu2J8\/hqdefault.jpg\"\n}\n[\/block] END"}
{"prompt":"title: \"Build tables\"\nexcerpt: \"Learn how to display and interact with data using the Table component.\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nhidden: true\n\n###\n\n","completion":" Tables are a common way to view and interact with your data. You can sort, filter, paginate, and download rows of information. Tables also support row selection and insertion, server-side pagination, and custom columns. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Try out the app to see tables in action (edits are disabled). END"}
{"prompt":"Try out the app to see tables in action (edits are disabled).\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": false,\n\"url\": \"https:\/\/docsdemos.retool.com\/embedded\/public\/ee154fdb-77bd-4672-974a-5c5bbe4c8db0\",\n\"title\": \"Retool\",\n\"favicon\": \"https:\/\/retool-edge.com\/favicon.png\",\n\"iframe\": true,\n\"height\": \"500px\"\n}\n[\/block] END"}
{"prompt":"Load data in a table\n\n###\n\n","completion":" When you drag a [Table](https:\/\/retool.com\/components\/table) component to the Canvas, it automatically displays data from one of your queries. If you don't have any queries, Retool initially populates the table with test data in JSON format. You can change the data displayed in a table by editing the **Data** property. From the dropdown, you can select a query, use JavaScript (e.g., `queryName.data`), or input an array. END"}
{"prompt":"When you drag a [Table](https:\/\/retool.com\/components\/table) component to the Canvas, it automatically displays data from one of your queries. If you don't have any queries, Retool initially populates the table with test data in JSON format. You can change the data displayed in a table by editing the **Data** property. From the dropdown, you can select a query, use JavaScript (e.g., `queryName.data`), or input an array.\n\n###\n\n","completion":" ![Selecting a query as the data source for a table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7601fbc60a22dbb86d609dda3de451b0-1800.webp) END"}
{"prompt":"Change column types\n\n###\n\n","completion":" When you add tables to the Canvas, Retool tries to infer the column types. You can also set column types manually by clicking the column in the **Inspect** tab, and selecting the type from the **Format** dropdown. END"}
{"prompt":"Set a primary key\n\n###\n\n","completion":" Retool recommends setting a primary key column to uniquely identify each row of data. If your data already has an an ID column, Retool automatically uses it for the primary key. You can also manually set it to any column that is guaranteed to be unique. END"}
{"prompt":"Retool recommends setting a primary key column to uniquely identify each row of data. If your data already has an an ID column, Retool automatically uses it for the primary key. You can also manually set it to any column that is guaranteed to be unique.\n\n###\n\n","completion":" If you don't want to show the primary key column in your table, select the column and set its **Hidden** property to `true`.\n![Changing a column's type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/618e56376b2c915b9b9a76cc25bed00b-1800.webp) END"}
{"prompt":"Set source keys\n\n###\n\n","completion":" You can set an optional source key on each column to pull data from your data source. For example, you could set the source ID to populate the table column with data from the data source's ID column. END"}
{"prompt":"Editable table columns\n\n###\n\n","completion":" After populating a table with data, you can make columns _editable_ and change cell values. To make a column editable, select the table to open **Inspect** tab in the right panel. Then select the column and click the **Editable** checkbox. END"}
{"prompt":"After populating a table with data, you can make columns _editable_ and change cell values. To make a column editable, select the table to open **Inspect** tab in the right panel. Then select the column and click the **Editable** checkbox.\n\n###\n\n","completion":" ![Making a column editable](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e02fe9a6496198a980f16f9339cc4ac2-1800.webp) END"}
{"prompt":"![Making a column editable](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e02fe9a6496198a980f16f9339cc4ac2-1800.webp)\n\n###\n\n","completion":" Double-click a cell to edit its value. When you edit cells, changes are saved in the table's `changesetArray` property. This tracks the changes but it doesn't update the underlying data source that your query connects to. To save edits back to your data source, you must write a query to update your data. For example, saving changes to a PostgreSQL database can be done using a [bulk update query](https:\/\/docs.retool.com\/docs\/sql-writes#bulk-updates). END"}
{"prompt":"Double-click a cell to edit its value. When you edit cells, changes are saved in the table's `changesetArray` property. This tracks the changes but it doesn't update the underlying data source that your query connects to. To save edits back to your data source, you must write a query to update your data. For example, saving changes to a PostgreSQL database can be done using a [bulk update query](https:\/\/docs.retool.com\/docs\/sql-writes#bulk-updates).\n\n###\n\n","completion":" After creating the bulk update query, you need to connect it to the table. Open the **Inspect** tab again for the table and scroll to the **Add-ons** section. Add a **Save actions** add-on. Select the add-on, and then add an [event handler](https:\/\/docs.retool.com\/docs\/event-handlers) that runs the bulk update query. END"}
{"prompt":"After creating the bulk update query, you need to connect it to the table. Open the **Inspect** tab again for the table and scroll to the **Add-ons** section. Add a **Save actions** add-on. Select the add-on, and then add an [event handler](https:\/\/docs.retool.com\/docs\/event-handlers) that runs the bulk update query.\n\n###\n\n","completion":" ![Adding a save action to run a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/13ebebf456f2a34dd507f4561e7c78de-1800.webp) END"}
{"prompt":"Add new data to tables\n\n###\n\n","completion":" You can add rows to tables and save the changes as new data. To do this, drag in a [Form](https:\/\/retool.com\/components\/form) component and click **Generate from**. This opens a modal where you can select the table you previously dragged onto the Canvas: END"}
{"prompt":"You can add rows to tables and save the changes as new data. To do this, drag in a [Form](https:\/\/retool.com\/components\/form) component and click **Generate from**. This opens a modal where you can select the table you previously dragged onto the Canvas:\n\n###\n\n","completion":" ![Generating a form for adding new rows to a table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/95c81106bc4405cb245a2c9b5e91eb61-1800.webp) END"}
{"prompt":"![Generating a form for adding new rows to a table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/95c81106bc4405cb245a2c9b5e91eb61-1800.webp)\n\n###\n\n","completion":" Have the form [trigger an update query](https:\/\/docs.retool.com\/docs\/create-forms-using-form-component#submit-the-form-to-create-a-record) to add a new record. END"}
{"prompt":"Dynamic values in new rows\n\n###\n\n","completion":" You can use _dynamic values_ if you have columns you don't want users to edit, or if you want to automate some of the values added in a new row. These values are generated when the row is added, and don't require manual input from the user. For example, if your table has a timestamp column, you can use `{{ moment() }}` to generate the timestamp when the query runs. END"}
{"prompt":"You can use _dynamic values_ if you have columns you don't want users to edit, or if you want to automate some of the values added in a new row. These values are generated when the row is added, and don't require manual input from the user. For example, if your table has a timestamp column, you can use `{{ moment() }}` to generate the timestamp when the query runs.\n\n###\n\n","completion":" ![Any {{ }} values can be used while creating new rows in a table](https:\/\/files.readme.io\/19ed52c-Screen_Shot_2020-03-12_at_9.23.23_PM.png) END"}
{"prompt":"Automatically reload table data\n\n###\n\n","completion":" If you want to automatically reload table data when changes are saved, add an [event handler](https:\/\/docs.retool.com\/docs\/event-handlers) to the query that updates your data source. Configure the event handler so that when the query succeeds, it runs the query that populates your table. END"}
{"prompt":"If you want to automatically reload table data when changes are saved, add an [event handler](https:\/\/docs.retool.com\/docs\/event-handlers) to the query that updates your data source. Configure the event handler so that when the query succeeds, it runs the query that populates your table.\n\n###\n\n","completion":" ![Adding an event handler to refresh table data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ebaba970-9d56-4970-b1b2-2b9b482262f7.png) END"}
{"prompt":"Custom columns\n\n###\n\n","completion":" You can add _custom columns_ to tables using the **+** button in the **Inspect** tab above the list of columns. Custom columns are often used to calculate data based on other values in your Retool app. For example, if you have a `monthlyIncome` column and you want to calculate a `yearlyIncome` column, you could use `{{ currentSourceRow.monthlyIncome * 12 }}`. END"}
{"prompt":"You can add _custom columns_ to tables using the **+** button in the **Inspect** tab above the list of columns. Custom columns are often used to calculate data based on other values in your Retool app. For example, if you have a `monthlyIncome` column and you want to calculate a `yearlyIncome` column, you could use `{{ currentSourceRow.monthlyIncome * 12 }}`.\n\n###\n\n","completion":" ![Adding a custom column](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ee9426ff83904b1d7640720f7af8d9cd-1800.webp) END"}
{"prompt":"![Adding a custom column](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ee9426ff83904b1d7640720f7af8d9cd-1800.webp)\n\n###\n\n","completion":" Custom columns have the same properties as regular table columns. END"}
{"prompt":"Configure actions\n\n###\n\n","completion":" You can add actions that are displayed as buttons when hovering over a row in a Table. For example, to open a Modal upon clicking an action button, drag a Modal component to the Canvas. Select the Table component and in the **Inspect** tab, click the **+** in the **Actions** section. Then configure the an event handler for the action to open the modal. END"}
{"prompt":"You can add actions that are displayed as buttons when hovering over a row in a Table. For example, to open a Modal upon clicking an action button, drag a Modal component to the Canvas. Select the Table component and in the **Inspect** tab, click the **+** in the **Actions** section. Then configure the an event handler for the action to open the modal.\n\n###\n\n","completion":" ![Configuring an action to open the modal component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/07ac06f36ce4a4f15d8bd17656ef9ad5-1800.webp) END"}
{"prompt":"![Configuring an action to open the modal component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/07ac06f36ce4a4f15d8bd17656ef9ad5-1800.webp)\n\n###\n\n","completion":" Now when the button is clicked in the table, the modal opens. END"}
{"prompt":"Sort, filter, and customize data presentation\n\n###\n\n","completion":" Tables come with prebuilt functionality for sorting and filtering data. You can click on a column to sort it, and you can combine a table with a [Text Input](https:\/\/retool.com\/components\/text-input) component to create a search field that serves as another way of filtering data. END"}
{"prompt":"Show and hide columns\n\n###\n\n","completion":" When you click a column in the **Inspect** tab, there's a **Hidden** property that you can set to `true` or conditionally control with JavaScript. END"}
{"prompt":"Row selection\n\n###\n\n","completion":" Single row selection is enabled by default, but tables also support multiple row selection, or you can disable it completely. Selecting multiple rows is often useful when your app needs to make bulk actions. Navigate to the **Interaction** > **Row selection** section of the **Inspect** tab to change these settings. END"}
{"prompt":"Pagination\n\n###\n\n","completion":" In the **Inspect** tab, you can choose between **Pagination** and **Scroll** options for handling overflow items. END"}
{"prompt":"In the **Inspect** tab, you can choose between **Pagination** and **Scroll** options for handling overflow items.\n\n###\n\n","completion":" You can also enable [server-side pagination](https:\/\/docs.retool.com\/docs\/server-side-pagination). You write queries that include parameters to define a subset of data to retrieve, server-side. Retool recommends this when working with large datasets to reduce the amount of data your table uses, which can help your app's performance. END"}
{"prompt":"You can also enable [server-side pagination](https:\/\/docs.retool.com\/docs\/server-side-pagination). You write queries that include parameters to define a subset of data to retrieve, server-side. Retool recommends this when working with large datasets to reduce the amount of data your table uses, which can help your app's performance.\n\n###\n\n","completion":" Sorting of tables using server-side pagination must be done on the server. You can write queries that use the table's `sort` or `sortObject` properties to achieve this. END"}
{"prompt":"Table search\n\n###\n\n","completion":" To enable search for a table, drag a Text Input component to the Canvas. Next, click on the Table component and navigate to the **Interaction** section in the **Inspect** tab. Set the **Search term** property to `{{ textInput1.value }}` (the name of the Text Input component might be different in your app) to connect the Text Input component to the table. This enables search across all the table's columns, and Retool provides options for fuzzy, exact, and case insensitive searches. END"}
{"prompt":"Row selection persistence\n\n###\n\n","completion":" Some applications need to track the table's selected rows even while the user is filtering, sorting, or paginating through data. You can enable this in the **Interaction** section by selecting the **Persist row selection** checkbox. END"}
{"prompt":"Common table variables\n\n###\n\n","completion":" `currentSourceRow`, `item`, and `i` are commonly used with tables. `item` and `i` work with other components, but they have unique meanings when used with table column settings. With tables, `i` is the index of the current row in the original dataset, and item is the value of the current cell. END"}
{"prompt":"`currentSourceRow`, `item`, and `i` are commonly used with tables. `item` and `i` work with other components, but they have unique meanings when used with table column settings. With tables, `i` is the index of the current row in the original dataset, and item is the value of the current cell.\n\n###\n\n","completion":" Variables like `currentRow` and `item` are useful in situations where you want to access values in a table and then calculate a new value. For example, `{{ item * 10 }}` takes the current cell and multiplies it by ten. You can also do something like `{{self + ' ' + '(Last sale: + currentSourceRow.last_sale)'}}` to combine two values and map them to a column. END"}
{"prompt":"Variables like `currentRow` and `item` are useful in situations where you want to access values in a table and then calculate a new value. For example, `{{ item * 10 }}` takes the current cell and multiplies it by ten. You can also do something like `{{self + ' ' + '(Last sale: + currentSourceRow.last_sale)'}}` to combine two values and map them to a column.\n\n###\n\n","completion":" `i` is often used to iterate over a set of values and perform some kind of action. For example, you can iterate over each row in a table and update values, make API requests, send emails, etc. For example, this JavaScript transformer iterates over all rows in `table1`, and returns each sales person with over 200 sales. END"}
{"prompt":"`i` is often used to iterate over a set of values and perform some kind of action. For example, you can iterate over each row in a table and update values, make API requests, send emails, etc. For example, this JavaScript transformer iterates over all rows in `table1`, and returns each sales person with over 200 sales.\n\n###\n\n","completion":" See the [Table](https:\/\/retool.com\/components\/table) component reference documentation for more information on properties, events, and JavaScript methods that you can use with tables. END"}
{"prompt":"title: \"Query caching\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-concepts\"\nexcerpt: \"Learn more about caching query results to increase app performance.\"\nhidden: false\n\n###\n\n","completion":" Retool provides support for caching query results, allowing users to better manage their data. By caching query results, you can speed up the performance and load speeds of an application. END"}
{"prompt":"Retool provides support for caching query results, allowing users to better manage their data. By caching query results, you can speed up the performance and load speeds of an application.\n\n###\n\n","completion":" Query caching is most helpful in cases of: END"}
{"prompt":"Query caching is most helpful in cases of:\n\n###\n\n","completion":" Caching is not recommended for transactional queries. If your data is updating in realtime, via an upstream source or Retool app actions, caching increases the likelihood that your users will see stale, incorrect data. END"}
{"prompt":"How query caching works\n\n###\n\n","completion":" When enabled, queries are cached server-side inside of the Retool database connector. Whenever a query is run, Retool checks the inputs and cache duration lifespan to determine whether to return cached results or route the query to your database. END"}
{"prompt":"When enabled, queries are cached server-side inside of the Retool database connector. Whenever a query is run, Retool checks the inputs and cache duration lifespan to determine whether to return cached results or route the query to your database.\n\n###\n\n","completion":" If the exact same query is run using the same inputs within the **Cache duration** lifespan, the cached result is returned rather than querying the resource. If the cache lifespan for the specific query and input combination has expired or the cache has been invalidated, the query is routed to the resource. END"}
{"prompt":"If the exact same query is run using the same inputs within the **Cache duration** lifespan, the cached result is returned rather than querying the resource. If the cache lifespan for the specific query and input combination has expired or the cache has been invalidated, the query is routed to the resource.\n\n###\n\n","completion":" ![Query cache flow diagram](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/query-caching\/6717ef33-1cbc-43a7-b31c-8eba336a4dad.png) END"}
{"prompt":"![Query cache flow diagram](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/query-caching\/6717ef33-1cbc-43a7-b31c-8eba336a4dad.png)\n\n###\n\n","completion":" By default, the cache is shared across users in the same organization. If two users run a query with the same requests—even with different auth tokens—the cached results are still returned. END"}
{"prompt":"By default, the cache is shared across users in the same organization. If two users run a query with the same requests—even with different auth tokens—the cached results are still returned.\n\n###\n\n","completion":" Administrators can disable **Cache queries across all users** in the **Advanced** section of **Organization Settings** to perform caching on a per-user basis instead. END"}
{"prompt":"Administrators can disable **Cache queries across all users** in the **Advanced** section of **Organization Settings** to perform caching on a per-user basis instead.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/10fc3f2-Screen_Shot_2020-12-13_at_11.57.00_PM.png) END"}
{"prompt":"Use query caching\n\n###\n\n","completion":" Caching is set at the query level. Check **Cache the results of this query** in the **Advanced** tab of the query editor to turn on caching for a specific query. You must specify the number of seconds the query should be cached for (e.g., `3600` for one hour). END"}
{"prompt":"Caching is set at the query level. Check **Cache the results of this query** in the **Advanced** tab of the query editor to turn on caching for a specific query. You must specify the number of seconds the query should be cached for (e.g., `3600` for one hour).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/27b2022-Screen_Shot_2020-12-01_at_9.15.06_AM.png) END"}
{"prompt":"Monitor the cache\n\n###\n\n","completion":" You can use cache-related query properties to determine if a cached result was used, when the cached results were fetched from the resource and whether the next run will hit the cache. END"}
{"prompt":"Invalidate the cache\n\n###\n\n","completion":" If you want to invalidate the cache before the TTL runs out, you can do so manually or programmatically. END"}
{"prompt":"If you want to invalidate the cache before the TTL runs out, you can do so manually or programmatically.\n\n###\n\n","completion":" To manually invalidate the cache, click **Invalidate cache** in the Advanced > Cache section of the query editor. END"}
{"prompt":"To manually invalidate the cache, click **Invalidate cache** in the Advanced > Cache section of the query editor.\n\n###\n\n","completion":" To programmatically invalidate the cache, use the [invalidateCache()](\/reference\/javascript-api-methods-query#queryinvalidatecache) JavaScript method. You can also use [<<glossary:event handlers>>](https:\/\/docs.retool.com\/docs\/event-handlers) to invalidate the cache by selecting the **Control query** action and **Clear cache** method. END"}
{"prompt":"To programmatically invalidate the cache, use the [invalidateCache()](\/reference\/javascript-api-methods-query#queryinvalidatecache) JavaScript method. You can also use [<<glossary:event handlers>>](https:\/\/docs.retool.com\/docs\/event-handlers) to invalidate the cache by selecting the **Control query** action and **Clear cache** method.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/62a0786-ClearCacheEventHandler.png) END"}
{"prompt":"Redis caching for on-premise deployment\n\n###\n\n","completion":" Without a Redis-connected resource, the cache is stored on the local file system of the Retool server. The cache can be invalidated if the Retool worker stops running which may cause in-memory and file system caches to be wiped. END"}
{"prompt":"Without a Redis-connected resource, the cache is stored on the local file system of the Retool server. The cache can be invalidated if the Retool worker stops running which may cause in-memory and file system caches to be wiped.\n\n###\n\n","completion":" With a Redis-connected resource, the cache is stored within Redis instead of the file system, and is automatically set up once connected. This enables greater flexibility around caching behavior and also gives you visibility on how data is stored. END"}
{"prompt":"With a Redis-connected resource, the cache is stored within Redis instead of the file system, and is automatically set up once connected. This enables greater flexibility around caching behavior and also gives you visibility on how data is stored.\n\n###\n\n","completion":" Refer to our documentation on [environment variables](\/reference\/environment-variables-reference#redis) to view Redis-specific variable information. Once set up and connected, Retool automatically leverages the Redis instance as a caching layer for queries with caching enabled. END"}
{"prompt":"Connect Retool to Redis on AWS ElastiCache\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/045735b-Screen_Shot_2021-06-11_at_3.56.29_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/045735b-Screen_Shot_2021-06-11_at_3.56.29_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/caffb4f-8_B9UI79.png) END"}
{"prompt":"title: \"Connect to Cassandra\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect Cassandra to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Cassandra](https:\/\/cassandra.apache.org\/_\/index.html) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Cassandra data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Cassandra resource, you need your: END"}
{"prompt":"Allow Retool to access Cassandra\n\n###\n\n","completion":" If Cassandra is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Cassandra** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Cassandra** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/40fffb04-ed2d-4e5e-b083-ede38b350765.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Cassandra resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"Credential\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/b1746cd5-95de-4c39-be01-352f4022235c.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/b1746cd5-95de-4c39-be01-352f4022235c.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Cassandra. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/41c8a700-d9e1-45c1-8993-efe3540f024b.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Cassandra resource is now ready to use. To interact with Cassandra data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"Integrate Retool and CircleCI\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/776128f-Screen_Shot_2021-05-03_at_12.26.24_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/776128f-Screen_Shot_2021-05-03_at_12.26.24_PM.png)\n\n###\n\n","completion":" To connect your resource to CircleCI, add your personal API token which you can [find here](https:\/\/app.circleci.com\/settings\/user\/tokens). You may need to create a new key if you don't have one already. END"}
{"prompt":"To connect your resource to CircleCI, add your personal API token which you can [find here](https:\/\/app.circleci.com\/settings\/user\/tokens). You may need to create a new key if you don't have one already.\n\n###\n\n","completion":" Note: Do not use a project API token as this does not work with the latest version of CircleCI's API. You can read more about CircleCI's API authentication and authorization [here](https:\/\/circleci.com\/docs\/2.0\/api-developers-guide\/#authentication-and-authorization). END"}
{"prompt":"Note: Do not use a project API token as this does not work with the latest version of CircleCI's API. You can read more about CircleCI's API authentication and authorization [here](https:\/\/circleci.com\/docs\/2.0\/api-developers-guide\/#authentication-and-authorization).\n\n###\n\n","completion":" Save the resource and that's it! You can now query the CircleCI API in Retool! END"}
{"prompt":"Querying the CircleCI API\n\n###\n\n","completion":" After setting up a CircleCI integration with Retool, a new option for a CircleCI query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the CircleCI api spec to send and retrieve data from CircleCI. You can learn about other popular use cases around drill downs into project details, reviewing artifacts and analyzing insights [here](https:\/\/circleci.com\/docs\/2.0\/api-developers-guide\/#additional-api-use-cases). END"}
{"prompt":"After setting up a CircleCI integration with Retool, a new option for a CircleCI query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the CircleCI api spec to send and retrieve data from CircleCI. You can learn about other popular use cases around drill downs into project details, reviewing artifacts and analyzing insights [here](https:\/\/circleci.com\/docs\/2.0\/api-developers-guide\/#additional-api-use-cases).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b873456-Screen_Shot_2021-05-03_at_1.05.34_PM.png) END"}
{"prompt":"Getting workflows\n\n###\n\n","completion":" For many applications, like our CircleCI template, you'll want to pull in all the CircleCI workflows to drill down, approve and kickoff new jobs, and more. This JS snippet will be helpful for getting the data returned by the workflows endpoint and transforming it into a flattened array. You can then connect this to a table to immediately visualize and build CRUD interfaces on top of this workflow data. END"}
{"prompt":"title: \"Connect to Close\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your Close data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Close](https:\/\/www.close.com\/) and make it available as a  [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Close data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Close resource, you need an [API key](https:\/\/help.close.com\/docs\/api-keys) from Close. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Close** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Close** resource type.\n\n###\n\n","completion":" ![Select Close integration resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/3264da7c-d66d-4166-a620-2bc5c8c13661.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Close resource. Retool displays the resource name and type in query editors to help users identify them. Next, enter the API Key you created. END"}
{"prompt":"Specify a name and location for the Close resource. Retool displays the resource name and type in query editors to help users identify them. Next, enter the API Key you created.\n\n###\n\n","completion":" ![Configure Close integration](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/77140f35-1020-4213-bd79-9fd57ef87c04.png) END"}
{"prompt":"![Configure Close integration](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/77140f35-1020-4213-bd79-9fd57ef87c04.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Close. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Close Resource created](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/0f33955a-2276-4e5f-97e9-43a6875fbb08.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Close resource is now ready to use. To interact with Close data, select the resource in the query editor. Retool supports the **lead** and **opportunity** operations. END"}
{"prompt":"title: \"Command Palette\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-concepts\"\nexcerpt: \"Learn about Retool's Command Palette and its global search and commands.\"\nhidden: false\n\n###\n\n","completion":" Retool's Command Palette (opened with <span class=\"sck key\">Ctrl<\/span> <span class=\"sck key\">k<\/span>) includes a host of commands you can use to quickly execute common actions like opening app settings, creating new queries, or editing component properties. You can also use it to search for components and queries in your app, and jump directly to other apps, shared queries, or resources within your organization. END"}
{"prompt":"Contexts\n\n###\n\n","completion":" Retool's commands are organized by _contexts_. These can be an app, query, or component context. App contexts filter commands to ones that modify your app, such as opening app settings or creating new components.\nQuery and component contexts filter commands to those that affect that query or component directly. For example, running a query or editing a property of a component. When you are not in a particular context, the Command Palette shows you a global search, letting you search for other apps or resources. END"}
{"prompt":"Retool's commands are organized by _contexts_. These can be an app, query, or component context. App contexts filter commands to ones that modify your app, such as opening app settings or creating new components.\nQuery and component contexts filter commands to those that affect that query or component directly. For example, running a query or editing a property of a component. When you are not in a particular context, the Command Palette shows you a global search, letting you search for other apps or resources.\n\n###\n\n","completion":" ![GIF showing Command Palette interactions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/3b36c32c-bc79-4a73-b2c9-ad47d1192aa2.gif) END"}
{"prompt":"Global search commands\n\n###\n\n","completion":" Global search is available when you are not in any particular context. You can search for any app, resource, or shared query within your organization. END"}
{"prompt":"Global search is available when you are not in any particular context. You can search for any app, resource, or shared query within your organization.\n\n###\n\n","completion":" ![image showing global search in Command Palette](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/40fc5e13-fc04-4043-8632-b5a253da08e8.png) END"}
{"prompt":"App commands\n\n###\n\n","completion":" App commands are available in both edit and preview mode. In preview mode, commands available include editing and sharing the app, as well as various help dialogs and links. In edit mode, commands include the same sharing and help actions, as well as common workflows used while editing an app. For example, you can open app settings, toggle Debug Tools, toggle editor panels, or even export the app to JSON. END"}
{"prompt":"App commands are available in both edit and preview mode. In preview mode, commands available include editing and sharing the app, as well as various help dialogs and links. In edit mode, commands include the same sharing and help actions, as well as common workflows used while editing an app. For example, you can open app settings, toggle Debug Tools, toggle editor panels, or even export the app to JSON.\n\n###\n\n","completion":" ![image showing app commands in Command Palette](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/e9cc0b3a-afd6-4023-b0d5-1abd1ee9b046.png) END"}
{"prompt":"![image showing app commands in Command Palette](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/e9cc0b3a-afd6-4023-b0d5-1abd1ee9b046.png)\n\n###\n\n","completion":" You can also search for all components and queries within your app or create new components and queries. This includes JavaScript transformers, analytics events, temporary states, and queries imported from the Query Library. END"}
{"prompt":"You can also search for all components and queries within your app or create new components and queries. This includes JavaScript transformers, analytics events, temporary states, and queries imported from the Query Library.\n\n###\n\n","completion":" ![image showing components and code in an app context in Command Palette](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/5d9ae3f0-877b-49d5-a3f7-539ea8887e9d.png) END"}
{"prompt":"Component commands\n\n###\n\n","completion":" Commands are available for individual components as well. These include selecting the component in your editor, jumping to properties of that component, and other actions like viewing its state in Debug Tools or viewing its documentation. END"}
{"prompt":"Commands are available for individual components as well. These include selecting the component in your editor, jumping to properties of that component, and other actions like viewing its state in Debug Tools or viewing its documentation.\n\n###\n\n","completion":" ![image showing component commands in Command Palette](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/212772da-7bd0-4179-8257-2fc8e3412215.png) END"}
{"prompt":"Query commands\n\n###\n\n","completion":" Commands are available for individual queries as well. These include running or previewing the query, viewing its state in Debug Tools, and extracting it to the Query Library. These also apply to JavaScript transformers, analytics events, and temporary states. END"}
{"prompt":"Commands are available for individual queries as well. These include running or previewing the query, viewing its state in Debug Tools, and extracting it to the Query Library. These also apply to JavaScript transformers, analytics events, and temporary states.\n\n###\n\n","completion":" ![image showing query commands in Command Palette](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/31700285-f0ff-4f1d-af19-f8b4ab0c1a9a.png) END"}
{"prompt":"Recently used\n\n###\n\n","completion":" The Command Palette also shows your most recently used items. For example, in global search, this includes recently opened apps, queries, and resources, as well as folders or static pages like Settings. In an app context, it shows your most recently selected components and queries. END"}
{"prompt":"The Command Palette also shows your most recently used items. For example, in global search, this includes recently opened apps, queries, and resources, as well as folders or static pages like Settings. In an app context, it shows your most recently selected components and queries.\n\n###\n\n","completion":" ![image showing recently used items in Command Palette](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/1f26fa7b-a5ca-400c-beff-79059bcec098.png) END"}
{"prompt":"title: \"Mobile Button\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Trigger queries and actions.\"\nhidden: false\n\n###\n\n","completion":" A button to trigger queries and other actions. END"}
{"prompt":"A button to trigger queries and other actions.\n\n###\n\n","completion":" ![Button](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0d523848-9b87-4ad0-9473-ba3548fc6d4a.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Button. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Button. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified END"}
{"prompt":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified\n\n###\n\n","completion":"  The key of an icon to display after the primary content. END"}
{"prompt":"  The key of an icon to display after the primary content.\n\n###\n\n","completion":"  The key of an icon to display before the primary content. END"}
{"prompt":"  The key of an icon to display before the primary content.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  If `true`, the component will render a loading indicator. END"}
{"prompt":"  If `true`, the component will render a loading indicator.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The size of the rendered value. END"}
{"prompt":"  The size of the rendered value.\n\n###\n\n","completion":"  The primary text content. END"}
{"prompt":"  The primary text content.\n\n###\n\n","completion":"  The type of button to render. Either `primary` with solid background or `secondary` with outline only. END"}
{"prompt":"  The type of button to render. Either `primary` with solid background or `secondary` with outline only.\n\n###\n\n","completion":"  Whether the component's width is full or fixed. END"}
{"prompt":"title: \"Mobile Card Collection\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display items in a card layout.\"\nhidden: false\n\n###\n\n","completion":" A list of options presented in a card layout to select an individual value. Options are [dynamically mapped](https:\/\/docs.retool.com\/docs\/define-option-lists) from a query, transformer, or any other data source. END"}
{"prompt":"A list of options presented in a card layout to select an individual value. Options are [dynamically mapped](https:\/\/docs.retool.com\/docs\/define-option-lists) from a query, transformer, or any other data source.\n\n###\n\n","completion":" ![Card Collection with horizontal scroll, half-size, and full-size](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/02aa4012-f308-421c-96fa-da3df354ba6f.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Card Collection. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Card Collection. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  An array of `body` values for each option, by index. END"}
{"prompt":"  An array of `body` values for each option, by index.\n\n###\n\n","completion":"  The size with which to render cards on the layout. END"}
{"prompt":"  The size with which to render cards on the layout.\n\n###\n\n","completion":"  The style with which to render cards on the layout. END"}
{"prompt":"  The style with which to render cards on the layout.\n\n###\n\n","completion":"  The type of card to render on the layout. END"}
{"prompt":"  The type of card to render on the layout.\n\n###\n\n","completion":"  The source data that is rendered by the component. END"}
{"prompt":"  The source data that is rendered by the component.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  The evaluation mode for items. Mobile components always use `dynamic` mode to map item options and their properties. END"}
{"prompt":"  The evaluation mode for items. Mobile components always use `dynamic` mode to map item options and their properties.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  A list of prefix icons for each item, by index. END"}
{"prompt":"  A list of prefix icons for each item, by index.\n\n###\n\n","completion":"   A list of image fit values for each item, by index. One of `cover`, `contain`, `stretch`, or `center`. END"}
{"prompt":"   A list of image fit values for each item, by index. One of `cover`, `contain`, `stretch`, or `center`.\n\n###\n\n","completion":"   A list of image aspect ratios for each item, by index. END"}
{"prompt":"   A list of image aspect ratios for each item, by index.\n\n###\n\n","completion":"   A list of image source URLs for each item, by index. END"}
{"prompt":"   A list of image source URLs for each item, by index.\n\n###\n\n","completion":"   A list of the suffix types for each option, by index. END"}
{"prompt":"   A list of the suffix types for each option, by index.\n\n###\n\n","completion":"  The scroll direction of the collection. END"}
{"prompt":"  The scroll direction of the collection.\n\n###\n\n","completion":"  The index of the currently selected item. END"}
{"prompt":"  The index of the currently selected item.\n\n###\n\n","completion":"  The currently selected item. END"}
{"prompt":"  The currently selected item.\n\n###\n\n","completion":"  Whether to render a separator between items. END"}
{"prompt":"  Whether to render a separator between items.\n\n###\n\n","completion":"  A list of subtitle values for each option, by index. END"}
{"prompt":"  A list of subtitle values for each option, by index.\n\n###\n\n","completion":"  A list of subtitle value lengths for each option, by index. END"}
{"prompt":"  A list of subtitle value lengths for each option, by index.\n\n###\n\n","completion":"  A list of suffix icons for each item, by index. END"}
{"prompt":"  A list of suffix icons for each item, by index.\n\n###\n\n","completion":"  A list of suffix text values for each item, by index. END"}
{"prompt":"  A list of suffix text values for each item, by index.\n\n###\n\n","completion":"   A list of the suffix types for each item, by index. END"}
{"prompt":"   A list of the suffix types for each item, by index.\n\n###\n\n","completion":"  A list of the suffix values for each item, by index. END"}
{"prompt":"  A list of the suffix values for each item, by index.\n\n###\n\n","completion":"  A list of title values for each item, by index. END"}
{"prompt":"title: \"Mobile Chart\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display a Plotly chart.\"\nhidden: false\n\n###\n\n","completion":" A chart to visualize data in different layouts using [Plotly](https:\/\/plotly.com\/). Refer to [Plotly's JavaScript reference](https:\/\/plotly.com\/javascript\/reference\/) to learn more about available options. END"}
{"prompt":"A chart to visualize data in different layouts using [Plotly](https:\/\/plotly.com\/). Refer to [Plotly's JavaScript reference](https:\/\/plotly.com\/javascript\/reference\/) to learn more about available options.\n\n###\n\n","completion":" ![Mobile Chart](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/3b031044-3d51-4633-925c-dc55f8059b71.webp) END"}
{"prompt":"![Mobile Chart](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/3b031044-3d51-4633-925c-dc55f8059b71.webp)\n\n###\n\n","completion":"  The aspect ratio (width \/ height) applied to the image. END"}
{"prompt":"  The aspect ratio (width \/ height) applied to the image.\n\n###\n\n","completion":"  Source data that is rendered by the component. END"}
{"prompt":"  Source data that is rendered by the component.\n\n###\n\n","completion":"  Name of the component. END"}
{"prompt":"  Name of the component.\n\n###\n\n","completion":"  Layout of nested components, either `row` (horizontally) or `column` (vertically). END"}
{"prompt":"  Layout of nested components, either `row` (horizontally) or `column` (vertically).\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"title: \"Mobile Checkbox\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Toggle a boolean value.\"\nhidden: false\n\n###\n\n","completion":" A checkbox to toggle a boolean value. END"}
{"prompt":"A checkbox to toggle a boolean value.\n\n###\n\n","completion":" ![Checkbox](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/e19a249e-e8ea-4b1c-97d0-af03d2a82983.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Checkbox. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Checkbox. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input. END"}
{"prompt":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input.\n\n###\n\n","completion":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified END"}
{"prompt":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified\n\n###\n\n","completion":"  When inside a Form, this key is used to pull the default value from `form.initialData` and construct the `form.data` property END"}
{"prompt":"  When inside a Form, this key is used to pull the default value from `form.initialData` and construct the `form.data` property\n\n###\n\n","completion":"  If `true`, no message will be displayed when the value is invalid END"}
{"prompt":"  If `true`, no message will be displayed when the value is invalid\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  Whether the current value has failed any validation rules END"}
{"prompt":"  Whether the current value has failed any validation rules\n\n###\n\n","completion":"  A text label for the input. END"}
{"prompt":"  A text label for the input.\n\n###\n\n","completion":"  The additional text to display with the label. END"}
{"prompt":"  The additional text to display with the label.\n\n###\n\n","completion":"  An optional array of labels for each value. The value will be displayed when a label is not provided. END"}
{"prompt":"  An optional array of labels for each value. The value will be displayed when a label is not provided.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  If `true`, a value must be provided to be valid. END"}
{"prompt":"  If `true`, a value must be provided to be valid.\n\n###\n\n","completion":"  The message to be rendered when the input is invalid. END"}
{"prompt":"  The message to be rendered when the input is invalid.\n\n###\n\n","completion":"  The value of the component. END"}
{"prompt":"  The value of the component.\n\n###\n\n","completion":"  An array of possible values. END"}
{"prompt":"title: \"Mobile Container\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Group components in a container.\"\nhidden: false\n\n###\n\n","completion":" A container to group other mobile components together. It supports a row layout to display nested mobile components horizontally. END"}
{"prompt":"A container to group other mobile components together. It supports a row layout to display nested mobile components horizontally.\n\n###\n\n","completion":" ![Container](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/cdc92761-6b5d-4d08-9ffb-4b1d68d79aae.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Container. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Container. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The vertical alignment of nested components when layout is set to `row`. END"}
{"prompt":"  The vertical alignment of nested components when layout is set to `row`.\n\n###\n\n","completion":"  The corner style of the image. END"}
{"prompt":"  The corner style of the image.\n\n###\n\n","completion":"  Gap between nested components. END"}
{"prompt":"  Gap between nested components.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  The justified alignment of nested components with fixed widths. END"}
{"prompt":"  The justified alignment of nested components with fixed widths.\n\n###\n\n","completion":"  The layout of nested components, either `row` (horizontally) or `column` (vertically). END"}
{"prompt":"  The layout of nested components, either `row` (horizontally) or `column` (vertically).\n\n###\n\n","completion":"  The horizontal and vertical padding applied to the component. END"}
{"prompt":"  The horizontal and vertical padding applied to the component.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  Whether the component's width is full or fixed. END"}
{"prompt":"title: \"Mobile Custom Collection\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display items in a custom layout.\"\nhidden: false\n\n###\n\n","completion":" A customized list of options to select an individual value. It renders each item from an array of data using a custom-built row of components. END"}
{"prompt":"A customized list of options to select an individual value. It renders each item from an array of data using a custom-built row of components.\n\n###\n\n","completion":" ![Custom Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/6445b701-67ad-4ddc-bc6e-3d718f9498b6.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Custom Collection. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Custom Collection. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether the card style is flat or elevated. END"}
{"prompt":"  Whether the card style is flat or elevated.\n\n###\n\n","completion":"  The source data that is rendered by the component. END"}
{"prompt":"  The source data that is rendered by the component.\n\n###\n\n","completion":"  The gap between nested components. END"}
{"prompt":"  The gap between nested components.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  The number of item instances. END"}
{"prompt":"  The number of item instances.\n\n###\n\n","completion":"  The horizontal and vertical padding applied to the component. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The index of the currently selected value. END"}
{"prompt":"  The index of the currently selected value.\n\n###\n\n","completion":"  The currently selected item. END"}
{"prompt":"  The currently selected item.\n\n###\n\n","completion":"  If `true`, show a separator between items. END"}
{"prompt":"title: \"Mobile Date Picker\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Select or enter a date and time.\"\nhidden: false\n\n###\n\n","completion":" A combination select and input field to select a date from a popup or directly enter it as a text value. END"}
{"prompt":"A combination select and input field to select a date from a popup or directly enter it as a text value.\n\n###\n\n","completion":" ![Date Picker](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/6f2bbf96-fb71-470c-9d1c-ae0110a7ed5e.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Date Picker. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Date Picker. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input. END"}
{"prompt":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input.\n\n###\n\n","completion":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified. END"}
{"prompt":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified.\n\n###\n\n","completion":"  The [UTC offset](https:\/\/en.wikipedia.org\/wiki\/List_of_UTC_offsets) with which to display `value` in the input field. `local` determines the UTC offset from the time zone reported by the user's browser. END"}
{"prompt":"  The [UTC offset](https:\/\/en.wikipedia.org\/wiki\/List_of_UTC_offsets) with which to display `value` in the input field. `local` determines the UTC offset from the time zone reported by the user's browser.\n\n###\n\n","completion":"  When inside a Form, this key is used to pull the default value from `form.initialData` and construct the `form.data` property. END"}
{"prompt":"  When inside a Form, this key is used to pull the default value from `form.initialData` and construct the `form.data` property.\n\n###\n\n","completion":"  If `true`, no message will be displayed when the value is invalid END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  Whether the current value has failed validation rules. END"}
{"prompt":"  Whether the current value has failed validation rules.\n\n###\n\n","completion":"  A text label for the input. END"}
{"prompt":"  The additional text to display with the label.\n\n###\n\n","completion":"  If `true`, display and output the value in the time zones specific in `displayTimeZone` and `valueTimeZone`, respectively END"}
{"prompt":"  If `true`, display and output the value in the time zones specific in `displayTimeZone` and `valueTimeZone`, respectively\n\n###\n\n","completion":"  The date format for the input. Use `datetime` to allow date and time values. END"}
{"prompt":"  The date format for the input. Use `datetime` to allow date and time values.\n\n###\n\n","completion":"  The text to display when no value is set. END"}
{"prompt":"  The text to display when no value is set.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The value of the component.\n\n###\n\n","completion":"  The [UTC offset](https:\/\/en.wikipedia.org\/wiki\/List_of_UTC_offsets) for `value`. `local` determines the UTC offset from the time zone reported by the user's browser. END"}
{"prompt":"title: \"Mobile Divider\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display a dividing line.\"\nhidden: false\n\n###\n\n","completion":" A dividing line to separate content. END"}
{"prompt":"A dividing line to separate content.\n\n###\n\n","completion":" ![Container](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/cdc92761-6b5d-4d08-9ffb-4b1d68d79aae.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Divider. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Divider. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The spacing around the component. END"}
{"prompt":"title: \"Mobile Fab\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Trigger queries and actions with a floating button.\"\nhidden: false\n\n###\n\n","completion":" A floating action button to trigger queries and other actions. END"}
{"prompt":"A floating action button to trigger queries and other actions.\n\n###\n\n","completion":" ![Fab](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/f4a66846-3ff8-4dfe-9100-b3a74757e4d4.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Fab. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Fab. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified. END"}
{"prompt":"  If `true`, the component will be greyed out and non-interactive, and the value cannot be modified.\n\n###\n\n","completion":"  The key of an icon to display. END"}
{"prompt":"  The key of an icon to display.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The primary text content. END"}
{"prompt":"title: \"Mobile Heading\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display a heading.\"\nhidden: false\n\n###\n\n","completion":" A text box to display plain text as a heading. END"}
{"prompt":"A text box to display plain text as a heading.\n\n###\n\n","completion":" ![Text](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/44e8b5cd-e52c-41e4-96fd-185426398d5b.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Heading. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Heading. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The size of the rendered value.\n\n###\n\n","completion":"  Horizontal alignment of the text. END"}
{"prompt":"  Horizontal alignment of the text.\n\n###\n\n","completion":"  The value of the component. END"}
{"prompt":"  The value of the component.\n\n###\n\n","completion":"  Whether the component's width is full or fixed. END"}
{"prompt":"title: \"Mobile Image Input\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Take a photo with the camera or select photos from the library.\"\nhidden: false\n\n###\n\n","completion":" An input field to capture images from the device's camera or photo library. Image Input supports taking or selecting multiple photos, minimum and maximum count, and quality adjustments. END"}
{"prompt":"An input field to capture images from the device's camera or photo library. Image Input supports taking or selecting multiple photos, minimum and maximum count, and quality adjustments.\n\n###\n\n","completion":" Captured images are temporarily stored on the device for native apps and in the Retool organization for web apps. END"}
{"prompt":"Captured images are temporarily stored on the device for native apps and in the Retool organization for web apps.\n\n###\n\n","completion":" ![Image Input](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/918be30f-ebe3-463f-96c3-1c720eb58e01.webp) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Image Input. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Image Input. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether the device's camera is currently open. END"}
{"prompt":"  Whether the device's camera is currently open.\n\n###\n\n","completion":"  Whether the component is disabled to prevent user interaction. END"}
{"prompt":"  Whether the component is disabled to prevent user interaction.\n\n###\n\n","completion":"  The metadata from the selected files. Includes name, type, size, and last modified. END"}
{"prompt":"  The metadata from the selected files. Includes name, type, size, and last modified.\n\n###\n\n","completion":"  Whether the component is currently hidden. END"}
{"prompt":"  Whether the component is currently hidden.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  Text label for the input. END"}
{"prompt":"  Text label for the input.\n\n###\n\n","completion":"  Input method for images. Use `camera` to use the camera, `library` to upload existing photos, or `option` to allow users to choose. END"}
{"prompt":"  Input method for images. Use `camera` to use the camera, `library` to upload existing photos, or `option` to allow users to choose.\n\n###\n\n","completion":"  Whether the device's photo library is currently open. END"}
{"prompt":"  Whether the device's photo library is currently open.\n\n###\n\n","completion":"  Whether the component takes up space on the canvas when hidden. END"}
{"prompt":"  Whether the component takes up space on the canvas when hidden.\n\n###\n\n","completion":"  The maximum number of items allowed END"}
{"prompt":"  The maximum number of items allowed\n\n###\n\n","completion":"  The minimum number of items allowed. END"}
{"prompt":"  The minimum number of items allowed.\n\n###\n\n","completion":"  The text to display when no value is set. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The resolution with which to optimize captured images. END"}
{"prompt":"  The resolution with which to optimize captured images.\n\n###\n\n","completion":"  The type of selection to allow. END"}
{"prompt":"  The type of selection to allow.\n\n###\n\n","completion":"  Whether to compress captured images. END"}
{"prompt":"  Whether to compress captured images.\n\n###\n\n","completion":"  Whether the component remains visible in the editor when `hidden` is `true`. END"}
{"prompt":"  Whether the component remains visible in the editor when `hidden` is `true`.\n\n###\n\n","completion":"  The text to display in a tooltip on hover or focus. END"}
{"prompt":"  The text to display in a tooltip on hover or focus.\n\n###\n\n","completion":"  The value of the component. Contains an array of `blob:` or `file:\/\/` URI strings for captured data (e.g., for [upload](https:\/\/docs.retool.com\/docs\/retool-mobile-components#upload-captured-signatures-or-images) to a data store). Use [utils.getDataByObjectURL()](https:\/\/docs.retool.com\/reference\/javascript-api-methods-utility#utilsgetdatabyobjecturl) if you need to convert the blob into a Base64-encoded string. END"}
{"prompt":"title: \"Mobile Image\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display an image.\"\nhidden: false\n\n###\n\n","completion":" An image sourced from a URL or Base64-encoded file. END"}
{"prompt":"An image sourced from a URL or Base64-encoded file.\n\n###\n\n","completion":" ![Image](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/f3860454-e69e-4495-b146-cbaf06950dba.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Image. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Image. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The corner style of the image. END"}
{"prompt":"  The corner style of the image.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  Date format for the input. Use `datetime` to allow date and time values. END"}
{"prompt":"  Date format for the input. Use `datetime` to allow date and time values.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  Aspect ratio (width \/ height) applied to the image. END"}
{"prompt":"  Aspect ratio (width \/ height) applied to the image.\n\n###\n\n","completion":"  The source URL. END"}
{"prompt":"title: \"Mobile Key Value\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display key-value pairs.\"\nhidden: false\n\n###\n\n","completion":" A two-column table to display rows of key-value pairs with an optional header. It supports mapped values and custom titles. END"}
{"prompt":"A two-column table to display rows of key-value pairs with an optional header. It supports mapped values and custom titles.\n\n###\n\n","completion":" ![Key Value](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0285d6e0-a20c-4b4d-b9e2-ef872f65ec01.webp) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Key Value. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Key Value. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether text wraps to multiple lines. END"}
{"prompt":"  Whether text wraps to multiple lines.\n\n###\n\n","completion":"  The source data that is rendered by the component. END"}
{"prompt":"  The source data that is rendered by the component.\n\n###\n\n","completion":"  The layout direction. END"}
{"prompt":"  The layout direction.\n\n###\n\n","completion":"  The text to display as a header. END"}
{"prompt":"  The text to display as a header.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  Whether the specified key-value pair is visible. END"}
{"prompt":"  Whether the specified key-value pair is visible.\n\n###\n\n","completion":"  Whether to render a separator between items. END"}
{"prompt":"  Whether to render a separator between items.\n\n###\n\n","completion":"  The vertical alignment of key-value pairs. Only available when `direction` is `horizontal`. END"}
{"prompt":"  The vertical alignment of key-value pairs. Only available when `direction` is `horizontal`.\n\n###\n\n","completion":"  The vertical width of the Key column. Only available when `direction` is `horizontal`. END"}
{"prompt":"title: \"Mobile List Collection\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display items in a list layout.\"\nhidden: false\n\n###\n\n","completion":" A list of options presented in a list layout to select an individual value. Options are [dynamically mapped](https:\/\/docs.retool.com\/docs\/define-option-lists) from a query, transformer, or any other data source. END"}
{"prompt":"A list of options presented in a list layout to select an individual value. Options are [dynamically mapped](https:\/\/docs.retool.com\/docs\/define-option-lists) from a query, transformer, or any other data source.\n\n###\n\n","completion":" ![List Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/f247ee3b-578e-4e0b-8ca7-a8ab75b0a799.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile List Collection. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile List Collection. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  An array of `body` values for each option, by index. END"}
{"prompt":"title: \"Mobile Map\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display a map with location markers.\"\nhidden: false\n\n###\n\n","completion":" An embedded map using [MapBox](https:\/\/www.mapbox.com\/) to display latitude and longitude coordinates as points of interest. It supports default coordinates and can trigger queries when selecting a point. END"}
{"prompt":"An embedded map using [MapBox](https:\/\/www.mapbox.com\/) to display latitude and longitude coordinates as points of interest. It supports default coordinates and can trigger queries when selecting a point.\n\n###\n\n","completion":" ![Map](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/c29b63ee-9298-422c-b967-46ea4caab452.webp) END"}
{"prompt":"![Map](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/c29b63ee-9298-422c-b967-46ea4caab452.webp)\n\n###\n\n","completion":"  The event handlers configured for the component. END"}
{"prompt":"  The event handlers configured for the component.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  The default latitude. END"}
{"prompt":"  The default latitude.\n\n###\n\n","completion":"  The default longitude. END"}
{"prompt":"  The default longitude.\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The latitude and longitude coordinates of the selected point. END"}
{"prompt":"title: \"Mobile Multiselect\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Select multiple values from a list.\"\nhidden: false\n\n###\n\n","completion":" A dropdown option field to select multiple values. Multiselect uses a full-screen list box that contains a search filter. END"}
{"prompt":"A dropdown option field to select multiple values. Multiselect uses a full-screen list box that contains a search filter.\n\n###\n\n","completion":" ![Multiselect](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/95bc26cd-2a17-4d2f-b394-a2dbf538be83.webp) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Multiselect. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Multiselect. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input. END"}
{"prompt":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input.\n\n###\n\n","completion":"  Whether the component is disabled to prevent user interaction. END"}
{"prompt":"  Whether the component is disabled to prevent user interaction.\n\n###\n\n","completion":"  When nested within a Form component, the key used to map default values from the form's `initialData`. END"}
{"prompt":"  When nested within a Form component, the key used to map default values from the form's `initialData`.\n\n###\n\n","completion":"  Whether to hide the error message if the input value is invalid. END"}
{"prompt":"  Whether to hide the error message if the input value is invalid.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  Whether the input value has failed validation. END"}
{"prompt":"  Whether the input value has failed validation.\n\n###\n\n","completion":"  Text label for the input. END"}
{"prompt":"  Text label for the input.\n\n###\n\n","completion":"  The additional text to display with the label. END"}
{"prompt":"  The additional text to display with the label.\n\n###\n\n","completion":"  The position of the label relative to the input. END"}
{"prompt":"  The position of the label relative to the input.\n\n###\n\n","completion":"  Array of labels for each item. The value of an item is returned if there is no label. END"}
{"prompt":"  Array of labels for each item. The value of an item is returned if there is no label.\n\n###\n\n","completion":"  The text to display when no value is set. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  Whether an input value is required. END"}
{"prompt":"  Whether an input value is required.\n\n###\n\n","completion":"  The message to be rendered when the input is invalid. END"}
{"prompt":"title: \"Mobile NFC Reader\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Read NFC tags.\"\nhidden: false\n\n###\n\n","completion":" A button to read NFC tags using the device's NFC reader. END"}
{"prompt":"A button to read NFC tags using the device's NFC reader.\n\n###\n\n","completion":" ![NFC reader](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/5de2b735-5d9e-4814-aef0-373aa61d0669.webp) END"}
{"prompt":"![NFC reader](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/5de2b735-5d9e-4814-aef0-373aa61d0669.webp)\n\n###\n\n","completion":" NFC Reader currently supports reading NDEF-formatted tags. Please [reach out](mobile-team@retool.com) if your use case requires reading other NFC formats. END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile NFC Reader. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile NFC Reader. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The size of the component. END"}
{"prompt":"  The size of the component.\n\n###\n\n","completion":"  The size of the rendered text. END"}
{"prompt":"  The size of the rendered text.\n\n###\n\n","completion":"  The source data that is rendered by the component. END"}
{"prompt":"  The source data that is rendered by the component.\n\n###\n\n","completion":"  Whether the component is disabled to prevent user interaction. END"}
{"prompt":"  Whether the component is disabled to prevent user interaction.\n\n###\n\n","completion":"  The icon to display after the primary content. END"}
{"prompt":"  The icon to display after the primary content.\n\n###\n\n","completion":"  The icon to display before the primary content END"}
{"prompt":"  The icon to display before the primary content\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The raw data of the component. END"}
{"prompt":"  The raw data of the component.\n\n###\n\n","completion":"  Whether the component's width is full or fixed. END"}
{"prompt":"title: \"Mobile Number Input\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Enter a number.\"\nhidden: false\n\n###\n\n","completion":" An input field to enter a number value. It supports prefix and suffix icons, and can display stepper buttons for granular control. END"}
{"prompt":"An input field to enter a number value. It supports prefix and suffix icons, and can display stepper buttons for granular control.\n\n###\n\n","completion":" ![Number Input](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/c16e3f1a-5de9-4dcd-a36f-aa6111de6fbb.jpg) END"}
{"prompt":"Available properties for Mobile Multiselect. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether to allow negative numbers. END"}
{"prompt":"  Whether to allow negative numbers.\n\n###\n\n","completion":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input. END"}
{"prompt":"  Whether to hide the error message if the input value is invalid.\n\n###\n\n","completion":"  The icon to display after the primary content. END"}
{"prompt":"  The icon to display after the primary content.\n\n###\n\n","completion":"  The icon to display before the primary content. END"}
{"prompt":"  The icon to display before the primary content.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  Whether the input value has failed validation.\n\n###\n\n","completion":"  Text label for the input END"}
{"prompt":"  Text label for the input\n\n###\n\n","completion":"  The additional text to display with the label. END"}
{"prompt":"  The additional text to display with the label.\n\n###\n\n","completion":"  The maximum length of text allowed. END"}
{"prompt":"  The maximum length of text allowed.\n\n###\n\n","completion":"  The minimum length of text allowed. END"}
{"prompt":"  The minimum length of text allowed.\n\n###\n\n","completion":"  The text to display when no value is set. END"}
{"prompt":"  Whether an input value is required.\n\n###\n\n","completion":"  Whether to show buttons to increment and decrement the value. END"}
{"prompt":"  Whether to show buttons to increment and decrement the value.\n\n###\n\n","completion":"  The message to be rendered when the input is invalid. END"}
{"prompt":"title: \"Mobile Scanner\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Scan barcodes and QR codes.\"\nhidden: false\n\n###\n\n","completion":" A button to open the camera and capture barcodes using the device's camera. It supports skipping and confirmations for continuous scanning. END"}
{"prompt":"A button to open the camera and capture barcodes using the device's camera. It supports skipping and confirmations for continuous scanning.\n\n###\n\n","completion":" ![Scanner](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0c35da2e-06f0-402c-be98-d7445f6dca84.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Scanner. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Scanner. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether to close the scanner after a single scan or continue scanning barcodes until manually closed. END"}
{"prompt":"  Whether to close the scanner after a single scan or continue scanning barcodes until manually closed.\n\n###\n\n","completion":"  The size of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  Whether the component is currently open END"}
{"prompt":"  Whether the component is currently open\n\n###\n\n","completion":"  The component type. END"}
{"prompt":"Supported barcodes\n\n###\n\n","completion":" Mobile Scanner supports a range of barcode formats on iOS and Android. END"}
{"prompt":"Mobile Scanner supports a range of barcode formats on iOS and Android.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  div.barcodes table tr td:nth-of-type(1) {\\n  font-weight: 600 !important;\\n}\\n\\ndiv.barcodes table tr td:nth-of-type(2) {\\n  font-family: var(--font-family-mono) !important;\\n}\\n  \\ndiv.barcodes table th:nth-of-type(1) {\\n    width: 40% !important;\\n}\\n\\ndiv.barcodes table th:nth-of-type(2) {\\n    width: 20% !important;\\n}\\ndiv.barcodes table th:nth-of-type(3) {\\n    width: 20% !important;\\n}\\ndiv.barcodes table th:nth-of-type(4) {\\n    width: 20% !important;\\n}\\n  \\ndiv.barcodes table tr td i.fa.fa-check::before {\\n  color: var(--green60);\\n}\\n\\ndiv.barcodes table tr td i.fa.fa-times::before {\\n  color: var(--red60);\\n}\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile Select\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Select a value from a list.\"\nhidden: false\n\n###\n\n","completion":" A dropdown option field to select a value. Select supports custom value entries to allow values outside those provided. Options are displayed in a full-screen list box with search filter when there are more than 10 values. END"}
{"prompt":"A dropdown option field to select a value. Select supports custom value entries to allow values outside those provided. Options are displayed in a full-screen list box with search filter when there are more than 10 values.\n\n###\n\n","completion":" ![Select](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/7f9b76d9-54cf-4c5b-b4c0-3d9f4f32ab15.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Select. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Select. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether to allow input values other than those specified in `values`. END"}
{"prompt":"  Whether to allow input values other than those specified in `values`.\n\n###\n\n","completion":"  Whether to allow item deselection. END"}
{"prompt":"  Whether to allow item deselection.\n\n###\n\n","completion":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input. END"}
{"prompt":"title: \"Mobile Signature\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Capture a signature as an image.\"\nhidden: false\n\n###\n\n","completion":" An input field to capture a signature and save it as an image. END"}
{"prompt":"An input field to capture a signature and save it as an image.\n\n###\n\n","completion":" ![Signature](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b0aa5d64-e209-4c4a-ac65-8210869d12af.webp) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Signature. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Signature. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether the component is disabled to prevent user interaction. END"}
{"prompt":"  Whether the component is disabled to prevent user interaction.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The name of the component.\n\n###\n\n","completion":"  Instructions for signature capture. END"}
{"prompt":"  Instructions for signature capture.\n\n###\n\n","completion":"  Text label for the input. END"}
{"prompt":"  Text label for the input.\n\n###\n\n","completion":"  The text to display when no value is set. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The value of the component. Contains a `blob:` or `file:\/\/` URI string for the captured data (e.g., for [upload](https:\/\/docs.retool.com\/docs\/retool-mobile-components#upload-captured-signatures-or-images) to a data store). Use [utils.getDataByObjectURL()](https:\/\/docs.retool.com\/reference\/javascript-api-methods-utility#utilsgetdatabyobjecturl) if you need to convert the blob into a Base64-encoded string. END"}
{"prompt":"title: \"Mobile Spacer\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Add empty space.\"\nhidden: false\n\n###\n\n","completion":" An empty area to add space between components. Spacer preserves white space in a layout whenever components positioned above are collapsed, hidden, or resized. END"}
{"prompt":"An empty area to add space between components. Spacer preserves white space in a layout whenever components positioned above are collapsed, hidden, or resized.\n\n###\n\n","completion":" ![Container](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/cdc92761-6b5d-4d08-9ffb-4b1d68d79aae.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Spacer. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Spacer. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"title: \"Mobile Text Area\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Enter multiple lines of text.\"\nhidden: false\n\n###\n\n","completion":" A text area to enter multiple lines of text. It can perform validation of required fields, minimum or maximum length, and custom rules. END"}
{"prompt":"A text area to enter multiple lines of text. It can perform validation of required fields, minimum or maximum length, and custom rules.\n\n###\n\n","completion":" ![Text Area](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2f074bdb-e8e3-4cb1-9ca5-afca24c36b3a.webp) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Text Area. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Text Area. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether to automatically capitalize text input when using a virtual keyboard. END"}
{"prompt":"  Whether to automatically capitalize text input when using a virtual keyboard.\n\n###\n\n","completion":"  Whether the input field automatically grows with its content. END"}
{"prompt":"  Whether the input field automatically grows with its content.\n\n###\n\n","completion":"  A JavaScript conditional statement for custom validation logic. If `customValidation` evaluates to a string, validation fails and it is rendered as the the error message. An empty or nullish value is treated as valid input. END"}
{"prompt":"  The maximum length of text allowed.\n\n###\n\n","completion":"  The maximum number of lines of tags to display. END"}
{"prompt":"  The maximum number of lines of tags to display.\n\n###\n\n","completion":"  The minimum length of text allowed END"}
{"prompt":"  The minimum length of text allowed\n\n###\n\n","completion":"  The minimum number of lines of tags to display. END"}
{"prompt":"  The minimum number of lines of tags to display.\n\n###\n\n","completion":"  A JavaScript regular expression (without forward slashes) for pattern validation (if `patternType` is `regex`). END"}
{"prompt":"  A JavaScript regular expression (without forward slashes) for pattern validation (if `patternType` is `regex`).\n\n###\n\n","completion":"  Validation pattern to be enforced. END"}
{"prompt":"  Validation pattern to be enforced.\n\n###\n\n","completion":"  The text to display when no value is set. END"}
{"prompt":"title: \"Mobile Text Input\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Enter a single line of text.\"\nhidden: false\n\n###\n\n","completion":" An input field to enter a single line of text. Mobile Text Input supports prefix and suffix icons, and automatic capitalization. END"}
{"prompt":"An input field to enter a single line of text. Mobile Text Input supports prefix and suffix icons, and automatic capitalization.\n\n###\n\n","completion":" ![Text Input](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d1a7d5a2-5b9d-48dc-a526-17ff3ea752f0.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Text Input. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Text Input. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Whether to automatically capitalize text input when using a virtual keyboard. END"}
{"prompt":"  The maximum number of lines of tags to display.\n\n###\n\n","completion":"  The minimum length of text allowed. END"}
{"prompt":"  The minimum length of text allowed.\n\n###\n\n","completion":"  The minimum number of lines of tags to display. END"}
{"prompt":"title: \"Mobile Text\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Display plain text.\"\nhidden: false\n\n###\n\n","completion":" A text box to display plain text. END"}
{"prompt":"A text box to display plain text.\n\n###\n\n","completion":" ![Text](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/44e8b5cd-e52c-41e4-96fd-185426398d5b.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Text. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Text. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The name of the component. END"}
{"prompt":"  The value of the component.\n\n###\n\n","completion":"  The font weight of the text. END"}
{"prompt":"  The font weight of the text.\n\n###\n\n","completion":"  Whether the component's width is full or fixed. END"}
{"prompt":"title: \"Mobile WebView\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Open a web page.\"\nhidden: false\n\n###\n\n","completion":" A button to open a web page in a web view. END"}
{"prompt":"A button to open a web page in a web view.\n\n###\n\n","completion":" ![WebView](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/037cb6d0-01a4-45a8-bfb8-a8259da8a2c4.jpg) END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile WebView. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile WebView. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  The size of the component. END"}
{"prompt":"  The size of the rendered text.\n\n###\n\n","completion":"  Whether the component is disabled to prevent user interaction. END"}
{"prompt":"  Whether the component is disabled to prevent user interaction.\n\n###\n\n","completion":"  The icon to display after the primary content END"}
{"prompt":"  The icon to display after the primary content\n\n###\n\n","completion":"  The icon to display before the primary content. END"}
{"prompt":"  The component type.\n\n###\n\n","completion":"  The source URL. END"}
{"prompt":"  The source URL.\n\n###\n\n","completion":"  Whether the component's width is full or fixed. END"}
{"prompt":"title: \"Mobile Zebra DataWedge Reader\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Capture data from Zebra Android devices with dedicated hardware.\"\nhidden: false\n\n###\n\n","completion":" A component to receive data captured by a Zebra Android device with dedicated hardware and sent using the [Zebra DataWedge APIs](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/api\/). Refer to the [Retool Mobile on Zebra devices](\/docs\/retool-mobile-zebra) guide for instructions. END"}
{"prompt":"Properties\n\n###\n\n","completion":" Available properties for Mobile Zebra DataWedge Reader. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components. END"}
{"prompt":"Available properties for Mobile Zebra DataWedge Reader. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool to manipulate or read information about components.\n\n###\n\n","completion":"  Size of the component. END"}
{"prompt":"  Size of the component.\n\n###\n\n","completion":"  Size of the rendered text. END"}
{"prompt":"  Size of the rendered text.\n\n###\n\n","completion":"  Source data that is rendered by the component. END"}
{"prompt":"  Source data that is rendered by the component.\n\n###\n\n","completion":"  Whether the component is disabled to prevent user interaction. END"}
{"prompt":"  Whether the component is disabled to prevent user interaction.\n\n###\n\n","completion":"  Event handlers for the component. END"}
{"prompt":"  Event handlers for the component.\n\n###\n\n","completion":"  Icon to display after the primary content. END"}
{"prompt":"  Icon to display after the primary content.\n\n###\n\n","completion":"  Icon to display before the primary content. END"}
{"prompt":"  Icon to display before the primary content.\n\n###\n\n","completion":"  Name of the component. END"}
{"prompt":"  Name of the component.\n\n###\n\n","completion":"  Component type. END"}
{"prompt":"  Component type.\n\n###\n\n","completion":"  Whether the component's width is full or fixed. END"}
{"prompt":"title: \"Buttons\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for triggering queries and actions.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n    padding: 0 !important;\\n min-width: 0;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n    padding: 0 !important;\\n min-width: 0;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Button.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Button<\/div>\\n <div class=\\\"description\\\">\\n Trigger queries or actions.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/dropdown-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/DropdownButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Dropdown Button<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions from a dropdown menu.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/link\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Link.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Link<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox-link-list\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/LinkList.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Link List<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/split-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SplitButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Split Button<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/toggle-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ToggleButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Toggle Button<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/toggle-link\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ToggleLink.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Toggle Link<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/multiselect-outline-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/OutlineButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Outline Button<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Containers and forms\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components that group and contain other components.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CollapsibleContainer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Collapsible Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a card that can collapse.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Container.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a container.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/json-schema-form\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/JSONSchemaForm.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">JSON Schema Form<\/div>\\n <div class=\\\"description\\\">\\nBuild a form with JSON.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/a4b5c0c5-cd9f-4b57-88c0-969a15199e5e.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Link Card<\/div>\\n <div class=\\\"description\\\">\\nDisplay text and link to a card.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/list-view\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ListView.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">List View<\/div>\\n <div class=\\\"description\\\">\\nBuild a repeating list of components.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/modal\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Modal.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Modal<\/div>\\n <div class=\\\"description\\\">\\nGroup components in an overlay.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SteppedContainer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Stepped Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a multiview card with step navigation.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/TabbedContainer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tabbed Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a multiview card with tabbed navigation.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/wizard\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Wizard.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Wizard<\/div>\\n <div class=\\\"description\\\">\\nGuide users through a set of conditional steps.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Custom\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components to embed custom functionality.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/custom-component\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CustomComponent.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Custom Component<\/div>\\n <div class=\\\"description\\\">\\nEmbed a custom React component.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/html\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/HTML.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">HTML<\/div>\\n <div class=\\\"description\\\">\\nEmbed custom HTML and CSS.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/iframe\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/IFrame.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">IFrame<\/div>\\n <div class=\\\"description\\\">\\nEmbed a web page.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Data\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for interacting with data.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/chart\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Chart.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Chart<\/div>\\n <div class=\\\"description\\\">\\nVisualize data with charts.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/json-explorer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/JSONEditor.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">JSON Explorer<\/div>\\n <div class=\\\"description\\\">\\nDisplay and explore JSON data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/key-value\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/KeyValue.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Key Value<\/div>\\n <div class=\\\"description\\\">\\nDisplay key-value pairs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/table\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Table.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Table<\/div>\\n <div class=\\\"description\\\">\\nDisplay tabulated data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Date and time inputs\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for selecting dates and times.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/calendar-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CalendarInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Calendar Input<\/div>\\n <div class=\\\"description\\\">\\n Select a data from a calendar.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/date\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Date.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Date<\/div>\\n <div class=\\\"description\\\">Select or enter a date.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/date-range\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/DateRange.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Date Range<\/div>\\n <div class=\\\"description\\\">Specify start and end dates.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/date-time\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/DateTime.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Date<\/div>\\n <div class=\\\"description\\\">Select or enter a date and time.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/month\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Month.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Month<\/div>\\n <div class=\\\"description\\\">Select or enter a month.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/time\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Time.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Time<\/div>\\n <div class=\\\"description\\\">Select or enter a time.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/year\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Year.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Year<\/div>\\n <div class=\\\"description\\\">Select or enter a year.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Integrations\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components that work directly with third-party services.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/auth-login\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/AuthLogin.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Auth Login<\/div>\\n <div class=\\\"description\\\">\\nPerform custom API authentication.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/looker\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Chart.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Looker<\/div>\\n <div class=\\\"description\\\">\\nEmbed a Looker dashboard.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/mapbox-map\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Mapbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mapbox Map<\/div>\\n <div class=\\\"description\\\">\\nDisplay a map with location markers.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/s3-uploader\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/S3Uploader.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">S3 Uploader<\/div>\\n <div class=\\\"description\\\">\\nUpload files to Amazon S3.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/stripe-card-form\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Stripe.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Stripe Card Form<\/div>\\n <div class=\\\"description\\\">\\nSubmit card information to Stripe.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/tableau\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Tableau.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tableau<\/div>\\n <div class=\\\"description\\\">\\nEmbed a Tableau visualization.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile buttons\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Mobile components to trigger queries and actions when pressed.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/41d18547-afc7-4cd5-9c25-7b49983547c5.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Button<\/div>\\n <div class=\\\"description\\\">\\nTrigger queries and actions.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-fab\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/945083ce-4d9b-4783-9098-58fac31e73cd.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Fab<\/div>\\n <div class=\\\"description\\\">\\nTrigger queries and actions with a floating button.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile forms\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Mobile components to input and select values.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-checkbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/e9e2332f-4916-4314-9e5e-7c5f6b62d116.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Checkbox<\/div>\\n <div class=\\\"description\\\">\\nToggle a boolean value.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-date-picker\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/46bd6baf-5f13-4486-b989-f54e820b97f2.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Date Picker<\/div>\\n <div class=\\\"description\\\">\\nSelect or enter a date and time.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-multiselect\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/2a9917e2-3cd0-498a-b301-d1ddc3dd72b1.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Multiselect<\/div>\\n <div class=\\\"description\\\">\\nSelect multiple values from a list.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-number-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/f3f78cc8-310e-47dd-b50a-dc65ed9ea0aa.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Number Input<\/div>\\n <div class=\\\"description\\\">\\nEnter a number.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-select\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ff4ff937-d2f6-424a-a766-7aa01ff382d3.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Select<\/div>\\n <div class=\\\"description\\\">\\nSelect a value from a list.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-signature\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/bb17af61-8bbd-4ca0-a467-beb09091ba04.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Signature<\/div>\\n <div class=\\\"description\\\">\\nCapture a signature as an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-text-area\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/de0bfdc3-73c0-457a-bc4e-11037b4b7270.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Text Area<\/div>\\n <div class=\\\"description\\\">\\nEnter multiple lines of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-text-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/283a1258-0be7-48f7-a16c-b8fd0eb5cd81.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Text Input<\/div>\\n <div class=\\\"description\\\">\\nEnter a single line of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile layout\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Mobile components to customize layouts.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/b1cb1bba-71d2-4de8-9fda-64aba640781a.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a container.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-divider\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/26a8e385-0431-4b1e-ab5f-d3a53713549f.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Divider<\/div>\\n <div class=\\\"description\\\">\\nDisplay a dividing line.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-spacer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/dff82579-db44-4155-b21c-0545cc3e7ce7.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Spacer<\/div>\\n <div class=\\\"description\\\">\\nAdd empty space.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile media\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Mobile components to display and capture media.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n<li>\\n <a href=\\\"component-mobile-chart\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/98dc4b05-53ef-44b9-9f34-af452d82c050.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Chart<\/div>\\n <div class=\\\"description\\\">\\nVisualize data with charts.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-image\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/0ad54a10-1863-4e80-828e-b1cdf6f0d8bf.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Image<\/div>\\n <div class=\\\"description\\\">\\nDisplay an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-image-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/33c0756f-93fe-4a09-be4a-856407b18dc0.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Image Input<\/div>\\n <div class=\\\"description\\\">\\nCapture or select photos to upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-map\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/a2ae1069-1673-4cc3-9ce9-2b525902ec5c.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Map<\/div>\\n <div class=\\\"description\\\">\\nDisplay a map with location markers.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-nfc-reader\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/19f46313-cf5c-4892-8950-1a15c66992c5.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile NFC Reader<\/div>\\n <div class=\\\"description\\\">\\nRead NFC tags.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-scanner\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/f6b4e591-a6d3-4d6b-9b05-3f04f9b885a1.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Scanner<\/div>\\n <div class=\\\"description\\\">\\nScan barcodes and QR codes.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-web-view\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/27a93e3c-6c05-4ef2-adec-a4320e860380.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Web View<\/div>\\n <div class=\\\"description\\\">\\nOpen a web page.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-zebra\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/f6b4e591-a6d3-4d6b-9b05-3f04f9b885a1.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Zebra DataWedge Reader<\/div>\\n <div class=\\\"description\\\">\\nCapture data from Zebra Android devices.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile patterns\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Mobile components to display items using rich layouts.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-card-collection\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/0dffdc85-5f0b-4269-b168-e8f9ae37870b.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Card Collection<\/div>\\n <div class=\\\"description\\\">\\nDisplay items in a card layout.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-custom-collection\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/3b8e5bdd-e875-4014-b2de-01973a7af41b.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Custom Collection<\/div>\\n <div class=\\\"description\\\">\\nDisplay items in a custom layout.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-key-value\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/2313de75-80a5-4225-aec8-339128c75b06.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Key Value<\/div>\\n <div class=\\\"description\\\">\\nDisplay key-value pairs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-list-collection\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/3f9baf67-5b45-4753-8da8-6a184668630a.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile List Collection<\/div>\\n <div class=\\\"description\\\">\\nDisplay items in a list layout.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile text\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Mobile components to display headings and plain text.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-heading\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/b1cb1bba-71d2-4de8-9fda-64aba640781a.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Heading<\/div>\\n <div class=\\\"description\\\">\\nDisplay a heading.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/d506571b-0916-4e25-bc13-a5b260db14c9.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Text<\/div>\\n <div class=\\\"description\\\">\\nDisplay a heading.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile components overview\"\ncategorySlug: \"mobile-components\"\nexcerpt: \"Learn about Retool's library of UI components for mobile apps.\"\nhidden: false\n\n###\n\n","completion":" [Retool Mobile](https:\/\/retool.com\/products\/mobile) components are optimized for mobile and run natively on iOS and Android. END"}
{"prompt":"[Retool Mobile](https:\/\/retool.com\/products\/mobile) components are optimized for mobile and run natively on iOS and Android.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n   padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"Patterns\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-card-collection\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/0dffdc85-5f0b-4269-b168-e8f9ae37870b.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Card Collection<\/div>\\n <div class=\\\"description\\\">\\nDisplay items in a card layout.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-custom-collection\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/3b8e5bdd-e875-4014-b2de-01973a7af41b.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Custom Collection<\/div>\\n <div class=\\\"description\\\">\\nDisplay items in a custom layout.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-key-value\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/2313de75-80a5-4225-aec8-339128c75b06.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Key Value<\/div>\\n <div class=\\\"description\\\">\\nDisplay key-value pairs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-list-collection\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/3f9baf67-5b45-4753-8da8-6a184668630a.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile List Collection<\/div>\\n <div class=\\\"description\\\">\\nDisplay items in a list layout.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Text\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-heading\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/b1cb1bba-71d2-4de8-9fda-64aba640781a.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Heading<\/div>\\n <div class=\\\"description\\\">\\nDisplay a heading.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/d506571b-0916-4e25-bc13-a5b260db14c9.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Text<\/div>\\n <div class=\\\"description\\\">\\nDisplay a heading.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Forms\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-checkbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/e9e2332f-4916-4314-9e5e-7c5f6b62d116.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Checkbox<\/div>\\n <div class=\\\"description\\\">\\nToggle a boolean value.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-date-picker\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/46bd6baf-5f13-4486-b989-f54e820b97f2.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Date Picker<\/div>\\n <div class=\\\"description\\\">\\nSelect or enter a date and time.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-multiselect\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/2a9917e2-3cd0-498a-b301-d1ddc3dd72b1.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Multiselect<\/div>\\n <div class=\\\"description\\\">\\nSelect multiple values from a list.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-number-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/f3f78cc8-310e-47dd-b50a-dc65ed9ea0aa.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Number Input<\/div>\\n <div class=\\\"description\\\">\\nEnter a number.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-select\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ff4ff937-d2f6-424a-a766-7aa01ff382d3.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Select<\/div>\\n <div class=\\\"description\\\">\\nSelect a value from a list.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-signature\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/bb17af61-8bbd-4ca0-a467-beb09091ba04.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Signature<\/div>\\n <div class=\\\"description\\\">\\nCapture a signature as an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-text-area\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/de0bfdc3-73c0-457a-bc4e-11037b4b7270.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Text Area<\/div>\\n <div class=\\\"description\\\">\\nEnter multiple lines of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-text-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/283a1258-0be7-48f7-a16c-b8fd0eb5cd81.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Text Input<\/div>\\n <div class=\\\"description\\\">\\nEnter a single line of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Buttons\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/41d18547-afc7-4cd5-9c25-7b49983547c5.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Button<\/div>\\n <div class=\\\"description\\\">\\nTrigger queries and actions.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-fab\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/945083ce-4d9b-4783-9098-58fac31e73cd.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Fab<\/div>\\n <div class=\\\"description\\\">\\nTrigger queries and actions with a floating button.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Media\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-chart\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/98dc4b05-53ef-44b9-9f34-af452d82c050.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Chart<\/div>\\n <div class=\\\"description\\\">\\nVisualize data with charts.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-image\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/0ad54a10-1863-4e80-828e-b1cdf6f0d8bf.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Image<\/div>\\n <div class=\\\"description\\\">\\nDisplay an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-image-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/33c0756f-93fe-4a09-be4a-856407b18dc0.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Image Input<\/div>\\n <div class=\\\"description\\\">\\nCapture or select photos to upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n  <li>\\n <a href=\\\"component-mobile-map\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/a2ae1069-1673-4cc3-9ce9-2b525902ec5c.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Map<\/div>\\n <div class=\\\"description\\\">\\nDisplay a map with location markers.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-nfc-reader\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/19f46313-cf5c-4892-8950-1a15c66992c5.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile NFC Reader<\/div>\\n <div class=\\\"description\\\">\\nRead NFC tags.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-scanner\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/f6b4e591-a6d3-4d6b-9b05-3f04f9b885a1.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Scanner<\/div>\\n <div class=\\\"description\\\">\\nScan barcodes and QR codes.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-web-view\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/27a93e3c-6c05-4ef2-adec-a4320e860380.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Web View<\/div>\\n <div class=\\\"description\\\">\\nOpen a web page.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-zebra\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/f6b4e591-a6d3-4d6b-9b05-3f04f9b885a1.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Zebra DataWedge Reader<\/div>\\n <div class=\\\"description\\\">\\nCapture data from Zebra Android devices.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Layout\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"component-mobile-container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/b1cb1bba-71d2-4de8-9fda-64aba640781a.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a container.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"component-mobile-divider\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/26a8e385-0431-4b1e-ab5f-d3a53713549f.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Divider<\/div>\\n <div class=\\\"description\\\">\\nDisplay a dividing line.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"component-mobile-spacer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/dff82579-db44-4155-b21c-0545cc3e7ce7.webp\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mobile Spacer<\/div>\\n <div class=\\\"description\\\">\\nAdd empty space.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Navigation\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for navigating apps and data.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\npadding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/navigation\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Navigation.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Navigation<\/div>\\n <div class=\\\"description\\\">\\nLink to apps and URLs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/pagination\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Pagination.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Pagination<\/div>\\n <div class=\\\"description\\\">\\nNavigate through pages of data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/steps\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Steps.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Steps<\/div>\\n <div class=\\\"description\\\">\\nDisplay a series of steps.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/tabs\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Tabs.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tabs<\/div>\\n <div class=\\\"description\\\">\\nSelect an option from a set of tabs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Number inputs\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for entering numbers.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n    padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n    padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/number-input\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CurrencyInput.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Currency<\/div>\\n <div class=\\\"description\\\">\\n Enter an amount in a specified currency.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/editable-number\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EditableNumber.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Editable Number<\/div>\\n <div class=\\\"description\\\">Display a click-to-edit number.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/number-input\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/NumberInput.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Number Input<\/div>\\n <div class=\\\"description\\\">Enter a number.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/number-input\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/PercentInput.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Percent<\/div>\\n <div class=\\\"description\\\">Enter a number as a percentage.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/range-slider\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/RangeSlider.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Range Slider<\/div>\\n <div class=\\\"description\\\">\\n Select start, end, and increment values.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/rating\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Rating.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Rating<\/div>\\n <div class=\\\"description\\\">\\n Select a start, heart, or smiley rating.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/slider\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Slider.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Slider<\/div>\\n <div class=\\\"description\\\">Select a single value in a range.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Presentation\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for presenting data.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n   padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n   padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/alert\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Alert.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Alert<\/div>\\n <div class=\\\"description\\\">\\nDisplay an alert with severity level.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/avatar\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Avatar.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Avatar<\/div>\\n <div class=\\\"description\\\">\\nDisplay a user photo.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/avatar-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/AvatarGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Avatar Group<\/div>\\n <div class=\\\"description\\\">\\nDisplay multiple user photos.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/calendar\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Calendar.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Calendar<\/div>\\n <div class=\\\"description\\\">\\nDisplay a calendar to create events.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/circular-image\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CircularImage.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Circular Image<\/div>\\n <div class=\\\"description\\\">\\nDisplay an image with a circle crop.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/divider\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Divider.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Divider<\/div>\\n <div class=\\\"description\\\">\\nDisplay a dividing line.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/icon\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/IconComponent.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Icon<\/div>\\n <div class=\\\"description\\\">\\nDisplay an icon.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/image\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Image.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Image<\/div>\\n <div class=\\\"description\\\">\\nDisplay an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/pdf\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/PDFViewer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">PDF<\/div>\\n <div class=\\\"description\\\">\\nEmbed a PDF.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/progress-bar\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ProgressBar.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Progress Bar<\/div>\\n <div class=\\\"description\\\">\\nDisplay a percentage as a progress bar.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/progress-circle\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ProgressCircle.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Progress Circle<\/div>\\n <div class=\\\"description\\\">\\nDisplay a percentage as a progress circle.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/spacer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Spacer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Spacer<\/div>\\n <div class=\\\"description\\\">\\nAdd blank space.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/statistic\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Statistic.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Statistic<\/div>\\n <div class=\\\"description\\\">\\nDisplay numeric stats and trends.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/tags\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Tags.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tags<\/div>\\n <div class=\\\"description\\\">\\nDisplay a collection of tags.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Text.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Text<\/div>\\n <div class=\\\"description\\\">\\nDisplay plain text, Markdown, or HTML.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/timeline\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Timeline.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Timeline<\/div>\\n <div class=\\\"description\\\">\\nDisplay a timeline of events.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/video\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Video.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Video<\/div>\\n <div class=\\\"description\\\">\\nEmbed a video.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Select inputs\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for selecting values.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n    padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n    padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/button-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ButtonGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Button Group<\/div>\\n <div class=\\\"description\\\">\\n Trigger queries or actions.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/cascader\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Cascader.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Cascader<\/div>\\n <div class=\\\"description\\\">Select values from a multi-level tree.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Checkbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Checkbox<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CheckboxGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Checkbox Group<\/div>\\n <div class=\\\"description\\\">Toggle a set of boolean values.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox-tree\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CheckboxTree.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Checkbox Tree<\/div>\\n <div class=\\\"description\\\">Select values from a multi-level tree.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/listbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Listbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Listbox<\/div>\\n <div class=\\\"description\\\">Select a value from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/multiselect\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Multiselect.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Multiselect<\/div>\\n <div class=\\\"description\\\">Select multiple values from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/multiselect-listbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/MultiselectListbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Multiselect Listbox<\/div>\\n <div class=\\\"description\\\">Select multiple values from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/radio-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/RadioGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Radio Group<\/div>\\n <div class=\\\"description\\\">Select a value from a set of options.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/segmented-control\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SegmentedControl.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Segmented Control<\/div>\\n <div class=\\\"description\\\">Select a value from a set of options.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/select\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Select.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Select<\/div>\\n <div class=\\\"description\\\">Select a value from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/switch\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Switch.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Switch<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/switch-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SwitchGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Switch Group<\/div>\\n <div class=\\\"description\\\">Toggle a set of boolean values.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Special inputs\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for specialized input of data.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/annotated-text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/AnnotatedText.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Annotated Text<\/div>\\n <div class=\\\"description\\\">\\nSelect and tag text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/bounding-box\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/BoundingBox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Bounding Box<\/div>\\n <div class=\\\"description\\\">\\nSelect and tag areas of an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/comment\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Comment.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Comment<\/div>\\n <div class=\\\"description\\\">\\nShare comments with other users.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/json-editor\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/JSONEditor.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">JSON Editor<\/div>\\n <div class=\\\"description\\\">\\nEdit and validate JSON.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/feature-flags\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/acb597f7-d0d3-479d-b333-fc853b7bd71c.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Feature Flags<\/div>\\n <div class=\\\"description\\\">\\nA list of toggles with metadata.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/file-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/FileButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">File Button<\/div>\\n <div class=\\\"description\\\">\\nBrowse and select files to upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/file-dropzone\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/FileDropzone.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">File Dropzone<\/div>\\n <div class=\\\"description\\\">\\nDrag and drop files for upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/file-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/FileInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">File Input<\/div>\\n <div class=\\\"description\\\">\\nBrowse and select files to upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/microphone\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Microphone.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Microphone<\/div>\\n <div class=\\\"description\\\">\\nRecord and play back audio.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/query-builder\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/QueryBuilder.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Query Builder<\/div>\\n <div class=\\\"description\\\">\\nCreate rules to filter data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/scanner\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Scanner.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Scanner<\/div>\\n <div class=\\\"description\\\">\\nScan barcodes and QR codes.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/signature-pad\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Signature.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Signature Pad<\/div>\\n <div class=\\\"description\\\">\\nCapture a signature as an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/timer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Timer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Timer<\/div>\\n <div class=\\\"description\\\">\\nRecord elapsed time.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Text inputs\"\ncategorySlug: \"web-components\"\nexcerpt: \"Components for entering text.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n\\n \\n section.components {\\n display: flex;\\n }\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border: 1px solid #d8d8d8;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transition: all .1s ease-in;\\n flex: 1;\\n min-width: 0;\\n padding: 0 !important;\\n\\n }\\n\\n section ul.ctas li a:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n color: rgb(104, 117, 217);\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/editable-text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EditableText.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Editable Text<\/div>\\n <div class=\\\"description\\\">\\n Display click-to-edit text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/editable-text-area\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EditableTextArea.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Editable Text Area<\/div>\\n <div class=\\\"description\\\">\\n Display click-to-edit multiline text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/email\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EmailInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Email<\/div>\\n <div class=\\\"description\\\">\\n Enter an email and validate its format.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/password\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/PasswordInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Password<\/div>\\n <div class=\\\"description\\\">\\n Enter a password that is hidden or shown.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/rich-text-editor\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/RichTextEditor.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Rich Text Editor<\/div>\\n <div class=\\\"description\\\">\\n Edit text using rich formatting.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/text-area\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/TextArea.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Text Area<\/div>\\n <div class=\\\"description\\\">\\n Enter multiple lines of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/text-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/TextInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Text Input<\/div>\\n <div class=\\\"description\\\">\\n Enter a single line of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/url\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/URLInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">URL<\/div>\\n <div class=\\\"description\\\">\\n Enter a URL and validate its format.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Web components overview\"\ncategorySlug: \"web-components\"\nexcerpt: \"Learn about Retool's library of UI components.\"\nhidden: false\n\n###\n\n","completion":" [Retool components](https:\/\/retool.com\/components) are the fundamental building blocks of Retool apps. They are prebuilt interface elements to display data, and manipulate or interact with it based on user actions. END"}
{"prompt":"[Retool components](https:\/\/retool.com\/components) are the fundamental building blocks of Retool apps. They are prebuilt interface elements to display data, and manipulate or interact with it based on user actions.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\n div.markdown-body h2 {\\n   margin-top: 50px;\\n }\\n \\n section.components {\\n display: flex;\\n  }\\n   \\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n background: #fff;\\n min-width: 50%;\\n    transition: all .1s ease-in;\\n\\n }\\n\\n section ul.ctas li a {\\n background-color: #f6f6f6;\\n border-radius: 4px;\\n font-size: 12px;\\n text-decoration: none !important;\\n\\n flex: 1;\\n   padding: 0 !important;\\n min-width: 0;\\n   border: 1px solid #d8d8d8;\\n }\\n\\nsection ul.ctas li a:hover {\\n  border: none;\\n  }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n text-align: center;\\n }\\n\\n\\n section ul.ctas li a div.preview img {\\n max-width: 90%;\\n min-width: 60%;\\n margin: 0 auto;\\n }\\n\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight, 600);\\n   color: #3c92dc;\\n }\\n\\n div.desc {\\n background: #fff;\\n border-top: 1px solid #d8d8d8;\\n padding: 5px;\\n border-bottom-left-radius: 4px;\\n border-bottom-right-radius: 4px;\\n height: 60px;\\n }\\n\\n\\n div.description {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n }\\n\\n\\n @media only screen and (max-width:1450px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 65%;\\n }\\n }\\n\\n @media only screen and (max-width:1181px) {\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }}\\n\\n @media only screen and (max-width:1113px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(3, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 60%;\\n min-width: 20%;\\n }\\n }\\n\\n @media only screen and (max-width:1025px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(2, 1fr);\\n }\\n\\n section ul.ctas li a div.preview {\\n height: 100px;\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 50%;\\n }\\n }\\n\\n @media only screen and (max-width:700px) {\\n\\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n grid-template-columns: repeat(1, 1fr);\\n }\\n\\n section ul.ctas li a div.preview img {\\n max-width: 40%;\\n }\\n }\\n\\n @media only screen and (max-width:480px) {\\n\\n section ul.ctas li a div.preview img {\\n max-width: 80%;\\n }\\n }\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"Text inputs\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/editable-text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EditableText.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Editable Text<\/div>\\n <div class=\\\"description\\\">\\n Display click-to-edit text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/editable-text-area\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EditableTextArea.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Editable Text Area<\/div>\\n <div class=\\\"description\\\">\\n Display click-to-edit multiline text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/email\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EmailInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Email<\/div>\\n <div class=\\\"description\\\">\\n Enter an email and validate its format.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/password\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/PasswordInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Password<\/div>\\n <div class=\\\"description\\\">\\n Enter a password that is hidden or shown.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/rich-text-editor\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/RichTextEditor.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Rich Text Editor<\/div>\\n <div class=\\\"description\\\">\\n Edit text using rich formatting.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/text-area\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/TextArea.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Text Area<\/div>\\n <div class=\\\"description\\\">\\n Enter multiple lines of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/text-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/TextInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Text Input<\/div>\\n <div class=\\\"description\\\">\\n Enter a single line of text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/url\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/URLInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">URL<\/div>\\n <div class=\\\"description\\\">\\n Enter a URL and validate its format.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Number inputs\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/currency\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CurrencyInput.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Currency<\/div>\\n <div class=\\\"description\\\">\\n Enter an amount in a specified currency.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/editable-number\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/EditableNumber.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Editable Number<\/div>\\n <div class=\\\"description\\\">Display a click-to-edit number.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/number-input\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/NumberInput.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Number Input<\/div>\\n <div class=\\\"description\\\">Enter a number.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/percent\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/PercentInput.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Percent<\/div>\\n <div class=\\\"description\\\">Enter a number as a percentage.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/range-slider\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/RangeSlider.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Range Slider<\/div>\\n <div class=\\\"description\\\">\\n Select start, end, and increment values.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/rating\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Rating.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Rating<\/div>\\n <div class=\\\"description\\\">\\n Select a start, heart, or smiley rating.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/slider\\\">\\n <div class=\\\"preview\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Slider.jpg\\\"\\n \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Slider<\/div>\\n <div class=\\\"description\\\">Select a single value in a range.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Select inputs\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/button-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ButtonGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Button Group<\/div>\\n <div class=\\\"description\\\">\\n Trigger queries or actions.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/cascader\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Cascader.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Cascader<\/div>\\n <div class=\\\"description\\\">Select values from a multi-level tree.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Checkbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Checkbox<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CheckboxGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Checkbox Group<\/div>\\n <div class=\\\"description\\\">Toggle a set of boolean values.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox-tree\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CheckboxTree.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Checkbox Tree<\/div>\\n <div class=\\\"description\\\">Select values from a multi-level tree.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/listbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Listbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Listbox<\/div>\\n <div class=\\\"description\\\">Select a value from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/multiselect\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Multiselect.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Multiselect<\/div>\\n <div class=\\\"description\\\">Select multiple values from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/multiselect-listbox\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/MultiselectListbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Multiselect Listbox<\/div>\\n <div class=\\\"description\\\">Select multiple values from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/radio-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/RadioGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Radio Group<\/div>\\n <div class=\\\"description\\\">Select a value from a set of options.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/segmented-control\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SegmentedControl.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Segmented Control<\/div>\\n <div class=\\\"description\\\">Select a value from a set of options.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/select\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Select.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Select<\/div>\\n <div class=\\\"description\\\">Select a value from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/switch\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Switch.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Switch<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/switch-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SwitchGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Switch Group<\/div>\\n <div class=\\\"description\\\">Toggle a set of boolean values.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Buttons\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Button.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Button<\/div>\\n <div class=\\\"description\\\">\\n Trigger queries or actions.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/dropdown-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/DropdownButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Dropdown Button<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions from a dropdown menu.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/link\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Link.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Link<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/checkbox-link-list\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/LinkList.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Link List<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions from a list.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/split-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SplitButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Split Button<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/toggle-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ToggleButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Toggle Button<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/toggle-link\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ToggleLink.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Toggle Link<\/div>\\n <div class=\\\"description\\\">Toggle a boolean value.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/multiselect-outline-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/OutlineButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Outline Button<\/div>\\n <div class=\\\"description\\\">Trigger queries or actions.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Date and time inputs\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/calendar-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CalendarInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Calendar Input<\/div>\\n <div class=\\\"description\\\">\\n Select a data from a calendar.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/date\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Date.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Date<\/div>\\n <div class=\\\"description\\\">Select or enter a date.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/date-range\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/DateRange.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Date Range<\/div>\\n <div class=\\\"description\\\">Specify start and end dates.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/date-time\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/DateTime.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Date<\/div>\\n <div class=\\\"description\\\">Select or enter a date and time.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/month\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Month.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Month<\/div>\\n <div class=\\\"description\\\">Select or enter a month.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/time\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Time.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Time<\/div>\\n <div class=\\\"description\\\">Select or enter a time.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/year\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Year.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Year<\/div>\\n <div class=\\\"description\\\">Select or enter a year.<\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Special inputs\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/annotated-text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/AnnotatedText.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Annotated Text<\/div>\\n <div class=\\\"description\\\">\\nSelect and tag text.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/bounding-box\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/BoundingBox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Bounding Box<\/div>\\n <div class=\\\"description\\\">\\nSelect and tag areas of an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/comment\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Comment.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Comment<\/div>\\n <div class=\\\"description\\\">\\nShare comments with other users.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/json-editor\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/JSONEditor.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">JSON Editor<\/div>\\n <div class=\\\"description\\\">\\nEdit and validate JSON.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/feature-flags\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/acb597f7-d0d3-479d-b333-fc853b7bd71c.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Feature Flags<\/div>\\n <div class=\\\"description\\\">\\nA list of toggles with metadata.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/file-button\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/FileButton.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">File Button<\/div>\\n <div class=\\\"description\\\">\\nBrowse and select files to upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/file-dropzone\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/FileDropzone.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">File Dropzone<\/div>\\n <div class=\\\"description\\\">\\nDrag and drop files for upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/file-input\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/FileInput.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">File Input<\/div>\\n <div class=\\\"description\\\">\\nBrowse and select files to upload.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/microphone\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Microphone.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Microphone<\/div>\\n <div class=\\\"description\\\">\\nRecord and play back audio.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/query-builder\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/QueryBuilder.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Query Builder<\/div>\\n <div class=\\\"description\\\">\\nCreate rules to filter data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/scanner\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Scanner.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Scanner<\/div>\\n <div class=\\\"description\\\">\\nScan barcodes and QR codes.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/signature-pad\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Signature.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Signature Pad<\/div>\\n <div class=\\\"description\\\">\\nCapture a signature as an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/timer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Timer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Timer<\/div>\\n <div class=\\\"description\\\">\\nRecord elapsed time.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Data\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/chart\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Chart.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Chart<\/div>\\n <div class=\\\"description\\\">\\nVisualize data with charts.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/json-explorer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/JSONEditor.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">JSON Explorer<\/div>\\n <div class=\\\"description\\\">\\nDisplay and explore JSON data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/key-value\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/KeyValue.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Key Value<\/div>\\n <div class=\\\"description\\\">\\nDisplay key-value pairs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/table\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Table.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Table<\/div>\\n <div class=\\\"description\\\">\\nDisplay tabulated data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Presentation\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/alert\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Alert.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Alert<\/div>\\n <div class=\\\"description\\\">\\nDisplay an alert with severity level.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/avatar\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Avatar.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Avatar<\/div>\\n <div class=\\\"description\\\">\\nDisplay a user photo.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/avatar-group\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/AvatarGroup.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Avatar Group<\/div>\\n <div class=\\\"description\\\">\\nDisplay multiple user photos.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/calendar\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Calendar.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Calendar<\/div>\\n <div class=\\\"description\\\">\\nDisplay a calendar to create events.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/circular-image\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CircularImage.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Circular Image<\/div>\\n <div class=\\\"description\\\">\\nDisplay an image with a circle crop.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/divider\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Divider.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Divider<\/div>\\n <div class=\\\"description\\\">\\nDisplay a dividing line.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/icon\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/IconComponent.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Icon<\/div>\\n <div class=\\\"description\\\">\\nDisplay an icon.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/image\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Image.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Image<\/div>\\n <div class=\\\"description\\\">\\nDisplay an image.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/pdf\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/PDFViewer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">PDF<\/div>\\n <div class=\\\"description\\\">\\nEmbed a PDF.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/progress-bar\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ProgressBar.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Progress Bar<\/div>\\n <div class=\\\"description\\\">\\nDisplay a percentage as a progress bar.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/progress-circle\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ProgressCircle.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Progress Circle<\/div>\\n <div class=\\\"description\\\">\\nDisplay a percentage as a progress circle.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/spacer\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Spacer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Spacer<\/div>\\n <div class=\\\"description\\\">\\nAdd blank space.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/statistic\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Statistic.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Statistic<\/div>\\n <div class=\\\"description\\\">\\nDisplay numeric stats and trends.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/tags\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Tags.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tags<\/div>\\n <div class=\\\"description\\\">\\nDisplay a collection of tags.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/text\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Text.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Text<\/div>\\n <div class=\\\"description\\\">\\nDisplay plain text, Markdown, or HTML.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/timeline\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Timeline.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Timeline<\/div>\\n <div class=\\\"description\\\">\\nDisplay a timeline of events.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/video\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Video.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Video<\/div>\\n <div class=\\\"description\\\">\\nEmbed a video.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Containers and forms\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CollapsibleContainer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Collapsible Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a card that can collapse.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Container.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a container.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/json-schema-form\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/JSONSchemaForm.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">JSON Schema Form<\/div>\\n <div class=\\\"description\\\">\\nBuild a form with JSON.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/a4b5c0c5-cd9f-4b57-88c0-969a15199e5e.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Link Card<\/div>\\n <div class=\\\"description\\\">\\nDisplay text and link to a card.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/list-view\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/ListView.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">List View<\/div>\\n <div class=\\\"description\\\">\\nBuild a repeating list of components.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/modal\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Modal.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Modal<\/div>\\n <div class=\\\"description\\\">\\nGroup components in an overlay.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/SteppedContainer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Stepped Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a multiview card with step navigation.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/container\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/TabbedContainer.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tabbed Container<\/div>\\n <div class=\\\"description\\\">\\nGroup components in a multiview card with tabbed navigation.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/wizard\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Wizard.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Wizard<\/div>\\n <div class=\\\"description\\\">\\nGuide users through a set of conditional steps.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Navigation\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/navigation\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Navigation.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Navigation<\/div>\\n <div class=\\\"description\\\">\\nLink to apps and URLs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/pagination\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Pagination.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Pagination<\/div>\\n <div class=\\\"description\\\">\\nNavigate through pages of data.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/steps\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Steps.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Steps<\/div>\\n <div class=\\\"description\\\">\\nDisplay a series of steps.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/tabs\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Tabs.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tabs<\/div>\\n <div class=\\\"description\\\">\\nSelect an option from a set of tabs.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Integrations\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/auth-login\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/AuthLogin.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Auth Login<\/div>\\n <div class=\\\"description\\\">\\nPerform custom API authentication.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/looker\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Chart.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Looker<\/div>\\n <div class=\\\"description\\\">\\nEmbed a Looker dashboard.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/mapbox-map\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Mapbox.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Mapbox Map<\/div>\\n <div class=\\\"description\\\">\\nDisplay a map with location markers.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/s3-uploader\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/S3Uploader.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">S3 Uploader<\/div>\\n <div class=\\\"description\\\">\\nUpload files to Amazon S3.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/stripe-card-form\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Stripe.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Stripe Card Form<\/div>\\n <div class=\\\"description\\\">\\nSubmit card information to Stripe.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/tableau\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/Tableau.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Tableau<\/div>\\n <div class=\\\"description\\\">\\nEmbed a Tableau visualization.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Custom components\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"components\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/custom-component\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/CustomComponent.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">Custom Component<\/div>\\n <div class=\\\"description\\\">\\nEmbed a custom React component.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/html\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/HTML.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">HTML<\/div>\\n <div class=\\\"description\\\">\\nEmbed custom HTML and CSS.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"https:\/\/retool.com\/components\/iframe\\\">\\n <div class=\\\"preview\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/IFrame.jpg\\\" \/>\\n <\/div>\\n <div class=\\\"desc\\\">\\n <div class=\\\"name\\\">IFrame<\/div>\\n <div class=\\\"description\\\">\\nEmbed a web page.\\n <\/div>\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Components\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-concepts\"\nexcerpt: \"Learn more about Retool's UI components.\"\nhidden: false\n\n###\n\n","completion":" _Components_ are the fundamental building blocks of Retool apps. They are prebuilt interface elements to display data, and manipulate or interact with it based on user actions. Refer to the [Retool Component Library](https:\/\/retool.com\/components) to browse available components and view reference documentation. END"}
{"prompt":"How components work\n\n###\n\n","completion":" You drag and drop components in the App editor to assemble your app's interface, then configure them to interact with data, perform actions, or render content. Any changes you make to the component's state in the App editor or by interacting with the component are immediately reflected. END"}
{"prompt":"You drag and drop components in the App editor to assemble your app's interface, then configure them to interact with data, perform actions, or render content. Any changes you make to the component's state in the App editor or by interacting with the component are immediately reflected.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/cc36851e-d898-486c-b244-6e298632d5a7.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/312d6458-d80d-417e-a715-6b8d9fdc772f.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Component model\n\n###\n\n","completion":" Retool's components are functionally similar to React components. They are designed to be modular and reusable, and have internal state. Each component is represented by a JavaScript object that contains all of its properties and their current values. The following is an example of a Text Input component: END"}
{"prompt":"Retool's components are functionally similar to React components. They are designed to be modular and reusable, and have internal state. Each component is represented by a JavaScript object that contains all of its properties and their current values. The following is an example of a Text Input component:\n\n###\n\n","completion":" Similar components often share characteristics, allowing you to switch a component from one to another with little to no change. This makes it possible to switch components as your needs grow without having to rebuild your UI from scratch. END"}
{"prompt":"Similar components often share characteristics, allowing you to switch a component from one to another with little to no change. This makes it possible to switch components as your needs grow without having to rebuild your UI from scratch.\n\n###\n\n","completion":" ![Switch component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/e2b6fba5-8f4c-4df7-94f1-4304ce711dec.webp) END"}
{"prompt":"Configuration and properties\n\n###\n\n","completion":" You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool using `{{ }}` and component property values are available globally. This makes it possible to reference other properties when configuring a value. END"}
{"prompt":"You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere in Retool using `{{ }}` and component property values are available globally. This makes it possible to reference other properties when configuring a value.\n\n###\n\n","completion":" For example, you can configure a [Text](https:\/\/retool.com\/components\/text) component to display the value of a [Text Input](https:\/\/retool.com\/components\/text-input) component with `{{ textInput1.value }}` in the App editor. This also makes it possible to control behavior through truthy or falsy values. You can use expressions like a [ternary operator](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Operators\/Conditional_Operator) to use different values based on a condition, such as the value of a [Checkbox](https:\/\/retool.com\/components\/checkbox) component. END"}
{"prompt":"For example, you can configure a [Text](https:\/\/retool.com\/components\/text) component to display the value of a [Text Input](https:\/\/retool.com\/components\/text-input) component with `{{ textInput1.value }}` in the App editor. This also makes it possible to control behavior through truthy or falsy values. You can use expressions like a [ternary operator](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Operators\/Conditional_Operator) to use different values based on a condition, such as the value of a [Checkbox](https:\/\/retool.com\/components\/checkbox) component.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdemos%2Fff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/bbcc55ee-0d8a-46d4-a88a-5b4d8d8bd771\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Events\n\n###\n\n","completion":" Many components trigger events based on certain user interactions, such as clicking a button or selecting a value. [Event handling](https:\/\/docs.retool.com\/docs\/event-handlers) enables you to trigger queries or perform actions based on the type of event. END"}
{"prompt":"Many components trigger events based on certain user interactions, such as clicking a button or selecting a value. [Event handling](https:\/\/docs.retool.com\/docs\/event-handlers) enables you to trigger queries or perform actions based on the type of event.\n\n###\n\n","completion":" Retool's approach with components makes it possible for you to build complex UIs that reflect changes immediately and dynamically adjust based on any conditions you need. END"}
{"prompt":"Retool's approach with components makes it possible for you to build complex UIs that reflect changes immediately and dynamically adjust based on any conditions you need.\n\n###\n\n","completion":" ![Configure a click event handler for a Button component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/components\/3beacede-85ea-414a-bc2a-bf0dd71a0fcd.webp) END"}
{"prompt":"Methods\n\n###\n\n","completion":" The majority of components include JavaScript _methods_ that control their behavior. Component methods make it possible to write complex JavaScript statements to interact with components and change their state in ways that cannot be achieved with references or inline JavaScript using `{{ }}`. END"}
{"prompt":"The majority of components include JavaScript _methods_ that control their behavior. Component methods make it possible to write complex JavaScript statements to interact with components and change their state in ways that cannot be achieved with references or inline JavaScript using `{{ }}`.\n\n###\n\n","completion":" Similar components often share the same methods. For example, `setValue()` is commonly supported by most inputs as a method to set the value of the component. END"}
{"prompt":"Presets\n\n###\n\n","completion":" A _preset_ is a preconfigured version of an existing component. Retool's component library includes a number of presets for commonly used configurations. For instance, the URL component is a [Text Input](https:\/\/retool.com\/components\/text-input) component that is preconfigured with URL pattern matching and prefix text. The URL component has the same internal state as Text Input, but configured for URL inputs. END"}
{"prompt":"Custom components\n\n###\n\n","completion":" If you have a use case that isn't handled by Retool's built-in components, you can build your own [custom component](https:\/\/docs.retool.com\/docs\/custom-components) using HTML, CSS, JavaScript, and React. Custom components are complex but enable you to develop a component that meets your exact needs. END"}
{"prompt":"title: \"Configure Auth0 OIDC SSO\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to set up Auth0 SSO with OpenID Connect (OIDC).\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Suppose we want to set up SSO with Auth0 for an instance of Retool running on <https:\/\/retool.foocorp.com>. END"}
{"prompt":"Suppose we want to set up SSO with Auth0 for an instance of Retool running on <https:\/\/retool.foocorp.com>.\n\n###\n\n","completion":" ![In Auth0, this is found in the Settings section of your application.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/075a9ee-Screen_Shot_2020-09-25_at_12.03.45_AM.png) END"}
{"prompt":"![In Auth0, this is found in the Settings section of your application.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/075a9ee-Screen_Shot_2020-09-25_at_12.03.45_AM.png)\n\n###\n\n","completion":" ![In Auth0, this is found in Settings -> Advanced Settings -> Endpoints](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0bca603-Screen_Shot_2020-09-25_at_12.05.32_AM.png) END"}
{"prompt":"![In Auth0, this is found in Settings -> Advanced Settings -> Endpoints](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0bca603-Screen_Shot_2020-09-25_at_12.05.32_AM.png)\n\n###\n\n","completion":" ![In Auth0, this is found in Settings -> Application URIs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c85940f-Screen_Shot_2020-09-25_at_12.07.14_AM.png) END"}
{"prompt":"![In Auth0, this is found in Settings -> Application URIs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c85940f-Screen_Shot_2020-09-25_at_12.07.14_AM.png)\n\n###\n\n","completion":" For example, with Auth0, ID Tokens look like this: END"}
{"prompt":"For example, with Auth0, ID Tokens look like this:\n\n###\n\n","completion":" Which when decoded, look like this: END"}
{"prompt":"Which when decoded, look like this:\n\n###\n\n","completion":" We see here that the `email` field is what we'll want to use to identify the user, and that the `given_name` and `family_name` correspond to the user's first and last name. END"}
{"prompt":"We see here that the `email` field is what we'll want to use to identify the user, and that the `given_name` and `family_name` correspond to the user's first and last name.\n\n###\n\n","completion":" Here's an example of how you might configure the Auth0 app: END"}
{"prompt":"Here's an example of how you might configure the Auth0 app:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e5231c9-Screen_Shot_2020-10-22_at_1.10.14_PM.png) END"}
{"prompt":"title: \"Configure Azure AD OIDC SSO\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to set up Azure AD SSO with OpenID Connect (OIDC).\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" **1. Create an Azure Active Directory Enterprise application** END"}
{"prompt":"**1. Create an Azure Active Directory Enterprise application**\n\n###\n\n","completion":" **2. Configure secrets** END"}
{"prompt":"**2. Configure secrets**\n\n###\n\n","completion":" **3. Configure optional claims** END"}
{"prompt":"**3. Configure optional claims**\n\n###\n\n","completion":" **4. (Optional) Configure group claims** END"}
{"prompt":"**4. (Optional) Configure group claims**\n\n###\n\n","completion":" You can optionally map Azure AD groups to Retool groups to automatically assign users to groups when they authenticate using SSO. This requires adding group claims to the **ID token**. END"}
{"prompt":"You can optionally map Azure AD groups to Retool groups to automatically assign users to groups when they authenticate using SSO. This requires adding group claims to the **ID token**.\n\n###\n\n","completion":" In the **Azure app registration experience**, access the **Token configuration** menu. Add **optional claims** for the **ID token**: END"}
{"prompt":"In the **Azure app registration experience**, access the **Token configuration** menu. Add **optional claims** for the **ID token**:\n\n###\n\n","completion":" You specify the mapping between Azure AD groups and Retool groups in a subsequent step. END"}
{"prompt":"You specify the mapping between Azure AD groups and Retool groups in a subsequent step.\n\n###\n\n","completion":" **5. Retrieve connection details** END"}
{"prompt":"**5. Retrieve connection details**\n\n###\n\n","completion":" **6. Configure required Retool environment variables** END"}
{"prompt":"**6. Configure required Retool environment variables**\n\n###\n\n","completion":" Add the following [environment variables](\/reference\/environment-variables-reference#authentication) to your `docker.env` file: END"}
{"prompt":"Add the following [environment variables](\/reference\/environment-variables-reference#authentication) to your `docker.env` file:\n\n###\n\n","completion":" **7. Configure optional Retool environment variables** END"}
{"prompt":"**7. Configure optional Retool environment variables**\n\n###\n\n","completion":" If you want to transmit the user's first name and last name to Retool, set the following environment variables: END"}
{"prompt":"If you want to transmit the user's first name and last name to Retool, set the following environment variables:\n\n###\n\n","completion":" If you configured group claims in step four, construct a [role mapping string](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#role-mapping) to map Azure AD group object IDs to Retool group names. Find Azure AD group object IDs in the **Azure Groups application**. END"}
{"prompt":"If you configured group claims in step four, construct a [role mapping string](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#role-mapping) to map Azure AD group object IDs to Retool group names. Find Azure AD group object IDs in the **Azure Groups application**.\n\n###\n\n","completion":" For example, let's say you have an Azure AD group called \"Retool Editors\" with an object ID of `fd951-f454-4b7a`. All members of this group should be assigned to the \"Editor\" group in Retool. Your role mapping string would be `fd951-f454-4b7a -> editor`. END"}
{"prompt":"For example, let's say you have an Azure AD group called \"Retool Editors\" with an object ID of `fd951-f454-4b7a`. All members of this group should be assigned to the \"Editor\" group in Retool. Your role mapping string would be `fd951-f454-4b7a -> editor`.\n\n###\n\n","completion":" Set the following environment variables to complete the process: END"}
{"prompt":"Set the following environment variables to complete the process:\n\n###\n\n","completion":" **8. (Optional, but recommended) Turn on JIT User Provisioning** END"}
{"prompt":"**8. (Optional, but recommended) Turn on JIT User Provisioning**\n\n###\n\n","completion":" Just in time (JIT) user provisioning enables Retool to provision user accounts when users sign in for the first time. This means you won't have to manually invite each user to Retool first. To turn this on, toggle the switch on the **Settings** > **Advanced** page. END"}
{"prompt":"Just in time (JIT) user provisioning enables Retool to provision user accounts when users sign in for the first time. This means you won't have to manually invite each user to Retool first. To turn this on, toggle the switch on the **Settings** > **Advanced** page.\n\n###\n\n","completion":" **9. Test the integration** END"}
{"prompt":"title: \"Configure Google OIDC SSO\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to set up Google SSO with OpenID Connect (OIDC).\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2a47d97-Screen_Shot_2021-02-04_at_11.57.26_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2a47d97-Screen_Shot_2021-02-04_at_11.57.26_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/59fdc0f-Screen_Shot_2021-02-05_at_12.00.34_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/59fdc0f-Screen_Shot_2021-02-05_at_12.00.34_AM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2f1ec89-Screen_Shot_2021-02-05_at_12.03.09_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2f1ec89-Screen_Shot_2021-02-05_at_12.03.09_AM.png)\n\n###\n\n","completion":" Here's an example of how you might configure your SSO integration: END"}
{"prompt":"title: \"Configure Google SSO\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to configure Google Sign-in for SSO on self-hosted deployments.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" You can configure SSO using the [Sign in with Google](https:\/\/developers.google.com\/identity\/gsi\/web\/guides\/overview) following this guide. This guide applies to self-hosted deployments, but Google Sign-in SSO is also available on Retool Cloud, where it does not require additional configuration. END"}
{"prompt":"1. Configure Google OAuth client\n\n###\n\n","completion":" If you are prompted to configure a consent screen, select **Internal** as the **User type**. END"}
{"prompt":"If you are prompted to configure a consent screen, select **Internal** as the **User type**.\n\n###\n\n","completion":" Click **Create Credentials > OAuth client ID** to create a [Google OAuth client](https:\/\/developers.google.com\/identity\/gsi\/web\/guides\/get-google-api-clientid). Use the following settings. END"}
{"prompt":"2. Update settings in Retool\n\n###\n\n","completion":" Click on your new OAuth application in the **Credentials** tab, and copy the **Client ID** and **Client secret**. Save each in your `docker.env` file using the `CLIENT_ID` and `CLIENT_SECRET` environment variables. END"}
{"prompt":"Click on your new OAuth application in the **Credentials** tab, and copy the **Client ID** and **Client secret**. Save each in your `docker.env` file using the `CLIENT_ID` and `CLIENT_SECRET` environment variables.\n\n###\n\n","completion":" If you use Kubernetes, place the base64-encoded version of these strings inside your Kubernetes secrets file instead of in `docker.env`. END"}
{"prompt":"If you use Kubernetes, place the base64-encoded version of these strings inside your Kubernetes secrets file instead of in `docker.env`.\n\n###\n\n","completion":" If you want to restrict sign-in to SSO and remove the option for users to sign in with a username and password, add the `RESTRICTED_DOMAIN` environment variable. END"}
{"prompt":"If you want to restrict sign-in to SSO and remove the option for users to sign in with a username and password, add the `RESTRICTED_DOMAIN` environment variable.\n\n###\n\n","completion":" When setting `RESTRICTED_DOMAIN`, do not include the protocol or subdomain where you have Retool deployed. Only use `yourcompany.com`, which should match the email address users use to sign in. See the [environment variables](https:\/\/docs.retool.com\/reference\/environment-variables-reference#authentication) reference for more details. END"}
{"prompt":"3. Restart the Retool instance\n\n###\n\n","completion":" Restart your Retool instance to reload the configuration and enable Google SSO. If you use Docker, you can restart the instance with `docker-compose up`. END"}
{"prompt":"4. Enable JIT user provisioning\n\n###\n\n","completion":" Just-in-Time (JIT) user provisioning enables Retool to provision accounts when your users sign in with Google for the first time. JIT user provisioning is optional, but it is highly recommended so you don't need to manually invite each user to Retool first. END"}
{"prompt":"Just-in-Time (JIT) user provisioning enables Retool to provision accounts when your users sign in with Google for the first time. JIT user provisioning is optional, but it is highly recommended so you don't need to manually invite each user to Retool first.\n\n###\n\n","completion":" To enable JIT user provisioning, toggle the switch in the **Settings > Advanced** page in Retool, then set the `DEFAULT_GROUP_FOR_DOMAINS` [environment variable](\/reference\/environment-variables-reference#default_group_for_domains). END"}
{"prompt":"title: \"Configure Okta OIDC SSO\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to set up Okta SSO using OpenID Connect (OIDC).\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Set Sign-on method to OIDC and Application type to Web Application. END"}
{"prompt":"Set Sign-on method to OIDC and Application type to Web Application.\n\n###\n\n","completion":" ![Creating a new app integration](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7a73049-Screen_Shot_2021-05-20_at_9.32.10_AM.png) END"}
{"prompt":"![Creating a new app integration](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7a73049-Screen_Shot_2021-05-20_at_9.32.10_AM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7210362-Screen_Shot_2021-05-20_at_9.34.34_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7210362-Screen_Shot_2021-05-20_at_9.34.34_AM.png)\n\n###\n\n","completion":" Replace `https:\/\/yourcompany.okta.com` with your Okta domain in these three environment variables: END"}
{"prompt":"Role mapping with Okta Group Claims\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a318d56-Screen_Shot_2021-02-03_at_1.46.48_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a318d56-Screen_Shot_2021-02-03_at_1.46.48_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fcb2118-Screen_Shot_2021-02-03_at_1.50.18_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fcb2118-Screen_Shot_2021-02-03_at_1.50.18_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/abe363f-Screen_Shot_2021-02-03_at_1.52.06_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/abe363f-Screen_Shot_2021-02-03_at_1.52.06_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/90f4ada-Screen_Shot_2021-02-03_at_1.54.18_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/90f4ada-Screen_Shot_2021-02-03_at_1.54.18_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6ddb792-Screen_Shot_2021-02-03_at_1.54.57_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6ddb792-Screen_Shot_2021-02-03_at_1.54.57_PM.png)\n\n###\n\n","completion":" You can customize the \"Filter\" option to whatever you like. In this screenshot, we are including any group that starts with \"Retool.\" Note that in Okta, the \"Starts with\" filter is case insensitive. END"}
{"prompt":"You can customize the \"Filter\" option to whatever you like. In this screenshot, we are including any group that starts with \"Retool.\" Note that in Okta, the \"Starts with\" filter is case insensitive.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/dcab15a-Screen_Shot_2021-02-03_at_1.56.22_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/dcab15a-Screen_Shot_2021-02-03_at_1.56.22_PM.png)\n\n###\n\n","completion":" Add the `groups` scope to the `CUSTOM_OAUTH2_SSO_SCOPES` environment variable. END"}
{"prompt":"Add the `groups` scope to the `CUSTOM_OAUTH2_SSO_SCOPES` environment variable.\n\n###\n\n","completion":" Specify that the groups can be read in the `idToken`. END"}
{"prompt":"Specify that the groups can be read in the `idToken`.\n\n###\n\n","completion":" Specify any additional remapping you'd like to do. For example, if you'd like any member of the \"Retool devops\" group to also be an admin in Retool: END"}
{"prompt":"Specify any additional remapping you'd like to do. For example, if you'd like any member of the \"Retool devops\" group to also be an admin in Retool:\n\n###\n\n","completion":" You can refer to these tokens using the following syntax in resources: END"}
{"prompt":"You can refer to these tokens using the following syntax in resources:\n\n###\n\n","completion":" Try logging in as another user and checking if the permissions were correctly updated automatically. END"}
{"prompt":"title: \"Configure SSL and custom certificates\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to connect to Retool with HTTPS and configure custom certificates for Docker-based deployments.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Docker Compose deployments of Self-hosted Retool include [https-portal](https:\/\/github.com\/SteveLTN\/https-portal) to automatically configure HTTPS. You can either provision a certificate with [Let's Encrypt](https:\/\/letsencrypt.org\/) or manually add your own certificates. END"}
{"prompt":"SSL with Let's Encrypt\n\n###\n\n","completion":" Provisioning a certificate with Let's Encrypt is a two-step process: END"}
{"prompt":"Configure DNS\n\n###\n\n","completion":" First, set up a DNS to point `retool.yourcompany.com` to the Retool server. Next, open the `docker.env` file and update `DOMAINS` with the new domain. END"}
{"prompt":"Update Docker Compose\n\n###\n\n","completion":" Open the `docker-compose.yml` file and set `STAGE` to `production`: END"}
{"prompt":"Add custom certificates manually\n\n###\n\n","completion":" Let's Encrypt can only provision a certificate if your Retool deployment has full internet access. If you deploy Retool on a VPC without complete access to the internet, you can manually add certificates instead. END"}
{"prompt":"Modify HTTPS configuration\n\n###\n\n","completion":" Update the `https-portal` service in the `docker-compose.yml` file to use an [nginx image](https:\/\/hub.docker.com\/_\/nginx\/), and create two Docker volumes for your certificates. Rename the `https-portal` service to `nginx`. END"}
{"prompt":"Mount certificates\n\n###\n\n","completion":" To mount your certificates, create the directories these volumes point to. END"}
{"prompt":"To mount your certificates, create the directories these volumes point to.\n\n###\n\n","completion":" In the `retool-onpremise` directory: END"}
{"prompt":"Set up and configure nginx\n\n###\n\n","completion":" To configure [nginx](https:\/\/nginx.org): END"}
{"prompt":"Restart Docker containers\n\n###\n\n","completion":" Run `sudo docker-compose up -d` to restart your containers. END"}
{"prompt":"View container logs\n\n###\n\n","completion":" You can run the following commands to view container logs. These logs are helpful if you run into issues and need to troubleshoot. END"}
{"prompt":"Connect to APIs using HTTPS\n\n###\n\n","completion":" If your API's SSL certificates are signed by an internal CA, your Retool deployment cannot connect over HTTPS until you configure it to trust your CA. You do this by setting `NODE_EXTRA_CA_CERTS` to the absolute path of your certificate files. The files need to include one or more trusted certificates in PEM format. END"}
{"prompt":"Configure Docker Compose\n\n###\n\n","completion":" With Docker Compose deployments, you need to store the certificate as a file on the filesystem, and then mount that file to the `api` container. END"}
{"prompt":"title: \"Configure external databases for Retool storage\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to store and migrate user information for Self-hosted Retool deployments.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In most self-hosted setups, user information and documents are stored in a PostgreSQL Docker container with a persistent volume. As usage grows, it's often useful to switch to an externally hosted database for redundancy. END"}
{"prompt":"In most self-hosted setups, user information and documents are stored in a PostgreSQL Docker container with a persistent volume. As usage grows, it's often useful to switch to an externally hosted database for redundancy.\n\n###\n\n","completion":" Retool recommends allocating at least 60GB of storage when you set up a new Retool instance. If you're migrating an existing instance, you might need more space. END"}
{"prompt":"Retool recommends allocating at least 60GB of storage when you set up a new Retool instance. If you're migrating an existing instance, you might need more space.\n\n###\n\n","completion":" If you want to use an external database, follow the steps below. END"}
{"prompt":"1. Export data from Retool's Docker container\n\n###\n\n","completion":" To export data from Retool's PostgreSQL container, run the following command on the virtual machine hosting the Retool containers, in the Retool directory. END"}
{"prompt":"To export data from Retool's PostgreSQL container, run the following command on the virtual machine hosting the Retool containers, in the Retool directory.\n\n###\n\n","completion":" This dumps the data into a file named `retool_db_dump.sql` in the root of the volume used by the Retool PostgreSQL container. END"}
{"prompt":"This dumps the data into a file named `retool_db_dump.sql` in the root of the volume used by the Retool PostgreSQL container.\n\n###\n\n","completion":" To export data to your host machine, run the following command. END"}
{"prompt":"2. Migrate the data to an external hosted database\n\n###\n\n","completion":" To migrate the data to an external database, run the following command. Replace `$DB_CONNECTION_URI` with the PostgreSQL connection string that connects to your externally hosted database. Make sure the URI is [formatted correctly](https:\/\/www.postgresql.org\/docs\/9.3\/libpq-connect.html#AEN39692). END"}
{"prompt":"3. Configure Retool to use the external database\n\n###\n\n","completion":" The `docker.env` files defines several Retool options, including which database to connect to. The lines you need to edit follow this pattern: END"}
{"prompt":"The `docker.env` files defines several Retool options, including which database to connect to. The lines you need to edit follow this pattern:\n\n###\n\n","completion":" Edit those variables to correspond with the database you created. For example: END"}
{"prompt":"Edit those variables to correspond with the database you created. For example:\n\n###\n\n","completion":" Alternatively, you can delete the five environment variables and instead specify a database connection string like this: END"}
{"prompt":"4. Restart the Retool server\n\n###\n\n","completion":" After updating the Retool configuration, run this command from the `retool_onpremise` directory to restart the server. END"}
{"prompt":"title: \"Connect to BigID\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect BigID to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [BigID](https:\/\/bigid.com\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with BigID data. END"}
{"prompt":"Allow Retool to access BigID\n\n###\n\n","completion":" If BigID is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **BigID** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **BigID** resource type.\n\n###\n\n","completion":" ![Select BigID resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/7a500fbb-fbfa-45c1-b9cc-8a19d5466fc8.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the BigID resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"Specify a name and location for the BigID resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings.\n\n###\n\n","completion":" ![Configure BigID resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/06a6fd01-13ce-48b3-aca9-0ff7ecaa6459.png) END"}
{"prompt":"![Configure BigID resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/06a6fd01-13ce-48b3-aca9-0ff7ecaa6459.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to BigID. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"4. Save the resource\n\n###\n\n","completion":" Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources\n\n###\n\n","completion":" ![Saved BigID resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/75882171-727d-4b01-b98e-be4611ea6b17.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your BigID resource is now ready to use. To interact with BigID data, select the resource in the query editor. END"}
{"prompt":"title: \"Connect to CosmosDB\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect CosmosDB to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [CosmosDB](https:\/\/azure.microsoft.com\/en-us\/products\/cosmos-db) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with CosmosDB data. END"}
{"prompt":"Allow Retool to access CosmosDB\n\n###\n\n","completion":" If CosmosDB is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"If CosmosDB is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource.\n\n###\n\n","completion":" To create a CosmosDB resource, you need: END"}
{"prompt":"CosmosDB authentication\n\n###\n\n","completion":" Retool authenticates with CosmosDB using a [master key token](https:\/\/learn.microsoft.com\/en-us\/rest\/api\/cosmos-db\/access-control-on-cosmosdb-resources#master-key-tokens) for the database. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **CosmosDB** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **CosmosDB** resource type.\n\n###\n\n","completion":" ![Select CosmosDB resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c5896f34-f67f-4edb-b6d9-68ac80134bfc.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and folder for the CosmosDB resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"Specify a name and folder for the CosmosDB resource. Retool displays the resource name and type in query editors to help users identify them.\n\n###\n\n","completion":" Next, enter the following fields. END"}
{"prompt":"Next, enter the following fields.\n\n###\n\n","completion":" ![Configure CosmosDB resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/66c2b6ac-648f-4a85-92d7-f00f04e48929.png) END"}
{"prompt":"![Configure CosmosDB resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/66c2b6ac-648f-4a85-92d7-f00f04e48929.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to CosmosDB. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources\n\n###\n\n","completion":" ![CosmosDB resource created](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/dce42520-1abc-48da-9607-0fec49b2c47c.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your CosmosDB resource is now ready to use. To interact with CosmosDB data, select the resource in the query editor. END"}
{"prompt":"title: \"Connect to Databricks\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect Databricks to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Databricks](https:\/\/www.databricks.com\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Databricks data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Databricks resource, you first need to retrieve your database connection details from your Databricks SQL account. To reach this page, go to **SQL Warehouses** in Databricks and select the warehouse you would like to connect to. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Databricks** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Databricks** resource type.\n\n###\n\n","completion":" ![Select the Databricks resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/e287df95-2bea-4821-98ac-4b4b4592d816.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Create a new Databricks resource in Retool, and enter your database connection details. Retool recommends copying the connection string and using the **Import from connection string** option to quickly connect to Databricks. END"}
{"prompt":"Create a new Databricks resource in Retool, and enter your database connection details. Retool recommends copying the connection string and using the **Import from connection string** option to quickly connect to Databricks.\n\n###\n\n","completion":" ![Databricks configuration page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/aa982fb4-0bf0-4eb5-b612-d7c08634164a.png) END"}
{"prompt":"![Databricks configuration page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/aa982fb4-0bf0-4eb5-b612-d7c08634164a.png)\n\n###\n\n","completion":" If you do not use a connection string to import your settings, enter the following settings. END"}
{"prompt":"Authentication\n\n###\n\n","completion":" You can authenticate into Databricks using a [personal access token](https:\/\/docs.databricks.com\/dev-tools\/api\/latest\/authentication.html) in the **Authentication** section. Select **API Key Auth** and enter your personal access token as an API key. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/fa6b19c0-05c9-4ff2-a7b2-a1dc03035514.png) END"}
{"prompt":"5. Query Databricks\n\n###\n\n","completion":" Your Databricks resource is now ready to use. To interact with Databricks data, select the resource in the query editor. If you specified a Catalog in the resource form, you can omit the catalog when writing your query. END"}
{"prompt":"Your Databricks resource is now ready to use. To interact with Databricks data, select the resource in the query editor. If you specified a Catalog in the resource form, you can omit the catalog when writing your query.\n\n###\n\n","completion":" ![Example resource query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/17fdbade-421a-4878-ad8a-984748ac0364.png) END"}
{"prompt":"Hosted instances\n\n###\n\n","completion":" If you use a hosted instance of Databricks, ensure that the instance is running before you run any Databricks queries in Retool. If the instance is not running, the first query starts the Databricks instance but will likely time out doing so. END"}
{"prompt":"If you use a hosted instance of Databricks, ensure that the instance is running before you run any Databricks queries in Retool. If the instance is not running, the first query starts the Databricks instance but will likely time out doing so.\n\n###\n\n","completion":" In addition, the first query to a Databricks instance after start-up may be noticeably slower. This is a known issue with hosted Databricks instances. END"}
{"prompt":"Schema editor\n\n###\n\n","completion":" The schema for Databricks is retrieved from the `information_schema` table in the `system` catalog. Your Databricks instance must have [**Unity Catalog**](https:\/\/www.databricks.com\/product\/unity-catalog) enabled in order to show schemas in Retool. END"}
{"prompt":"title: \"Connect to HubSpot\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect HubSpot to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [HubSpot](https:\/\/www.hubspot.com\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with HubSpot data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a HubSpot resource, you need: END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **HubSpot** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **HubSpot** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/052e718d-a9a4-4869-946c-64362c1e28b3.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the HubSpot resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"OAuth on Retool Cloud\n\n###\n\n","completion":" On Retool Cloud, configure OAuth by selecting **OAuth** as the authentication method and click the **Connect with OAuth** button. This begins HubSpot's authorization flow. END"}
{"prompt":"On Retool Cloud, configure OAuth by selecting **OAuth** as the authentication method and click the **Connect with OAuth** button. This begins HubSpot's authorization flow.\n\n###\n\n","completion":" ![Configure the HubSpot resource on Cloud](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/32ab00c9-2775-4320-a37a-189b097feb59.png) END"}
{"prompt":"OAuth on self-hosted Retool\n\n###\n\n","completion":" When you self-host Retool, you need to [create your own application](https:\/\/developers.hubspot.com\/docs\/api\/working-with-oauth) on HubSpot. After registering, you can find your client ID and client secret on your HubSpot app settings page. END"}
{"prompt":"When you self-host Retool, you need to [create your own application](https:\/\/developers.hubspot.com\/docs\/api\/working-with-oauth) on HubSpot. After registering, you can find your client ID and client secret on your HubSpot app settings page.\n\n###\n\n","completion":" On the resource settings page, select **OAuth** as the authentication method and provide the required OAuth client information. Configure the following settings for the resource. END"}
{"prompt":"On the resource settings page, select **OAuth** as the authentication method and provide the required OAuth client information. Configure the following settings for the resource.\n\n###\n\n","completion":" By default, Retool requests a limited set of common OAuth scopes when you connect your workspace. These scopes determine the operations you can perform. If you update the **Scopes** field in your resource settings, you have to reconnect with OAuth for the changes to take effect. END"}
{"prompt":"By default, Retool requests a limited set of common OAuth scopes when you connect your workspace. These scopes determine the operations you can perform. If you update the **Scopes** field in your resource settings, you have to reconnect with OAuth for the changes to take effect.\n\n###\n\n","completion":" You must also configure your app with an OAuth callback URL. Copy the **OAuth callback URL** on the Resource settings page and add it as a [redirect URL in HubSpot](https:\/\/developers.hubspot.com\/docs\/api\/oauth-quickstart-guide) in your app's authentication settings. END"}
{"prompt":"You must also configure your app with an OAuth callback URL. Copy the **OAuth callback URL** on the Resource settings page and add it as a [redirect URL in HubSpot](https:\/\/developers.hubspot.com\/docs\/api\/oauth-quickstart-guide) in your app's authentication settings.\n\n###\n\n","completion":" ![Configure the HubSpot resource on self-hosted](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/355a5b4e-34be-432f-92a0-a6df7b8f44f0.png) END"}
{"prompt":"Share credentials between users\n\n###\n\n","completion":" For resources using OAuth 2.0 authentication scheme, Retool provides the option to share credentials between users or to require each user to authenticate using their own credentials. The HubSpot resource defaults to sharing credentials between users. If you would like each app user to log in with their own account, uncheck **Share HubSpot credentials between users** in the Advanced section. END"}
{"prompt":"For resources using OAuth 2.0 authentication scheme, Retool provides the option to share credentials between users or to require each user to authenticate using their own credentials. The HubSpot resource defaults to sharing credentials between users. If you would like each app user to log in with their own account, uncheck **Share HubSpot credentials between users** in the Advanced section.\n\n###\n\n","completion":" To learn more about how OAuth 2.0 credentials work in Retool, refer to our [API Authentication docs](https:\/\/docs.retool.com\/docs\/api-authentication#oauth-20). END"}
{"prompt":"Private app token\n\n###\n\n","completion":" If you use HubSpot [private apps](https:\/\/developers.hubspot.com\/docs\/api\/private-apps), select **Private app token** and enter your token to authenticate with Retool. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" [Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/b402bb19-7216-4f0f-b6c3-697d8d2bb9ee.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your HubSpot resource is now ready to use. To interact with HubSpot data, select the resource in the query editor. You can specify the API endpoint to use when writing a query. END"}
{"prompt":"title: \"Connect a JDBC driver\"\ncategorySlug: \"data-sources\"\nexcerpt: \"Learn how to connect a JDBC driver to Retool.\"\n\n###\n\n","completion":" You can connect a JDBC driver to Retool and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with your data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" Cloud users are only be able to select from a global list of drivers. If the driver you want to use is missing, [contact Retool Support](mailto:support@retool.com). END"}
{"prompt":"Self-hosted JDBC configuration changes\n\n###\n\n","completion":" [Self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) users need to make some configuration changes on their Retool instance to use a JDBC resource. END"}
{"prompt":"1. Update Retool to the latest build\n\n###\n\n","completion":" Run `.\/update_retool.sh` on your host machine to update Retool. END"}
{"prompt":"2. Add your JDBC .jar files\n\n###\n\n","completion":" On the host machine, create a `jdbc\/` folder and add the JDBC `.jar` files to it. END"}
{"prompt":"3. Mount Volumes\n\n###\n\n","completion":" In the `docker-compose.yml` file, add: END"}
{"prompt":"In the `docker-compose.yml` file, add:\n\n###\n\n","completion":" to the volume sections for `api`, `db-connector`, and `db-ssh-connector`. END"}
{"prompt":"4. Add a folder path for the ENV Variable\n\n###\n\n","completion":" In the `docker.env` file, add `JDBC_DIRECTORY_PATH=\/retool_backend\/jdbc` to provide a path to the JDBC `.jar` files. END"}
{"prompt":"5. Restart Retool\n\n###\n\n","completion":" On your host machine, run `sudo docker-compose up -d` to restart Retool. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **JDBC** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **JDBC** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/f99cb367-65f3-4245-9f0d-7810ee4c743a.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the JDBC resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"Credentials\n\n###\n\n","completion":" Cloud users need to set: END"}
{"prompt":"Cloud users need to set:\n\n###\n\n","completion":" Self-hosted users need to set: END"}
{"prompt":"Self-hosted users need to set:\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/d76339f7-848f-4dbd-b78c-fddfdf0df1be.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/d76339f7-848f-4dbd-b78c-fddfdf0df1be.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to your JDBC resource. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"4. Save the resource\n\n###\n\n","completion":" Click **Create resource** to complete the setup. You can then click either **Create an app** to immediately start building a Retool app or **Back to resources** to return to the list of resources. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create an app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/58059f07-6e1b-4cb3-9a56-838796d556ce.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your JDBC resource is now ready to use. To interact with your data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"title: \"Connect to Presto\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect Presto to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Presto](https:\/\/prestodb.io\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Presto data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Presto resource, you need: END"}
{"prompt":"Allow Retool to access Presto\n\n###\n\n","completion":" If Presto is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Presto** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Presto** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/16fd3a6e-b100-4757-8886-2e6c16c764d4.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Presto resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"General\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b7abec4a-1e72-49f0-a1b7-0a20447c2401.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b7abec4a-1e72-49f0-a1b7-0a20447c2401.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Presto. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/028871c4-a0bb-40ea-a11b-e7d52cd7c209.png END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Presto resource is now ready to use. To interact with Presto data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"title: \"Connect to ReadMe\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your ReadMe data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [ReadMe](https:\/\/readme.com\/) and make it available as a REST API [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with ReadMe data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a ReadMe resource, you need: END"}
{"prompt":"ReadMe API connection and authentication\n\n###\n\n","completion":" Retool authenticates with ReadMe using your API key and [HTTP basic authentication](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/Authentication#basic_authentication_scheme). END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **REST API** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **REST API** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/e4eff5a2-0b55-4710-93d0-27e880debbbe.webp) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the ReadMe resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"Specify a name and location for the ReadMe resource. Retool displays the resource name and type in query editors to help users identify them.\n\n###\n\n","completion":" Configure the following settings for the resource. END"}
{"prompt":"Authentication\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/63e3cf5c-8cbf-46c5-96ce-d7408509d483.webp) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/63e3cf5c-8cbf-46c5-96ce-d7408509d483.webp)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to ReadMe. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/770c9e5c-9aee-4344-ab26-5e699dc26d66.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your ReadMe resource is now ready to use. To interact with ReadMe data, select the resource in the query editor. You can specify the API endpoint to use when writing a query. END"}
{"prompt":"title: \"Connect to RethinkDB\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your RethinkDB database to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect your [RethinkDB database](https:\/\/rethinkdb.com\/) make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with RethinkDB data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a RethinkDB resource, you need: END"}
{"prompt":"Allow Retool to access RethinkDB\n\n###\n\n","completion":" If RethinkDB is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **RethinkDB** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **RethinkDB** resource type.\n\n###\n\n","completion":" ![Select the RethinkDB resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/f8474af2-ab5d-4652-9b34-8a88ca34806b.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the RethinkDB resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"General\n\n###\n\n","completion":" ![Configure the RethinkDB resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/52c0b1b0-027e-41eb-9baf-c5872f9059e6.png) END"}
{"prompt":"![Configure the RethinkDB resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/52c0b1b0-027e-41eb-9baf-c5872f9059e6.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to RethinkDB. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" <https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/73731381-767e-4dfa-9cde-fd8182aa5881.png> END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your RethinkDB resource is now ready to use. To interact with RethinkDB data, select the resource in the query editor. END"}
{"prompt":"title: \"Connect to Slack\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect Slack to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Slack](https:\/\/slack.com\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can send interactive messages, update user groups, manage channels, and much more. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Slack resource, you need: END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Slack** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Slack** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/8aa8a703-a978-44e3-bebf-554e69910b42.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Slack resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"Specify a name and location for the Slack resource. Retool displays the resource name and type in query editors to help users identify them.\n\n###\n\n","completion":" By default, Retool requests a limited set of common OAuth [scopes](https:\/\/api.slack.com\/scopes?filter=granular_bot) when you connect your workspace. These scopes determine the operations you can perform. If you update the list of scopes in your resource settings, you have to reconnect with OAuth for the changes to take effect. END"}
{"prompt":"By default, Retool requests a limited set of common OAuth [scopes](https:\/\/api.slack.com\/scopes?filter=granular_bot) when you connect your workspace. These scopes determine the operations you can perform. If you update the list of scopes in your resource settings, you have to reconnect with OAuth for the changes to take effect.\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/be0c180b-792d-41fe-bf29-7141e1a285de.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/be0c180b-792d-41fe-bf29-7141e1a285de.png)\n\n###\n\n","completion":" If you self-host Retool, complete the [Self-hosted deployments](#self-hosted-deployments) section before moving to the next step. Otherwise, click the **Connect with OAuth →** button to authenticate with your Slack workspace and continue to the next step. END"}
{"prompt":"Self-hosted deployments\n\n###\n\n","completion":" When you self-host Retool, you need to [register your own application](https:\/\/api.slack.com\/authentication\/basics) with Slack. After registering, you can find your client ID and client secret on your Slack app settings page. Your client ID and client secret need to be copied into your resource settings. END"}
{"prompt":"When you self-host Retool, you need to [register your own application](https:\/\/api.slack.com\/authentication\/basics) with Slack. After registering, you can find your client ID and client secret on your Slack app settings page. Your client ID and client secret need to be copied into your resource settings.\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5ef891b8-a4b8-4904-a4f1-754779adce74.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5ef891b8-a4b8-4904-a4f1-754779adce74.png)\n\n###\n\n","completion":" You also need to configure your Slack app with the OAuth callback URL and scopes. Copy the **OAuth callback URL** on the Retool resource settings page. Then, in your Slack app settings, click **OAuth & Permissions** in the left sidebar, and add the OAuth callback URL to the **Redirect URLs** section. END"}
{"prompt":"You also need to configure your Slack app with the OAuth callback URL and scopes. Copy the **OAuth callback URL** on the Retool resource settings page. Then, in your Slack app settings, click **OAuth & Permissions** in the left sidebar, and add the OAuth callback URL to the **Redirect URLs** section.\n\n###\n\n","completion":" You also need to add every scope that your Retool resource requests to the **Bot Token Scopes** section in your Slack app settings. END"}
{"prompt":"You also need to add every scope that your Retool resource requests to the **Bot Token Scopes** section in your Slack app settings.\n\n###\n\n","completion":" After you've finished setting up your Slack app and resource, click the **Connect with OAuth →** button on the resource settings page to authenticate. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Slack resource is now ready to use. To interact with Slack, select the resource in the query editor. See [Slack's API documentation](https:\/\/api.slack.com\/methods) for a full list of API methods. END"}
{"prompt":"title: \"Connect to an API\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect to REST, GraphQL or SOAP APIs.\"\nhidden: true\n\n###\n\n","completion":" You can connect Retool to most APIs using our [native integrations](https:\/\/docs.retool.com\/docs\/integrations). If you need to connect to an internal API, or if there isn't a supported integration, you can connect using our REST API integration or [GraphQL Integration](https:\/\/docs.retool.com\/docs\/graphql). END"}
{"prompt":"1. Create an API resource\n\n###\n\n","completion":" [Resources](https:\/\/docs.retool.com\/docs\/resources) represent connections to data sources and are what you query within your Retool apps. [Log in to Retool](https:\/\/login.retool.com\/) and navigate to the **Resources** tab. Click **Create new** > **Create a new resource** and select **REST API**. This opens the **Connect a resource** page where you add your connection information. END"}
{"prompt":"[Resources](https:\/\/docs.retool.com\/docs\/resources) represent connections to data sources and are what you query within your Retool apps. [Log in to Retool](https:\/\/login.retool.com\/) and navigate to the **Resources** tab. Click **Create new** > **Create a new resource** and select **REST API**. This opens the **Connect a resource** page where you add your connection information.\n\n###\n\n","completion":" ![Adding a REST API resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f7128bd3-c76d-40af-bfe6-ebe10c99bad2.png) END"}
{"prompt":"![Adding a REST API resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f7128bd3-c76d-40af-bfe6-ebe10c99bad2.png)\n\n###\n\n","completion":" At a minimum, you need the base URL of the API you want to connect to. You can also pass URL parameters, headers, etc. If your API requires authentication, you can configure that on this page as well. For example, OAuth2.0 requires an Authorization URL, Access Token URL, etc. After you enter your connection details, click **Create resource** and then **Create an app**. This opens the App editor. END"}
{"prompt":"2. Query your API\n\n###\n\n","completion":" When the App editor opens, `query1` is created automatically with the resource you added. You can see this in the **Resource** dropdown in the query editor. To query your API, click **Save & Run**. If needed, you can update `query1` with additional URL parameters, headers, etc. END"}
{"prompt":"When the App editor opens, `query1` is created automatically with the resource you added. You can see this in the **Resource** dropdown in the query editor. To query your API, click **Save & Run**. If needed, you can update `query1` with additional URL parameters, headers, etc.\n\n###\n\n","completion":" ![Querying an API](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3f556e28-871b-4ae3-9f26-fc4be158b09a.png) END"}
{"prompt":"![Querying an API](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3f556e28-871b-4ae3-9f26-fc4be158b09a.png)\n\n###\n\n","completion":" If you see authentication errors, verify your authentication details are correct. See our [API authentication](https:\/\/docs.retool.com\/docs\/api-authentication) documentation for more information. END"}
{"prompt":"SOAP APIs\n\n###\n\n","completion":" You can connect to SOAP APIs using the same process as REST APIs but you need to format SOAP queries differently. END"}
{"prompt":"title: \"Configure SSL connections for resources\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn how to connect to your resources using SSL\/TLS encryption.\"\nhidden: false\n\n###\n\n","completion":" Retool supports SSL and TLS connections to database resources as long as the database server is configured to support it. END"}
{"prompt":"Retool supports SSL and TLS connections to database resources as long as the database server is configured to support it.\n\n###\n\n","completion":" The following resource types have options for SSL\/TLS encryption in their configuration settings: END"}
{"prompt":"Connect using SSL\/TLS\n\n###\n\n","completion":" To connect with SSL, on the **Create resource** or **Edit resource** form, select the **Use SSL\/TLS** checkbox. Depending on the resource, additional fields are shown once the checkbox is clicked. The standard options are **CA Certificate**, **Client Key**, **Client Certifcate**, and **Verification mode**. END"}
{"prompt":"To connect with SSL, on the **Create resource** or **Edit resource** form, select the **Use SSL\/TLS** checkbox. Depending on the resource, additional fields are shown once the checkbox is clicked. The standard options are **CA Certificate**, **Client Key**, **Client Certifcate**, and **Verification mode**.\n\n###\n\n","completion":" ![SSL\/TLS Options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/adb50e53-7211-4c1b-9b66-41841289fa60.png) END"}
{"prompt":"![SSL\/TLS Options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/adb50e53-7211-4c1b-9b66-41841289fa60.png)\n\n###\n\n","completion":" For **API Resources**, specify an **HTTPS** base URL before clicking the **Use self-signed certificates** checkbox to add TLS options. END"}
{"prompt":"For **API Resources**, specify an **HTTPS** base URL before clicking the **Use self-signed certificates** checkbox to add TLS options.\n\n###\n\n","completion":" ![API resource TLS options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c185bb73-6bb7-4fdd-8322-bdcfae0f2cdb.png) END"}
{"prompt":"![API resource TLS options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c185bb73-6bb7-4fdd-8322-bdcfae0f2cdb.png)\n\n###\n\n","completion":" **CA Certificate** is a certificate signed by a trusted, third-party certificate authority (CA). The client, which is Retool in this case, uses the certificate to verify that they are talking to the correct server. **Client Key** and **Client Certificate** are additional fields that identify the client to the server. END"}
{"prompt":"Verification modes\n\n###\n\n","completion":" The following table lists the available **Verification mode** options: END"}
{"prompt":"The following table lists the available **Verification mode** options:\n\n###\n\n","completion":" Retool uses Node drivers to power our resources, and occasionally, the drivers are limited in their functionality. As a result, not all resources support all modes. For example, MySQL only supports **Verify CA Certificate** and **Skip CA Certificate verification**. END"}
{"prompt":"title: \"Connect to MyRadar\"\ncategorySlug: \"data-sources\"\nexcerpt: \"Learn how to connect MyRadar to Retool.\"\n\n###\n\n","completion":" You can connect to the [MyRadar API](https:\/\/myradar.com\/) and make it available as a REST API [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with MyRadar data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a MyRadar resource, you need a Subscription Key. You can find this in the MyRadar Developer Portal. END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the MyRadar resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"General\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/24b109c1-c908-4104-a03f-310ebb837304.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/24b109c1-c908-4104-a03f-310ebb837304.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to MyRadar. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/11da750d-e582-414a-b7b0-66612bcd140a.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your MyRadar resource is now ready to use. To interact with MyRadar data, select the resource in the query editor. You can specify the API endpoint to use when writing a query. END"}
{"prompt":"title: \"Connect to the National Weather Service\"\ncategorySlug: \"data-sources\"\nexcerpt: \"Learn how to connect the NWS API to Retool.\"\n\n###\n\n","completion":" You can connect to the National Weather Service  (NWS) [API](https:\/\/www.weather.gov\/documentation\/services-web-api) and make it available as a REST API [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with NWS data. END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the NWS resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"General\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/df4ca21b-3635-4122-8970-8237eb39b428.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/df4ca21b-3635-4122-8970-8237eb39b428.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to NWS. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/be09e9fc-58bf-4e22-be5d-97d302472954.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your NWS resource is now ready to use. To interact with NWS data, select the resource in the query editor. You can specify the API endpoint to use when writing a query. END"}
{"prompt":"title: \"Connect to REST APIs\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect to REST APIs.\"\nhidden: false\nmetadata: \n\n###\n\n","completion":" You can connect Retool to most APIs using our [native integrations](https:\/\/docs.retool.com\/docs\/integrations) but you can also connect to any REST API. END"}
{"prompt":"title: \"Connect to SOAP APIs\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect to SOAP APIs.\"\nhidden: false\nmetadata: \n\n###\n\n","completion":" You can connect Retool to most APIs using our [native integrations](https:\/\/docs.retool.com\/docs\/integrations) but you can also connect to any SOAP API. END"}
{"prompt":"[Resources](https:\/\/docs.retool.com\/docs\/resources) represent connections to data sources and are what you query within your Retool apps. [Log in to Retool](https:\/\/login.retool.com\/) and navigate to the **Resources** tab. Click **Create new** > **Create a new resource** and select **REST API**. This opens the **Connect a resource** page where you add your connection information.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/edb303bc-2936-4971-852b-ee8d915a22c3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/edb303bc-2936-4971-852b-ee8d915a22c3.png)\n\n###\n\n","completion":" At a minimum, you need the base URL of the API you want to connect to. You can also pass URL parameters, headers, etc. If your API requires authentication, you can configure that on this page as well. For example, OAuth2.0 requires an Authorization URL, Access Token URL, etc. After you enter your connection details, click **Create resource** and then **Create an app**. This opens the App editor. END"}
{"prompt":"2. Query your API\n\n###\n\n","completion":" When the App editor opens, `query1` is created automatically with the resource you added. You can see this in the **Resource** dropdown in the query editor. To query your API, click **Save & Run**. END"}
{"prompt":"When the App editor opens, `query1` is created automatically with the resource you added. You can see this in the **Resource** dropdown in the query editor. To query your API, click **Save & Run**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5a6d2e52-027d-441b-9d60-12336983287f.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5a6d2e52-027d-441b-9d60-12336983287f.png)\n\n###\n\n","completion":" SOAP APIs require some additional formatting, which is outlined below. END"}
{"prompt":"SOAP APIs require some additional formatting, which is outlined below.\n\n###\n\n","completion":" If you see authentication errors, verify your authentication details are correct. See our [API authentication](https:\/\/docs.retool.com\/docs\/api-authentication) documentation for more information. END"}
{"prompt":"title: \"Connect to Todoist\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect Todoist to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Todoist](https:\/\/todoist.com) using the REST API integration and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, you can [write queries](https:\/\/docs.retool.com\/docs\/queries) to interact with Todoist that perform API requests. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Todoist resource, you need: END"}
{"prompt":"To create a Todoist resource, you need:\n\n###\n\n","completion":" If Todoist is behind a firewall, you must also [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add these IP addresses to your firewall's allowlist before you create the resource. END"}
{"prompt":"Sign in to your Retool organization and navigate to the **Resources** tab. Click **Create new**, then select **Resource**.\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **REST API** integration. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **REST API** integration.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(69.51219512195121% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/SgqeP2GgErUU3xdWz9Wt?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Create a REST API resource\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"2. Configure the resource\n\n###\n\n","completion":" Provide the necessary details to configure the resource so Retool can connect to Todoist. Not all settings are required but refer to the [Todoist documentation](https:\/\/developer.todoist.com\/rest\/v2) to learn what is needed. END"}
{"prompt":"General\n\n###\n\n","completion":" These settings configure the name and location of the resource within Retool. END"}
{"prompt":"Name\n\n###\n\n","completion":" The name to use for the resource (e.g., **Todoist**). END"}
{"prompt":"Folder\n\n###\n\n","completion":" The folder in which to save the resource. END"}
{"prompt":"Description\n\n###\n\n","completion":" A brief description of the resource (e.g., **Customer data**). END"}
{"prompt":"Credentials\n\n###\n\n","completion":" These settings configure how Retool connects to Todoist. END"}
{"prompt":"Base URL\n\n###\n\n","completion":" The base URL for the Todoist API. This must be an absolute URL. Use `https:\/\/api.todoist.com\/rest\/v2\/`. END"}
{"prompt":"URL parameters\n\n###\n\n","completion":" Key-value pairs to include as URL parameters with Todoist API requests. END"}
{"prompt":"Headers\n\n###\n\n","completion":" Key-value pairs to include as headers with Todoist API requests. Todoist uses Bearer (token) authentication which includes your API key or token as a header value. Include the following key-value pairs: END"}
{"prompt":"Body\n\n###\n\n","completion":" Key-value pairs to include in the body of Todoist API requests. END"}
{"prompt":"Cookies\n\n###\n\n","completion":" Cookies to include with Todoist API requests.   END"}
{"prompt":"Authentication\n\n###\n\n","completion":" The method of authentication to use with Todoist. Select `None`. Todoist authenticates requests using the API key or token you specified as a header value. END"}
{"prompt":"Forward all cookies\n\n###\n\n","completion":" Whether to forward all cookies. This is useful if you have dynamic cookie names. END"}
{"prompt":"3. Save the resource\n\n###\n\n","completion":" Click **Create resource** to complete the setup. You can then click either **Create an app** to immediately start building a Retool app or **Back to resources** to return to the list of resources. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Todoist resource is now ready to use. You write queries to make API requests by specifying the request method and endpoint, additional parameters to include, and the request body. END"}
{"prompt":"Your Todoist resource is now ready to use. You write queries to make API requests by specifying the request method and endpoint, additional parameters to include, and the request body.\n\n###\n\n","completion":" To verify you can successfully interact with Todoist, write a test query to retrieve some data. The following example retrieves a list of projects. END"}
{"prompt":"To verify you can successfully interact with Todoist, write a test query to retrieve some data. The following example retrieves a list of projects.\n\n###\n\n","completion":" Click **Save & Run** to run the query. END"}
{"prompt":"title: \"Connect to Tomorrow.io\"\ncategorySlug: \"data-sources\"\nexcerpt: \"Learn how to connect Tomorrow.io to Retool.\"\n\n###\n\n","completion":" You can connect to the [Tomorrow.io API](https:\/\/www.tomorrow.io\/) and make it available as a REST API [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Tomorrow.io data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Tomorrow.io resource, you need: END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Tomorrow.io resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"General\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/914aaf2e-e790-470b-9a81-c1fbd608d949.png) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/914aaf2e-e790-470b-9a81-c1fbd608d949.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Tomorrow.io. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3e720ce6-b945-4d69-abee-82389a8a6bac.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Tomorrow.io resource is now ready to use. To interact with Tomorrow.io data, select the resource in the query editor. You can specify the API endpoint to use when writing a query. END"}
{"prompt":"title: \"Group components together\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to group web components into containers with multiple views.\"\nhidden: false\n\n###\n\n","completion":" You can group related components together in a card using the [Container](https:\/\/retool.com\/components\/container) component. Containers also support multiple views that allow you to separate content into distinct views that users can switch between. END"}
{"prompt":"You can group related components together in a card using the [Container](https:\/\/retool.com\/components\/container) component. Containers also support multiple views that allow you to separate content into distinct views that users can switch between.\n\n###\n\n","completion":" Containers function like any other component. Once added, you can group components within it by dragging them onto the Container. END"}
{"prompt":"Containers function like any other component. Once added, you can group components within it by dragging them onto the Container.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/735b8a78-9f2c-4175-af2c-ea5fb5a41b9c.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/736e4f0f-af03-455e-96fd-de51e22ef87a.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Layout\n\n###\n\n","completion":" Containers contain three sections in which you can place components: END"}
{"prompt":"Containers contain three sections in which you can place components:\n\n###\n\n","completion":" ![Component sections](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/b0e206fb-6991-4d25-840e-6358e981580e.jpg) END"}
{"prompt":"![Component sections](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/b0e206fb-6991-4d25-840e-6358e981580e.jpg)\n\n###\n\n","completion":" You can show or hide each section by either manually toggling the relevant option in the **Layout** section of the **Inspect** tab or dynamically using a <<glossary:truthy value>>. END"}
{"prompt":"You can show or hide each section by either manually toggling the relevant option in the **Layout** section of the **Inspect** tab or dynamically using a <<glossary:truthy value>>.\n\n###\n\n","completion":" ![Toggle visibility of Container sections](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/214ac122-d175-4eb6-9a9a-42a39303c724.jpg) END"}
{"prompt":"Width and height\n\n###\n\n","completion":" You have manual control over the width of a Container. You can configure its **Height** to either **Auto** or **Fixed**: END"}
{"prompt":"Disable interaction\n\n###\n\n","completion":" You can disable interaction with a Container by setting **Disabled** to a truthy value. Disabling a Container also prevents user interaction with any nested components it contains. END"}
{"prompt":"Multiple views\n\n###\n\n","completion":" Containers support multiple views for grouping content. Only one view is visible at a time and users switch between them by changing the current view of the Container component. Switching views applies only to the body of a Container—the header and footer areas are shared across all views. END"}
{"prompt":"Containers support multiple views for grouping content. Only one view is visible at a time and users switch between them by changing the current view of the Container component. Switching views applies only to the body of a Container—the header and footer areas are shared across all views.\n\n###\n\n","completion":" Select or drag a Container on the Canvas and click **+ Enable multiple views** in the **Views** section of the **Inspect** tab. Once enabled, you manage views and select which view is visible using the option list editor. END"}
{"prompt":"Select or drag a Container on the Canvas and click **+ Enable multiple views** in the **Views** section of the **Inspect** tab. Once enabled, you manage views and select which view is visible using the option list editor.\n\n###\n\n","completion":" To add components to the selected view, drag them onto the Container as normal. Each component is associated with the view in which it's contained. As you switch between views, only components associated with the current view appear. END"}
{"prompt":"To add components to the selected view, drag them onto the Container as normal. Each component is associated with the view in which it's contained. As you switch between views, only components associated with the current view appear.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/5c7cbce9-3f9e-4f72-9b33-db72648b7ed7.png\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/ecb7d131-1241-4407-b35d-409929695462.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Stepped Containers\n\n###\n\n","completion":" The **Stepped Container** combines the [Steps](https:\/\/retool.com\/components\/steps) component with a Container, allowing you to create a step-by-step flow through the Container's views. This is useful if you have a multi-step process that users must complete. END"}
{"prompt":"The **Stepped Container** combines the [Steps](https:\/\/retool.com\/components\/steps) component with a Container, allowing you to create a step-by-step flow through the Container's views. This is useful if you have a multi-step process that users must complete.\n\n###\n\n","completion":" You can drag Stepped Containers directly to the Canvas. The Container automatically includes a Steps component that maps to views. As you make changes to views, the steps update automatically. END"}
{"prompt":"You can drag Stepped Containers directly to the Canvas. The Container automatically includes a Steps component that maps to views. As you make changes to views, the steps update automatically.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/747afbed-5d65-4182-b08f-5256de898249.png\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/c4b57016-1ff6-4e06-bc8a-b952a453c354.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/747afbed-5d65-4182-b08f-5256de898249.png\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/c4b57016-1ff6-4e06-bc8a-b952a453c354.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" You can use conditional logic to prevent users from progressing to the next step, such as an incomplete selection or missing input, or mark steps as complete. END"}
{"prompt":"Tabbed Container\n\n###\n\n","completion":" The **Tabbed Container** combines the [Tabs](https:\/\/retool.com\/components\/tabs) component with a Container, allowing you to create tabbed navigation for the Container's views. END"}
{"prompt":"The **Tabbed Container** combines the [Tabs](https:\/\/retool.com\/components\/tabs) component with a Container, allowing you to create tabbed navigation for the Container's views.\n\n###\n\n","completion":" You can drag Tabbed Containers directly to the Canvas. The Container automatically includes a Tabs component that maps to views. As you make changes to views, navigation options update automatically. END"}
{"prompt":"You can drag Tabbed Containers directly to the Canvas. The Container automatically includes a Tabs component that maps to views. As you make changes to views, navigation options update automatically.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/fe8c4c3c-65e4-4100-9f41-10fbdccc6a3f.png\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/7a392bbd-c26b-4895-a004-e0acaf9fb982.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Switch between views\n\n###\n\n","completion":" In addition to using Stepped or Tabbed Containers, you can select a Container's current view using event handlers, JavaScript, or a linked Steps or Tabs component. END"}
{"prompt":"Event handler\n\n###\n\n","completion":" Use the **Control component** action and select either the **Set current view key** or **Set current view index** method. END"}
{"prompt":"Use the **Control component** action and select either the **Set current view key** or **Set current view index** method.\n\n###\n\n","completion":" ![Alt text](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/1fccef60-ca23-4403-982a-5547b62f4c60.jpg) END"}
{"prompt":"JavaScript\n\n###\n\n","completion":" You can write JavaScript (e.g., **JavaScript queries** or **Run script** [<<glossary:event handlers>>](https:\/\/docs.retool.com\/docs\/event-handlers)) to select a view using `setCurrentView()` with the key for the view or `setCurrentViewIndex()` with the index of the view: END"}
{"prompt":"Link to Steps or Tabs\n\n###\n\n","completion":" You can link a Steps or Tabs component to a Container with multiple views, creating a Stepped or Tabbed Container Toggle the **Link to a Container** setting and select a Container to link with. To unlink, toggle the option off. END"}
{"prompt":"You can link a Steps or Tabs component to a Container with multiple views, creating a Stepped or Tabbed Container Toggle the **Link to a Container** setting and select a Container to link with. To unlink, toggle the option off.\n\n###\n\n","completion":" ![Link to a container](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8940f640-0505-4f43-952e-1de995305b55.png) END"}
{"prompt":"![Link to a container](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8940f640-0505-4f43-952e-1de995305b55.png)\n\n###\n\n","completion":" In general, Retool recommends using the preconfigured Stepped or Tabbed Containers. END"}
{"prompt":"title: \"Connect to CouchDB\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your CouchDB database to Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool supports specifying your CouchDB's credentials through username and password. END"}
{"prompt":"Allow Retool to access CouchDB\n\n###\n\n","completion":" If CouchDB is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"1. Create a new resource\n\n###\n\n","completion":" Sign in to your Retool organization and navigate to the **Resources** tab. Click **Create new**, then select **CouchDB**. END"}
{"prompt":"Sign in to your Retool organization and navigate to the **Resources** tab. Click **Create new**, then select **CouchDB**.\n\n###\n\n","completion":" ![Create a new resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/5f4c5f17-b674-473a-a508-2179863f90ef.webp) END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **CouchDB** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **CouchDB** resource type.\n\n###\n\n","completion":" ![Select CouchDB resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/41afddcb-f9c2-42a7-af61-ab618f4173f5.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the CouchDB resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the following settings. END"}
{"prompt":"Specify a name and location for the CouchDB resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the following settings.\n\n###\n\n","completion":" ![Configure CouchDB](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/bb3f106c-f874-4a6d-b801-6b1a18d730dc.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your CouchDB resource is now ready to use. To interact with CouchDB data, select the resource in the query editor. END"}
{"prompt":"title: \"Build list views\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to build list views that dynamically repeat using your data.\"\nhidden: false\n\n###\n\n","completion":" The [List View](https:\/\/retool.com\/components\/list-view) component allows you to create repeatable rows of data whose look and feel are defined by you. END"}
{"prompt":"The [List View](https:\/\/retool.com\/components\/list-view) component allows you to create repeatable rows of data whose look and feel are defined by you.\n\n###\n\n","completion":" The List View component is similar to a [Container](https:\/\/retool.com\/components\/container) in that you can nest other components inside of it. You control the number of rows, which determines the number of times a component appears in a list view. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Try out the app to see list views in action (buttons are disabled). The app incorporates query data to display a list of orders, and buttons to request a return. END"}
{"prompt":"Try out the app to see list views in action (buttons are disabled). The app incorporates query data to display a list of orders, and buttons to request a return.\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": false,\n\"url\": \"https:\/\/docsdemos.retool.com\/embedded\/public\/080d3042-1ea2-49c4-aa42-1ab741cda257\",\n\"title\": \"Retool\",\n\"favicon\": \"https:\/\/retool-edge.com\/favicon.png\",\n\"iframe\": true,\n\"height\": \"500px\"\n}\n[\/block] END"}
{"prompt":"[block:embed]\n{\n\"html\": false,\n\"url\": \"https:\/\/docsdemos.retool.com\/embedded\/public\/080d3042-1ea2-49c4-aa42-1ab741cda257\",\n\"title\": \"Retool\",\n\"favicon\": \"https:\/\/retool-edge.com\/favicon.png\",\n\"iframe\": true,\n\"height\": \"500px\"\n}\n[\/block]\n\n###\n\n","completion":" The demo uses data generated from Retool's API Generator. You can generate data yourself to follow along by clicking **Generate API** and saving the endpoint URL. END"}
{"prompt":"Display query results in a list view\n\n###\n\n","completion":" List View components are empty when you first drag them onto the canvas. The default number of rows is three, so when you add a component like [Button](https:\/\/retool.com\/components\/button) to a list view, the button repeats three times. END"}
{"prompt":"List View components are empty when you first drag them onto the canvas. The default number of rows is three, so when you add a component like [Button](https:\/\/retool.com\/components\/button) to a list view, the button repeats three times.\n\n###\n\n","completion":" ![Default behavior for row length in list views](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/548bf9ed-9bcf-449c-be1e-a480d8b680b1.png) END"}
{"prompt":"![Default behavior for row length in list views](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/548bf9ed-9bcf-449c-be1e-a480d8b680b1.png)\n\n###\n\n","completion":" You can set the number of rows in a list view dynamically to match the number of rows returned in a query. This ensures that only the exact number of list rows are used. END"}
{"prompt":"Set the number of rows\n\n###\n\n","completion":" Setting the number of rows dynamically ensures your list view is the correct size, even if you don't know the size of your result set. END"}
{"prompt":"Setting the number of rows dynamically ensures your list view is the correct size, even if you don't know the size of your result set.\n\n###\n\n","completion":" For example, to retrieve the number of rows to show in your list view, use the generated API to retrieve all orders. END"}
{"prompt":"For example, to retrieve the number of rows to show in your list view, use the generated API to retrieve all orders.\n\n###\n\n","completion":" In the Inspector under **Basic**, you can now set `{{ getOrders.data.length }}` in the **Number of rows** field. END"}
{"prompt":"In the Inspector under **Basic**, you can now set `{{ getOrders.data.length }}` in the **Number of rows** field.\n\n###\n\n","completion":" ![Set number of rows in list view based on query results](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/9468f1ca-a069-4fd8-bb90-4d8657b8d825.png) END"}
{"prompt":"![Set number of rows in list view based on query results](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/9468f1ca-a069-4fd8-bb90-4d8657b8d825.png)\n\n###\n\n","completion":" This adds more rows to the list view, but the same data is shown in each row. If you inspect a row, you can see the **Text** values are static. Similar to setting the number of rows, you can use query data and the `i` variable to dynamically set component properties like **Text**. END"}
{"prompt":"The `i` variable\n\n###\n\n","completion":" The `i` variable allows you to reference the index of an item within a List View component. This allows you to render and access unique values for each row. END"}
{"prompt":"The `i` variable allows you to reference the index of an item within a List View component. This allows you to render and access unique values for each row.\n\n###\n\n","completion":" In this example, the data returned in `getOrders` includes the product SKU, customer email, and return status. You can use the `i` variable to access individual items within `getOrders.data`. END"}
{"prompt":"In this example, the data returned in `getOrders` includes the product SKU, customer email, and return status. You can use the `i` variable to access individual items within `getOrders.data`.\n\n###\n\n","completion":" To show the customer email for each product, add a [Text](https:\/\/retool.com\/components\/text-input) component to the list view and update its **Value** to `{{ getOrders.data[i].customer }}`. The same applies for the product SKU, using `getOrders.data[i].product_id`. END"}
{"prompt":"To show the customer email for each product, add a [Text](https:\/\/retool.com\/components\/text-input) component to the list view and update its **Value** to `{{ getOrders.data[i].customer }}`. The same applies for the product SKU, using `getOrders.data[i].product_id`.\n\n###\n\n","completion":" ![Access row data by indexing into getOrders.data[i]](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/18e4826e-8da1-4c6f-ab8a-55febc2db75e.png) END"}
{"prompt":"![Access row data by indexing into getOrders.data[i]](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/18e4826e-8da1-4c6f-ab8a-55febc2db75e.png)\n\n###\n\n","completion":" You can also use the `i` variable in queries. For example, you might want to add a button that allows users to mark orders with a requested return. To do this, write a query that updates the record, setting `return_requested`, using the `i` variable to reference the product's ID. END"}
{"prompt":"You can also use the `i` variable in queries. For example, you might want to add a button that allows users to mark orders with a requested return. To do this, write a query that updates the record, setting `return_requested`, using the `i` variable to reference the product's ID.\n\n###\n\n","completion":" You can then add an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to trigger the query when the button is clicked. When a component inside a list view triggers a query, the value of `i` is substituted with the row index of that component. In this example, that's the index of the Button component. END"}
{"prompt":"You can then add an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to trigger the query when the button is clicked. When a component inside a list view triggers a query, the value of `i` is substituted with the row index of that component. In this example, that's the index of the Button component.\n\n###\n\n","completion":" ![Create requestReturn API call to update individual orders](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/canvas\/7aaf9a43-19fb-429e-9570-37ee5da62e51.png) END"}
{"prompt":"Nested List Views\n\n###\n\n","completion":" You can nest List Views to dynamically generate UI elements based on multidimensional arrays and tree-like data structures—for example, org charts or threaded comments. Nested List Views support up to three levels of depth and can also reference child components using `componentName.value`. END"}
{"prompt":"You can nest List Views to dynamically generate UI elements based on multidimensional arrays and tree-like data structures—for example, org charts or threaded comments. Nested List Views support up to three levels of depth and can also reference child components using `componentName.value`.\n\n###\n\n","completion":" The following demo app shows one level of nested List Views to represent an org chart. It uses a two-dimensional array, which consists of a list of teams, and within each team, its name and a list of team members. You can [download and import the app as JSON](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/4db05b8b-b837-4675-847d-e1832f09d4fb.json) to learn how it's built. END"}
{"prompt":"The following demo app shows one level of nested List Views to represent an org chart. It uses a two-dimensional array, which consists of a list of teams, and within each team, its name and a list of team members. You can [download and import the app as JSON](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/4db05b8b-b837-4675-847d-e1832f09d4fb.json) to learn how it's built.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdemos%2Fff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b62433ea-443d-4499-bfe3-4cdc2b59506d?_releaseVersion=2.0.0\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdemos%2Fff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b62433ea-443d-4499-bfe3-4cdc2b59506d?_releaseVersion=2.0.0\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" The `transformedJS` and `transformedSql` queries convert `sampleData` into an object you can use in a nested List View. END"}
{"prompt":"The `transformedJS` and `transformedSql` queries convert `sampleData` into an object you can use in a nested List View.\n\n###\n\n","completion":" In nested List Views, `ri` is an array of indexes for each nested level. For example, in the demo app: END"}
{"prompt":"In nested List Views, `ri` is an array of indexes for each nested level. For example, in the demo app:\n\n###\n\n","completion":" To access or iterate over data, use the `ri` variable as an index. In the example app, team members are shown dynamically using `transformedData.data[ri[0]].members[ri[1]]]` as the value of the team member text. END"}
{"prompt":"To access or iterate over data, use the `ri` variable as an index. In the example app, team members are shown dynamically using `transformedData.data[ri[0]].members[ri[1]]]` as the value of the team member text.\n\n###\n\n","completion":" You can also use `i` to refer to the last element, or the deepest level, in `ri`. If you nest List Views to three levels, `i` is equivalent to `ri[2]`. END"}
{"prompt":"You can also use `i` to refer to the last element, or the deepest level, in `ri`. If you nest List Views to three levels, `i` is equivalent to `ri[2]`.\n\n###\n\n","completion":" To access a component within a nested List View, you can reference `componentName.value`. To access a component outside of the List View, you can pass a specific index—for example, `textInput[1][2]` accesses the third text input in the second nested List View. Providing indexes is less performant than using `componentName.value`. END"}
{"prompt":"Access nested List View items within queries\n\n###\n\n","completion":" You can reference `ri` and `i` within a query if it is triggered by a component within a nested List View. For example, if you configure an event handler on a [Button](https:\/\/retool.com\/components\/button) component within a nested List View to trigger the query, the button's `ri` and `i` values will be available to that query. END"}
{"prompt":"title: \"Build input forms\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to use the Form component to build a form that creates and updates records.\"\nhidden: false\n\n###\n\n","completion":" The [Form](https:\/\/retool.com\/components\/form) component functions as a container for input components, providing you with complete control over a form's layout and design. You create a form by adding input components or generating them automatically using the schema of a [Table](https:\/\/retool.com\/components\/table) or a connected PostgreSQL, MySQL, or MS SQL database. END"}
{"prompt":"The [Form](https:\/\/retool.com\/components\/form) component functions as a container for input components, providing you with complete control over a form's layout and design. You create a form by adding input components or generating them automatically using the schema of a [Table](https:\/\/retool.com\/components\/table) or a connected PostgreSQL, MySQL, or MS SQL database.\n\n###\n\n","completion":" This guide walks you through building an app and form using the Form component. You can fill in the form to create a new record or update existing data by selecting a record from a table and populating the form. The form also increments IDs automatically. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Try out the app to see the form in action (submissions are disabled). END"}
{"prompt":"Try out the app to see the form in action (submissions are disabled).\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/68672890-f018-4fcd-a568-a82a0a5ddd43\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Generate the inputs\n\n###\n\n","completion":" First, create a new app. Retool automatically adds a table (`table1`) and query (`query1`) to your app to display `products` table records from the sample `onboarding_db` PostgreSQL database. Next, drag a Form component onto the canvas and place it next to the table. New forms are initially empty so you need to add inputs or generate a new form. END"}
{"prompt":"First, create a new app. Retool automatically adds a table (`table1`) and query (`query1`) to your app to display `products` table records from the sample `onboarding_db` PostgreSQL database. Next, drag a Form component onto the canvas and place it next to the table. New forms are initially empty so you need to add inputs or generate a new form.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5a9c0d6-Screenshot_2021-12-17_at_13.33.14.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5a9c0d6-Screenshot_2021-12-17_at_13.33.14.png)\n\n###\n\n","completion":" Click **Generate form**, then select the **onboarding_db** database and **products** table. The form generator displays the column names from the selected table and the generated input fields. Retool evaluates the type of each column to determine the input type to use. For instance, an Integer column results in a Number Input. END"}
{"prompt":"Click **Generate form**, then select the **onboarding_db** database and **products** table. The form generator displays the column names from the selected table and the generated input fields. Retool evaluates the type of each column to determine the input type to use. For instance, an Integer column results in a Number Input.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/93f1db7-Screenshot_2021-12-17_at_13.37.06.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/93f1db7-Screenshot_2021-12-17_at_13.37.06.png)\n\n###\n\n","completion":" You can uncheck individual columns to exclude them from the form. This is useful if you don't want users to provide certain information, such as IDs or timestamps. You can also change the generated input type or label, and whether the field should be required. END"}
{"prompt":"You can uncheck individual columns to exclude them from the form. This is useful if you don't want users to provide certain information, such as IDs or timestamps. You can also change the generated input type or label, and whether the field should be required.\n\n###\n\n","completion":" Update the labels for each input and set the fields required to be **Name**, **Created at**, **Updated at**, and **ID** fields. END"}
{"prompt":"Update the labels for each input and set the fields required to be **Name**, **Created at**, **Updated at**, and **ID** fields.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/60c9235-Screenshot_2021-12-17_at_13.39.54.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/60c9235-Screenshot_2021-12-17_at_13.39.54.png)\n\n###\n\n","completion":" Click **Generate form** to create the new form. END"}
{"prompt":"Click **Generate form** to create the new form.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d41e429-Screenshot_2021-12-17_at_13.40.44.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d41e429-Screenshot_2021-12-17_at_13.40.44.png)\n\n###\n\n","completion":" Each input is generated with a value for **form data key**—shown in the **Advanced** section of the Inspector—that corresponds to the column name from the table. END"}
{"prompt":"Validate submissions\n\n###\n\n","completion":" Forms can check the validation status of inputs—enable **Validate inputs on submit** in the **Interaction** section of the Inspector. Each input component supports several validation options. Validation for a selected input is configured in the **Validation** section of the Inspector. END"}
{"prompt":"Forms can check the validation status of inputs—enable **Validate inputs on submit** in the **Interaction** section of the Inspector. Each input component supports several validation options. Validation for a selected input is configured in the **Validation** section of the Inspector.\n\n###\n\n","completion":" Validation supports options such as pattern matching (URL, email, or regular expression) and minimum and maximum lengths. Select the **Image URL** input and change the **pattern** to **URL** so invalid URL formats produce a validation error. END"}
{"prompt":"Validation supports options such as pattern matching (URL, email, or regular expression) and minimum and maximum lengths. Select the **Image URL** input and change the **pattern** to **URL** so invalid URL formats produce a validation error.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/065b2d6-Screenshot_2021-12-17_at_13.44.12.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/065b2d6-Screenshot_2021-12-17_at_13.44.12.png)\n\n###\n\n","completion":" For JSON Schema Form components, you define [validation rules](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/usage\/validation\/) in the JSON schema. You can also enable automatic validation by enabling **Live validation** in the Inspector. END"}
{"prompt":"For JSON Schema Form components, you define [validation rules](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/usage\/validation\/) in the JSON schema. You can also enable automatic validation by enabling **Live validation** in the Inspector.\n\n###\n\n","completion":" You can also modify input properties of JSON Schema Form components by updating the [type](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/usage\/single#field-types) field. This can be useful if fields need to accept null values or you need to modify your form to more closely match your data. END"}
{"prompt":"Submit the form to create a record\n\n###\n\n","completion":" When you use Form components, Retool also generates a query, `form1SubmitToProducts`, to insert new records into the database when the form is submitted. END"}
{"prompt":"When you use Form components, Retool also generates a query, `form1SubmitToProducts`, to insert new records into the database when the form is submitted.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3b6a269-Screenshot_2021-12-17_at_13.46.52.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3b6a269-Screenshot_2021-12-17_at_13.46.52.png)\n\n###\n\n","completion":" Fill in the form and click **Submit** to create a new record in your database. Click the **↻** button on the table to refresh it and see the newly created record. END"}
{"prompt":"Fill in the form and click **Submit** to create a new record in your database. Click the **↻** button on the table to refresh it and see the newly created record.\n\n###\n\n","completion":" For JSON Schema Form components, you must create this query manually and attach it to the form as an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers). END"}
{"prompt":"Populate the form to update existing records\n\n###\n\n","completion":" You can also use this form to make changes to an existing record. A common approach is to populate a form with data from a selected table row and then submit changes to update the record. END"}
{"prompt":"You can also use this form to make changes to an existing record. A common approach is to populate a form with data from a selected table row and then submit changes to update the record.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1beb2e6-Screenshot_2021-12-17_at_13.49.57.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1beb2e6-Screenshot_2021-12-17_at_13.49.57.png)\n\n###\n\n","completion":" You can set the form's **Initial data** property and automatically populate its inputs using the selected table row data. The Form component matches each input's **data key** to a corresponding column name from the table to determine where values should go. END"}
{"prompt":"You can set the form's **Initial data** property and automatically populate its inputs using the selected table row data. The Form component matches each input's **data key** to a corresponding column name from the table to determine where values should go.\n\n###\n\n","completion":" For example, this ternary operator sets the form's initial data only if a table row is selected: END"}
{"prompt":"For example, this ternary operator sets the form's initial data only if a table row is selected:\n\n###\n\n","completion":" If set, a form's **Initial data** overrides any default values for nested components. END"}
{"prompt":"Update the query to create and update records\n\n###\n\n","completion":" The form's existing query only creates new records. However, you can update the existing query to create or update records when the form is submitted. END"}
{"prompt":"Change the action type\n\n###\n\n","completion":" Select the existing query, `form1SubmitToProducts`, and change the **action type** to **bulk upsert via primary key**. This action requires a **primary key column** so the query knows which record to update. This should be a unique identifier to avoid incorrect changes. In this case, set the value to `id`. END"}
{"prompt":"Select the existing query, `form1SubmitToProducts`, and change the **action type** to **bulk upsert via primary key**. This action requires a **primary key column** so the query knows which record to update. This should be a unique identifier to avoid incorrect changes. In this case, set the value to `id`.\n\n###\n\n","completion":" When the form is submitted, the query looks for an existing record using the provided ID. If there's a match, that record is updated. If not, the query creates a new record instead. END"}
{"prompt":"Include the form data\n\n###\n\n","completion":" The form data isn't included in the new action type. Set the **array of records to update** to `{{ [form1.data] }}`. Note that the form data is wrapped in brackets to provide it as an Object. END"}
{"prompt":"Refresh the table after submission\n\n###\n\n","completion":" You can create an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to refresh the table to show the changes automatically: END"}
{"prompt":"You can create an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to refresh the table to show the changes automatically:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d4ddc7d-Screenshot_2021-12-17_at_14.09.42.png) END"}
{"prompt":"Clear the form\n\n###\n\n","completion":" There are two options for clearing values from the form: END"}
{"prompt":"Increment IDs automatically\n\n###\n\n","completion":" The form currently allows users to specify an ID. Since this form will create or update records, users could accidentally overwrite an existing record if they provided an existing ID. Instead, you should automatically increment the ID and prevent users from providing one in the form. END"}
{"prompt":"The form currently allows users to specify an ID. Since this form will create or update records, users could accidentally overwrite an existing record if they provided an existing ID. Instead, you should automatically increment the ID and prevent users from providing one in the form.\n\n###\n\n","completion":" For this guide, you can use Math to find the highest ID number from a set of data and use it to increment to the next ID to use automatically: END"}
{"prompt":"For this guide, you can use Math to find the highest ID number from a set of data and use it to increment to the next ID to use automatically:\n\n###\n\n","completion":" First, disable the ID input by setting the value for **Disabled** to `true` in the **Interaction** section of the Inspector. Next, update the form's Initial data to provide a new ID if a row isn't selected: END"}
{"prompt":"First, disable the ID input by setting the value for **Disabled** to `true` in the **Interaction** section of the Inspector. Next, update the form's Initial data to provide a new ID if a row isn't selected:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/55d67c2-Screenshot_2021-12-17_at_14.15.49.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/55d67c2-Screenshot_2021-12-17_at_14.15.49.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b82f3ce-Screenshot_2021-12-17_at_14.15.39.png) END"}
{"prompt":"Display image preview\n\n###\n\n","completion":" The Form component can contain any other components, not just inputs. You can include an optional image preview using the provided image URL. END"}
{"prompt":"Add toggle\n\n###\n\n","completion":" Toggle Link has a value of `false` when in a closed state and displays the text **Show image preview**. END"}
{"prompt":"Add image\n\n###\n\n","completion":" The image preview can now be toggled but is hidden automatically if no image URL is present. END"}
{"prompt":"The image preview can now be toggled but is hidden automatically if no image URL is present.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c64de48-Screenshot_2021-12-17_at_14.20.14.png) END"}
{"prompt":"Set the form title\n\n###\n\n","completion":" The final step is to update the form's title so it's clear to the user if they are creating a new record or updating an existing one. Select the form's title and change the **Value**: END"}
{"prompt":"The final step is to update the form's title so it's clear to the user if they are creating a new record or updating an existing one. Select the form's title and change the **Value**:\n\n###\n\n","completion":" This displays either **Edit product** or **Create new product** depending on whether a table row is selected or not. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your form is now ready to use. Try it out and create a new record, or select an existing record and update it. END"}
{"prompt":"title: \"Build input forms using JSON Schema\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to build functional forms that interact with your data using JSON Schema Form.\"\nhidden: true\n\n###\n\n","completion":" The [JSON Schema Form](https:\/\/retool.com\/components\/json-schema-form) component is based on the [react-jsonschema-form](https:\/\/github.com\/rjsf-team\/react-jsonschema-form) library. You create a form by defining the inputs and behavior using JSON or generating them automatically using the schema of a connected PostgreSQL, MySQL, or MS SQL database. END"}
{"prompt":"The [JSON Schema Form](https:\/\/retool.com\/components\/json-schema-form) component is based on the [react-jsonschema-form](https:\/\/github.com\/rjsf-team\/react-jsonschema-form) library. You create a form by defining the inputs and behavior using JSON or generating them automatically using the schema of a connected PostgreSQL, MySQL, or MS SQL database.\n\n###\n\n","completion":" This guide walks you through building an app and form using JSON Schema Form. You can fill in the form to create a new record or update existing data by selecting a record from a table and populating the form. The form also increments IDs automatically. END"}
{"prompt":"Try out the app to see the form in action (submissions are disabled).\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/fa6890ca-ae98-4b96-bbc5-781cf69c78fc\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Generate the inputs\n\n###\n\n","completion":" First, create a new app. Retool automatically adds a table (`table1`) and query (`query1`) to your app that displays records from the `products` table. Drag a JSON Schema Form component onto the canvas and place it next to the table. END"}
{"prompt":"First, create a new app. Retool automatically adds a table (`table1`) and query (`query1`) to your app that displays records from the `products` table. Drag a JSON Schema Form component onto the canvas and place it next to the table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/53da9a0-Screenshot_2021-12-17_at_14.30.58.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/53da9a0-Screenshot_2021-12-17_at_14.30.58.png)\n\n###\n\n","completion":" To generate a new form: END"}
{"prompt":"To generate a new form:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b1b0170-Screenshot_2021-12-17_at_14.31.39.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b1b0170-Screenshot_2021-12-17_at_14.31.39.png)\n\n###\n\n","completion":" The structure of the form is defined by the JSON schema and any changes are immediately reflected. You can modify the JSON to remove individual inputs if you want to exclude them from the form. This is useful if you don't need users to provide certain information, such as IDs or timestamps. END"}
{"prompt":"Validate submissions\n\n###\n\n","completion":" You define [validation](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/usage\/validation) rules in the JSON Schema. Update the JSON's `required` properties to require the following fields: END"}
{"prompt":"You define [validation](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/usage\/validation) rules in the JSON Schema. Update the JSON's `required` properties to require the following fields:\n\n###\n\n","completion":" Each type of input supports a number of validation options depending on their purpose. For instance, URL inputs can return a validation error if an invalid URL is entered. Edit the JSON schema and update the `image_url` property to expect URL formatting: END"}
{"prompt":"Each type of input supports a number of validation options depending on their purpose. For instance, URL inputs can return a validation error if an invalid URL is entered. Edit the JSON schema and update the `image_url` property to expect URL formatting:\n\n###\n\n","completion":" JSON Schema Form can check the validation status of inputs on every change by enabling **Live validation** in the **Advanced** section of the Inspector. Validation occurs as you fill in the inputs and errors are reported within the form. END"}
{"prompt":"JSON Schema Form can check the validation status of inputs on every change by enabling **Live validation** in the **Advanced** section of the Inspector. Validation occurs as you fill in the inputs and errors are reported within the form.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/982b41a-Screenshot_2021-12-17_at_14.34.31.png) END"}
{"prompt":"Populate the form to update existing records\n\n###\n\n","completion":" You can also configure this form to make changes to an existing record. A common approach for this is to populate a form with data from a selected table row and then submit changes to update the record. END"}
{"prompt":"You can also configure this form to make changes to an existing record. A common approach for this is to populate a form with data from a selected table row and then submit changes to update the record.\n\n###\n\n","completion":" Selected table row values are available using `table1.selectedRow.data`. You can set the form's **default form data** property which automatically populates the inputs. JSON Schema Form matches the name of each input to a corresponding column name from the table to determine where values are placed. END"}
{"prompt":"Selected table row values are available using `table1.selectedRow.data`. You can set the form's **default form data** property which automatically populates the inputs. JSON Schema Form matches the name of each input to a corresponding column name from the table to determine where values are placed.\n\n###\n\n","completion":" For example, this ternary operator passes the selected row from the table to the form, but only if a table row is selected: END"}
{"prompt":"For example, this ternary operator passes the selected row from the table to the form, but only if a table row is selected:\n\n###\n\n","completion":" JSON Schema Form matches input field and column names from the table to determine where values are placed. END"}
{"prompt":"JSON Schema Form matches input field and column names from the table to determine where values are placed.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ee59e59-Screenshot_2021-12-17_at_14.36.31.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ee59e59-Screenshot_2021-12-17_at_14.36.31.png)\n\n###\n\n","completion":" Selecting a record in the table loads the values into the form. END"}
{"prompt":"Modify inputs\n\n###\n\n","completion":" The `products` table contains a `part_number` column but records don't have a value for this. As a result, the form displays a validation error because the `part_number` input expects a string. END"}
{"prompt":"The `products` table contains a `part_number` column but records don't have a value for this. As a result, the form displays a validation error because the `part_number` input expects a string.\n\n###\n\n","completion":" The name of each generated input corresponds to the column name from the table. You can modify the input's properties by modifying the appropriate section of JSON. Modify the JSON schema and update its [type](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/usage\/single#field-types) to accept support nullable values: END"}
{"prompt":"Write a query to create and update records\n\n###\n\n","completion":" The form now has the necessary inputs and can display existing data. Write a query that creates or updates a record when the form is submitted. END"}
{"prompt":"Add a new event handler\n\n###\n\n","completion":" Add a new [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to the form using the **Interaction** section of the Inspector using the following options: END"}
{"prompt":"Add a new [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to the form using the **Interaction** section of the Inspector using the following options:\n\n###\n\n","completion":" This creates a new query, `jsonSchemaForm1SubmitHandler`. END"}
{"prompt":"This creates a new query, `jsonSchemaForm1SubmitHandler`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6c5c0f8-CleanShot_2021-12-09_at_09.55.05.png) END"}
{"prompt":"Write the query\n\n###\n\n","completion":" Select the new query and make the following changes: END"}
{"prompt":"Select the new query and make the following changes:\n\n###\n\n","completion":" This updates the query to use the correct database and table, run when manually triggered, and the kind of action it takes. END"}
{"prompt":"Set the action type\n\n###\n\n","completion":" Select **bulk upsert via primary key** for the query's action type. This action requires a **primary key column** so the query knows which record to update. It should be a unique identifier to avoid incorrect changes. In this case, set the value to `id`. END"}
{"prompt":"Select **bulk upsert via primary key** for the query's action type. This action requires a **primary key column** so the query knows which record to update. It should be a unique identifier to avoid incorrect changes. In this case, set the value to `id`.\n\n###\n\n","completion":" When the form is submitted, the query looks for an existing record using the provided ID. If there's a match, that record is updated. If not, the query creates a new record instead. END"}
{"prompt":"Include the form data\n\n###\n\n","completion":" Set the **array of records to update** to `{{ [jsonSchemaForm1.data] }}`. Note that the form data is wrapped in brackets to provide it as an Object. END"}
{"prompt":"Refresh the table after submission\n\n###\n\n","completion":" You can create an event handler to refresh the table to show the changes automatically: END"}
{"prompt":"You can create an event handler to refresh the table to show the changes automatically:\n\n###\n\n","completion":" Click **Save** to save the changes to your query. END"}
{"prompt":"Click **Save** to save the changes to your query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e4f3aa1-Screenshot_2021-12-17_at_14.38.15.png) END"}
{"prompt":"There are two options for clearing values from the form:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/30135c4-Screenshot_2021-12-17_at_14.38.57.png) END"}
{"prompt":"Increment IDs automatically\n\n###\n\n","completion":" The form currently allows users to specify an ID. Since this form will create or update records, a user could accidentally overwrite an existing record if they provided an existing ID. Instead, you should automatically increment the ID and prevent users from providing one in the form. END"}
{"prompt":"The form currently allows users to specify an ID. Since this form will create or update records, a user could accidentally overwrite an existing record if they provided an existing ID. Instead, you should automatically increment the ID and prevent users from providing one in the form.\n\n###\n\n","completion":" For this guide, you can use Math to find the highest ID number in the products table and use it to increment to the following number to use automatically: END"}
{"prompt":"For this guide, you can use Math to find the highest ID number in the products table and use it to increment to the following number to use automatically:\n\n###\n\n","completion":" First, update the UI schema to disable the id input: END"}
{"prompt":"First, update the UI schema to disable the id input:\n\n###\n\n","completion":" Next, update the form's **Default Form Data** property to provide a new ID if a row isn't selected: END"}
{"prompt":"Next, update the form's **Default Form Data** property to provide a new ID if a row isn't selected:\n\n###\n\n","completion":" Since the input for ID expects a string, the number is converted using `.toString()`. END"}
{"prompt":"Since the input for ID expects a string, the number is converted using `.toString()`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ce6553b-Screenshot_2021-12-17_at_14.40.26.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ce6553b-Screenshot_2021-12-17_at_14.40.26.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/719ade4-Screenshot_2021-12-17_at_14.40.34.png) END"}
{"prompt":"title: \"Build wizards\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to build a guided series of steps with the Wizard component.\"\nhidden: false\n\n###\n\n","completion":" The [Wizard](https:\/\/retool.com\/components\/wizard) component allows you to group components into a series of steps that follow a linear path or branch into multiple ones. It supports running queries on step change or reset, [virtual steps](#virtual-steps) that display a loading screen, and setting the initial step dynamically. The Wizard component also includes a workflow editor to add or remove steps and define transitions between them. END"}
{"prompt":"The [Wizard](https:\/\/retool.com\/components\/wizard) component allows you to group components into a series of steps that follow a linear path or branch into multiple ones. It supports running queries on step change or reset, [virtual steps](#virtual-steps) that display a loading screen, and setting the initial step dynamically. The Wizard component also includes a workflow editor to add or remove steps and define transitions between them.\n\n###\n\n","completion":" This guide walks you through building a wizard to deactivate a user. Before doing so, the wizard checks that the user's account is in good standing. If not, you have the option of sending the user an invoice to collect an outstanding balance. The wizard also requires you to provide a reason before the user is deactivated. END"}
{"prompt":"Generate user data\n\n###\n\n","completion":" For the purpose of this guide, your app will use sample user information that's generated from our [REST API generator](https:\/\/retool.com\/api-generator\/). This online tool creates a simple REST API endpoint with a custom dataset for you to interact with. END"}
{"prompt":"For the purpose of this guide, your app will use sample user information that's generated from our [REST API generator](https:\/\/retool.com\/api-generator\/). This online tool creates a simple REST API endpoint with a custom dataset for you to interact with.\n\n###\n\n","completion":" Launch the [REST API generator](https:\/\/retool.com\/api-generator\/) and create a new dataset with the following information: END"}
{"prompt":"Launch the [REST API generator](https:\/\/retool.com\/api-generator\/) and create a new dataset with the following information:\n\n###\n\n","completion":" Set the **API Name** to `wizard` and **# Rows** to `25`, then click **Generate API**. END"}
{"prompt":"Set the **API Name** to `wizard` and **# Rows** to `25`, then click **Generate API**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/55c1e9bb-5aa9-4e7b-95a9-676661d5ca91.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/55c1e9bb-5aa9-4e7b-95a9-676661d5ca91.jpg)\n\n###\n\n","completion":" Retool automatically generates a custom API and outputs details of the endpoint. END"}
{"prompt":"Query user data\n\n###\n\n","completion":" First, create a new app. Retool automatically creates a new query (**query1**) to get started. Select the query and change its **Resource** to **RESTQuery**, then configure it to perform a **GET** request from your generated API endpoint URL (e.g., `https:\/\/retoolapi.dev\/cZQzL3\/wizard`). Click **Save & Run** to save the query and run it. END"}
{"prompt":"First, create a new app. Retool automatically creates a new query (**query1**) to get started. Select the query and change its **Resource** to **RESTQuery**, then configure it to perform a **GET** request from your generated API endpoint URL (e.g., `https:\/\/retoolapi.dev\/cZQzL3\/wizard`). Click **Save & Run** to save the query and run it.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/0c3cf929-5429-4631-a722-a204936a0c46.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/0c3cf929-5429-4631-a722-a204936a0c46.jpg)\n\n###\n\n","completion":" This API returns sample data with the following structure: END"}
{"prompt":"This API returns sample data with the following structure:\n\n###\n\n","completion":" Click the query's name and rename it `getUsers`. END"}
{"prompt":"Build the wizard\n\n###\n\n","completion":" Drag a Wizard component onto the Retool canvas. Wizard functions like the [Container](https:\/\/retool.com\/components\/container) component and groups other components together. Next, drag a [Table](https:\/\/retool.com\/components\/table) component onto the Wizard. The table automatically uses the most recent query as a data source to display the API data. END"}
{"prompt":"Drag a Wizard component onto the Retool canvas. Wizard functions like the [Container](https:\/\/retool.com\/components\/container) component and groups other components together. Next, drag a [Table](https:\/\/retool.com\/components\/table) component onto the Wizard. The table automatically uses the most recent query as a data source to display the API data.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/dc39b758-3a4a-4580-92cd-27361ce511cd.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/dc39b758-3a4a-4580-92cd-27361ce511cd.jpg)\n\n###\n\n","completion":" Use the **Explorer** tab of the left panel to rename the table to `selectUser` (right-click the component and select **Rename**). END"}
{"prompt":"Create additional steps\n\n###\n\n","completion":" Click the **Edit workflow** in the **Edit** section of the **Inspector** to open the **Workflow editor**. You use this to add additional steps and define paths through the wizard. END"}
{"prompt":"Click the **Edit workflow** in the **Edit** section of the **Inspector** to open the **Workflow editor**. You use this to add additional steps and define paths through the wizard.\n\n###\n\n","completion":" Rename this first step to **Select user** and add two new steps for **Send payment reminder** and **Deactivate user**. Connect **Select users** to both new steps by holding the **Shift** key as you click-and-drag. END"}
{"prompt":"Rename this first step to **Select user** and add two new steps for **Send payment reminder** and **Deactivate user**. Connect **Select users** to both new steps by holding the **Shift** key as you click-and-drag.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/701f864a-c651-4b64-b8b9-b95e6c1af09b.jpg) END"}
{"prompt":"Define paths\n\n###\n\n","completion":" The wizard can follow different paths depending on _truthy_ conditions. If the path's **Enable if** value evaluates to **true**, the wizard presents this as a next step. If it evaluates to **false**, the step is not available. Set the value of **Enable if** between **Select user** and each path of the following: END"}
{"prompt":"The wizard can follow different paths depending on _truthy_ conditions. If the path's **Enable if** value evaluates to **true**, the wizard presents this as a next step. If it evaluates to **false**, the step is not available. Set the value of **Enable if** between **Select user** and each path of the following:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/401963cc-e01f-4603-8b16-41cfc9a726cd.jpg) END"}
{"prompt":"Customize payment reminder step\n\n###\n\n","completion":" Each step of a wizard is independent and can contain different components. Click on the **Edit step** dropdown in the **Edit** section of the Inspector, then select **Send payment reminder**. END"}
{"prompt":"Each step of a wizard is independent and can contain different components. Click on the **Edit step** dropdown in the **Edit** section of the Inspector, then select **Send payment reminder**.\n\n###\n\n","completion":" To create a form that can be used to send a payment reminder: END"}
{"prompt":"To create a form that can be used to send a payment reminder:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/705fb019-cf10-4c1e-9263-43128d151059.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/705fb019-cf10-4c1e-9263-43128d151059.jpg)\n\n###\n\n","completion":" The form automatically uses the email address and the balance as values for the inputs. This information could be used within a query that sends an email using the [SMTP](https:\/\/docs.retool.com\/docs\/smtp-integration) resource. For the purpose of this guide, you won't configure the form to perform any further action. END"}
{"prompt":"Customize the deactivation step\n\n###\n\n","completion":" The last step in the wizard is to deactivate the selected user. Select **Deactivate user** in the **Edit step** dropdown of the Inspector, then drag a [Select](https:\/\/retool.com\/components\/select) component on to the step and rename it to `reasonSelect`. Update its list of options to include: END"}
{"prompt":"The last step in the wizard is to deactivate the selected user. Select **Deactivate user** in the **Edit step** dropdown of the Inspector, then drag a [Select](https:\/\/retool.com\/components\/select) component on to the step and rename it to `reasonSelect`. Update its list of options to include:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/07b6a95b-648a-4b48-acc8-2b35fe99d4ba.jpg) END"}
{"prompt":"Configure a virtual step to deactivate user\n\n###\n\n","completion":" You can use a _virtual step_ to automatically trigger a query or conditionally route to a different step. In this case, to deactivate a user and submit the reason. END"}
{"prompt":"Create deactivation query\n\n###\n\n","completion":" First, create a new query with the following information: END"}
{"prompt":"First, create a new query with the following information:\n\n###\n\n","completion":" Save the query, then rename it to `deactivateUser`. END"}
{"prompt":"Save the query, then rename it to `deactivateUser`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/e7adc4c4-12f3-4dd5-bd05-a596afdf7111.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/e7adc4c4-12f3-4dd5-bd05-a596afdf7111.jpg)\n\n###\n\n","completion":" This query will perform a PATCH request with the selected user's ID. It includes the `reason` from the dropdown menu and sets `active` to `false`, disabling the user. END"}
{"prompt":"Add virtual step\n\n###\n\n","completion":" Add a virtual step to the workflow editor named **Reason selected** and toggle **Virtual step** on. Set **On enter query** to the PATCH query you just created. Next, create a path from the **Deactivate user** step to this new virtual step. To ensure that a reason is selected, set this path's **Enable if** to `{{ reasonSelect.value != null }}`. END"}
{"prompt":"Add a virtual step to the workflow editor named **Reason selected** and toggle **Virtual step** on. Set **On enter query** to the PATCH query you just created. Next, create a path from the **Deactivate user** step to this new virtual step. To ensure that a reason is selected, set this path's **Enable if** to `{{ reasonSelect.value != null }}`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/13e3abfc-f0e3-49d2-b4cb-fe4652520ed0.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/13e3abfc-f0e3-49d2-b4cb-fe4652520ed0.jpg)\n\n###\n\n","completion":" Selecting a reason enables the virtual step. As you progress to it, the virtual step triggers the query and deactivates the user. END"}
{"prompt":"Add a final step to verify the changes\n\n###\n\n","completion":" Virtual steps appear as loading screens and automatically progress to another step once a query is run. The final step of this wizard verifies the changes have been made. END"}
{"prompt":"Virtual steps appear as loading screens and automatically progress to another step once a query is run. The final step of this wizard verifies the changes have been made.\n\n###\n\n","completion":" Create another query to perform a **GET** request that retrieves the deactivated user from the API: END"}
{"prompt":"Create another query to perform a **GET** request that retrieves the deactivated user from the API:\n\n###\n\n","completion":" Update the query's name to `verifyUser`. END"}
{"prompt":"Update the query's name to `verifyUser`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/6f0df285-5f35-40c6-8efa-78914d6c0a0f.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/6f0df285-5f35-40c6-8efa-78914d6c0a0f.jpg)\n\n###\n\n","completion":" Add another step to the wizard and name it **Verification**. Connect a path from the **Deactivate user** step and set **Trigger if** to `true` so that it immediately moves to the next step after triggering the deactivation query. END"}
{"prompt":"Add another step to the wizard and name it **Verification**. Connect a path from the **Deactivate user** step and set **Trigger if** to `true` so that it immediately moves to the next step after triggering the deactivation query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/4958266a-8b0a-4835-9d8b-74547b29666e.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/4958266a-8b0a-4835-9d8b-74547b29666e.jpg)\n\n###\n\n","completion":" Select the **Verification** step and drag a [Text](https:\/\/retool.com\/components\/text) component to it. Update its value to display the query's results. END"}
{"prompt":"Select the **Verification** step and drag a [Text](https:\/\/retool.com\/components\/text) component to it. Update its value to display the query's results.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/41f90709-2908-48ad-b5cd-25f1705ab0af.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/wizard\/41f90709-2908-48ad-b5cd-25f1705ab0af.jpg)\n\n###\n\n","completion":" Your wizard is now ready and can deactivate users. If a user has an outstanding balance, it presents the option to send a reminder instead. END"}
{"prompt":"title: \"Custom API authentication\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn how to implement custom API authentication workflows.\"\nhidden: false\n\n###\n\n","completion":" Retool comes with support for many authentication standards out of the box ([See here for more information](https:\/\/docs.tryretool.com\/docs\/connect-api-resource#section-api-authentication)). However, Retool also has a **Custom Auth** authentication mode where you can chain together multiple \"steps\" to support virtually any kind of API authentication. **All API Resource authentication methods apply to both REST and GraphQL resources!** END"}
{"prompt":"Authenticate using username + password\n\n###\n\n","completion":" Suppose your API expects a username-password combination, and returns an authentication token that should be in future requests. You also want each of your users to authenticate individually, so sharing credentials won't work. END"}
{"prompt":"1. Creating an empty REST Query resource\n\n###\n\n","completion":" First create a `REST Query` resource and call it \"My Admin API\". Click \"Create Resource\" and navigate back to it in the resource UI. END"}
{"prompt":"First create a `REST Query` resource and call it \"My Admin API\". Click \"Create Resource\" and navigate back to it in the resource UI.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ea6d717-Screen_Shot_2020-10-30_at_8.02.56_PM.png) END"}
{"prompt":"2. Use \"Custom Auth\" for your authentication method\n\n###\n\n","completion":" Next, at the bottom select \"Custom Auth\" for your authentication method. END"}
{"prompt":"Next, at the bottom select \"Custom Auth\" for your authentication method.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/163aa30-Screen_Shot_2020-10-30_at_8.05.32_PM.png) END"}
{"prompt":"3. Create a \"Form (modal)\" Step\n\n###\n\n","completion":" Click the \"Add new step to the auth workflow\" button and then choose \"Form (modal)\" as the step type. By default it will be configured to ask for an email and password. END"}
{"prompt":"Click the \"Add new step to the auth workflow\" button and then choose \"Form (modal)\" as the step type. By default it will be configured to ask for an email and password.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/777a8b2-Screen_Shot_2020-10-30_at_8.07.03_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/777a8b2-Screen_Shot_2020-10-30_at_8.07.03_PM.png)\n\n###\n\n","completion":" To see what it looks like, hit \"Save\" and then click \"Test auth workflow\" -- you should see a modal appear asking you to enter in some credentials. END"}
{"prompt":"To see what it looks like, hit \"Save\" and then click \"Test auth workflow\" -- you should see a modal appear asking you to enter in some credentials.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6c6989c-Screen_Shot_2020-10-30_at_8.10.17_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6c6989c-Screen_Shot_2020-10-30_at_8.10.17_PM.png)\n\n###\n\n","completion":" Enter in some dummy data, and then submit the form. A debugging interface will appear at the bottom which shows the \"scope\" of what can be used in following steps. In this case, we'll be using the email and password in an \"API Request Step\" END"}
{"prompt":"Enter in some dummy data, and then submit the form. A debugging interface will appear at the bottom which shows the \"scope\" of what can be used in following steps. In this case, we'll be using the email and password in an \"API Request Step\"\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0810dfc-Screen_Shot_2020-10-30_at_8.11.23_PM.png) END"}
{"prompt":"4. Creating a \"API Request\" Step\n\n###\n\n","completion":" Create a second step, and this time choose \"API Request.\" Here's where you should configure it to make an API request to your server to obtain an authentication token. END"}
{"prompt":"Create a second step, and this time choose \"API Request.\" Here's where you should configure it to make an API request to your server to obtain an authentication token.\n\n###\n\n","completion":" In this case, we'll be pinging the `https:\/\/httpbin.org\/post` endpoint which echoes back whatever we send it! END"}
{"prompt":"In this case, we'll be pinging the `https:\/\/httpbin.org\/post` endpoint which echoes back whatever we send it!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/abf5df5-Screen_Shot_2020-10-30_at_8.12.57_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/abf5df5-Screen_Shot_2020-10-30_at_8.12.57_PM.png)\n\n###\n\n","completion":" When we save, and press \"Test Authentication\", we'll see the new scope which includes the response payload from the API request we just made. END"}
{"prompt":"When we save, and press \"Test Authentication\", we'll see the new scope which includes the response payload from the API request we just made.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3b7f971-Screen_Shot_2020-10-30_at_8.21.14_PM.png) END"}
{"prompt":"5. Saving the Authentication Token\n\n###\n\n","completion":" Let's save the authentication token we got back from the server. To do that create a \"Define a variable\" step. The \"variable name\" is a magic string that we can use to refer to the authentication token, and the \"value of the variable\" is an expression that would interpolate to the authentication token. END"}
{"prompt":"Let's save the authentication token we got back from the server. To do that create a \"Define a variable\" step. The \"variable name\" is a magic string that we can use to refer to the authentication token, and the \"value of the variable\" is an expression that would interpolate to the authentication token.\n\n###\n\n","completion":" In this case, we're defining a \"PASSWORD\" variable to be the password that was echoed back by the server. END"}
{"prompt":"In this case, we're defining a \"PASSWORD\" variable to be the password that was echoed back by the server.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fbb6b36-Screen_Shot_2020-10-30_at_8.25.19_PM.png) END"}
{"prompt":"6. Using the saved authentication token\n\n###\n\n","completion":" Lastly, we'll pass the defined variable from step 5 as a header. Scroll back up and then configure the Headers section like below: END"}
{"prompt":"Lastly, we'll pass the defined variable from step 5 as a header. Scroll back up and then configure the Headers section like below:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2c9af9c-Screen_Shot_2020-10-30_at_8.26.58_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2c9af9c-Screen_Shot_2020-10-30_at_8.26.58_PM.png)\n\n###\n\n","completion":" Make sure to save your final configuration! END"}
{"prompt":"7. Using this resource in an app\n\n###\n\n","completion":" There are a few different ways to use a resource with custom auth in app depending on your desired user experience. END"}
{"prompt":"Using a login button\n\n###\n\n","completion":" Create a new test app, and then create a \"Auth Login\" component. From there, choose in the \"Auth Resource\" the API Resource we just set up. END"}
{"prompt":"Create a new test app, and then create a \"Auth Login\" component. From there, choose in the \"Auth Resource\" the API Resource we just set up.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/84870fd-Screen_Shot_2020-10-30_at_9.19.40_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/84870fd-Screen_Shot_2020-10-30_at_9.19.40_PM.png)\n\n###\n\n","completion":" Press the button, and you should be presented with a modal to enter in your credentials. Once that happens, Retool will make the API request you configured earlier and then securely associate the authentication token with your current session. END"}
{"prompt":"Press the button, and you should be presented with a modal to enter in your credentials. Once that happens, Retool will make the API request you configured earlier and then securely associate the authentication token with your current session.\n\n###\n\n","completion":" From here on out, all subsequent API requests will have the authentication header. END"}
{"prompt":"From here on out, all subsequent API requests will have the authentication header.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/29d9986-Screen_Shot_2020-10-30_at_9.24.03_PM.png) END"}
{"prompt":"Automatically prompt for login using a login verification URL\n\n###\n\n","completion":" You also have the option to automatically prompt the user for login to your API. Go to the Resource configuration and scroll to the bottom where you can configure an **Auth trigger**. Select \"Login test URL\" and set this to an endpoint that will return a response code in the range 200-299 when the user is authenticated, and a non-2xx status code (e.g. 401 Unauthorized) when the user is not authenticated. END"}
{"prompt":"You also have the option to automatically prompt the user for login to your API. Go to the Resource configuration and scroll to the bottom where you can configure an **Auth trigger**. Select \"Login test URL\" and set this to an endpoint that will return a response code in the range 200-299 when the user is authenticated, and a non-2xx status code (e.g. 401 Unauthorized) when the user is not authenticated.\n\n###\n\n","completion":" ![Add a Login Test URL](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1b0aacf-Screen_Shot_2020-10-30_at_9.28.19_PM.png) END"}
{"prompt":"![Add a Login Test URL](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1b0aacf-Screen_Shot_2020-10-30_at_9.28.19_PM.png)\n\n###\n\n","completion":" Now if you load a Retool app that connects to this Resource, and you are not yet authenticated to your API, the login prompt will automatically pop up. END"}
{"prompt":"Automatically prompt for login using a timeout\n\n###\n\n","completion":" In the \"Auth trigger\" dropdown, you can also select to have the authentication be triggered based on a timeout (in seconds). Your users will then be prompted to login to your resource if they have not logged in within the past X seconds. Note that this value can be either set to a constant number of seconds or it can be set dynamically using a variable from a \"Define variable\" step. END"}
{"prompt":"In the \"Auth trigger\" dropdown, you can also select to have the authentication be triggered based on a timeout (in seconds). Your users will then be prompted to login to your resource if they have not logged in within the past X seconds. Note that this value can be either set to a constant number of seconds or it can be set dynamically using a variable from a \"Define variable\" step.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e22a3e5-Screen_Shot_2020-10-30_at_9.30.05_PM.png) END"}
{"prompt":"Refresh auth workflow\n\n###\n\n","completion":" If desired, you can configure a set of custom authentication steps that run automatically after any non-200 response when querying a resource. This is useful for refreshing a user's authentication session without them needing to refresh the page. END"}
{"prompt":"If desired, you can configure a set of custom authentication steps that run automatically after any non-200 response when querying a resource. This is useful for refreshing a user's authentication session without them needing to refresh the page.\n\n###\n\n","completion":" For example, say that a user has been idle for some period of time and then attempts to query your resource. Their session has expired, so your resource returns a 401 or 403 error code. Instead of returning an error for the query, Retool will first perform the refresh auth workflow you have defined (see image below). If the refresh auth workflow is successful, Retool will attempt to run the failed query again. Because the user will have a valid authentication session after the refresh workflow, the second attempt to run the query will succeed and the user can continue using the app without any interruption. END"}
{"prompt":"For example, say that a user has been idle for some period of time and then attempts to query your resource. Their session has expired, so your resource returns a 401 or 403 error code. Instead of returning an error for the query, Retool will first perform the refresh auth workflow you have defined (see image below). If the refresh auth workflow is successful, Retool will attempt to run the failed query again. Because the user will have a valid authentication session after the refresh workflow, the second attempt to run the query will succeed and the user can continue using the app without any interruption.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/acc9c5c-Screen_Shot_2020-12-21_at_3.14.14_PM.png) END"}
{"prompt":"title: \"Develop custom components\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to build your own components using React, or HTML and JavaScript.\"\nhidden: false\n\n###\n\n","completion":" If you have a use case that isn't handled by Retool's built-in components, you can build your own custom component to solve that use case. END"}
{"prompt":"Overview\n\n###\n\n","completion":" Custom components extend Retool’s functionality beyond what is possible with our component library. A custom component consists of two parts: END"}
{"prompt":"Interface\n\n###\n\n","completion":" Retool exposes 3 variables for your Custom Component to interact with: `triggerQuery`, `model`, and `modelUpdate`. END"}
{"prompt":"Editor\n\n###\n\n","completion":" The Custom Component editor has 3 fields: **Model**, **IFrame** **Code**, and **Hide when true**. END"}
{"prompt":"Examples\n\n###\n\n","completion":" ![Figure 1. The default Custom Component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1f625ae0-9ed8-4ab6-b7ec-c3179b5c3732.webp) END"}
{"prompt":"![Figure 1. The default Custom Component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1f625ae0-9ed8-4ab6-b7ec-c3179b5c3732.webp)\n\n###\n\n","completion":" ![Figure 2. The Custom Component Editor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/6c08407a-ebe5-4fa6-bb2c-34f876a1effd.webp) END"}
{"prompt":"![Figure 2. The Custom Component Editor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/6c08407a-ebe5-4fa6-bb2c-34f876a1effd.webp)\n\n###\n\n","completion":" The next sections of this guide explain how to use these fields in the context of common tasks, like passing data from your app to your Custom Component. END"}
{"prompt":"Implement your Custom Component\n\n###\n\n","completion":" The **Iframe Code** field of the **Custom Component Editor** is where you put all of the HTML, CSS, and JavaScript code for your Custom Component. As the field name suggests, your Custom Component is embedded in an [`<iframe>`](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/iframe) when your app runs. END"}
{"prompt":"The **Iframe Code** field of the **Custom Component Editor** is where you put all of the HTML, CSS, and JavaScript code for your Custom Component. As the field name suggests, your Custom Component is embedded in an [`<iframe>`](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/iframe) when your app runs.\n\n###\n\n","completion":" `boilerplate.html` below describes the minimum code needed to create a working Custom Component. END"}
{"prompt":"Pass data from your app to your Custom Component\n\n###\n\n","completion":" Suppose that you want your Custom Component to display the value of a Text Input component. Specifically, if the value in the Text Input component is `Alice`, you want the Custom Component to display `Hello, Alice!`. END"}
{"prompt":"Suppose that you want your Custom Component to display the value of a Text Input component. Specifically, if the value in the Text Input component is `Alice`, you want the Custom Component to display `Hello, Alice!`.\n\n###\n\n","completion":" ![Figure 3. An app that passes the value of a Text Input component to a Custom Component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/23a097c5-b8a8-4886-b37c-100a4e265a5f.webp) END"}
{"prompt":"![Figure 3. An app that passes the value of a Text Input component to a Custom Component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/23a097c5-b8a8-4886-b37c-100a4e265a5f.webp)\n\n###\n\n","completion":" To pass the data from your Text Input component to your Custom Component: END"}
{"prompt":"To pass the data from your Text Input component to your Custom Component:\n\n###\n\n","completion":" As the `model.json` code above shows, you can hard-code property names or values, or you can use [JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) to set them dynamically. When passing data dynamically, the Custom Component updates whenever the model updates. END"}
{"prompt":"Pass data from your Custom Component to your app\n\n###\n\n","completion":" Suppose that you want a Text component to display a value that was entered into an input within your Custom Component. Specifically, when the user types `Valentine` in your Custom Component, you want the Text component to display `Hello, Valentine!`. END"}
{"prompt":"Suppose that you want a Text component to display a value that was entered into an input within your Custom Component. Specifically, when the user types `Valentine` in your Custom Component, you want the Text component to display `Hello, Valentine!`.\n\n###\n\n","completion":" ![Figure 4. An app that passes data from a Custom Component to a Text component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/61b4f392-ac96-4186-9a0a-5b5d7b7234bc.webp) END"}
{"prompt":"![Figure 4. An app that passes data from a Custom Component to a Text component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/61b4f392-ac96-4186-9a0a-5b5d7b7234bc.webp)\n\n###\n\n","completion":" To pass data from your Custom Component to the rest of your app: END"}
{"prompt":"Trigger queries from your Custom Component\n\n###\n\n","completion":" Suppose that you want to trigger a query based on text input that a user has typed within your Custom Component. For example, by default your table displays all books in your inventory: END"}
{"prompt":"Suppose that you want to trigger a query based on text input that a user has typed within your Custom Component. For example, by default your table displays all books in your inventory:\n\n###\n\n","completion":" ![Figure 5. The default view](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06e56bcb-3d8a-4d95-9cbb-eed513431c9b.webp) END"}
{"prompt":"![Figure 5. The default view](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06e56bcb-3d8a-4d95-9cbb-eed513431c9b.webp)\n\n###\n\n","completion":" After the user types something into the input within the Custom Component and then presses **Search**, the table only shows books with titles that match the user's input: END"}
{"prompt":"After the user types something into the input within the Custom Component and then presses **Search**, the table only shows books with titles that match the user's input:\n\n###\n\n","completion":" ![Figure 6. The updated view based on the user's search](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06e56bcb-3d8a-4d95-9cbb-eed513431c9b.webp) END"}
{"prompt":"![Figure 6. The updated view based on the user's search](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06e56bcb-3d8a-4d95-9cbb-eed513431c9b.webp)\n\n###\n\n","completion":" To trigger a query from your Custom Component: END"}
{"prompt":"To trigger a query from your Custom Component:\n\n###\n\n","completion":" Note that for the app in Figures 5 and 6, the `name` property of the Custom Component's model is set to `%` by default, as shown below in `model.json`. Note also the `modelUpdate({ name: e.target.value ? e.target.value : '%' })` call in `triggerquery.html`. The `%` value is provided as a fallback for the `name` property so that the app displays the full inventory by default. END"}
{"prompt":"Custom buttons \/ controls\n\n###\n\n","completion":" Set the model for the Custom Component: END"}
{"prompt":"Set the model for the Custom Component:\n\n###\n\n","completion":" Add the following code to the **Iframe Code** field in order to implement the Custom Component: END"}
{"prompt":"Non-React JavaScript\n\n###\n\n","completion":" If you're writing pure JavaScript that isn't React code, you can you use **window.Retool** to update models, trigger queries, or listen to new values injected into your model. END"}
{"prompt":"If you're writing pure JavaScript that isn't React code, you can you use **window.Retool** to update models, trigger queries, or listen to new values injected into your model.\n\n###\n\n","completion":" The relevant methods are **modelUpdate**, **triggerQuery**, and **subscribe**: END"}
{"prompt":"Fancy Non-React JavaScript Example\n\n###\n\n","completion":" This example doesn't use React but loads Chart.js and renders a horizontally stacked bar chart. If you paste the model & IFrame Code into your own Custom Component, it will work out of the box. END"}
{"prompt":"This example doesn't use React but loads Chart.js and renders a horizontally stacked bar chart. If you paste the model & IFrame Code into your own Custom Component, it will work out of the box.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/35e20f6-Screen_Shot_2020-03-20_at_4.31.09_PM.png) END"}
{"prompt":"Application-level vs. organization-level JavaScript\n\n###\n\n","completion":" Retool recommends using application-wide JavaScript instead of organization-wide JavaScript where possible. Organization-wide JavaScript loads when you open _any_ application in your organization. This can affect performance, especially if you load complex JavaScript functions that aren't used in every app. END"}
{"prompt":"Retool recommends using application-wide JavaScript instead of organization-wide JavaScript where possible. Organization-wide JavaScript loads when you open _any_ application in your organization. This can affect performance, especially if you load complex JavaScript functions that aren't used in every app.\n\n###\n\n","completion":" Application-wide JavaScript loads only in the application in which it is defined. Though you can call global JavaScript functions from anywhere in your app, [local storage](\/docs\/share-data-between-apps#share-data-using-localstorage) is the recommended way to store global variables in Retool. END"}
{"prompt":"Application-wide preloaded JavaScript\n\n###\n\n","completion":" To add preloaded JavaScript to an application, click the **•••** menu in the editor navigation bar, then select **Scripts and styles**. In the modal, select the **JavaScript** tab. END"}
{"prompt":"To add preloaded JavaScript to an application, click the **•••** menu in the editor navigation bar, then select **Scripts and styles**. In the modal, select the **JavaScript** tab.\n\n###\n\n","completion":" You can define functions by assigning them to the `window` scope, and call functions in your apps using the `window` prefix. END"}
{"prompt":"You can define functions by assigning them to the `window` scope, and call functions in your apps using the `window` prefix.\n\n###\n\n","completion":" ![Example of global JS](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/a0469345-82ac-4a97-9672-1ff581387487.png) END"}
{"prompt":"Organization-wide preloaded JavaScript\n\n###\n\n","completion":" You can also add custom preloaded JavaScript to all applications in an organization. To do so, click on your profile picture dropdown in the upper right, then go to **Settings** and navigate to the **Advanced** tab. Only admin users can add preloaded JavaScript at the organization level. END"}
{"prompt":"Use preloaded JavaScript in apps\n\n###\n\n","completion":" After you define your preloaded JavaScript, you can use your methods wherever you write JavaScript: inside `{{ }}` snippets and in [Transformers](https:\/\/docs.retool.com\/docs\/transformers). END"}
{"prompt":"After you define your preloaded JavaScript, you can use your methods wherever you write JavaScript: inside `{{ }}` snippets and in [Transformers](https:\/\/docs.retool.com\/docs\/transformers).\n\n###\n\n","completion":" ![Helping in {{ }} snippets.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9778127-Screen_Shot_2021-02-24_at_1.57.10_PM.png) END"}
{"prompt":"![Helping in {{ }} snippets.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9778127-Screen_Shot_2021-02-24_at_1.57.10_PM.png)\n\n###\n\n","completion":" ![Using preloaded code in a JavaScript query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0bbff6f-Screen_Shot_2021-02-24_at_1.56.16_PM.png) END"}
{"prompt":"Custom JavaScript libraries\n\n###\n\n","completion":" Similar to preloaded JavaScript, Retool recommends you use application-specific libraries to reduce the potential performance impact of loading unnecessary libraries. Retool automatically [imports some libraries](https:\/\/docs.retool.com\/docs\/scripting-retool#ibraries). END"}
{"prompt":"Similar to preloaded JavaScript, Retool recommends you use application-specific libraries to reduce the potential performance impact of loading unnecessary libraries. Retool automatically [imports some libraries](https:\/\/docs.retool.com\/docs\/scripting-retool#ibraries).\n\n###\n\n","completion":" To import external libraries, add URLs to **Settings** > **Libraries** or the **Scripts and Styles** tab. This allows you to access the library wherever you write JavaScript. END"}
{"prompt":"To import external libraries, add URLs to **Settings** > **Libraries** or the **Scripts and Styles** tab. This allows you to access the library wherever you write JavaScript.\n\n###\n\n","completion":" [CDNJS](https:\/\/cdnjs.com\/libraries) lists libraries you can load. Retool recommends you load the minified, UMD build, usually named with the format `<library>.min.js`. Non-minified builds usually require `@require` or `import` statements. Some libraries are not compatible with Retool, and you may need to use these in [custom components](https:\/\/docs.retool.com\/docs\/custom-components). END"}
{"prompt":"Application-wide libraries\n\n###\n\n","completion":" To add libraries at the application level, click the **•••** menu in the top right and select **Scripts and styles**. END"}
{"prompt":"To add libraries at the application level, click the **•••** menu in the top right and select **Scripts and styles**.\n\n###\n\n","completion":" ![Using app-specific libraries.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f1c750fa-4c7d-4ca7-bc26-d11881c46c9c.png) END"}
{"prompt":"![Using app-specific libraries.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f1c750fa-4c7d-4ca7-bc26-d11881c46c9c.png)\n\n###\n\n","completion":" On the **Libraries** tab, click **Add new** to enter a link to the library and add it. END"}
{"prompt":"Organization-wide libraries\n\n###\n\n","completion":" Admin users can also add custom preloaded JavaScript libraries to all applications in an organization. To do so, click on your profile picture dropdown in the upper right, then go to **Settings** and navigate to the **Advanced** tab. END"}
{"prompt":"title: \"Keyboard shortcuts\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-concepts\"\nexcerpt: \"Learn more about Retool's built-in keyboard shortcuts and how to create custom shortcuts for your app.\"\nhidden: false\n\n###\n\n","completion":" Use Retool's built-in keyboard shortcuts to quickly perform certain actions or control the interface. You can also configure [custom keyboard shortcuts](#custom-keyboard-shortcuts) on a per-app basis that can trigger queries, interact with components, and more. END"}
{"prompt":"Built-in keyboard shortcuts\n\n###\n\n","completion":" Retool includes a number of built-in keyboard shortcuts that work across different parts of the interface. Press <span class=\"sck key\">?<\/span> to display a list of available shortcuts at any time. END"}
{"prompt":"Retool includes a number of built-in keyboard shortcuts that work across different parts of the interface. Press <span class=\"sck key\">?<\/span> to display a list of available shortcuts at any time.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/dcd7e425-c286-40b6-88a3-d03a978864e5.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/dd7469dd-4d84-42e5-8ecf-eee7aa662b8c.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/dcd7e425-c286-40b6-88a3-d03a978864e5.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/dd7469dd-4d84-42e5-8ecf-eee7aa662b8c.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" Built-in shortcuts are organized into groups that determine their function. END"}
{"prompt":"Global\n\n###\n\n","completion":" Keyboard shortcuts that work across Retool interfaces. END"}
{"prompt":"Editor\n\n###\n\n","completion":" Keyboard shortcuts that control the [App editor](https:\/\/docs.retool.com\/docs\/app-editor). END"}
{"prompt":"Canvas\n\n###\n\n","completion":" Keyboard shortcuts that control the canvas and selected components. END"}
{"prompt":"Queries and transformers\n\n###\n\n","completion":" Keyboard shortcuts that control [queries](https:\/\/docs.retool.com\/docs\/queries) and [transformers](https:\/\/docs.retool.com\/docs\/transformers). END"}
{"prompt":"Code editors\n\n###\n\n","completion":" Keyboard shortcuts that control code editors. END"}
{"prompt":"Debug Tools\n\n###\n\n","completion":" Keyboard shortcuts that control [Debug Tools](https:\/\/docs.retool.com\/docs\/debug-tools). END"}
{"prompt":"Add custom keyboard shortcuts\n\n###\n\n","completion":" You can define custom keyboard shortcuts on a per-app basis. Custom shortcuts can be a single character, combination of keys, or a sequence of key presses. You configure the action to trigger with [JavaScript](https:\/\/docs.retool.com\/docs\/javascript-in-retool) and can use many of the available methods in Retool to control components, queries, and more. END"}
{"prompt":"You can define custom keyboard shortcuts on a per-app basis. Custom shortcuts can be a single character, combination of keys, or a sequence of key presses. You configure the action to trigger with [JavaScript](https:\/\/docs.retool.com\/docs\/javascript-in-retool) and can use many of the available methods in Retool to control components, queries, and more.\n\n###\n\n","completion":" Click `•••` in the App editor toolbar to open the **App settings** menu and select **Custom shortcuts**. END"}
{"prompt":"Define shortcut keys\n\n###\n\n","completion":" To add a new shortcut, click **+ Add new**. Specify the shortcut keys to use and the JavaScript to run. END"}
{"prompt":"To add a new shortcut, click **+ Add new**. Specify the shortcut keys to use and the JavaScript to run.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/a24a841c-e1c9-48aa-ae4c-7c28edaf36fd.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/3a1e14ff-8d52-4aca-aa67-19707abddf08.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Available shortcut keys\n\n###\n\n","completion":" A custom shortcut can include almost any keyboard character or symbol, such as <span class=\"sck key\">a<\/span> or <span class=\"sck key\">$<\/span>, and optional modifier keys, such as <span class=\"sck key_Ctrl\">Ctrl<\/span>. END"}
{"prompt":"A custom shortcut can include almost any keyboard character or symbol, such as <span class=\"sck key\">a<\/span> or <span class=\"sck key\">$<\/span>, and optional modifier keys, such as <span class=\"sck key_Ctrl\">Ctrl<\/span>.\n\n###\n\n","completion":" You can include modifier keys in custom shortcuts. Modifier keys are commonly used for keyboard shortcuts but are not required. Modifiers, named keys, and reserved symbols must be explicitly named when used in a shortcut. END"}
{"prompt":"You can include modifier keys in custom shortcuts. Modifier keys are commonly used for keyboard shortcuts but are not required. Modifiers, named keys, and reserved symbols must be explicitly named when used in a shortcut.\n\n###\n\n","completion":" Certain modifiers automatically change based on the user's platform (e.g., `mod`) or you can explicitly define modifiers be the same (e.g., `Ctrl`). END"}
{"prompt":"Key combination or sequence\n\n###\n\n","completion":" You can define a combination or sequence of keys to trigger a shortcut. END"}
{"prompt":"You can define a combination or sequence of keys to trigger a shortcut.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/8cc62af4-61a0-457d-a932-60efde21b9bd.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/9c924ded-90cb-4da4-96c6-477393963c9c.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Configure JavaScript actions\n\n###\n\n","completion":" You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) actions for custom shortcuts that interact with almost every aspect of an app. The following examples trigger actions using Retool's built-in [JavaScript utility methods](\/reference\/javascript-api-methods-utility). END"}
{"prompt":"You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) actions for custom shortcuts that interact with almost every aspect of an app. The following examples trigger actions using Retool's built-in [JavaScript utility methods](\/reference\/javascript-api-methods-utility).\n\n###\n\n","completion":" You can also use write shortcuts with complex logic to conditionally perform actions or chain together multiple actions. For example, you can define a single shortcut to cycle through all views in a Tabbed Container component. END"}
{"prompt":"You can also use write shortcuts with complex logic to conditionally perform actions or chain together multiple actions. For example, you can define a single shortcut to cycle through all views in a Tabbed Container component.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/446490d6-f49b-463c-b292-3c1b542960e4.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/keyboard-shortcuts\/0bc2acb0-afae-4697-9c23-f3501f0eed79.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"title: \"Build tables\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to display and interact with data using the Table component.\"\nhidden: false\n\n###\n\n","completion":" Tables are a common way to view and interact with your data. You can sort, filter, paginate, and download rows of information. Tables also support row selection and insertion, server-side pagination, and custom columns. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Try out the app to see tables in action (edits are disabled). The table incorporates different column types, and dynamically highlights cells in the **Sales** column if the value is lower than 200. END"}
{"prompt":"Try out the app to see tables in action (edits are disabled). The table incorporates different column types, and dynamically highlights cells in the **Sales** column if the value is lower than 200.\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": false,\n\"url\": \"https:\/\/docsdemos.retool.com\/embedded\/public\/cdef253e-c606-4ee1-b3ea-dbe93a718f66\",\n\"title\": \"Retool\",\n\"favicon\": \"https:\/\/retool-edge.com\/favicon.png\",\n\"iframe\": true,\n\"height\": \"500px\"\n}\n[\/block] END"}
{"prompt":"Load data in a table\n\n###\n\n","completion":" When you drag a [Table](https:\/\/retool.com\/components\/table) component to the Canvas, it automatically displays data from one of your queries. If you don't have any queries, Retool initially populates the table with test data in JSON format. You can change the data displayed in a table by editing the **Data** property. Use the `queryName.data` format to choose the query. END"}
{"prompt":"When you drag a [Table](https:\/\/retool.com\/components\/table) component to the Canvas, it automatically displays data from one of your queries. If you don't have any queries, Retool initially populates the table with test data in JSON format. You can change the data displayed in a table by editing the **Data** property. Use the `queryName.data` format to choose the query.\n\n###\n\n","completion":" ![Display query data in a table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/19874029-5f6f-4d3f-8343-d264d288b7a2.png) END"}
{"prompt":"Change column types\n\n###\n\n","completion":" When you add tables to the Canvas, their columns are set to **Auto**. You can set column types manually by clicking on the column in the **Inspect** tab and selecting the type from the **Column type** dropdown. You can also manage column types dynamically with the **Use dynamic column settings** option. END"}
{"prompt":"When you add tables to the Canvas, their columns are set to **Auto**. You can set column types manually by clicking on the column in the **Inspect** tab and selecting the type from the **Column type** dropdown. You can also manage column types dynamically with the **Use dynamic column settings** option.\n\n###\n\n","completion":" ![Rating column type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/66fc1f52-9f51-4ec4-b70a-c8af13dc0a65.png) END"}
{"prompt":"Editable table columns\n\n###\n\n","completion":" After populating a table with data, you can edit cells and add rows with some additional configuration. To make a column editable, select a table to open the **Inspect** tab in the right panel. Scroll to the **Columns** section and select the boxes next to the columns you want to make editable. END"}
{"prompt":"After populating a table with data, you can edit cells and add rows with some additional configuration. To make a column editable, select a table to open the **Inspect** tab in the right panel. Scroll to the **Columns** section and select the boxes next to the columns you want to make editable.\n\n###\n\n","completion":" ![Making columns editable](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/6c4ac06a-1460-4764-82eb-2761e4f431da.png) END"}
{"prompt":"![Making columns editable](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/6c4ac06a-1460-4764-82eb-2761e4f431da.png)\n\n###\n\n","completion":" After making columns editable, you can double click on a cell to edit it. When you edit cells, changes are saved in the table's `recordUpdates` property. This tracks the changes you've made but it doesn't update the underlying data source that your query connects to. To save edits back to your data source, you must write an appropriate query to update your data. For example, saving changes to a PostgreSQL database can be done using a **Bulk update query**. END"}
{"prompt":"After making columns editable, you can double click on a cell to edit it. When you edit cells, changes are saved in the table's `recordUpdates` property. This tracks the changes you've made but it doesn't update the underlying data source that your query connects to. To save edits back to your data source, you must write an appropriate query to update your data. For example, saving changes to a PostgreSQL database can be done using a **Bulk update query**.\n\n###\n\n","completion":" ![Creating a bulk update query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/c11a66ba-58b1-403b-94f6-5ff8ac97e2f6.png) END"}
{"prompt":"![Creating a bulk update query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/c11a66ba-58b1-403b-94f6-5ff8ac97e2f6.png)\n\n###\n\n","completion":" After creating the bulk update query, you need to connect it to the table. Open the **Inspect** tab again for the table and scroll to the **Event handlers** section. Add a **Save changes** [event handler](https:\/\/docs.retool.com\/docs\/event-handlers) that runs the bulk update query. END"}
{"prompt":"After creating the bulk update query, you need to connect it to the table. Open the **Inspect** tab again for the table and scroll to the **Event handlers** section. Add a **Save changes** [event handler](https:\/\/docs.retool.com\/docs\/event-handlers) that runs the bulk update query.\n\n###\n\n","completion":" ![Adding an event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5041acf1-0f82-4a74-8916-afd3ede57b9e.png) END"}
{"prompt":"Add new data to tables\n\n###\n\n","completion":" You can add rows to tables and save the changes as new data. This allows users to add data without needing to build a separate group of inputs. END"}
{"prompt":"You can add rows to tables and save the changes as new data. This allows users to add data without needing to build a separate group of inputs.\n\n###\n\n","completion":" In the **Inspect** tab, you can enable the **Show add row button** option which adds a **+** button to your table. This allows users to add rows. Similar to editing cells, you need to create a query that updates your data source and an event handler to trigger the query when a row is added. END"}
{"prompt":"In the **Inspect** tab, you can enable the **Show add row button** option which adds a **+** button to your table. This allows users to add rows. Similar to editing cells, you need to create a query that updates your data source and an event handler to trigger the query when a row is added.\n\n###\n\n","completion":" To write back to your data source, write an insert query using the GUI editor. END"}
{"prompt":"To write back to your data source, write an insert query using the GUI editor.\n\n###\n\n","completion":" ![Adding an insert query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8ceb47f0-a73a-45cc-a9ca-b3a252047f1f.png) END"}
{"prompt":"![Adding an insert query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8ceb47f0-a73a-45cc-a9ca-b3a252047f1f.png)\n\n###\n\n","completion":" After creating the insert query, you need to connect it to the table. Open the **Inspect** tab again for the table and scroll to the **Event handlers** section. Add a **Save new** event handler that runs the insert query. END"}
{"prompt":"After creating the insert query, you need to connect it to the table. Open the **Inspect** tab again for the table and scroll to the **Event handlers** section. Add a **Save new** event handler that runs the insert query.\n\n###\n\n","completion":" ![Adding new row event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0aaefc68-8eb1-4a54-ae05-b637c23e49f3.png) END"}
{"prompt":"Automatically reload table data\n\n###\n\n","completion":" By default, tables include a refresh button that reloads its query. When users click the button, the query runs and the table updates to reflect the latest data. If you want to automatically reload table data when changes are saved, add an event handler to the query that updates your data source. Configure the event handler so that when the query succeeds, it runs the query that populates your table. END"}
{"prompt":"By default, tables include a refresh button that reloads its query. When users click the button, the query runs and the table updates to reflect the latest data. If you want to automatically reload table data when changes are saved, add an event handler to the query that updates your data source. Configure the event handler so that when the query succeeds, it runs the query that populates your table.\n\n###\n\n","completion":" ![Adding an event handler to refresh table data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ebaba970-9d56-4970-b1b2-2b9b482262f7.png) END"}
{"prompt":"Custom columns\n\n###\n\n","completion":" You can add custom columns to tables using the **+ Add** button in the **Inspect** tab. Custom columns are often used to calculate data based on other values in your Retool app. For example, if you have a `monthlyIncome` column and you want to calculate a `yearlyIncome` column, you could use `{{ currentRow.monthlyIncome * 12 }}` END"}
{"prompt":"You can add custom columns to tables using the **+ Add** button in the **Inspect** tab. Custom columns are often used to calculate data based on other values in your Retool app. For example, if you have a `monthlyIncome` column and you want to calculate a `yearlyIncome` column, you could use `{{ currentRow.monthlyIncome * 12 }}`\n\n###\n\n","completion":" ![Adding a custom column](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/a5cd557d-544a-429b-bc73-11f242d98de4.png) END"}
{"prompt":"![Adding a custom column](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/a5cd557d-544a-429b-bc73-11f242d98de4.png)\n\n###\n\n","completion":" Custom columns have the same attributes that regular table columns have including: END"}
{"prompt":"Custom columns have the same attributes that regular table columns have including:\n\n###\n\n","completion":" You can rename custom columns but each column still has a `key` that you can't edit. If you want to access the column mapper dynamically, you need to use the `key`, not the column name. END"}
{"prompt":"Sort, filter, and customize data presentation\n\n###\n\n","completion":" Tables come with prebuilt functionality for sorting and filtering data. You can click on a column to sort it, and there's a filter button in the lower right corner of the table that allows you to create custom filters. You can combine a table with a [Text Input](https:\/\/retool.com\/components\/text-input) component to [create a search field](https:\/\/docs.retool.com\/docs\/quickstart#3-add-search-to-the-app) that serves as another way of filtering data. END"}
{"prompt":"Show and hide columns\n\n###\n\n","completion":" When you click a column in the **Inspect** tab, there's a **Show column** toggle that you can switch on and off. You can also use dynamic column settings to [hide columns](#hide-columns). END"}
{"prompt":"In the **Inspect** tab, you can choose between **Pagination** and **Scroll** options for handling overflow items.\n\n###\n\n","completion":" You can also enable [server-side pagination](https:\/\/docs.retool.com\/docs\/server-side-pagination). You write queries that include parameters to define a subset of data to retrieve, server-side. This is recommended when working with large datasets to reduce the amount of data your table uses at a time, which can help your app's performance. END"}
{"prompt":"You can also enable [server-side pagination](https:\/\/docs.retool.com\/docs\/server-side-pagination). You write queries that include parameters to define a subset of data to retrieve, server-side. This is recommended when working with large datasets to reduce the amount of data your table uses at a time, which can help your app's performance.\n\n###\n\n","completion":" Sorting of tables using server-side pagination must be done on the server. You can write queries that use the table's `sortedColumn` and `sortedDesc` properties to achieve this. END"}
{"prompt":"Dynamic column settings\n\n###\n\n","completion":" You can enable dynamic column settings by toggling the **Use dynamic column settings** on in the **Inspect** tab. This setting gives you additional control over table columns, including which columns are shown, how they're styled, etc. END"}
{"prompt":"You can enable dynamic column settings by toggling the **Use dynamic column settings** on in the **Inspect** tab. This setting gives you additional control over table columns, including which columns are shown, how they're styled, etc.\n\n###\n\n","completion":" When you enable dynamic column settings, a **Column settings** property is displayed. This property supports an array of strings (column keys) or objects, each overriding the settings for one column. END"}
{"prompt":"When you enable dynamic column settings, a **Column settings** property is displayed. This property supports an array of strings (column keys) or objects, each overriding the settings for one column.\n\n###\n\n","completion":" ![Dynamic column settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1e19e285-9638-481b-8362-60ff8c1c34d3.png)\nEnabling the **Apply to column order** option overrides the current column order with the order passed in the **Column settings** property. If there isn't an object with a name key that matches a column, that column is hidden. These are the properties that you can override with dynamic column settings. END"}
{"prompt":"![Dynamic column settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1e19e285-9638-481b-8362-60ff8c1c34d3.png)\nEnabling the **Apply to column order** option overrides the current column order with the order passed in the **Column settings** property. If there isn't an object with a name key that matches a column, that column is hidden. These are the properties that you can override with dynamic column settings.\n\n###\n\n","completion":" Certain settings are only evaluated when data changes. You must reload the table data when setting these values for changes to be reflected. Click the **Reload** button on the table if you've enabled it, rerun the query that is used by the table, or select **Reset app state** from the `•••` **App settings** menu in the toolbar. END"}
{"prompt":"Dynamic column types\n\n###\n\n","completion":" These are the supported dynamic column `type` values. END"}
{"prompt":"Hide columns\n\n###\n\n","completion":" You define the columns to show by passing in an array of objects that map to the columns. If there isn't an object with a name key that matches a column, that column is hidden. END"}
{"prompt":"You define the columns to show by passing in an array of objects that map to the columns. If there isn't an object with a name key that matches a column, that column is hidden.\n\n###\n\n","completion":" ![Hiding columns using dynamic column settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ccee7cc5-2a7e-4d8c-aa08-42a91c5051cf.png) END"}
{"prompt":"Set column mappers\n\n###\n\n","completion":" Column mappers allow you to change default column values. You can set them using the **Mapped value** on each column or with dynamic column settings. With dynamic column settings, you can use a string inside of the object for each column to map values, but you need to escape the `{{ }}` tag. For example, `{ \"name\": \"email\", \"type\":\"default\", \"mapper\":'{\\{self+1}\\}'}` uses the current cell value (`self`) and adds `1` to it. END"}
{"prompt":"Column mappers allow you to change default column values. You can set them using the **Mapped value** on each column or with dynamic column settings. With dynamic column settings, you can use a string inside of the object for each column to map values, but you need to escape the `{{ }}` tag. For example, `{ \"name\": \"email\", \"type\":\"default\", \"mapper\":'{\\{self+1}\\}'}` uses the current cell value (`self`) and adds `1` to it.\n\n###\n\n","completion":" ![Defining a mapper](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4e7bc90b-62d7-4385-b2c4-34b031984e62.png) END"}
{"prompt":"![Defining a mapper](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4e7bc90b-62d7-4385-b2c4-34b031984e62.png)\n\n###\n\n","completion":" After setting a dynamic mapper, the **Mapped value** field on the column settings is greyed out and the value updates in realtime. END"}
{"prompt":"After setting a dynamic mapper, the **Mapped value** field on the column settings is greyed out and the value updates in realtime.\n\n###\n\n","completion":" ![Setting a mapper](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0a2f5969-d938-4962-b421-c831c75809c3.png) END"}
{"prompt":"Set column background color\n\n###\n\n","completion":" You can set background colors using the **Styles** section of the **Inspect** tab or with the `colorMapper` key. When you set the `colorMapper` key, alternate single or double quotes so that the outer quotes are not repeated inside the string. For example, `\"colorMapper\":'{\\{Math.abs(i % 2) == 1?\"#D1D1D1\":\"#3C92DC\"}\\}'`. END"}
{"prompt":"You can set background colors using the **Styles** section of the **Inspect** tab or with the `colorMapper` key. When you set the `colorMapper` key, alternate single or double quotes so that the outer quotes are not repeated inside the string. For example, `\"colorMapper\":'{\\{Math.abs(i % 2) == 1?\"#D1D1D1\":\"#3C92DC\"}\\}'`.\n\n###\n\n","completion":" ![Setting the color mapper key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2b1f62ab-3e73-4b86-a332-199cbc3486e5.png) END"}
{"prompt":"Common table variables\n\n###\n\n","completion":" `currentRow`, `currentColumn`, `self`, and `i` are commonly used with tables. `self` and `i` work with other components, but they have unique meanings when used with table column settings. With tables, `i` is the index of the current row in the original dataset, and `self` is the value of the current cell. END"}
{"prompt":"`currentRow`, `currentColumn`, `self`, and `i` are commonly used with tables. `self` and `i` work with other components, but they have unique meanings when used with table column settings. With tables, `i` is the index of the current row in the original dataset, and `self` is the value of the current cell.\n\n###\n\n","completion":" Variables like `currentRow` and `self` are useful in situations where you want to access values in a table and then calculate a new value. For example, `{{ self * 10 }}` takes the current cell and multiplies it by ten. You can also do something like `{{self + ' ' + '(Last sale: + currentRow.last_sale)'}}` to combine two values and map them to a column. END"}
{"prompt":"Variables like `currentRow` and `self` are useful in situations where you want to access values in a table and then calculate a new value. For example, `{{ self * 10 }}` takes the current cell and multiplies it by ten. You can also do something like `{{self + ' ' + '(Last sale: + currentRow.last_sale)'}}` to combine two values and map them to a column.\n\n###\n\n","completion":" ![Using self and current row](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2895d978-7b34-4e8e-af17-729894247b30.png) END"}
{"prompt":"![Using self and current row](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2895d978-7b34-4e8e-af17-729894247b30.png)\n\n###\n\n","completion":" `i` is often used to iterate over a set of values and perform some kind of action. For example, you can iterate over each row in a table and update values, make API requests, send emails, etc. For example, this JavaScript [transformer](https:\/\/docs.retool.com\/docs\/transformers) iterates over all rows in `table1`, and returns each sales person with over 200 sales. END"}
{"prompt":"`i` is often used to iterate over a set of values and perform some kind of action. For example, you can iterate over each row in a table and update values, make API requests, send emails, etc. For example, this JavaScript [transformer](https:\/\/docs.retool.com\/docs\/transformers) iterates over all rows in `table1`, and returns each sales person with over 200 sales.\n\n###\n\n","completion":" See the [Table](https:\/\/retool.com\/components\/table) component reference documentation for more information on properties, events, and JavaScript methods that you can use with tables. END"}
{"prompt":"title: \"Data queries overview\"\ncategorySlug: \"data-queries\"\nexcerpt: \"Write queries that interact with data and use JavaScript almost anywhere.\"\nhidden: false\n\n###\n\n","completion":" Retool interacts with your data using queries. Write SQL statements, perform API requests, and transform returned data using JavaScript. END"}
{"prompt":"Get started\n\n###\n\n","completion":" Learn how to write an SQL query, then start querying your own data sources. END"}
{"prompt":"Learn how to write an SQL query, then start querying your own data sources.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/TijJn02VxeCO5soUZIkr?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Queries\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(79.05138339920948% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/TijJn02VxeCO5soUZIkr?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Queries\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"landing three-column\\\">\\n <ul class=\\\"ctas\\\">\\n    <li>\\n <a\\n href=\\\"queries\\\"\\n >\\n <div class=\\\"name\\\">Queries<\/div>\\n <div class=\\\"description\\\">\\n Write queries to interact with data.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"api-requests\\\">\\n <div class=\\\"name\\\">Perform API requests<\/div>\\n <div class=\\\"description\\\">\\n Connect to REST, GraphQL, and SOAP APIs.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"sql-queries\\\">\\n <div class=\\\"name\\\">Query databases with SQL<\/div>\\n <div class=\\\"description\\\">\\n Connect to most databases and data stores.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Transform data\n\n###\n\n","completion":" Transform data with JavaScript or Query JSON with SQL. END"}
{"prompt":"Transform data with JavaScript or Query JSON with SQL.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"transformers\\\">\\n <div class=\\\"name\\\">Transformers<\/div>\\n <div class=\\\"description\\\">\\nTransform data with JavaScript. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"query-json-with-sql\\\">\\n <div class=\\\"name\\\">SQL queries for JSON<\/div>\\n <div class=\\\"description\\\">\\n Query JSON with SQL statements.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Optimize queries\n\n###\n\n","completion":" Write efficient queries to reduce overhead and increase performance. END"}
{"prompt":"Write efficient queries to reduce overhead and increase performance.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"caching-in-retool\\\">\\n <div class=\\\"name\\\">Query caching<\/div>\\n <div class=\\\"description\\\">\\nCache query data. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"\/docs\/server-side-pagination\\\">\\n <div class=\\\"name\\\">Server-side pagination<\/div>\\n <div class=\\\"description\\\">\\n Efficiently work with large data sets.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Data sources overview\"\ncategorySlug: \"data-sources\"\nhidden: false\n\n###\n\n","completion":" Out of the box, Retool will connect to nearly anything with a REST or GraphQL API. A growing library of native integrations makes it even easier to connect with your data sources. END"}
{"prompt":"Get started\n\n###\n\n","completion":" Learn how to connect a data source in just a few clicks, then connect your API or database. END"}
{"prompt":"Learn how to connect a data source in just a few clicks, then connect your API or database.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(66.66666666666666% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/QPTi6NacplZlJdAVJUlW?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Create a resource\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(66.66666666666666% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/QPTi6NacplZlJdAVJUlW?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Create a resource\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"api-connection-guides\\\">\\n <div class=\\\"name\\\">API guides<\/div>\\n <div class=\\\"description\\\">\\n Connect to REST, GraphQL, and SOAP APIs.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"database-connection-guides\\\">\\n <div class=\\\"name\\\">Database guides<\/div>\\n <div class=\\\"description\\\">\\n Connect to most databases and data stores.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Configure multiple environments\n\n###\n\n","completion":" Separate production data from development or staging. END"}
{"prompt":"Separate production data from development or staging.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"\/docs\/using-multiple-environments\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Environments<\/div>\\n <div class=\\\"description\\\">\\nConfigure multiple environments. \\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Integrate Retool and Datadog\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9c3330c-Screen_Shot_2021-03-17_at_12.07.42_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9c3330c-Screen_Shot_2021-03-17_at_12.07.42_AM.png)\n\n###\n\n","completion":" To connect your resource to Datadog, add your API key which you can [find here](https:\/\/app.datadoghq.com\/account\/settings#api). Then you need to get your [application key here](https:\/\/app.datadoghq.com\/access\/application-keys). You may need to create a new key if you don't have one already. Be sure to copy the key and not the ID into the application key field in Retool. END"}
{"prompt":"To connect your resource to Datadog, add your API key which you can [find here](https:\/\/app.datadoghq.com\/account\/settings#api). Then you need to get your [application key here](https:\/\/app.datadoghq.com\/access\/application-keys). You may need to create a new key if you don't have one already. Be sure to copy the key and not the ID into the application key field in Retool.\n\n###\n\n","completion":" Save the resource and that's it! You can now query the Datadog API in Retool! END"}
{"prompt":"Querying the Datadog API\n\n###\n\n","completion":" After setting up a Datadog integration with Retool, a new option for a Datadog query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the Datadog api spec to send and retrieve data from Datadog. You can learn about the popular endpoints like metrics retrieval, event logging, and dashboard creation [here](https:\/\/docs.datadoghq.com\/api\/latest\/using-the-api\/). END"}
{"prompt":"After setting up a Datadog integration with Retool, a new option for a Datadog query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the Datadog api spec to send and retrieve data from Datadog. You can learn about the popular endpoints like metrics retrieval, event logging, and dashboard creation [here](https:\/\/docs.datadoghq.com\/api\/latest\/using-the-api\/).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cbb1c58-Screen_Shot_2021-03-17_at_2.02.55_PM.png) END"}
{"prompt":"title: \"Debug Tools\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-concepts\"\nexcerpt: \"Investigate and resolve issues with Retool's built-in debugging tools.\"\nhidden: false\n\n###\n\n","completion":" Debug Tools are available within the [App editor](https:\/\/docs.retool.com\/docs\/app-editor), [Resource](https:\/\/docs.retool.com\/docs\/resources) configuration page, and [Query Library](https:\/\/docs.retool.com\/docs\/query-library). They enable you to troubleshoot and fix issues with Retool apps, resources, and queries. END"}
{"prompt":"Debug Tools are available within the [App editor](https:\/\/docs.retool.com\/docs\/app-editor), [Resource](https:\/\/docs.retool.com\/docs\/resources) configuration page, and [Query Library](https:\/\/docs.retool.com\/docs\/query-library). They enable you to troubleshoot and fix issues with Retool apps, resources, and queries.\n\n###\n\n","completion":" ![Debug Tools](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/188edd15-42b1-4ce9-814b-f8dd5c4b1e2a.png) END"}
{"prompt":"App editor\n\n###\n\n","completion":" The status bar at the bottom of the app editor displays the current environment, release, query runtime information, and the number of errors. You can click the environment to open a list of other environments to switch to. Clicking the error text in the lower right corner or pressing `` Ctrl + ` `` opens the Debug Tools. END"}
{"prompt":"The status bar at the bottom of the app editor displays the current environment, release, query runtime information, and the number of errors. You can click the environment to open a list of other environments to switch to. Clicking the error text in the lower right corner or pressing `` Ctrl + ` `` opens the Debug Tools.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/adb5a7ae-2d52-467f-9ecd-4917664ada95.png\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5ed0d2e2-6627-4cc0-a664-3a646329a967.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Console tab\n\n###\n\n","completion":" The Console tab is shown by default when you open the debug window. It displays a list of errors, warnings, and success messages that relate to your queries, transformers, event handlers, etc. You can also run JavaScript in the command line to help debug issues. For example, entering something like `text1.value` returns the `text1` component's value. END"}
{"prompt":"The Console tab is shown by default when you open the debug window. It displays a list of errors, warnings, and success messages that relate to your queries, transformers, event handlers, etc. You can also run JavaScript in the command line to help debug issues. For example, entering something like `text1.value` returns the `text1` component's value.\n\n###\n\n","completion":" ![Using the debug console](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/22370b2b-ca69-4ba6-9c5f-c0a775064ce3.png) END"}
{"prompt":"Timeline tab\n\n###\n\n","completion":" The Timeline tab shows a live view of all query runs. It makes it easier to visualize run times, compare sequencing, and identify failed, successful, and active queries. This feature is useful when debugging apps that run multiple queries in parallel or that chain queries together. END"}
{"prompt":"The Timeline tab shows a live view of all query runs. It makes it easier to visualize run times, compare sequencing, and identify failed, successful, and active queries. This feature is useful when debugging apps that run multiple queries in parallel or that chain queries together.\n\n###\n\n","completion":" ![Viewing queries in the Timeline tab](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ebb21019-51b1-43cc-beab-3af578a6b36f.png) END"}
{"prompt":"State tab\n\n###\n\n","completion":" The State tab provides a list of queries, components, and global variables used in your app. Clicking an item in the sidebar displays more details. For example, if you select a component, you can see the current value and other property information. At the bottom of the window, it also shows the queries that component depends on. If you select a query, the components updated by that query are displayed instead. END"}
{"prompt":"The State tab provides a list of queries, components, and global variables used in your app. Clicking an item in the sidebar displays more details. For example, if you select a component, you can see the current value and other property information. At the bottom of the window, it also shows the queries that component depends on. If you select a query, the components updated by that query are displayed instead.\n\n###\n\n","completion":" ![Viewing state information](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3e4bb2c2-e5b3-4012-a0b6-af1b98ae9a1a.png) END"}
{"prompt":"Linting tab\n\n###\n\n","completion":" The Linting tab displays JavaScript errors, like undefined variables and invalid JavaScript syntax. When you click an error, the code opens in the app automatically so that you can debug it. END"}
{"prompt":"The Linting tab displays JavaScript errors, like undefined variables and invalid JavaScript syntax. When you click an error, the code opens in the app automatically so that you can debug it.\n\n###\n\n","completion":" ![Linting tab](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e8aa940a-cdf8-4a28-ae98-d0e8bd4ef5e0.png) END"}
{"prompt":"Resource configuration page\n\n###\n\n","completion":" Some resources have testing options for verifying connection settings. Supported resources include a **Test connection** option when you create or edit the resource. END"}
{"prompt":"Some resources have testing options for verifying connection settings. Supported resources include a **Test connection** option when you create or edit the resource.\n\n###\n\n","completion":" Similarly, there are options for testing authentication settings when using [Custom Auth](https:\/\/docs.retool.com\/docs\/custom-api-authentication). Not every custom auth configuration has these options, but the full list includes: END"}
{"prompt":"Similarly, there are options for testing authentication settings when using [Custom Auth](https:\/\/docs.retool.com\/docs\/custom-api-authentication). Not every custom auth configuration has these options, but the full list includes:\n\n###\n\n","completion":" When you test auth workflows or connections, Retool displays a notification indicating whether the test passed or failed. Click **View in console** to open the Debug Tools console. The console includes detailed information, including errors, tokens, headers, URLs, etc. END"}
{"prompt":"When you test auth workflows or connections, Retool displays a notification indicating whether the test passed or failed. Click **View in console** to open the Debug Tools console. The console includes detailed information, including errors, tokens, headers, URLs, etc.\n\n###\n\n","completion":" ![Console log for testing authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/997c59fb-eafc-4ced-b8e5-941299914d70.png) END"}
{"prompt":"![Console log for testing authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/997c59fb-eafc-4ced-b8e5-941299914d70.png)\n\n###\n\n","completion":" If you're debugging a connection issue, see the [Troubleshoot connections](https:\/\/docs.retool.com\/docs\/troubleshoot-integrations) page for more details. END"}
{"prompt":"Query Library\n\n###\n\n","completion":" Debug Tools for the Query Library allows you to switch between environments, which means you can test queries before using them in production. In the status bar at the bottom of the page, click on the current environment to switch to a different environment. END"}
{"prompt":"Debug Tools for the Query Library allows you to switch between environments, which means you can test queries before using them in production. In the status bar at the bottom of the page, click on the current environment to switch to a different environment.\n\n###\n\n","completion":" ![Selecting an environment to run a query in](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3ce25a5e-ef61-4bab-bf05-c80d31d1b3e5.png) END"}
{"prompt":"![Selecting an environment to run a query in](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3ce25a5e-ef61-4bab-bf05-c80d31d1b3e5.png)\n\n###\n\n","completion":" You can also view a query's history by clicking the **Saved on** text in the lower right corner. This opens a modal that shows the history, and allows you to revert to a previous version. END"}
{"prompt":"title: \"Define option lists\"\ncategorySlug: \"app-scripting-and-events\"\nparentDocSlug: \"app-scripting-events-guides\"\nexcerpt: \"Use the option list editor to configure options manually or map data to generate them dynamically.\"\nhidden: false\n\n###\n\n","completion":" Many components present a list of options, such as the dropdown in a [Select](https:\/\/retool.com\/components\/select) or the menu of a [Split Button](https:\/\/retool.com\/components\/split-button). Each option contains a number of settings depending on the component—`value`, `label`, `caption`, `tooltip`, and `disabled`, and more. END"}
{"prompt":"Many components present a list of options, such as the dropdown in a [Select](https:\/\/retool.com\/components\/select) or the menu of a [Split Button](https:\/\/retool.com\/components\/split-button). Each option contains a number of settings depending on the component—`value`, `label`, `caption`, `tooltip`, and `disabled`, and more.\n\n###\n\n","completion":" Some components allow you to manually configure each option, or dynamically generate options by mapping data from a query, transformer, or any other source. END"}
{"prompt":"Configure options manually\n\n###\n\n","completion":" Select **Manual** mode in the **Content** settings of the Inspector to configure options using a reorderable list. This mode is best suited for lists that contain: END"}
{"prompt":"Select **Manual** mode in the **Content** settings of the Inspector to configure options using a reorderable list. This mode is best suited for lists that contain:\n\n###\n\n","completion":" Click **+** to add a new option and configure the available settings, or click an existing option to edit. You can duplicate or delete an option by clicking the **•••** icon. END"}
{"prompt":"Click **+** to add a new option and configure the available settings, or click an existing option to edit. You can duplicate or delete an option by clicking the **•••** icon.\n\n###\n\n","completion":" ![Manually define each option and configure its settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/413c76050dbc6a850ccf2be6cdd0f607-1800.webp) END"}
{"prompt":"Map data to generate options\n\n###\n\n","completion":" Select **Mapped** mode in the **Content** settings of the Inspector to generate options from a data source. This is similar to using a `.map` method on an array: each item in your data source is mapped to each option. This mode is best suited for lists that contain: END"}
{"prompt":"Specify a data source\n\n###\n\n","completion":" Specify the data to evaluate in the **Data source** setting. Select from your queries or transformers, or switch to JavaScript mode (`fx`) to provide an array of values or an object of arrays by key. You can also reference data from anywhere in your app. END"}
{"prompt":"Specify the data to evaluate in the **Data source** setting. Select from your queries or transformers, or switch to JavaScript mode (`fx`) to provide an array of values or an object of arrays by key. You can also reference data from anywhere in your app.\n\n###\n\n","completion":" ![Select a data source to evaluate](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/64901bc304415f3a764f4193971294df-1800.webp) END"}
{"prompt":"Configure mapped options\n\n###\n\n","completion":" The **Mapped options** section contains settings that are evaluated for each item in your data source. END"}
{"prompt":"The **Mapped options** section contains settings that are evaluated for each item in your data source.\n\n###\n\n","completion":" Use `item` to reference the current data source item being evaluated and `i` to reference the current index. For example, if the items in your data source have an `id` (`[{ id: 1 }, { id: 2 }]`), reference this using `{{ item.id }}` in any setting. END"}
{"prompt":"Use `item` to reference the current data source item being evaluated and `i` to reference the current index. For example, if the items in your data source have an `id` (`[{ id: 1 }, { id: 2 }]`), reference this using `{{ item.id }}` in any setting.\n\n###\n\n","completion":" You can test out mapped options by generating sample data from Retool's [REST API Generator](https:\/\/retool.com\/api-generator\/) app. END"}
{"prompt":"You can test out mapped options by generating sample data from Retool's [REST API Generator](https:\/\/retool.com\/api-generator\/) app.\n\n###\n\n","completion":" Click **Generate API** to generate a test API and save its URL. You can now use this sample data to map options from a query. END"}
{"prompt":"Click **Generate API** to generate a test API and save its URL. You can now use this sample data to map options from a query.\n\n###\n\n","completion":" First, create a query: END"}
{"prompt":"First, create a query:\n\n###\n\n","completion":" Next, add and configure a Select component: END"}
{"prompt":"Next, add and configure a Select component:\n\n###\n\n","completion":" You can now map option settings using `item`. END"}
{"prompt":"You can now map option settings using `item`.\n\n###\n\n","completion":" ![Options mapped from query, updated with JavaScript logic](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/9819dfeaea4fd5513e5a1557d1553d98-1800.webp) END"}
{"prompt":"![Options mapped from query, updated with JavaScript logic](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/9819dfeaea4fd5513e5a1557d1553d98-1800.webp)\n\n###\n\n","completion":" You can use JavaScript almost anywhere in Retool and create logic that provides greater flexibility. In this example, `item.unit_price_cents` and `item.created_at` are displayed in a more readable format, and options for products with `quantity: 0` are disabled. END"}
{"prompt":"Event handlers for mapped options\n\n###\n\n","completion":" You can configure the mapped options of certain components, such as [Dropdown Button](https:\/\/retool.com\/components\/dropdown-button), with event handlers. These event handlers can reference the current item using `item` or the item's current index using `i`. For example, you can configure an event handler on a mapped option to display a notification with the button's label with `{{ item.label }}`. END"}
{"prompt":"You can configure the mapped options of certain components, such as [Dropdown Button](https:\/\/retool.com\/components\/dropdown-button), with event handlers. These event handlers can reference the current item using `item` or the item's current index using `i`. For example, you can configure an event handler on a mapped option to display a notification with the button's label with `{{ item.label }}`.\n\n###\n\n","completion":" ![Event handler on a mapped option](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/883f98d7933a45fb2c78e9f29aefd852-1800.webp) END"}
{"prompt":"title: \"Self-hosted Retool at scale\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-concepts\"\nexcerpt: \"Learn about methods to effectively deploy and manage Retool within your organization.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" This guide provides a technical overview of how to deploy, manage, and scale Retool for enterprise use cases. END"}
{"prompt":"This guide provides a technical overview of how to deploy, manage, and scale Retool for enterprise use cases.\n\n###\n\n","completion":" Retool can be [self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) in any containerized environment: locally, on a virtual machine, or through container orchestration services like Kubernetes. Even though a single virtual machine can support users and Retool apps, we recommend you deploy Retool instances through a container orchestration service. This method of deployment makes it easier to manage, upgrade, and scale. END"}
{"prompt":"Retool can be [self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) in any containerized environment: locally, on a virtual machine, or through container orchestration services like Kubernetes. Even though a single virtual machine can support users and Retool apps, we recommend you deploy Retool instances through a container orchestration service. This method of deployment makes it easier to manage, upgrade, and scale.\n\n###\n\n","completion":" We provide templates and starting points for the following orchestration services: END"}
{"prompt":"Retool’s self-hosted architecture\n\n###\n\n","completion":" Retool's self-hosted Docker image comes with containers that are responsible for running the web app, storing instance-level data like users and permissions, and running jobs like database migrations. The [docker-compose file](https:\/\/github.com\/tryretool\/retool-onpremise\/blob\/master\/docker-compose.yml) for Retool Self-hosted defines three main containers: `api`, `postgres`, and `jobs-runner`. END"}
{"prompt":"Retool's self-hosted Docker image comes with containers that are responsible for running the web app, storing instance-level data like users and permissions, and running jobs like database migrations. The [docker-compose file](https:\/\/github.com\/tryretool\/retool-onpremise\/blob\/master\/docker-compose.yml) for Retool Self-hosted defines three main containers: `api`, `postgres`, and `jobs-runner`.\n\n###\n\n","completion":" ![Visualization of a Retool deployment](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f4900fad-cac6-4a86-a32e-75b7044fb63a.png) END"}
{"prompt":"api\n\n###\n\n","completion":" This is the primary container that serves the Retool web application. It handles most of the logic for interacting with the app. END"}
{"prompt":"postgres\n\n###\n\n","completion":" Retool uses a Postgres container to store apps, users, permissions, and other necessary information. We cannot access this information on self-hosted deployments. END"}
{"prompt":"Retool uses a Postgres container to store apps, users, permissions, and other necessary information. We cannot access this information on self-hosted deployments.\n\n###\n\n","completion":" We recommend externalizing this container (e.g., to [Amazon RDS](https:\/\/aws.amazon.com\/rds\/)) so the Retool application can be completely stateless, and to make it easier to take snapshots and monitor performance. If you deploy using one of the orchestration services above, our templates provided specify the inputs needed to host the database separately. END"}
{"prompt":"jobs-runner\n\n###\n\n","completion":" The `jobs-runner` container is responsible for database migrations, syncing protected apps, and other background tasks. This container also contains logs related to these tasks. END"}
{"prompt":"The `jobs-runner` container is responsible for database migrations, syncing protected apps, and other background tasks. This container also contains logs related to these tasks.\n\n###\n\n","completion":" `jobs-runner` is dependent on the Postgres container as it runs operations on the Retool Postgres database. END"}
{"prompt":"When to deploy multiple Retool instances\n\n###\n\n","completion":" As you begin Retool app development, we recommend spinning up one or two instances if most of the initial users will be building apps. As teams get comfortable with their development workflows and end-users are spending more time using Retool apps, it’s important to get a pulse and understand whether it makes sense to scale out new instances. END"}
{"prompt":"Separate Retool development and production environments\n\n###\n\n","completion":" You might have development endpoints where editors can safely build and test apps on non-production data. If so, it's recommended to mirror a typical Software Development Life Cycle (SDLC): END"}
{"prompt":"You might have development endpoints where editors can safely build and test apps on non-production data. If so, it's recommended to mirror a typical Software Development Life Cycle (SDLC):\n\n###\n\n","completion":" This ensures your development Retool instance can only point to development endpoints and helps organize different user types across your organization. END"}
{"prompt":"This ensures your development Retool instance can only point to development endpoints and helps organize different user types across your organization.\n\n###\n\n","completion":" Our [Source Control](https:\/\/docs.retool.com\/docs\/source-control) feature lets you safely promote application changes between instances via a Git-based workflow. You can only have one Git repository associated with an instance—all pull requests must go through a single group of reviewers. END"}
{"prompt":"Isolate team development workflows\n\n###\n\n","completion":" We recommend you split out Retool instances for each team if: END"}
{"prompt":"Legal and compliance purposes\n\n###\n\n","completion":" If you are launching or operate into a market that requires network traffic to be isolated to specific regions, you may need to isolate your Retool instance as well. In other cases, a production instance might need to be locked down to be read-only (i.e., no editors can build apps). END"}
{"prompt":"Testing new features and upgrades\n\n###\n\n","completion":" If you want to safely test out a new beta feature or instance-wide setting (e.g., a new SSO configuration), you can spin up a separate Retool instance for this purpose. END"}
{"prompt":"When to use a single Retool instance\n\n###\n\n","completion":" In general, you should only deploy the instances you need. If you’re starting out with a small, defined set of use cases for one team, or if you don’t need to isolate Retool instances by VPC, you can start with a single instance. END"}
{"prompt":"In general, you should only deploy the instances you need. If you’re starting out with a small, defined set of use cases for one team, or if you don’t need to isolate Retool instances by VPC, you can start with a single instance.\n\n###\n\n","completion":" Retool allows you to define [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) within a single instance so that you can safely build, run, and test apps for your end-users. END"}
{"prompt":"Scale your Retool instance\n\n###\n\n","completion":" If you start to see performance issues when many users (typically 100+) are using a single Retool instance, we recommend scaling the `api` container. You can do this by updating the replica count in your container orchestration service of choice. END"}
{"prompt":"title: \"Deploy Retool with Helm\"\nexcerpt: \"Learn how to deploy Retool with Helm.\"\nhidden: true\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\n\n###\n\n","completion":" You can deploy self-hosted Retool with Helm following the instructions in this guide. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" To deploy Retool with Helm, you need: END"}
{"prompt":"Cluster size\n\n###\n\n","completion":" The cluster must have at least one node with 2x vCPUs and 8 GB of memory. Use the following command to retrieve the capacity of your nodes. END"}
{"prompt":"The cluster must have at least one node with 2x vCPUs and 8 GB of memory. Use the following command to retrieve the capacity of your nodes.\n\n###\n\n","completion":" In the **Capacity** section, verify the **cpu** and **memory** values meet the above requirements. END"}
{"prompt":"1. Add the Retool Helm repository\n\n###\n\n","completion":" Use the following command to add the Retool Helm repository. END"}
{"prompt":"Use the following command to add the Retool Helm repository.\n\n###\n\n","completion":" Search for the repo to confirm you can access the Retool chart. END"}
{"prompt":"2. Modify values.yaml\n\n###\n\n","completion":" Retool's Helm chart is configured using a `values.yaml` file, which you modify for your specific configuration. Clone the [retool-helm repository](https:\/\/github.com\/tryretool\/retool-helm) to your local machine to retrieve a copy of `values.yaml`. END"}
{"prompt":"Retool's Helm chart is configured using a `values.yaml` file, which you modify for your specific configuration. Clone the [retool-helm repository](https:\/\/github.com\/tryretool\/retool-helm) to your local machine to retrieve a copy of `values.yaml`.\n\n###\n\n","completion":" In Kubernetes, you can store configuration options in plain text, or by using [Kubernetes secrets](https:\/\/kubernetes.io\/docs\/concepts\/configuration\/secret\/). END"}
{"prompt":"In Kubernetes, you can store configuration options in plain text, or by using [Kubernetes secrets](https:\/\/kubernetes.io\/docs\/concepts\/configuration\/secret\/).\n\n###\n\n","completion":" Plain text values are stored based on their key name in `values.yaml`. The following example sets `config.licenseKey` as plain text. END"}
{"prompt":"Plain text values are stored based on their key name in `values.yaml`. The following example sets `config.licenseKey` as plain text.\n\n###\n\n","completion":" When using [Kubernetes secrets](https:\/\/kubernetes.io\/docs\/concepts\/configuration\/secret\/) to store values, you need both the `SecretName` and `SecretKey` to reference the secrets within `values.yaml`. For example, given a `license-key-secret` with a `license-key` key, the example below sets `config.licenseKey`. END"}
{"prompt":"When using [Kubernetes secrets](https:\/\/kubernetes.io\/docs\/concepts\/configuration\/secret\/) to store values, you need both the `SecretName` and `SecretKey` to reference the secrets within `values.yaml`. For example, given a `license-key-secret` with a `license-key` key, the example below sets `config.licenseKey`.\n\n###\n\n","completion":" Retool recommends storing sensitive data—for example, passwords and credentials—as Kubernetes secrets, especially if you commit `values.yaml` to source control. END"}
{"prompt":"Required values\n\n###\n\n","completion":" Set the following values in `values.yaml`. END"}
{"prompt":"3. Install Retool\n\n###\n\n","completion":" After updating the configuration, install Retool. END"}
{"prompt":"After updating the configuration, install Retool.\n\n###\n\n","completion":" After installing Retool, verify you have pods for the main service and `jobs-runner`. If you use the PostgreSQL subchart, there is also a `postgresql` pod. END"}
{"prompt":"After installing Retool, verify you have pods for the main service and `jobs-runner`. If you use the PostgreSQL subchart, there is also a `postgresql` pod.\n\n###\n\n","completion":" Once the main service is running, verify the installation by port forwarding to `localhost`. END"}
{"prompt":"Once the main service is running, verify the installation by port forwarding to `localhost`.\n\n###\n\n","completion":" You can then access Retool at `http:\/\/localhost:3000\/`. END"}
{"prompt":"Additional steps\n\n###\n\n","completion":" The following steps are optional. On production instances, Retool strongly recommends you externalize your database, configure SSL, and keep up-to-date with the latest version of Retool. Setting environment variables is often necessary to configure SSO, source control, and other self-hosted features. END"}
{"prompt":"Externalize database\n\n###\n\n","completion":" By default, the Retool Helm chart uses the PostgreSQL subchart to create a containerized instance of PostgreSQL. Retool strongly recommends externalizing the database on production instances, so the Retool application can be completely stateless. Managed databases are more maintainable, scalable, and reliable than containerized PostgreSQL instances. END"}
{"prompt":"Add environment variables\n\n###\n\n","completion":" The `values.yaml` file has three locations to add [environment variables](https:\/\/docs.retool.com\/reference\/environment-variables-reference). END"}
{"prompt":"The `values.yaml` file has three locations to add [environment variables](https:\/\/docs.retool.com\/reference\/environment-variables-reference).\n\n###\n\n","completion":" If you store sensitive information, such as credentials or tokens, in your repository, you should **not** store these variables in `env`. Instead, use `environmentSecrets` or `environmentVariables`, as they can populate environment variables from Kubernetes secrets. END"}
{"prompt":"title: \"Customize app style\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to customize the style of your apps and enhance their usability.\"\nhidden: false\n\n###\n\n","completion":" You can control the appearance of your apps with custom style options you configure per-app or shared across your organization as custom themes. Retool also provides numerous usability features to further enhance your user's app experience. END"}
{"prompt":"Customize style options\n\n###\n\n","completion":" You can customize the style of each component, or the [Header and Main frames](https:\/\/docs.retool.com\/docs\/app-editor#frames) in the <<glossary:canvas>>. Select the component or frame to customize, then use the **Style** section in the **Inspect** tab of the right panel. There are different style options, such as color or border radius, depending on the type of component or the frame. END"}
{"prompt":"You can customize the style of each component, or the [Header and Main frames](https:\/\/docs.retool.com\/docs\/app-editor#frames) in the <<glossary:canvas>>. Select the component or frame to customize, then use the **Style** section in the **Inspect** tab of the right panel. There are different style options, such as color or border radius, depending on the type of component or the frame.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/700d38a7-4fc1-4c9e-a3ad-fd4be46aaaa5.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/cadef9ef-5b92-4557-9b61-62826a57c2da.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/700d38a7-4fc1-4c9e-a3ad-fd4be46aaaa5.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/cadef9ef-5b92-4557-9b61-62826a57c2da.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" Color is one of the most effective ways to communicate status or severity to your users. You can set custom color options using the color picker or entering a valid [CSS color value](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/color). You can also select a color from one of the current theme's default colors. END"}
{"prompt":"Color is one of the most effective ways to communicate status or severity to your users. You can set custom color options using the color picker or entering a valid [CSS color value](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/color). You can also select a color from one of the current theme's default colors.\n\n###\n\n","completion":" As with other settings, you can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) to conditionally set style options. For example, you can customize the background color of a [Number Input](https:\/\/retool.com\/components\/number-input) component based on whether its value is less than or greater than `100` using `{{ numberInput2.value < 100 ? 'red' : 'blue' }}`. END"}
{"prompt":"As with other settings, you can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) to conditionally set style options. For example, you can customize the background color of a [Number Input](https:\/\/retool.com\/components\/number-input) component based on whether its value is less than or greater than `100` using `{{ numberInput2.value < 100 ? 'red' : 'blue' }}`.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/5e668d8e-4f89-447f-ae91-9c6629db2828.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/b26539e4-b192-48c0-87ca-ed19cdfa6c7b.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Themes\n\n###\n\n","completion":" You can create and manage custom themes from the **Themes** section in your organization settings. Click on your **User** menu on the upper-right and select **Settings**. END"}
{"prompt":"You can create and manage custom themes from the **Themes** section in your organization settings. Click on your **User** menu on the upper-right and select **Settings**.\n\n###\n\n","completion":" ![Access settings for your organization](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/bb7d2e1d-be02-4915-b440-8c2abde30443.png) END"}
{"prompt":"Create themes\n\n###\n\n","completion":" Click **Create new** and enter a name. You can then select an existing Retool theme from which to start. Our themes are optimized for high-contrast use. END"}
{"prompt":"Click **Create new** and enter a name. You can then select an existing Retool theme from which to start. Our themes are optimized for high-contrast use.\n\n###\n\n","completion":" ![Create a new theme](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/49fc336e-4411-4385-87b9-c94bfc829612.jpg) END"}
{"prompt":"![Create a new theme](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/49fc336e-4411-4385-87b9-c94bfc829612.jpg)\n\n###\n\n","completion":" The theme editor displays a live preview of your style options and how they apply to your apps. Style options are broken down into different sections: END"}
{"prompt":"The theme editor displays a live preview of your style options and how they apply to your apps. Style options are broken down into different sections:\n\n###\n\n","completion":" ![Theme editor and preview](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/d67fdc82-ffd9-4585-902b-1a4b8d35de8d.jpg) END"}
{"prompt":"Manage themes\n\n###\n\n","completion":" You can set a default theme that applies to all apps by default, duplicate an existing theme, or delete a theme at any time. Click the ••• button to bring up theme options. END"}
{"prompt":"You can set a default theme that applies to all apps by default, duplicate an existing theme, or delete a theme at any time. Click the ••• button to bring up theme options.\n\n###\n\n","completion":" Editors can always override the theme in each app from the `•••` **App actions** menu. Any apps using a deleted theme revert to your organization's default theme. If you delete the default theme, apps revert to Retool's default style instead. END"}
{"prompt":"Apply custom branding\n\n###\n\n","completion":" You can use custom branding to customize headers, sign up and login pages, and email invites for users. Use the **Branding** section of your organization settings to upload a logo and set the header background color. END"}
{"prompt":"You can use custom branding to customize headers, sign up and login pages, and email invites for users. Use the **Branding** section of your organization settings to upload a logo and set the header background color.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/85b8e0e-preview1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/85b8e0e-preview1.png)\n\n###\n\n","completion":" Once set, custom branding is visible to anyone using your organization's apps in user mode. END"}
{"prompt":"Override CSS\n\n###\n\n","completion":" You can provide custom CSS to override Retool's default style rules on a per-app basis. Click the `•••` **App actions** menu and select **Scripts and styles**. END"}
{"prompt":"You can provide custom CSS to override Retool's default style rules on a per-app basis. Click the `•••` **App actions** menu and select **Scripts and styles**.\n\n###\n\n","completion":" You can also provide custom CSS that applies to all apps from the **Advanced** section in your organization settings. Navigate to your organization's settings, then click on your **User** menu on the upper-right and select **Settings**. END"}
{"prompt":"You can also provide custom CSS that applies to all apps from the **Advanced** section in your organization settings. Navigate to your organization's settings, then click on your **User** menu on the upper-right and select **Settings**.\n\n###\n\n","completion":" Retool component class names are unique and use the format `_retool-[component name]`. For example, the class name of the `textInput1` component would be `_retool-textInput1`. END"}
{"prompt":"Usability features\n\n###\n\n","completion":" Retool includes a number of additional features to enhance the usability of your apps. These options include additional context or personalization, text and data formatting, notifications, and query confirmations. END"}
{"prompt":"Adjust the look and feel of inputs\n\n###\n\n","completion":" Most input components, such as [Text Input](https:\/\/retool.com\/components\/text-input), support a number of settings that help you provide your users with greater context. END"}
{"prompt":"Most input components, such as [Text Input](https:\/\/retool.com\/components\/text-input), support a number of settings that help you provide your users with greater context.\n\n###\n\n","completion":" ![Input adornments](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/b2844384-7d37-4fa4-b6fa-e5e4346cc173.jpg) END"}
{"prompt":"![Input adornments](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/b2844384-7d37-4fa4-b6fa-e5e4346cc173.jpg)\n\n###\n\n","completion":" Available settings appear in the **Inspect** tab in sections like **Label** and **Adornments**. END"}
{"prompt":"Display formatted data types\n\n###\n\n","completion":" Certain components, such as [Table](https:\/\/retool.com\/components\/table), allows you to format the contents based on the data it contains—such as currencies or email addresses. For example, you can format a column of dates to use a **Column type** of **Date**. This allows you to customize the date formatting or even adjust the date shown to match the user's local time zone. END"}
{"prompt":"Certain components, such as [Table](https:\/\/retool.com\/components\/table), allows you to format the contents based on the data it contains—such as currencies or email addresses. For example, you can format a column of dates to use a **Column type** of **Date**. This allows you to customize the date formatting or even adjust the date shown to match the user's local time zone.\n\n###\n\n","completion":" ![Configure column type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/6745ca66-fd78-4e71-9559-f73849a5e1cf.jpg) END"}
{"prompt":"Personalize apps to the current user\n\n###\n\n","completion":" Retool apps have access to _global_ variables, such as `current_user`, which allows you to personalize the app. For example, you can include a welcome message that displays the user's name with `Welcome {{current_user.firstName}}!`. END"}
{"prompt":"Retool apps have access to _global_ variables, such as `current_user`, which allows you to personalize the app. For example, you can include a welcome message that displays the user's name with `Welcome {{current_user.firstName}}!`.\n\n###\n\n","completion":" ![Markdown text with built-in user variables](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/e24315aa-877f-4857-ab8c-45344152b4b5.jpg) END"}
{"prompt":"Write formatted text with Markdown and HTML\n\n###\n\n","completion":" You can use Markdown or HTML across a number of surfaces to include rich text or images. Retool renders Markdown and HTML where available. Refer to [the Markdown and HTML reference](https:\/\/docs.retool.com\/docs\/retool-markdown-html-reference) for more information and to preview how this works. END"}
{"prompt":"Trigger notifications\n\n###\n\n","completion":" You can set up notifications using [<<glossary:event handlers>>](https:\/\/docs.retool.com\/docs\/event-handlers) that are triggered in response to any supported event. Add a new event handler using the **Interaction** settings in the **Inspect** tab, then select **Show notification** as the action. END"}
{"prompt":"You can set up notifications using [<<glossary:event handlers>>](https:\/\/docs.retool.com\/docs\/event-handlers) that are triggered in response to any supported event. Add a new event handler using the **Interaction** settings in the **Inspect** tab, then select **Show notification** as the action.\n\n###\n\n","completion":" ![Configure notification](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/5ece8d99-13d6-4246-8798-db966afec24c.jpg) END"}
{"prompt":"![Configure notification](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/5ece8d99-13d6-4246-8798-db966afec24c.jpg)\n\n###\n\n","completion":" In addition to the title and description, you can specify the **Type** of notification by selecting from the list or dynamically with JavaScript. This represents the severity of the message and changes the color used. You can also control the duration for which notifications are shown before being dismissed. END"}
{"prompt":"In addition to the title and description, you can specify the **Type** of notification by selecting from the list or dynamically with JavaScript. This represents the severity of the message and changes the color used. You can also control the duration for which notifications are shown before being dismissed.\n\n###\n\n","completion":" You can also trigger notifications with JavaScript using `utils.showNotification()` . END"}
{"prompt":"Ask for confirmation before running a query\n\n###\n\n","completion":" Queries that write or delete data can display a confirmation message before they run. You can enable this in the **Advanced** tab of a selected query. END"}
{"prompt":"Queries that write or delete data can display a confirmation message before they run. You can enable this in the **Advanced** tab of a selected query.\n\n###\n\n","completion":" ![Query confirmation](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/style\/42da2911-2242-4101-a1da-696675500788.jpg) END"}
{"prompt":"title: \"Developer API Overview\"\ncategorySlug: \"retool-developer-api\"\nhidden: false\n\n###\n\n","completion":" For further documentation on how to get started with the Retool API, refer to our [API Overview](https:\/\/docs.retool.com\/docs\/retool-api) documentation. END"}
{"prompt":"title: \"Disable users\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to disable a user's access to Retool.\"\nhidden: false\n\n###\n\n","completion":" Users with `admin` permissions can disable any user's access within their Retool organization. Disabling users prevents them from logging into their Retool account, as well as accessing or editing any apps, queries, or resources in your shared Retool organization. END"}
{"prompt":"Users with `admin` permissions can disable any user's access within their Retool organization. Disabling users prevents them from logging into their Retool account, as well as accessing or editing any apps, queries, or resources in your shared Retool organization.\n\n###\n\n","completion":" If you can't access `\/settings\/users` in Retool, you don't have `admin` permissions. END"}
{"prompt":"Disabling a user's account\n\n###\n\n","completion":" To disable a user: END"}
{"prompt":"To disable a user:\n\n###\n\n","completion":" ![Disabling a user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/121a018c-c76c-48c9-9b62-731f8f09da65.png) END"}
{"prompt":"Enable a User's Account\n\n###\n\n","completion":" To enable a user: END"}
{"prompt":"To enable a user:\n\n###\n\n","completion":" ![Enabling a user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e61b0513-a72a-48e0-851b-e27793d22a0b.png) END"}
{"prompt":"title: \"Display images\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-guides\"\nexcerpt: \"Learn about the different ways to include images in your apps.\"\nhidden: false\n\n###\n\n","completion":" Displaying images in your tools is a pretty common use case, and there are a bunch of ways to get that done in Retool. Here's what we'll cover: END"}
{"prompt":"Displaying images in your tools is a pretty common use case, and there are a bunch of ways to get that done in Retool. Here's what we'll cover:\n\n###\n\n","completion":" We'll talk about rendering images via URL as well as Base64 strings. END"}
{"prompt":"Image components\n\n###\n\n","completion":" **Via URL** END"}
{"prompt":"**Via URL**\n\n###\n\n","completion":" The easiest way to display an image in Retool is via a URL. Start by dragging an image component onto your canvas (or into a container, tabbed container, etc.). Click on it, and you should see an \"Image URL\" field in the sidebar. END"}
{"prompt":"The easiest way to display an image in Retool is via a URL. Start by dragging an image component onto your canvas (or into a container, tabbed container, etc.). Click on it, and you should see an \"Image URL\" field in the sidebar.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/07fde20-Screen_Shot_2020-02-28_at_4.20.54_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/07fde20-Screen_Shot_2020-02-28_at_4.20.54_PM.png)\n\n###\n\n","completion":" You can paste in your desired URL (hardcoded), or reference it via JavaScript in curly braces (`{{ }}`). For example, if you're working with a table and you want to reference an \"image\" column from the selected row, you could use `{{ table1.selectedRow.data.image }}` in your image component. END"}
{"prompt":"You can paste in your desired URL (hardcoded), or reference it via JavaScript in curly braces (`{{ }}`). For example, if you're working with a table and you want to reference an \"image\" column from the selected row, you could use `{{ table1.selectedRow.data.image }}` in your image component.\n\n###\n\n","completion":" **Via Base64** END"}
{"prompt":"**Via Base64**\n\n###\n\n","completion":" Retool's image component takes a URL to display, but you can also use a Base64 string. Drag an image component on to your canvas: END"}
{"prompt":"Retool's image component takes a URL to display, but you can also use a Base64 string. Drag an image component on to your canvas:\n\n###\n\n","completion":" Click on the image component you just added, on head over to the \"Image URL\" field on the right sidebar. Instead of a URL, you can add in a Base64 string prepended with the right descriptor. We grabbed a picture of a mirror (spooky), and it's a JPEG, so we'll prepend the Base64 string with `data:image\/jpeg;base64,`. END"}
{"prompt":"Click on the image component you just added, on head over to the \"Image URL\" field on the right sidebar. Instead of a URL, you can add in a Base64 string prepended with the right descriptor. We grabbed a picture of a mirror (spooky), and it's a JPEG, so we'll prepend the Base64 string with `data:image\/jpeg;base64,`.\n\n###\n\n","completion":" The whole Base64 string is too long to paste here, but the first part of it looks like `\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2`. We'll prepend that with our descriptor so it looks like `data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2...` and then add that in to the \"Image URL\" field in our image component: END"}
{"prompt":"The whole Base64 string is too long to paste here, but the first part of it looks like `\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2`. We'll prepend that with our descriptor so it looks like `data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2...` and then add that in to the \"Image URL\" field in our image component:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1643a31-Image_2020-02-28_at_4.28.27_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1643a31-Image_2020-02-28_at_4.28.27_PM.png)\n\n###\n\n","completion":" If all went well, your image component should update and show our mirror. END"}
{"prompt":"If all went well, your image component should update and show our mirror.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6982c34-Screen_Shot_2020-02-28_at_4.37.12_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6982c34-Screen_Shot_2020-02-28_at_4.37.12_PM.png)\n\n###\n\n","completion":" If your Base64 image string is coming from a query, you can do the prepending in `{{}}` if you concatenate the strings properly. If we've stored an image's Base64 string as `imageString` in our database, we can put `{{ \"data:image\/jpeg;base64,\" + imageString }}` in the \"Image URL\" field. If that `imageString` is coming from a table or a query, you would change it to `{{ \"data:image\/jpeg;base64,\" + table.data.imageString }}` or `{{ \"data:image\/jpeg;base64,\" + query.data.imageString }}`. END"}
{"prompt":"Text components\n\n###\n\n","completion":" You can also display an image in a Text component using the \"Render as HTML\" toggle. Start by dragging a text component onto the canvas: END"}
{"prompt":"You can also display an image in a Text component using the \"Render as HTML\" toggle. Start by dragging a text component onto the canvas:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e55ed84-Screen_Shot_2020-02-28_at_4.38.28_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e55ed84-Screen_Shot_2020-02-28_at_4.38.28_PM.png)\n\n###\n\n","completion":" Click on the image (or click on the \"Inspector\" tab in the right sidebar) and toggle the \"Render as HTML\" parameter on. END"}
{"prompt":"Click on the image (or click on the \"Inspector\" tab in the right sidebar) and toggle the \"Render as HTML\" parameter on.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a9134eb-Screen_Shot_2020-02-28_at_4.40.35_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a9134eb-Screen_Shot_2020-02-28_at_4.40.35_PM.png)\n\n###\n\n","completion":" Add an image tag into the \"Value\" field (`<img>`), and from there you can put whatever you want in the `src=` field: a URL or a Base64 string. If we wanted to do the latter, we can add the same reference to the Base64 string as above into the `src=`. So for our mirror image, we should use `<img src=\"data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2...\"`>. And if we're referencing an image from a table or query, we'd use something like `<img src={{ \"data:image\/jpeg;base64,\" + query.data.imageString }}>`. END"}
{"prompt":"Table components\n\n###\n\n","completion":" You can use the same \"Render as HTML\" format for rendering images in Table components. After you've pulled data into your table using a query (let's say you used `{{ query1.data }}`), you can toggle individual columns to render their results as HTML. Click on the table component, head to the right sidebar, and click on the column that contains your image: END"}
{"prompt":"You can use the same \"Render as HTML\" format for rendering images in Table components. After you've pulled data into your table using a query (let's say you used `{{ query1.data }}`), you can toggle individual columns to render their results as HTML. Click on the table component, head to the right sidebar, and click on the column that contains your image:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1a9d05a-Screen_Shot_2020-02-28_at_4.48.03_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1a9d05a-Screen_Shot_2020-02-28_at_4.48.03_PM.png)\n\n###\n\n","completion":" Like with the Text component above, you can use `<img src={{ imageURL }}\">` if you have a URL for the image you want to display, or `<img src={{ \"data:image\/jpeg;base64,\" + imageString }}>` to reference your image in Base64. In the table component though, we'll use the `self.` property to reference the current column, so the value for the value in the \"Mapper\" field should be `<img src={{ \"data:image\/jpeg;base64,\" + self.imageString }}>`. This makes sure you're referencing properties of the cell you're working with instead of something global. END"}
{"prompt":"Image sizing\n\n###\n\n","completion":" **For Image components** END"}
{"prompt":"**For Image components**\n\n###\n\n","completion":" If you're using an image component, the image size will scale to the size of your component. So if you want to make the image larger you can drag the corner outward, and if you want to make it smaller you can drag it inwards. Currently, Retool doesn't support custom widths and heights for images rendered via Image components. END"}
{"prompt":"If you're using an image component, the image size will scale to the size of your component. So if you want to make the image larger you can drag the corner outward, and if you want to make it smaller you can drag it inwards. Currently, Retool doesn't support custom widths and heights for images rendered via Image components.\n\n###\n\n","completion":" **For Text and Table components** END"}
{"prompt":"**For Text and Table components**\n\n###\n\n","completion":" If you're rendering your image via HTML in a Text or Table component, you're in luck: you can set your image's width and height with that same HTML! Here's an example of what we'd put in the Text component's value field: END"}
{"prompt":"If you're rendering your image via HTML in a Text or Table component, you're in luck: you can set your image's width and height with that same HTML! Here's an example of what we'd put in the Text component's value field:\n\n###\n\n","completion":" `<img src=\"your-url.com\/image\" width=\"200px\" height=\"200px\">` END"}
{"prompt":"`<img src=\"your-url.com\/image\" width=\"200px\" height=\"200px\">`\n\n###\n\n","completion":" You can also use percentage widths: END"}
{"prompt":"You can also use percentage widths:\n\n###\n\n","completion":" `<img src=\"your-url.com\/image\" width=\"80%\" height=\"80%\">` END"}
{"prompt":"`<img src=\"your-url.com\/image\" width=\"80%\" height=\"80%\">`\n\n###\n\n","completion":" The percentage values will get evaluated as a percentage of the image's container, which will be the Text or Table component that you're using. END"}
{"prompt":"title: \"Dynamic JSON\"\ncategorySlug: \"legacy\"\nexcerpt: \"Learn how to use dynamic JSON in your apps.\"\nhidden: true\n\n###\n\n","completion":" In areas where Retool expects an `object` type input, you can use a superset of JSON to specify the object. Here are some examples of expressions that work (click on the `JSON` tab to see the evaluation): END"}
{"prompt":"Normal ES5 JSON\n\n###\n\n","completion":" Single quotes are supported. END"}
{"prompt":"Single quotes are supported.\n\n###\n\n","completion":" Keys do not need to be in double quotes. END"}
{"prompt":"Keys do not need to be in double quotes.\n\n###\n\n","completion":" Numbers with decimals are supported. END"}
{"prompt":"Numbers with decimals are supported.\n\n###\n\n","completion":" Trailing commas, single-line, and multi-line comments are allowed. END"}
{"prompt":"Dynamic properties using `{{ }}`\n\n###\n\n","completion":" You can use any valid expression inside {{ }} in your JSON. END"}
{"prompt":"Dynamically adding properties to an object\n\n###\n\n","completion":" Remove a key by setting the value to `undefined`. END"}
{"prompt":"title: \"Connect to Amazon DynamoDB\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your Amazon DynamoDB database to Retool.\"\nhidden: false\n\n###\n\n","completion":" DynamoDB is Amazon's non-relational managed database. Retool connects with DynamoDB, allowing you to access your data from your internal tools. END"}
{"prompt":"Connecting DynamoDB\n\n###\n\n","completion":" First, go to [IAM](https:\/\/console.aws.amazon.com\/iam\/home) and create a new user called `retool-dynamodb`. Only enable \"programmatic access\". END"}
{"prompt":"First, go to [IAM](https:\/\/console.aws.amazon.com\/iam\/home) and create a new user called `retool-dynamodb`. Only enable \"programmatic access\".\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/baa70a7-Screen_Shot_2018-08-30_at_9.24.22_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/baa70a7-Screen_Shot_2018-08-30_at_9.24.22_PM.png)\n\n###\n\n","completion":" Click \"next\" to grant the account permissions. It's easiest to grant the account full DynamoDB permissions, but you can restrict permissions further. You'll need to create a new policy and attach this policy to the user. Here's an example JSON IAM policy, which you can modify to your security needs. END"}
{"prompt":"Click \"next\" to grant the account permissions. It's easiest to grant the account full DynamoDB permissions, but you can restrict permissions further. You'll need to create a new policy and attach this policy to the user. Here's an example JSON IAM policy, which you can modify to your security needs.\n\n###\n\n","completion":" Once you've created the user, head back to Retool. To connect to DynamoDB, you will need your AWS Access Key, Secret Key, and the region of your DynamoDB instance. Go to _Resources_, click _Add_, and select DynamoDB from the options. END"}
{"prompt":"Once you've created the user, head back to Retool. To connect to DynamoDB, you will need your AWS Access Key, Secret Key, and the region of your DynamoDB instance. Go to _Resources_, click _Add_, and select DynamoDB from the options.\n\n###\n\n","completion":" ![Configuration screen for DynamoDB.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b5fc1d2-dynamo_create_screen.png) END"}
{"prompt":"![Configuration screen for DynamoDB.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b5fc1d2-dynamo_create_screen.png)\n\n###\n\n","completion":" After picking the region and filling out your credentials, press _Save_ to test the connection. Now your resource will be available for queries. END"}
{"prompt":"Query DynamoDB\n\n###\n\n","completion":" You can now select your new DynamoDB resource from the **Resource** dropdown when creating queries in your Retool apps. END"}
{"prompt":"You can now select your new DynamoDB resource from the **Resource** dropdown when creating queries in your Retool apps.\n\n###\n\n","completion":" You can write DynamoDB queries using the default GUI mode and entering values into the provided input fields. If you need greater flexibility, you can enable the JSON parameter editor to construct queries using JSON. This is useful if you need to copy queries from existing Node projects or would like to dynamically generate query JSON based on other Retool properties. END"}
{"prompt":"Query syntax\n\n###\n\n","completion":" The DynamoDB query editor is powered by [DynamoDB's document client](https:\/\/docs.aws.amazon.com\/AWSJavaScriptSDK\/latest\/AWS\/DynamoDB\/DocumentClient.html). The document client interface makes it easier for JavaScript apps to interact with DynamoDB by abstracting away the notion of attribute values and using native JavaScript types. The following examples demonstrate how to interact with DynamoDB using the [AWS CLI](https:\/\/aws.amazon.com\/cli\/) and what the same interaction looks like on Retool. END"}
{"prompt":"PutItem operation\n\n###\n\n","completion":" New items are added to a DynamoDB collection using the `putItem` operation. This is performed with the AWS CLI using `put-item`. END"}
{"prompt":"New items are added to a DynamoDB collection using the `putItem` operation. This is performed with the AWS CLI using `put-item`.\n\n###\n\n","completion":" Using retool's DynamoDB query editor, you specify the table, the **putItem** method, and include necessary parameter values. END"}
{"prompt":"Using retool's DynamoDB query editor, you specify the table, the **putItem** method, and include necessary parameter values.\n\n###\n\n","completion":" ![DynamoDB putItem query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdynamodb%2F8b34e3fa-065f-4feb-9f68-a7481376100c.png) END"}
{"prompt":" ![DynamoDB putItem query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdynamodb%2F8b34e3fa-065f-4feb-9f68-a7481376100c.png)\n\n###\n\n","completion":" If you are using the JSON parameter editor, you would provide much of this information as JSON. END"}
{"prompt":"Query operation\n\n###\n\n","completion":" You use the `query` operation to look up and filter items in a DynamoDB collection. This is performed with the AWS CLI using `query`. END"}
{"prompt":"You use the `query` operation to look up and filter items in a DynamoDB collection. This is performed with the AWS CLI using `query`.\n\n###\n\n","completion":" Using retool's DynamoDB query editor, you specify the table, the **query** method, and include necessary parameter and expression values. END"}
{"prompt":"Using retool's DynamoDB query editor, you specify the table, the **query** method, and include necessary parameter and expression values.\n\n###\n\n","completion":" ![Query a DynamoDB collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdynamodb%2F036459b1-3819-4c21-b92b-98e0be17ce29.png) END"}
{"prompt":"![Query a DynamoDB collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdynamodb%2F036459b1-3819-4c21-b92b-98e0be17ce29.png)\n\n###\n\n","completion":" As before, you would provide much of this information as JSON if you are using the JSON parameter editor. END"}
{"prompt":"As before, you would provide much of this information as JSON if you are using the JSON parameter editor.\n\n###\n\n","completion":" Queries using the `query` or `scan` methods return the array of results within the `queryName.data.Items` key. END"}
{"prompt":"Queries using the `query` or `scan` methods return the array of results within the `queryName.data.Items` key.\n\n###\n\n","completion":" Refer to the [AWS DynamoDB documentation](https:\/\/docs.aws.amazon.com\/amazondynamodb\/latest\/developerguide\/WorkingWithDynamo.html) for more information on querying DynamoDB. END"}
{"prompt":"Example: How to build a DynamoDB admin panel\n\n###\n\n","completion":" In this video, you'll find a 15 minute walk through on how to build an admin panel connected to a DynamoDB instance. END"}
{"prompt":"In this video, you'll find a 15 minute walk through on how to build an admin panel connected to a DynamoDB instance.\n\n###\n\n","completion":" We cover implementing create, read, update and delete functionality in the app. END"}
{"prompt":"We cover implementing create, read, update and delete functionality in the app.\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/Zds3lP3CCHc%3Ffeature%3Doembed&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DZds3lP3CCHc&image=https%3A\/\/i.ytimg.com\/vi\/Zds3lP3CCHc\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?v=Zds3lP3CCHc&feature=emb_title\",\n\"title\": \"How to build a DynamoDB admin panel \/ GUI \/ client in 15 minutes\",\n\"favicon\": \"https:\/\/www.youtube.com\/s\/desktop\/406de18b\/img\/favicon.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/Zds3lP3CCHc\/hqdefault.jpg\"\n}\n[\/block] END"}
{"prompt":"title: \"Connect to Elasticsearch\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your Elasticsearch data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Elasticsearch](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/current\/index.html) and make it available as a  [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Elasticsearch data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Elasticsearch resource, you need: END"}
{"prompt":"Allow Retool to access Elasticsearch\n\n###\n\n","completion":" If Elasticsearch is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Elasticsearch** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Elasticsearch** resource type.\n\n###\n\n","completion":" ![Elasticsearch select](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/3134459b-ac2c-443c-aa86-cce1ee38ba9c.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Elasticsearch resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"Specify a name and location for the Elasticsearch resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings.\n\n###\n\n","completion":" ![Elasticsearch resource creation page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/3a1b37e6-5cdb-4865-ae60-9badc127777b.png) END"}
{"prompt":"Authentication\n\n###\n\n","completion":" You can authenticate into your Elasticsearch cluster with **Basic Auth** or **API Key Auth**. END"}
{"prompt":"API key authentication\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Elasticsearch. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Elasticsearch resource is now ready to use. To interact with Elasticsearch data, select the resource in the query editor. END"}
{"prompt":"title: \"Enable SSH tunneling to resources\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn how to enable SSH tunnels to your data sources.\"\nhidden: false\n\n###\n\n","completion":" Retool supports SSH tunneling for the following data sources if they are hosted on a private network: END"}
{"prompt":"Configure SSH tunneling\n\n###\n\n","completion":" You can configure SSH tunneling when creating a new resource or update the configuration of an existing resource. To update an existing resource, navigate to the **Resources** tab in your Retool organization settings, then select the resource to update. END"}
{"prompt":"You can configure SSH tunneling when creating a new resource or update the configuration of an existing resource. To update an existing resource, navigate to the **Resources** tab in your Retool organization settings, then select the resource to update.\n\n###\n\n","completion":" ![Enable SSH tunnel from resource configuration](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/9cacc309-a60d-46b6-bc1c-7c96d893d7a3.png) END"}
{"prompt":"![Enable SSH tunnel from resource configuration](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/9cacc309-a60d-46b6-bc1c-7c96d893d7a3.png)\n\n###\n\n","completion":" To authorize Retool to connect to the host, add the contents of the public keys from step two on a new line in `\/home\/retool\/.ssh\/authorized_keys`. END"}
{"prompt":"To authorize Retool to connect to the host, add the contents of the public keys from step two on a new line in `\/home\/retool\/.ssh\/authorized_keys`.\n\n###\n\n","completion":" If you want to minimize access to your servers, add Retool's [IP addresses to your allowlist](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). END"}
{"prompt":"SSH tunneling with OpenSSH 8.8 and newer\n\n###\n\n","completion":" Retool's public key is generated using `ssh-rsa`. This was deprecated in [OpenSSH 8.8](https:\/\/www.openssh.com\/txt\/release-8.8). If you are using this or a newer version of OpenSSH, add the following line to your `sshd_config` file to allow this type of key: END"}
{"prompt":"Retool's public key is generated using `ssh-rsa`. This was deprecated in [OpenSSH 8.8](https:\/\/www.openssh.com\/txt\/release-8.8). If you are using this or a newer version of OpenSSH, add the following line to your `sshd_config` file to allow this type of key:\n\n###\n\n","completion":" Ensure that you restart your SSH server once you save your changes. END"}
{"prompt":"Self-hosted Retool deployments\n\n###\n\n","completion":" The above steps should also work in most on-premise deployments - Retool in most cases will auto-provision your environment with a keypair. END"}
{"prompt":"The above steps should also work in most on-premise deployments - Retool in most cases will auto-provision your environment with a keypair.\n\n###\n\n","completion":" Retool on-premise also supports the use of custom ssh keys and usernames. Inside your `retool_onpremise` git repository, there is \"keys\" directory. This directory is mounted as a volume into the Retool container. You may now put any private key you wish to use from within Retool into this directory. For example, if you wanted to use `mykey.pem`, you would place it under the `keys` directory, and then in the interface for connecting my database, you would use something resembling below. END"}
{"prompt":"Retool on-premise also supports the use of custom ssh keys and usernames. Inside your `retool_onpremise` git repository, there is \"keys\" directory. This directory is mounted as a volume into the Retool container. You may now put any private key you wish to use from within Retool into this directory. For example, if you wanted to use `mykey.pem`, you would place it under the `keys` directory, and then in the interface for connecting my database, you would use something resembling below.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/612cf0c-Screen_Shot_2018-08-09_at_9.00.45_AM.png) END"}
{"prompt":"Debug common connection errors\n\n###\n\n","completion":" This error usually means Retool is able to reach the SSH host, but can't authenticate. Confirm that you have created a _retool_ user and the Retool public key has been added to your authorized keys. END"}
{"prompt":"This error usually means Retool is able to reach the SSH host, but can't authenticate. Confirm that you have created a _retool_ user and the Retool public key has been added to your authorized keys.\n\n###\n\n","completion":" This error occurs when the SSH tunneling config is working but the host\/port you tried to connect to has refused the connection. END"}
{"prompt":"This error occurs when the SSH tunneling config is working but the host\/port you tried to connect to has refused the connection.\n\n###\n\n","completion":" This error usually occurs when you run into a firewall or other configurations aren't properly setup. For example, trying to connect Postgres to an HTTP port, incorrect SSH tunnel configs or the database host\/port are wrong. Try going through the steps below to identify the specific error: END"}
{"prompt":"title: \"Environment variables\"\ncategorySlug: \"self-hosted-reference\"\nexcerpt: \"Environment variables for Self-hosted Retool deployments.\"\nhidden: false\n\n###\n\n","completion":" Environment variables control or override certain functions and characteristics of [Self-hosted Retool](\/docs\/self-hosted) instances. Some Retool features require you to set environment variables, such as [SSO](\/docs\/sso-google-and-okta) or [Source Control](\/docs\/source-control). END"}
{"prompt":"Environment variables control or override certain functions and characteristics of [Self-hosted Retool](\/docs\/self-hosted) instances. Some Retool features require you to set environment variables, such as [SSO](\/docs\/sso-google-and-okta) or [Source Control](\/docs\/source-control).\n\n###\n\n","completion":" You should only configure environment variables when needed. You must restart your instance after setting any variables for them to take effect. END"}
{"prompt":"General\n\n###\n\n","completion":" General environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"BASE_DOMAIN\n\n###\n\n","completion":" The full URL of your Retool deployment for user invitations and password resets. This also needs to be set if you dynamically set callback URLs on protected resources. END"}
{"prompt":"The full URL of your Retool deployment for user invitations and password resets. This also needs to be set if you dynamically set callback URLs on protected resources.\n\n###\n\n","completion":" If unset, Retool attempts to determine the base domain automatically but cannot do so if your deployment is behind a proxy server. END"}
{"prompt":"CUSTOM_API_KEY\n\n###\n\n","completion":" A Custom API key to override Retool-generated API keys. END"}
{"prompt":"CUSTOM_RETOOL_SANDBOX_RESTRICTIONS\n\n###\n\n","completion":" The JavaScript sandbox restrictions to allow. Specify space-separated values for multiple restrictions. END"}
{"prompt":"The JavaScript sandbox restrictions to allow. Specify space-separated values for multiple restrictions.\n\n###\n\n","completion":" If unset, no restrictions are allowed. END"}
{"prompt":"DEBUG\n\n###\n\n","completion":" Whether to enable verbose logging for debugging purposes. Set `DEBUG` to `1` to enable verbose logging. END"}
{"prompt":"DISABLE_INTERCOM\n\n###\n\n","completion":" Disable Retool's support widget in the frontend. You can still contact Retool at support@retool.com. END"}
{"prompt":"DISABLE_MEMORY_AND_CPU_USAGE_LOGGING\n\n###\n\n","completion":" Disable logging of CPU and memory usage. END"}
{"prompt":"DISABLE_PUBLIC_PAGES\n\n###\n\n","completion":" Disable public access of Retool apps. END"}
{"prompt":"DISABLE_FORWARDABLE_COOKIE_DECODING\n\n###\n\n","completion":" Disable automatic cookie decoding when using forwardable cookies. END"}
{"prompt":"DOMAINS\n\n###\n\n","completion":" Used to set EntityID in SAML requests and obtain SSL certificate when setting up HTTPS. END"}
{"prompt":"HIDE_PROD_AND_STAGING_TOGGLES\n\n###\n\n","completion":" Hide **Production** and **Staging** toggles in creator and user mode interfaces. END"}
{"prompt":"HTML_ESCAPE_RETOOL_EXPRESSIONS\n\n###\n\n","completion":" Escape HTML expressions within curly braces (`{{ }}`). If unset, the default is `false`. END"}
{"prompt":"LOG_AUDIT_EVENTS\n\n###\n\n","completion":" Log all audit events. END"}
{"prompt":"LOG_LEVEL\n\n###\n\n","completion":" The level of information logged to stdout. Specify space-separated values for multiple restrictions. END"}
{"prompt":"NODE_ENV\n\n###\n\n","completion":" The environment of the instance. Must always be set to `production`. END"}
{"prompt":"NODE_TLS_REJECT_UNAUTHORIZED\n\n###\n\n","completion":" When set to 0, disables certificate validation for TLS connections. This setting is insecure and not recommended for production instances. END"}
{"prompt":"NUM_WORKERS\n\n###\n\n","completion":" The number of workers for the instance. END"}
{"prompt":"RETOOL_EXPOSED\\_{NAME}\n\n###\n\n","completion":" Use the `RETOOL_EXPOSED_` prefix to [store secrets](https:\/\/docs.retool.com\/docs\/secret-management-using-environment-variables) that you can use when configuring resources. END"}
{"prompt":"Authentication\n\n###\n\n","completion":" Authentication environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"CLIENT_ID\n\n###\n\n","completion":" A Google OAuth client app ID for OAuth-based authentication with Google (e.g., [Google SSO](https:\/\/docs.retool.com\/docs\/configure-google-sign-in) or using a Google Sheets resource). END"}
{"prompt":"CLIENT_SECRET\n\n###\n\n","completion":" A Google OAuth client app secret for OAuth-based authentication with Google (e.g., [Google SSO](https:\/\/docs.retool.com\/docs\/configure-google-sign-in) or using a Google Sheets resource). END"}
{"prompt":"CUSTOM_LOGOUT_REDIRECT\n\n###\n\n","completion":" A URL that users are redirected to after logging out of Retool. END"}
{"prompt":"CUSTOM_OAUTH2_SSO_ACCESS_TOKEN_LIFESPAN_MINUTES\n\n###\n\n","completion":" The lifespan, in minutes, of custom OpenID provider tokens. If unset, the default lifespan is `120`. END"}
{"prompt":"CUSTOM_OAUTH2_SSO_AUDIENCE\n\n###\n\n","completion":" An identifier for a resource to which users should have access upon completion of an OpenID authorization process. END"}
{"prompt":"CUSTOM_OAUTH2_SSO_JWT_ROLES_KEY\n\n###\n\n","completion":" An array of strings where each string represents an OpenID group name. This setting is used with `CUSTOM_OAUTH2_SSO_ROLE_MAPPING` to map groups to Retool permission groups. END"}
{"prompt":"CUSTOM_OAUTH2_SSO_ROLE_MAPPING\n\n###\n\n","completion":" The mapping of roles from your OpenID provider to Retool permission groups. END"}
{"prompt":"CUSTOM_OAUTH2_SSO_USERINFO_URL\n\n###\n\n","completion":" The endpoint for Retool make an additional request for a [fat token](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#thin-tokens-and-fat-tokens) containing all available claims from your OpenID SSO provider. END"}
{"prompt":"DEFAULT_GROUP_FOR_DOMAINS\n\n###\n\n","completion":" The default Retool user group for a Google SSO domain. You can specify space-separated values to map multiple domain and group pairs. END"}
{"prompt":"The default Retool user group for a Google SSO domain. You can specify space-separated values to map multiple domain and group pairs.\n\n###\n\n","completion":" Default groups only applies to new users who sign up using SSO, not existing users signing in. END"}
{"prompt":"DISABLE_USER_PASS_LOGIN\n\n###\n\n","completion":" Disable username and password authentication. If true, users can only log in using SSO. END"}
{"prompt":"INVITES_PER_DAY\n\n###\n\n","completion":" The number of invites that can be sent to users. If unset, the default is `50`. END"}
{"prompt":"The number of invites that can be sent to users. If unset, the default is `50`.\n\n###\n\n","completion":" Use this environment variable if you encounter rate limits on invites. END"}
{"prompt":"JWT_SECRET\n\n###\n\n","completion":" The JWT secret token to sign requests for authentication with Retool's backend API server. If changed, all active user login sessions are invalidated. END"}
{"prompt":"PRESERVE_PASSWORDS_FIRST_GOOGLE_LOGIN\n\n###\n\n","completion":" Prevent Retool resetting your password when logging in with Google for the first time. END"}
{"prompt":"RESTRICTED_DOMAIN\n\n###\n\n","completion":" Restrict users from logging in unless they use SSO for the specified domain. This value must match your email domain. Specify comma-separated values for multiple domains. END"}
{"prompt":"Restrict users from logging in unless they use SSO for the specified domain. This value must match your email domain. Specify comma-separated values for multiple domains.\n\n###\n\n","completion":" This removes the Retool username and password fields from the sign in page. When you deploy Self-hosted Retool, you must first sign up with a username and password. You can then enable SSO-only logins with this variable. END"}
{"prompt":"SAML_FIRST_NAME_ATTRIBUTE\n\n###\n\n","completion":" The first name attribute in the SAML response. If unset, the default is `firstName`. END"}
{"prompt":"SAML_LAST_NAME_ATTRIBUTE\n\n###\n\n","completion":" The first name attribute in the SAML response. If unset, the default is `lastName`. END"}
{"prompt":"SAML_GROUPS_ATTRIBUTE\n\n###\n\n","completion":" The groups attribute in the SAML response. If unset, the default is `groups`. END"}
{"prompt":"SAML_SYNC_GROUP_CLAIMS\n\n###\n\n","completion":" Sync Retool group memberships using the `retool-` prefix with the groups listed in `SAML_GROUPS_ATTRIBUTE`. END"}
{"prompt":"Sync Retool group memberships using the `retool-` prefix with the groups listed in `SAML_GROUPS_ATTRIBUTE`.\n\n###\n\n","completion":" The prefix is not shown in the Retool interface. END"}
{"prompt":"SCIM_AUTH_TOKEN\n\n###\n\n","completion":" A secret token shared with your SSO provider to provision user accounts. END"}
{"prompt":"SCIM_LOG_FULL_REQUESTS\n\n###\n\n","completion":" Log SCIM requests to the Retool API container logs. END"}
{"prompt":"SENDING_INVITES_WITH_EMAIL_DISABLED\n\n###\n\n","completion":" Allow user invites without pinging Retool's user invitation server. You must enable this if you have an airgapped deployment. END"}
{"prompt":"TRIGGER_OAUTH_2_SSO_LOGIN_AUTOMATICALLY\n\n###\n\n","completion":" Automatically start the Oauth 2 SSO login flow when users navigate to your Retool instance. END"}
{"prompt":"Automatically start the Oauth 2 SSO login flow when users navigate to your Retool instance.\n\n###\n\n","completion":" Use either `TRIGGER_OAUTH_2_SSO_LOGIN_AUTOMATICALLY` or `TRIGGER_SAML_LOGIN_AUTOMATICALLY`, you cannot enable both. END"}
{"prompt":"TRIGGER_SAML_LOGIN_AUTOMATICALLY\n\n###\n\n","completion":" Automatically start the SAML SSO login flow when users navigate to your Retool instance. END"}
{"prompt":"Automatically start the SAML SSO login flow when users navigate to your Retool instance.\n\n###\n\n","completion":" Use either `TRIGGER_SAML_LOGIN_AUTOMATICALLY` or `TRIGGER_OAUTH_2_SSO_LOGIN_AUTOMATICALLY`, you cannot enable both. END"}
{"prompt":"USE_SHORT_SESSIONS\n\n###\n\n","completion":" Restrict session length to 12 hours. If unset, default session length is one week. END"}
{"prompt":"Cookies\n\n###\n\n","completion":" Cookies environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"COOKIE_INSECURE\n\n###\n\n","completion":" Whether to send authentication requests using insecure cookies. Set `COOKIE_INSECURE` to `true` if your Retool deployment uses a non-HTTPS URL or IP address. This is typically used when a Retool deployment is not yet configured with a custom domain. END"}
{"prompt":"Whether to send authentication requests using insecure cookies. Set `COOKIE_INSECURE` to `true` if your Retool deployment uses a non-HTTPS URL or IP address. This is typically used when a Retool deployment is not yet configured with a custom domain.\n\n###\n\n","completion":" Set `COOKE_INSECURE` to `false` if you need to embed private Retool applications. END"}
{"prompt":"FORWARDABLE_SAME_DOMAIN_COOKIES_ALLOWLIST\n\n###\n\n","completion":" When you have cookies scoped to your primary domain, you can use this variable to include those cookies in requests from the subdomain you host Retool on to your primary domain. END"}
{"prompt":"Git syncing\n\n###\n\n","completion":" Git syncing environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"DISABLE_PROTECTED_APPS_SYNCING\n\n###\n\n","completion":" Disable polling of GitHub and syncing changes from the Source Control repository. This only pauses the syncing process so apps remain protected. END"}
{"prompt":"DISABLE_GIT_SYNCING\n\n###\n\n","completion":" Disable git syncing and stop pulling changes from the connected repository. END"}
{"prompt":"Queries\n\n###\n\n","completion":" Queries environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"CLIENT_MAX_BODY_SIZE\n\n###\n\n","completion":" On the `https-portal` container, specify the maximum request body size, in bytes, megabytes (`M`), or kilobytes (`K`). Any upload that exceeds this limit results in a 413 HTTP error. Set to `0` to allow bodies of any size. END"}
{"prompt":"DBCONNECTOR_NUM_WORKERS\n\n###\n\n","completion":" The number of workers for the instance, with a maximum of 3. If unset, defaults to 1 or the number of CPUs. END"}
{"prompt":"DBCONNECTOR_POSTGRES_POOL_MAX_SIZE\n\n###\n\n","completion":" The PostgreSQL connection pool maximum size. If unset, the default is `10`. END"}
{"prompt":"DBCONNECTOR_QUERY_TIMEOUT_MS\n\n###\n\n","completion":" The duration, in milliseconds, for queries to run before timing out. If unset, the default duration is `120000`. END"}
{"prompt":"The duration, in milliseconds, for queries to run before timing out. If unset, the default duration is `120000`.\n\n###\n\n","completion":" If your Retool deployment is behind a load balancer, increase the load balancer's timeout by a proportionate amount. END"}
{"prompt":"ENABLE_CUSTOM_PLATFORM_LEVEL_AUTH_STEPS\n\n###\n\n","completion":" Allow configuration of custom authentication steps for users to perform whenever they log into Retool. END"}
{"prompt":"HIDE_ALL_HEADERS_IN_AUDIT_LOG_EVENTS\n\n###\n\n","completion":" Prevent all query headers and cookies from being added to audit log entries. END"}
{"prompt":"KEEPALIVE_TIMEOUT\n\n###\n\n","completion":" The keep alive timeout for queries, in seconds. Queries that exceed this limit results in a 514 HTTP error. END"}
{"prompt":"PROXY_CONNECT_TIMEOUT\n\n###\n\n","completion":" The proxy connect timeout for queries, in seconds. Queries that exceed this limit results in a 514 HTTP error. END"}
{"prompt":"PROXY_SEND_TIMEOUT\n\n###\n\n","completion":" The proxy send timeout for queries, in seconds. Queries that exceed this limit results in a 514 HTTP error. END"}
{"prompt":"PROXY_READ_TIMEOUT\n\n###\n\n","completion":" The proxy read timeout for queries, in seconds. Queries that exceed this limit results in a 514 HTTP error. END"}
{"prompt":"Push notifications\n\n###\n\n","completion":" Environment variables to configure push notifications for Retool Mobile. END"}
{"prompt":"MOBILE_PUSH_NOTIFIER_API_TOKEN\n\n###\n\n","completion":" Your push notification API token that is provided by Retool. END"}
{"prompt":"MOBILE_PUSH_NOTIFIER_HOST\n\n###\n\n","completion":" The URL for the push notification service. Set to `https:\/\/spb8yl7d3j.execute-api.us-west-2.amazonaws.com`. END"}
{"prompt":"Redis\n\n###\n\n","completion":" Redis environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"REDIS_DB\n\n###\n\n","completion":" The database number for read and write operations, between `0` and `15`. END"}
{"prompt":"The database number for read and write operations, between `0` and `15`.\n\n###\n\n","completion":" If unsure, set to the default port of `0`. END"}
{"prompt":"REDIS_HOST\n\n###\n\n","completion":" The hostname of the Redis reader endpoint that connects the Redis instance as a caching layer. END"}
{"prompt":"REDIS_PASSWORD\n\n###\n\n","completion":" The password for the Redis instance. END"}
{"prompt":"REDIS_PORT\n\n###\n\n","completion":" The port number for the Redis instance. By default, this should be 6379. END"}
{"prompt":"REDIS_TLS\n\n###\n\n","completion":" Connect to the Redis instance if using TLS. END"}
{"prompt":"Resources\n\n###\n\n","completion":" Resources environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"ENABLE_CLIENT_SIDE_CUSTOM_AUTH_BROWSER_CALLS\n\n###\n\n","completion":" Allow editors to configure custom authentication steps for resources that make REST API calls directly from the browser. If true, these requests include all browser credentials, even cross-origin calls. END"}
{"prompt":"ENCRYPTION_KEY\n\n###\n\n","completion":" Encrypts data stored in the PostgreSQL database (e.g., database credentials, SSH keys, etc). END"}
{"prompt":"Encrypts data stored in the PostgreSQL database (e.g., database credentials, SSH keys, etc).\n\n###\n\n","completion":" Make sure to keep track of this key in a location outside of your Retool instance(s). If you change this key, you will lose access to all resources that were created before the change. END"}
{"prompt":"USE_GCM_ENCRYPTION\n\n###\n\n","completion":" Use the AES-192-GCM authenticated encryption method. If unset, default encryption of AES-192-CBC is used. END"}
{"prompt":"Use the AES-192-GCM authenticated encryption method. If unset, default encryption of AES-192-CBC is used.\n\n###\n\n","completion":" If `USE_GCM_ENCRYPTION` is in use, `ENCRYPTION_KEY` must be 24 characters in length. If you change this setting, you will lose access to all resources encrypted using the other algorithm. END"}
{"prompt":"Source Control\n\n###\n\n","completion":" Source Control environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"AZURE_REPOS_USER\n\n###\n\n","completion":" The admin user or service account for the Azure DevOps organization. END"}
{"prompt":"AZURE_REPOS_PERSONAL_ACCESS_TOKEN\n\n###\n\n","completion":" The user's personal access token, under [https:\/\/dev.azure.com\/{AZURE_REPOS_USER}\/_usersSettings\/tokens](https:\/\/dev.azure.com\/{AZURE_REPOS_USER}\/_usersSettings\/tokens) END"}
{"prompt":"AZURE_REPOS_ORGANIZATION\n\n###\n\n","completion":" The name of the Azure DevOps organization. END"}
{"prompt":"AZURE_REPOS_REPO\n\n###\n\n","completion":" The name of the Azure Repos repository. END"}
{"prompt":"AZURE_REPOS_MAIN_BRANCH\n\n###\n\n","completion":" The default branch for the Azure Repos repository. END"}
{"prompt":"BITBUCKET_USER\n\n###\n\n","completion":" The Bitbucket [username](https:\/\/support.atlassian.com\/bitbucket-cloud\/docs\/access-your-personal-settings). END"}
{"prompt":"BITBUCKET_APP_PASSWORD\n\n###\n\n","completion":" The Bitbucket app password. END"}
{"prompt":"BITBUCKET_WORKSPACE\n\n###\n\n","completion":" The name of the Bitbucket workspace. END"}
{"prompt":"BITBUCKET_REPO\n\n###\n\n","completion":" The name of the Bitbucket repository. END"}
{"prompt":"BITBUCKET_MAIN_BRANCH\n\n###\n\n","completion":" The default branch for the Bitbucket repository. END"}
{"prompt":"CODE_COMMIT_AWS_ACCESS_KEY_ID\n\n###\n\n","completion":" The [AWS CodeCommit](https:\/\/docs.retool.com\/docs\/source-control-with-aws-codecommit) Access Key ID. END"}
{"prompt":"CODE_COMMIT_AWS_SECRET_ACCESS_KEY\n\n###\n\n","completion":" The [AWS CodeCommit](https:\/\/docs.retool.com\/docs\/source-control-with-aws-codecommit) Secret Access Key. END"}
{"prompt":"CODE_COMMIT_AWS_DEFAULT_REGION\n\n###\n\n","completion":" The [AWS CodeCommit](https:\/\/docs.retool.com\/docs\/source-control-with-aws-codecommit) repository region. END"}
{"prompt":"CODE_COMMIT_REPOSITORY_NAME\n\n###\n\n","completion":" The name of the [AWS CodeCommit](https:\/\/docs.retool.com\/docs\/source-control-with-aws-codecommit) repository. END"}
{"prompt":"CODE_COMMIT_MAIN_BRANCH\n\n###\n\n","completion":" The default branch for the [AWS CodeCommit](https:\/\/docs.retool.com\/docs\/source-control-with-aws-codecommit) repository. END"}
{"prompt":"CODE_COMMIT_HTTPS_USERNAME\n\n###\n\n","completion":" The [AWS CodeCommit](https:\/\/docs.retool.com\/docs\/source-control-with-aws-codecommit) HTTPS username. END"}
{"prompt":"CODE_COMMIT_HTTPS_PASSWORD\n\n###\n\n","completion":" The [AWS CodeCommit](https:\/\/docs.retool.com\/docs\/source-control-with-aws-codecommit) HTTPS password. END"}
{"prompt":"GITHUB_APP_ID\n\n###\n\n","completion":" The [GitHub](https:\/\/docs.retool.com\/docs\/source-control-with-github) App ID. END"}
{"prompt":"GITHUB_APP_INSTALLATION_ID\n\n###\n\n","completion":" The [GitHub](https:\/\/docs.retool.com\/docs\/source-control-with-github) App installation ID. END"}
{"prompt":"GITHUB_APP_PRIVATE_KEY\n\n###\n\n","completion":" The base64-encoded value of the generated [GitHub](https:\/\/docs.retool.com\/docs\/source-control-with-github) private key. This value should only span one line. END"}
{"prompt":"The base64-encoded value of the generated [GitHub](https:\/\/docs.retool.com\/docs\/source-control-with-github) private key. This value should only span one line.\n\n###\n\n","completion":" If you are using a Kubernetes Secret, you must base64 encode this value twice. END"}
{"prompt":"GITLAB_URL\n\n###\n\n","completion":" The base [GitLab](https:\/\/docs.retool.com\/docs\/source-control-with-gitlab) URL. END"}
{"prompt":"GITLAB_PROJECT_ACCESS_TOKEN\n\n###\n\n","completion":" The [GitLab](https:\/\/docs.retool.com\/docs\/source-control-with-gitlab) project access token for authentication. END"}
{"prompt":"GITLAB_PROJECT_ID\n\n###\n\n","completion":" The [GitLab](https:\/\/docs.retool.com\/docs\/source-control-with-gitlab) project ID. END"}
{"prompt":"GITLAB_MAIN_BRANCH\n\n###\n\n","completion":" The default branch for the [GitLab](https:\/\/docs.retool.com\/docs\/source-control-with-gitlab) project. END"}
{"prompt":"GITLAB_ORGANIZATION_NAME\n\n###\n\n","completion":" The [GitLab](https:\/\/docs.retool.com\/docs\/source-control-with-gitlab) organization name. This can be a username if the GitLab project is not part of an organization. END"}
{"prompt":"GITLAB_REPOSITORY_NAME\n\n###\n\n","completion":" The [GitLab](https:\/\/docs.retool.com\/docs\/source-control-with-gitlab) repository name. END"}
{"prompt":"GITLAB_PROJECT_SLUG\n\n###\n\n","completion":" The [GitLab](https:\/\/docs.retool.com\/docs\/source-control-with-gitlab) project's URL PATH. END"}
{"prompt":"VERSION_CONTROL_LOCKED\n\n###\n\n","completion":" When set to `true`, creates a read-only instance of Retool where: END"}
{"prompt":"Storage database\n\n###\n\n","completion":" Storage database environment variables available for use with [Self-hosted Retool](\/docs\/self-hosted) deployments. END"}
{"prompt":"DATABASE_MIGRATIONS_TIMEOUT_SECONDS\n\n###\n\n","completion":" The duration, in seconds, for migrations to run before timing out. If unset, the default is `300`. END"}
{"prompt":"The duration, in seconds, for migrations to run before timing out. If unset, the default is `300`.\n\n###\n\n","completion":" Consider setting a higher value if you're upgrading to another major version of Self-hosted Retool or the upgrade includes changes from multiple minor versions. END"}
{"prompt":"POSTGRES_CUSTOM_SSL_CA_FILE_NAME\n\n###\n\n","completion":" The name of the custom SSL CA file to use. This is required when configuring Google Cloud SQL as the database to use instead of Retool's PostgreSQL database. END"}
{"prompt":"POSTGRES_CUSTOM_SSL_CERT_FILE_NAME\n\n###\n\n","completion":" The name of the custom SSL certificate file to use. This is required when configuring Google Cloud SQL as the database to use instead of Retool's PostgreSQL database. END"}
{"prompt":"POSTGRES_CUSTOM_SSL_KEY_FILE_NAME\n\n###\n\n","completion":" The name of the custom SSL key file to use. This is required when configuring Google Cloud SQL as the database to use instead of Retool's PostgreSQL database. END"}
{"prompt":"POSTGRES_CUSTOM_SSL_CERT_PATH\n\n###\n\n","completion":" The path to your custom certificate when connecting to your Retool database. END"}
{"prompt":"POSTGRES_SSL_ENABLED\n\n###\n\n","completion":" Force SSL connections to your Retool PostgreSQL storage database. END"}
{"prompt":"POSTGRES_SSL_REJECT_UNAUTHORIZED\n\n###\n\n","completion":" Reject unauthorized SSL connections if `POSTGRES_SSL_ENABLED` is `true`. END"}
{"prompt":"Reject unauthorized SSL connections if `POSTGRES_SSL_ENABLED` is `true`.\n\n###\n\n","completion":" You must enable this if using self-signed certificates on 2.95+. END"}
{"prompt":"You must enable this if using self-signed certificates on 2.95+.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<style>\\n\\n.markdown-body h4 {\\ncolor: #888;\\npadding-bottom: 6px;\\nborder-bottom: 1px solid #eee;\\nmargin-top: 50px;\\nfont-size: 13px;\\nfont-weight: 700;\\n}\\n\\ncode.lang-shell .cm-s-neo, code.lang-shell .cm-s-neo .cm-number {\\n color: green;\\n}\\n\\ncode.lang-shell .cm-s-neo span.cm-operator, code.lang-shell .cm-s-neo span.cm-def {\\ncolor:black;\\n}\\n \\ndiv.optional, div.required {\\n display: inline;\\n font-family: var(--font-family);\\n color: white;\\n font-size: 13px;\\n padding: 2px 8px;\\n border-radius: var(--border-radius-lg);\\n font-weight: 300;\\n}\\n\\ndiv.required {\\n background: var(--red);\\n\\n}\\n\\ndiv.optional {\\n background: var(--chalk);\\n}\\n\\nul.toc-list li a {\\n white-space: nowrap;\\n overflow: hidden;\\n text-overflow: ellipsis;\\n}\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"title: \"Environments\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-concepts\"\nexcerpt: \"Learn about configuring multiple environments in Retool.\"\nhidden: false\n\n###\n\n","completion":" You should always build and iterate on mission-critical apps in a separate testing or staging environment that operates separately from production. This approach allows you to fully test apps and safely release changes without any disruption to production apps. END"}
{"prompt":"You should always build and iterate on mission-critical apps in a separate testing or staging environment that operates separately from production. This approach allows you to fully test apps and safely release changes without any disruption to production apps.\n\n###\n\n","completion":" Administrators of Retool organizations on Cloud or with an on-premise deployment of [Retool Self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) v2.87+ can create any number of separate environments for anyone needing to build, run, and test apps. END"}
{"prompt":"Administrators of Retool organizations on Cloud or with an on-premise deployment of [Retool Self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) v2.87+ can create any number of separate environments for anyone needing to build, run, and test apps.\n\n###\n\n","completion":" On-premise deployments with certain requirements can also use [multi-instance deployments](https:\/\/docs.retool.com\/docs\/multi-instance-deployments) to set up multiple environments. END"}
{"prompt":"title: \"Configure event handlers\"\ncategorySlug: \"app-scripting-and-events\"\nparentDocSlug: \"app-scripting-events-guides\"\nexcerpt: \"Learn how to trigger actions and queries in response to user interactions.\"\nhidden: false\n\n###\n\n","completion":" Event handlers allow you to trigger queries, control components, and perform other actions in response to user interactions, all without writing custom JavaScript. END"}
{"prompt":"Event handlers allow you to trigger queries, control components, and perform other actions in response to user interactions, all without writing custom JavaScript.\n\n###\n\n","completion":" You can add event handlers in response to component events—similar to `addEventListener` events in native JavaScript and `onChange` events in React—or in response to queries. For example, you can create an event handler to trigger a query in response to a button click, or in response to a successful table update. END"}
{"prompt":"Use in response to component events\n\n###\n\n","completion":" Create event handlers in response to component events in the **Interaction** section of the Inspector by clicking **+ Add** next to **Event handlers**. END"}
{"prompt":"Create event handlers in response to component events in the **Interaction** section of the Inspector by clicking **+ Add** next to **Event handlers**.\n\n###\n\n","completion":" The available events depend on the attached component. For example, **Text input** components have **Submit**, **Change**, **Focus**, and **Blur** events, while **Button** components only have a **Click** event. The [component library](https:\/\/retool.com\/components) contains a full reference of these events. END"}
{"prompt":"Multiple event handlers\n\n###\n\n","completion":" You can add multiple event handlers to a single component, but note that they run in parallel. In the following example, the event handlers calling `getUsers` and `sendEmail` are triggered at the same time. END"}
{"prompt":"You can add multiple event handlers to a single component, but note that they run in parallel. In the following example, the event handlers calling `getUsers` and `sendEmail` are triggered at the same time.\n\n###\n\n","completion":" ![Multiple async event handlers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/9c61200c-b154-40b8-b6b4-591ebeda614d.png) END"}
{"prompt":"![Multiple async event handlers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/9c61200c-b154-40b8-b6b4-591ebeda614d.png)\n\n###\n\n","completion":" To chain event handlers synchronously, create event handlers in response to [query successes or failures](https:\/\/docs.retool.com\/docs\/event-handlers#use-in-response-to-queries). END"}
{"prompt":"Use in response to queries\n\n###\n\n","completion":" Create events in response to queries by adding the event handler to the **Success** or **Failure** section of the query editor. END"}
{"prompt":"Create events in response to queries by adding the event handler to the **Success** or **Failure** section of the query editor.\n\n###\n\n","completion":" Event handlers set on a query's success or failure are chained and run synchronously. END"}
{"prompt":"Event handlers set on a query's success or failure are chained and run synchronously.\n\n###\n\n","completion":" For example, the below `refreshUserData` query runs only after the `insertNewRow` query returns a success response. END"}
{"prompt":"For example, the below `refreshUserData` query runs only after the `insertNewRow` query returns a success response.\n\n###\n\n","completion":" ![On success event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/c73a726e-6f76-4849-a627-0374d1926694.png) END"}
{"prompt":"Event handler actions\n\n###\n\n","completion":" The following are actions an event handler can take. Actions can be set in the **Action** dropdown when creating or editing an event handler. END"}
{"prompt":"Control component details\n\n###\n\n","completion":" After selecting the **Control components** action, choose a component to see its available methods. The definitions for these methods can be found in the [component library](https:\/\/retool.com\/components) under the **Methods** heading of a given component. You can use any component API in event handlers. END"}
{"prompt":"After selecting the **Control components** action, choose a component to see its available methods. The definitions for these methods can be found in the [component library](https:\/\/retool.com\/components) under the **Methods** heading of a given component. You can use any component API in event handlers.\n\n###\n\n","completion":" For example, the following switch event handler uses the [table's `.setFilter()` method](https:\/\/retool.com\/components\/table) to filter by active users. END"}
{"prompt":"For example, the following switch event handler uses the [table's `.setFilter()` method](https:\/\/retool.com\/components\/table) to filter by active users.\n\n###\n\n","completion":" ![Set filters on table from event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/9b583a73-3751-483d-8116-689ce4f48453.png) END"}
{"prompt":"Duplicate or delete event handlers\n\n###\n\n","completion":" To duplicate an event handler to the same component or query, click `...` to the right of the event handler, then **Duplicate**. END"}
{"prompt":"To duplicate an event handler to the same component or query, click `...` to the right of the event handler, then **Duplicate**.\n\n###\n\n","completion":" To delete an event handler, click `...` to the right of the event handler, then **Delete**. END"}
{"prompt":"To delete an event handler, click `...` to the right of the event handler, then **Delete**.\n\n###\n\n","completion":" ![Duplicate or delete event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/fcba8527-02da-4864-9317-52c23a4262a7.png) END"}
{"prompt":"Conditional runs\n\n###\n\n","completion":" Use the **Only run when** option to configure event handlers to only run when a given condition evaluates to `true`. END"}
{"prompt":"Use the **Only run when** option to configure event handlers to only run when a given condition evaluates to `true`.\n\n###\n\n","completion":" For example, the following event handler controls a Form that either edits or creates a user, depending on whether a row is selected. END"}
{"prompt":"For example, the following event handler controls a Form that either edits or creates a user, depending on whether a row is selected.\n\n###\n\n","completion":" ![Only run when event handler options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/464c02e-onlyRunUpsert.png) END"}
{"prompt":"![Only run when event handler options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/464c02e-onlyRunUpsert.png)\n\n###\n\n","completion":" The first **Trigger query** event handler runs `createNewUser` only when there is no row selected, and therefore ID is falsey: `{{ !id }}`. END"}
{"prompt":"The first **Trigger query** event handler runs `createNewUser` only when there is no row selected, and therefore ID is falsey: `{{ !id }}`.\n\n###\n\n","completion":" The second **Trigger query** event handler runs `editUser` only when an user ID exists: `{{ !!id }}`. END"}
{"prompt":"Debounce and throttle\n\n###\n\n","completion":" Debounce and throttle settings modify the timing of an event handler. END"}
{"prompt":"Debounce and throttle settings modify the timing of an event handler.\n\n###\n\n","completion":" ![Debounce or throttle event handlers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/9047b3fe-3aa8-4576-bf56-42001467d7b1.png) END"}
{"prompt":"Debounce\n\n###\n\n","completion":" **Debounce** delays an action until the specified milliseconds have elapsed since the event was last triggered. It's useful for delaying expensive queries. END"}
{"prompt":"**Debounce** delays an action until the specified milliseconds have elapsed since the event was last triggered. It's useful for delaying expensive queries.\n\n###\n\n","completion":" For example, a text input which updates on every user input might use an expensive underlying query. Instead of calling this query on every keystroke, use **Debounce** to run the query only when the user stops typing. END"}
{"prompt":"Throttle\n\n###\n\n","completion":" Setting a **Throttle** ensures an action is only called once per the specified milliseconds. END"}
{"prompt":"Setting a **Throttle** ensures an action is only called once per the specified milliseconds.\n\n###\n\n","completion":" For example, a button might use an event handler to call an expensive `refreshUserData` query on click. Use **Throttle** on the event handler so the query runs at most every two seconds, even if a user clicks the button more frequently. END"}
{"prompt":"title: \"Connect to Fauna\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your Fauna data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Fauna](https:\/\/fauna.com\/home) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Fauna data using GraphQL. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Fauna resource, you need a Fauna [API key](https:\/\/docs.fauna.com\/fauna\/current\/security\/keys) with Admin permissions. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **GraphQL** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **GraphQL** resource type.\n\n###\n\n","completion":" ![Select GraphQL resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/cd6a15a9-7679-4f1c-a869-c9ebcd5ff456.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Fauna resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"Specify a name and location for the Fauna resource. Retool displays the resource name and type in query editors to help users identify them.\n\n###\n\n","completion":" Next, enter the [Fauna endpoint URL](https:\/\/docs.fauna.com\/fauna\/current\/api\/graphql\/endpoints) to the **Base URL** field. Use the appropriate `\/graphql` URL for your region. END"}
{"prompt":"Headers\n\n###\n\n","completion":" Enter the following as **Headers**. END"}
{"prompt":"Enter the following as **Headers**.\n\n###\n\n","completion":" ![Configure Fauna settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/84431a7e-0a88-4e9f-8427-938732941971.png) END"}
{"prompt":"![Configure Fauna settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/84431a7e-0a88-4e9f-8427-938732941971.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Fauna. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Created Fauna resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/ec6c3c11-c997-4f11-b13a-9b8f2369a115.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Fauna resource is now ready to use. To interact with Fauna data, select the resource in the query editor. END"}
{"prompt":"title: \"Connect to Firebase\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your Firebase data to Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool supports Firebase's Admin API and allows you to build fast and useful CRUD apps on top of Firestore, RealtimeDB, and Auth data. END"}
{"prompt":"Setting up Firebase\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/RDzl_10wmpQ%3Ffeature%3Doembed&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DRDzl_10wmpQ&image=https%3A\/\/i.ytimg.com\/vi\/RDzl_10wmpQ\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?v=RDzl_10wmpQ\",\n\"title\": \"Connecting a Firebase Account to Retool\",\n\"favicon\": \"https:\/\/www.google.com\/favicon.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/RDzl_10wmpQ\/hqdefault.jpg\"\n}\n[\/block]\nTo build on top of your Firebase data in Retool, you'll need to (gasp) connect your Firebase setup. Once you've [created your Retool account](https:\/\/login.retool.com\/auth\/signup), head over to the Resources tab, click the \"create new\" button, and select Firebase from the \"APIs\" section. END"}
{"prompt":"[block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/RDzl_10wmpQ%3Ffeature%3Doembed&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DRDzl_10wmpQ&image=https%3A\/\/i.ytimg.com\/vi\/RDzl_10wmpQ\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?v=RDzl_10wmpQ\",\n\"title\": \"Connecting a Firebase Account to Retool\",\n\"favicon\": \"https:\/\/www.google.com\/favicon.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/RDzl_10wmpQ\/hqdefault.jpg\"\n}\n[\/block]\nTo build on top of your Firebase data in Retool, you'll need to (gasp) connect your Firebase setup. Once you've [created your Retool account](https:\/\/login.retool.com\/auth\/signup), head over to the Resources tab, click the \"create new\" button, and select Firebase from the \"APIs\" section.\n\n###\n\n","completion":" Here's what you'll need to provide: END"}
{"prompt":"Here's what you'll need to provide:\n\n###\n\n","completion":" Go to your [Firebase console](https:\/\/console.firebase.google.com\/u\/0\/), and then select your project. Click Realtime Database on the left side bar. This will expose a URL in the form `https:\/\/you-project-id.firebaseio.com\/`, which is what you need to copy into Retool. END"}
{"prompt":"Go to your [Firebase console](https:\/\/console.firebase.google.com\/u\/0\/), and then select your project. Click Realtime Database on the left side bar. This will expose a URL in the form `https:\/\/you-project-id.firebaseio.com\/`, which is what you need to copy into Retool.\n\n###\n\n","completion":" Head back to your [Firebase console](https:\/\/console.firebase.google.com\/u\/0\/) project settings, and copy the Project ID. It should look something like `retool-522x1`. END"}
{"prompt":"Head back to your [Firebase console](https:\/\/console.firebase.google.com\/u\/0\/) project settings, and copy the Project ID. It should look something like `retool-522x1`.\n\n###\n\n","completion":" If you're already in your Firebase console (you should be, if you're following along), you can click on your project settings pane, choose the \"service accounts\" tab, click on the \"Firebase Admin SDK\" icon, and then click the \"Generate new private key\" button. That should download a JSON blob that you can paste directly into Retool. END"}
{"prompt":"If you're already in your Firebase console (you should be, if you're following along), you can click on your project settings pane, choose the \"service accounts\" tab, click on the \"Firebase Admin SDK\" icon, and then click the \"Generate new private key\" button. That should download a JSON blob that you can paste directly into Retool.\n\n###\n\n","completion":" If this didn't work, you can also create an account key from your [Google Cloud Platform console](https:\/\/console.cloud.google.com\/iam-admin\/serviceaccounts). Go there, select a project, hit Create Service Account, name it whatever you want, then in \"role\" select Firebase Admin. Click continue, then Create Key, then choose the JSON one. It'll download and then you can copy it into Retool. END"}
{"prompt":"If this didn't work, you can also create an account key from your [Google Cloud Platform console](https:\/\/console.cloud.google.com\/iam-admin\/serviceaccounts). Go there, select a project, hit Create Service Account, name it whatever you want, then in \"role\" select Firebase Admin. Click continue, then Create Key, then choose the JSON one. It'll download and then you can copy it into Retool.\n\n###\n\n","completion":" Your configuration should resemble something like this: END"}
{"prompt":"Your configuration should resemble something like this:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5ff313f-Screen_Shot_2020-08-03_at_11.11.28_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5ff313f-Screen_Shot_2020-08-03_at_11.11.28_AM.png)\n\n###\n\n","completion":" After providing the Service Account Key and the Database URL, hit \"Save.\" Retool will validate that it's able to connect to your Firebase database and then you're ready to go. END"}
{"prompt":"Querying the database\n\n###\n\n","completion":" The query the RealtimeDB, create a new query (+new in the bottom panel), and select your Firebase resource from the resource dropdown. Then, choose \"Database (read \/ write)\" from the service type dropdown and select \"Query database\" as the action type. END"}
{"prompt":"The query the RealtimeDB, create a new query (+new in the bottom panel), and select your Firebase resource from the resource dropdown. Then, choose \"Database (read \/ write)\" from the service type dropdown and select \"Query database\" as the action type.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/814b118-Screen_Shot_2020-08-11_at_7.41.40_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/814b118-Screen_Shot_2020-08-11_at_7.41.40_AM.png)\n\n###\n\n","completion":" All you need to query the DB is a [Database ref](https:\/\/firebase.google.com\/docs\/reference\/js\/database.databasereference.md). In our setup, we have top level refs for `songs` and `blogPosts`, so we can use either of those in our query. END"}
{"prompt":"All you need to query the DB is a [Database ref](https:\/\/firebase.google.com\/docs\/reference\/js\/database.databasereference.md). In our setup, we have top level refs for `songs` and `blogPosts`, so we can use either of those in our query.\n\n###\n\n","completion":" If you click the \"use ordering\" checkbox, you'll get access to a bunch of different ordering and filtering options: END"}
{"prompt":"If you click the \"use ordering\" checkbox, you'll get access to a bunch of different ordering and filtering options:\n\n###\n\n","completion":" We recognize this is a bit confusing, as not all of these options actually relate to ordering - we'll be fixing this soon! END"}
{"prompt":"Setting and updating data\n\n###\n\n","completion":" The Firebase database offers [two different APIs for updating data](https:\/\/medium.com\/@jasonbyrne\/closer-look-at-firebase-set-versus-update-eceff34d056b): END"}
{"prompt":"The Firebase database offers [two different APIs for updating data](https:\/\/medium.com\/@jasonbyrne\/closer-look-at-firebase-set-versus-update-eceff34d056b):\n\n###\n\n","completion":" The `.set()` method _replaces_ your chosen object with the value that you provide. So if your object has 5 fields, and you use `.set()` and pass something with 3 fields, it will now have 3 fields. To use this method in Retool, just choose \"Set\" from the action type dropdown. You'll need to provide a database ref and an object to set. END"}
{"prompt":"The `.set()` method _replaces_ your chosen object with the value that you provide. So if your object has 5 fields, and you use `.set()` and pass something with 3 fields, it will now have 3 fields. To use this method in Retool, just choose \"Set\" from the action type dropdown. You'll need to provide a database ref and an object to set.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/559dcf9-Screen_Shot_2020-08-11_at_8.03.01_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/559dcf9-Screen_Shot_2020-08-11_at_8.03.01_AM.png)\n\n###\n\n","completion":" The `.update()` method updates fields if they exist, but doesn't replace an entire object. The query format is the same as `.set()` - just choose \"Update data\" from the action type dropdown and provide your database ref and update object. END"}
{"prompt":"Deleting fields\n\n###\n\n","completion":" Retool doesn't support deleting fields or objects directly, but you can get it done via the `set()` method. If you `.set()` a property to null, it will get deleted from the database - just keep in mind that you'll need to pass that `null` as JavaScript in curly braces (`{{ }}`). Here's an example of how we'd delete the \"title\" property from our `songs` object: END"}
{"prompt":"Retool doesn't support deleting fields or objects directly, but you can get it done via the `set()` method. If you `.set()` a property to null, it will get deleted from the database - just keep in mind that you'll need to pass that `null` as JavaScript in curly braces (`{{ }}`). Here's an example of how we'd delete the \"title\" property from our `songs` object:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/670aa03-Screen_Shot_2020-08-11_at_8.02.05_AM.png) END"}
{"prompt":"Working with Firestore\n\n###\n\n","completion":" All of these examples will use Firestore, but the same concepts apply to the RealtimeDB if you’re using that. Once you’ve connected your Firebase account to Retool (see previous section), you can get started querying Firestore right away. END"}
{"prompt":"Querying Firestore and getting Collections\n\n###\n\n","completion":" To query Firestore, create a new query (+new in the bottom panel), select “Firestore” from the service type dropdown, and choose “Query Firestore” as the action type. You can specify a collection via the dropdown, or input a custom value by clicking “Use raw id.” END"}
{"prompt":"To query Firestore, create a new query (+new in the bottom panel), select “Firestore” from the service type dropdown, and choose “Query Firestore” as the action type. You can specify a collection via the dropdown, or input a custom value by clicking “Use raw id.”\n\n###\n\n","completion":" The Retool GUI lets you query via a key (a document field), an operator (`==`, `in`, `>=`, etc.), and a value. You can add as many statements as you want, add a limit, an order by field, and other fun stuff too. END"}
{"prompt":"The Retool GUI lets you query via a key (a document field), an operator (`==`, `in`, `>=`, etc.), and a value. You can add as many statements as you want, add a limit, an order by field, and other fun stuff too.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f8f9952-Screen_Shot_2020-08-03_at_11.18.51_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f8f9952-Screen_Shot_2020-08-03_at_11.18.51_AM.png)\n\n###\n\n","completion":" You can set the value of your key or value dynamically with JS, which you can use to implement search (or anything else). If we have a TextInput component, we can pass the value of that component into our “value” input. Here, we’ve added a TextInput component that allows the user to input a value for the “boro” field in our `ny-facilities` collection, and we’ve passing the value of that component into the “value” field in our Firestore query. Voila, search! END"}
{"prompt":"You can set the value of your key or value dynamically with JS, which you can use to implement search (or anything else). If we have a TextInput component, we can pass the value of that component into our “value” input. Here, we’ve added a TextInput component that allows the user to input a value for the “boro” field in our `ny-facilities` collection, and we’ve passing the value of that component into the “value” field in our Firestore query. Voila, search!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7e37b67-Screen_Shot_2020-08-03_at_11.20.25_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7e37b67-Screen_Shot_2020-08-03_at_11.20.25_AM.png)\n\n###\n\n","completion":" To get a birds-eye view of all of the documents in a collection, we can pull the results of this Firestore query into a Table component. The way our collections are formatted makes this as simple as referencing `{{ listDocuments.data }}` in our table’s “data” field, but your Firestore data might be organized differently. END"}
{"prompt":"Formatting Firestore query results for a Table component\n\n###\n\n","completion":" The results of your Firestore query might not be in the right format for displaying in a table off the bat. You can write JavaScript anywhere in Retool, so don't fret! END"}
{"prompt":"The results of your Firestore query might not be in the right format for displaying in a table off the bat. You can write JavaScript anywhere in Retool, so don't fret!\n\n###\n\n","completion":" To display the data in a Table, you'll probably want to use something like this: END"}
{"prompt":"To display the data in a Table, you'll probably want to use something like this:\n\n###\n\n","completion":" `{{ _.values(firebaseQuery.data) }}` END"}
{"prompt":"`{{ _.values(firebaseQuery.data) }}`\n\n###\n\n","completion":" Or in more advanced cases where you would also like to pull in the Firebase key: END"}
{"prompt":"Or in more advanced cases where you would also like to pull in the Firebase key:\n\n###\n\n","completion":" `_.zipWith(_.keys(firebaseQuery.data), _.values(firebaseQuery.data), (key, value) => Object.assign({}, { key: key}, value))` END"}
{"prompt":"`_.zipWith(_.keys(firebaseQuery.data), _.values(firebaseQuery.data), (key, value) => Object.assign({}, { key: key}, value))`\n\n###\n\n","completion":" You can write this actual code in the \"data\" field for your table, apply it as a Transformer in your query, or create a standalone Transformer tool. Check out our [Transformer docs](https:\/\/docs.retool.com\/docs\/transformers) for more info. END"}
{"prompt":"You can write this actual code in the \"data\" field for your table, apply it as a Transformer in your query, or create a standalone Transformer tool. Check out our [Transformer docs](https:\/\/docs.retool.com\/docs\/transformers) for more info.\n\n###\n\n","completion":" You can make use of helper functions like `formatDataAsArray`, but you might need to do some custom formatting work. END"}
{"prompt":"You can make use of helper functions like `formatDataAsArray`, but you might need to do some custom formatting work.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6090f8f-Screen_Shot_2020-08-03_at_11.25.16_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6090f8f-Screen_Shot_2020-08-03_at_11.25.16_AM.png)\n\n###\n\n","completion":" Retool also allows you to query available Firestore collections (top level or under a specific document ID), which we can use to dynamically select which documents you want to display in this table. To get started, we’ll create a new query that lists top level collections: END"}
{"prompt":"Retool also allows you to query available Firestore collections (top level or under a specific document ID), which we can use to dynamically select which documents you want to display in this table. To get started, we’ll create a new query that lists top level collections:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8f10bfb-Screen_Shot_2020-08-03_at_11.26.22_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8f10bfb-Screen_Shot_2020-08-03_at_11.26.22_AM.png)\n\n###\n\n","completion":" If we wanted to query a nested collection, we could specify the parent document ID in the provided form field. We could also specify the document path, like `home\/locations\/restaurants`. We also support collection group queries! END"}
{"prompt":"If we wanted to query a nested collection, we could specify the parent document ID in the provided form field. We could also specify the document path, like `home\/locations\/restaurants`. We also support collection group queries!\n\n###\n\n","completion":" Now let’s pull the results of this query into a Dropdown component, and connect the value of that component to our original `listDocuments` query. Make sure that your `listDocuments` query is set to run when inputs change, not when manually triggered (scroll to the bottom of the “General” tab). END"}
{"prompt":"Now let’s pull the results of this query into a Dropdown component, and connect the value of that component to our original `listDocuments` query. Make sure that your `listDocuments` query is set to run when inputs change, not when manually triggered (scroll to the bottom of the “General” tab).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ceb7b54-Screen_Shot_2020-08-03_at_11.28.25_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ceb7b54-Screen_Shot_2020-08-03_at_11.28.25_AM.png)\n\n###\n\n","completion":" We’re populating the dropdown with the `.data` property of our new `listCollections` query, and then passing the dropdown’s value into the “Collection ID” field of our `listDocuments` query (after selecting “Use raw id”). Now, selecting a new collection from the dropdown will update the table to show that selected collection’s documents. You can set custom display values, placeholder text, and an initial value (among other things) by clicking on the dropdown and using the righthand panel. END"}
{"prompt":"Updating documents in Firestore\n\n###\n\n","completion":" To update a Firestore document in Retool, you just need the document’s ID and the object you’d like to update it with. Create a new query (+new in the bottom panel), select your Firebase resource, choose “Firestore” from the service type dropdown, and choose “Update Document” as the action type. END"}
{"prompt":"To update a Firestore document in Retool, you just need the document’s ID and the object you’d like to update it with. Create a new query (+new in the bottom panel), select your Firebase resource, choose “Firestore” from the service type dropdown, and choose “Update Document” as the action type.\n\n###\n\n","completion":" You’ll need to specify a document ID and a value. For the “value” field, passing a partial object will update only your passed fields, and passing current values (e.g. fields with the same values as current) works too. END"}
{"prompt":"You’ll need to specify a document ID and a value. For the “value” field, passing a partial object will update only your passed fields, and passing current values (e.g. fields with the same values as current) works too.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/afb8088-Screen_Shot_2020-08-03_at_11.46.14_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/afb8088-Screen_Shot_2020-08-03_at_11.46.14_AM.png)\n\n###\n\n","completion":" There are a few ways you might want to implement the UI here: END"}
{"prompt":"There are a few ways you might want to implement the UI here:\n\n###\n\n","completion":" You can choose whichever pattern best fits your users’ needs - as long as you format the results as a JSON object and pass it in the “value” field of your query, you should be good to go. Keep in mind that both of these fields - document ID and value - can be dynamic, so you can pass pretty much anything to them via JS in `{{ }}`. Here, we’ll walk through how to edit document values directly through the Table component. END"}
{"prompt":"You can choose whichever pattern best fits your users’ needs - as long as you format the results as a JSON object and pass it in the “value” field of your query, you should be good to go. Keep in mind that both of these fields - document ID and value - can be dynamic, so you can pass pretty much anything to them via JS in `{{ }}`. Here, we’ll walk through how to edit document values directly through the Table component.\n\n###\n\n","completion":" In the previous section, we built a table that pulls documents from the collection specific in a dropdown on top of our table. We can make this table editable, and connect it to our update query on the backend to update individual fields, or multiple fields all together. Start by clicking on the table, heading over to the “columns” section in the right sidebar, and updating each individual column (or whichever ones you want) to be editable. END"}
{"prompt":"In the previous section, we built a table that pulls documents from the collection specific in a dropdown on top of our table. We can make this table editable, and connect it to our update query on the backend to update individual fields, or multiple fields all together. Start by clicking on the table, heading over to the “columns” section in the right sidebar, and updating each individual column (or whichever ones you want) to be editable.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ed53048-Screen_Shot_2020-08-03_at_11.49.40_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ed53048-Screen_Shot_2020-08-03_at_11.49.40_AM.png)\n\n###\n\n","completion":" This just makes them editable on the frontend - we still need to connect our `updateDocument` query so that editing actually does something. First, we’ll head into our `updateDocument` query and fill in the right values for document ID and value. END"}
{"prompt":"This just makes them editable on the frontend - we still need to connect our `updateDocument` query so that editing actually does something. First, we’ll head into our `updateDocument` query and fill in the right values for document ID and value.\n\n###\n\n","completion":" For document ID, we’ll choose the currently selected row in the table with `{{ table.selectedRow.data._id }}`. We’ll also click “Use raw id” for our collection, and pass the selected value from the dropdown (you can also hardcode this, of course). END"}
{"prompt":"For document ID, we’ll choose the currently selected row in the table with `{{ table.selectedRow.data._id }}`. We’ll also click “Use raw id” for our collection, and pass the selected value from the dropdown (you can also hardcode this, of course).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3ec79a6-Screen_Shot_2020-08-03_at_11.51.53_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3ec79a6-Screen_Shot_2020-08-03_at_11.51.53_AM.png)\n\n###\n\n","completion":" If you click on a different row in the your table, you’ll notice the preview for document ID change. If you’ve enabled your table to select multiple rows, this won’t work - you’ll need to parse that with JavaScript or run a loop (more on that later). END"}
{"prompt":"If you click on a different row in the your table, you’ll notice the preview for document ID change. If you’ve enabled your table to select multiple rows, this won’t work - you’ll need to parse that with JavaScript or run a loop (more on that later).\n\n###\n\n","completion":" For the value field, we’ll access a special property of our table that only exists when a row (or rows) have been updated: `.recordUpdates`. The `.recordUpdates` property is an array of objects, one per edited row, with the values for each field in that row, including the edited ones. If you’ve only edited one row, the `.recordUpdates` array will have one object, and so on and so forth. Keep in mind that `.recordUpdates` will contain values for every field in your table, regardless of whether its been edited or not - this makes it really easy to pass into our `updateDocument` query, because Firestore ignores fields that haven’t changed. END"}
{"prompt":"For the value field, we’ll access a special property of our table that only exists when a row (or rows) have been updated: `.recordUpdates`. The `.recordUpdates` property is an array of objects, one per edited row, with the values for each field in that row, including the edited ones. If you’ve only edited one row, the `.recordUpdates` array will have one object, and so on and so forth. Keep in mind that `.recordUpdates` will contain values for every field in your table, regardless of whether its been edited or not - this makes it really easy to pass into our `updateDocument` query, because Firestore ignores fields that haven’t changed.\n\n###\n\n","completion":" Here’s we’ve edited two cells in the second row. That means `table.recordUpdates` will have one element, with all of the values for the second row in our table (including the two edited cells). We can index that array and pass it straight into the value field in our `updateDocument` query. END"}
{"prompt":"Here’s we’ve edited two cells in the second row. That means `table.recordUpdates` will have one element, with all of the values for the second row in our table (including the two edited cells). We can index that array and pass it straight into the value field in our `updateDocument` query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/962187c-Screen_Shot_2020-08-03_at_11.57.41_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/962187c-Screen_Shot_2020-08-03_at_11.57.41_AM.png)\n\n###\n\n","completion":" The last thing we need to do is connect this query to the table: in the table settings on the right, scroll down to the “table edit queries” section, and select the `updateDocument` query from “bulk update action” dropdown. We’ve now got an editable table - you can update the data types of any of these columns (to use a date picker, for example), change column names, and do all sorts of useful table things. END"}
{"prompt":"The last thing we need to do is connect this query to the table: in the table settings on the right, scroll down to the “table edit queries” section, and select the `updateDocument` query from “bulk update action” dropdown. We’ve now got an editable table - you can update the data types of any of these columns (to use a date picker, for example), change column names, and do all sorts of useful table things.\n\n###\n\n","completion":" There’s only one caveat - this won’t work if you update multiple rows in your table at once. To do that, you’ll need to create another query to iterate through all of the rows (i.e. records) in `.recordUpdates` and apply the `updateDocument` query to each one. Here’s how we’ll do that: END"}
{"prompt":"There’s only one caveat - this won’t work if you update multiple rows in your table at once. To do that, you’ll need to create another query to iterate through all of the rows (i.e. records) in `.recordUpdates` and apply the `updateDocument` query to each one. Here’s how we’ll do that:\n\n###\n\n","completion":" Create a new query (+new in the bottom panel) and choose “Run JS Code” from the resource dropdown. This lets us run JavaScript as a query, and we don’t need to use `{{ }}` to reference the rest of our app. Each Retool query has a `.trigger()` method - what we’re going to do is iterate through the `.recordUpdates` array and trigger our `updateDocument` query for each element. Here’s the boilerplate: END"}
{"prompt":"Create a new query (+new in the bottom panel) and choose “Run JS Code” from the resource dropdown. This lets us run JavaScript as a query, and we don’t need to use `{{ }}` to reference the rest of our app. Each Retool query has a `.trigger()` method - what we’re going to do is iterate through the `.recordUpdates` array and trigger our `updateDocument` query for each element. Here’s the boilerplate:\n\n###\n\n","completion":" The issue is that our current values for document ID and value in our `updateDocument` query won’t work here - we’re pulling the document ID from the currently selected table row, and we’ve hard indexed `[0]` for `.recordUpdates` in the value field. END"}
{"prompt":"The issue is that our current values for document ID and value in our `updateDocument` query won’t work here - we’re pulling the document ID from the currently selected table row, and we’ve hard indexed `[0]` for `.recordUpdates` in the value field.\n\n###\n\n","completion":" When triggering queries in Retool via a Run JS Code query, you can pass additional scope - and that’s what we’ll do for our `updateDocument` query. In our Run JS Code query, we’ll update our code to pass the record’s `_id` as `document_id`, and the entire record object as `document_object`. Then, we’ll reference those values in the `updateDocument` query. END"}
{"prompt":"When triggering queries in Retool via a Run JS Code query, you can pass additional scope - and that’s what we’ll do for our `updateDocument` query. In our Run JS Code query, we’ll update our code to pass the record’s `_id` as `document_id`, and the entire record object as `document_object`. Then, we’ll reference those values in the `updateDocument` query.\n\n###\n\n","completion":" Now that we’re passing a `document_id` and a `document_object` via our Run JS Code query, let’s update those references in the `updateDocument` query. You’ll notice that these variable names will throw errors, since they don’t really exist yet - they get defined when the JS Code query runs, and get passed in there. END"}
{"prompt":"Now that we’re passing a `document_id` and a `document_object` via our Run JS Code query, let’s update those references in the `updateDocument` query. You’ll notice that these variable names will throw errors, since they don’t really exist yet - they get defined when the JS Code query runs, and get passed in there.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4345c5f-Screen_Shot_2020-08-03_at_12.36.49_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4345c5f-Screen_Shot_2020-08-03_at_12.36.49_PM.png)\n\n###\n\n","completion":" This is what the final JS Code query should look like: END"}
{"prompt":"This is what the final JS Code query should look like:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a4ec1eb-Screen_Shot_2020-08-03_at_12.37.53_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a4ec1eb-Screen_Shot_2020-08-03_at_12.37.53_PM.png)\n\n###\n\n","completion":" The last thing we need to do to make this work is change the bulk update query connected to our table from `updateDocument` to `handleUpdates`. END"}
{"prompt":"The last thing we need to do to make this work is change the bulk update query connected to our table from `updateDocument` to `handleUpdates`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2238ebb-Screen_Shot_2020-08-03_at_12.39.29_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2238ebb-Screen_Shot_2020-08-03_at_12.39.29_PM.png)\n\n###\n\n","completion":" A couple of ergonomic tweaks that will make this a bit smoother: END"}
{"prompt":"A couple of ergonomic tweaks that will make this a bit smoother:\n\n###\n\n","completion":" If you run into any issues, you can always `console.log` out into your browser console to help debug. END"}
{"prompt":"Using refs in Firestore queries\n\n###\n\n","completion":" If your Firestore query needs to make use of a [Database Ref](https:\/\/firebase.google.com\/docs\/reference\/js\/database.databasereference.md), there's a special way to specify that in Retool: with the `$ref` identifier in the value of your query. END"}
{"prompt":"If your Firestore query needs to make use of a [Database Ref](https:\/\/firebase.google.com\/docs\/reference\/js\/database.databasereference.md), there's a special way to specify that in Retool: with the `$ref` identifier in the value of your query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2273fe8-Screen_Shot_2020-08-03_at_4.12.30_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2273fe8-Screen_Shot_2020-08-03_at_4.12.30_PM.png)\n\n###\n\n","completion":" The syntax is inspired by the [MongoDB Extended JSON](https:\/\/docs.mongodb.com\/manual\/reference\/mongodb-extended-json\/) syntax, where you use `$ref` to specify that the string should be a ref. END"}
{"prompt":"Inserting a document\n\n###\n\n","completion":" In your query editor, select your Firebase resource from the resource dropdown, choose “Firestore” as the service type, and “Insert document” as the action type. Inserting a document in Retool takes the same format as updating a document, but you can leave the document ID blank if you want Firestore to automatically generate one. END"}
{"prompt":"In your query editor, select your Firebase resource from the resource dropdown, choose “Firestore” as the service type, and “Insert document” as the action type. Inserting a document in Retool takes the same format as updating a document, but you can leave the document ID blank if you want Firestore to automatically generate one.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9fdbb34-Screen_Shot_2020-08-03_at_12.49.49_PM.png) END"}
{"prompt":"Deleting a document\n\n###\n\n","completion":" In your query editor, select your Firebase resource from the resource dropdown, choose “Firestore” as the service type, and “Delete document” as the action type. The only parameter you need to provide is a document ID - here, we’re setting it dynamically by referencing the `_id` property of the currently selected document in our table. END"}
{"prompt":"In your query editor, select your Firebase resource from the resource dropdown, choose “Firestore” as the service type, and “Delete document” as the action type. The only parameter you need to provide is a document ID - here, we’re setting it dynamically by referencing the `_id` property of the currently selected document in our table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4ad1d14-Screen_Shot_2020-08-03_at_12.50.32_PM.png) END"}
{"prompt":"Getting document by ID\n\n###\n\n","completion":" In your query editor, select your Firebase resource from the resource dropdown, choose “Firestore” as the service type, and “Get Document by ID” as the action type. The only parameter you need to provide is a document ID - here, we’re setting it dynamically by referencing the `_id` property of the currently selected document in our table. END"}
{"prompt":"In your query editor, select your Firebase resource from the resource dropdown, choose “Firestore” as the service type, and “Get Document by ID” as the action type. The only parameter you need to provide is a document ID - here, we’re setting it dynamically by referencing the `_id` property of the currently selected document in our table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2509652-Screen_Shot_2020-08-03_at_12.54.12_PM.png) END"}
{"prompt":"Working with Firebase Auth\n\n###\n\n","completion":" Retool lets you view, update, add, and delete users from your Firebase Authentication setup. END"}
{"prompt":"Listing users\n\n###\n\n","completion":" To list your existing Firebase Auth users, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “List users” as the action type. We’ve displayed the results in a Table component via `{{ listUsers.data.users }}`. END"}
{"prompt":"To list your existing Firebase Auth users, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “List users” as the action type. We’ve displayed the results in a Table component via `{{ listUsers.data.users }}`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4e20570-Screen_Shot_2020-08-03_at_1.06.19_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4e20570-Screen_Shot_2020-08-03_at_1.06.19_PM.png)\n\n###\n\n","completion":" In the `listUsers` query, we can set a limit for the number of users we want our query to return. The limit value (and pretty much anything in Retool) can also by dynamic, so we can hook it up to a text input that lets you set a limit for the query in your app. END"}
{"prompt":"In the `listUsers` query, we can set a limit for the number of users we want our query to return. The limit value (and pretty much anything in Retool) can also by dynamic, so we can hook it up to a text input that lets you set a limit for the query in your app.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a574765-Screen_Shot_2020-08-03_at_1.00.07_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a574765-Screen_Shot_2020-08-03_at_1.00.07_PM.png)\n\n###\n\n","completion":" Once we’ve pulled our users into our table, we can apply frontend filters via the little filter icon. END"}
{"prompt":"Once we’ve pulled our users into our table, we can apply frontend filters via the little filter icon.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e816eab-Screen_Shot_2020-08-03_at_1.17.07_PM.png) END"}
{"prompt":"Getting a user by UID, email, or phone number\n\n###\n\n","completion":" To get a user by UID, email, or phone, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Get user by email\/UID\/phone” as the action type. Here’s an example using a user’s email - we’ve added a TextInput component up top, and are passing its value into the user email field in our query. END"}
{"prompt":"To get a user by UID, email, or phone, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Get user by email\/UID\/phone” as the action type. Here’s an example using a user’s email - we’ve added a TextInput component up top, and are passing its value into the user email field in our query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fffce6b-Screen_Shot_2020-08-03_at_1.16.36_PM.png) END"}
{"prompt":"Deleting a user\n\n###\n\n","completion":" To delete a user, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Delete a user” as the action type. You’ll need to pass in the User UID of the user you want to delete - here, we’re pulling it from the currently selected table row (this table is populated with our `listUsers` query. END"}
{"prompt":"To delete a user, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Delete a user” as the action type. You’ll need to pass in the User UID of the user you want to delete - here, we’re pulling it from the currently selected table row (this table is populated with our `listUsers` query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f31b1d9-Screen_Shot_2020-08-03_at_1.23.01_PM.png) END"}
{"prompt":"Updating a user’s information\n\n###\n\n","completion":" To update a user’s information, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Update a user” as the action type. You’ll need two things: (1) the user’s UID, and (2) the update object. END"}
{"prompt":"To update a user’s information, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Update a user” as the action type. You’ll need two things: (1) the user’s UID, and (2) the update object.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b45448b-Screen_Shot_2020-08-03_at_1.27.26_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b45448b-Screen_Shot_2020-08-03_at_1.27.26_PM.png)\n\n###\n\n","completion":" There are a bunch of ways you can design a UI for updating user information - a form, a raw JSON object, and even an editable table. If you’re looking to make your table editable, follow the steps outlined above for doing the same with Firestore. END"}
{"prompt":"There are a bunch of ways you can design a UI for updating user information - a form, a raw JSON object, and even an editable table. If you’re looking to make your table editable, follow the steps outlined above for doing the same with Firestore.\n\n###\n\n","completion":" A common use case for Firebase Auth in Retool is verifying email addresses. We can use this `updateUser` query we built to do just that. We’ll start by dragging a button under our table, and updating its label to “Verify Email.” Then, let’s hook up that button to run our `updateUser` query. Finally, we’ll set the User UID field in the query to the currently selected table row, and pass in `{` ` \"``emailVerified``\"``: true } ` as the user object. END"}
{"prompt":"A common use case for Firebase Auth in Retool is verifying email addresses. We can use this `updateUser` query we built to do just that. We’ll start by dragging a button under our table, and updating its label to “Verify Email.” Then, let’s hook up that button to run our `updateUser` query. Finally, we’ll set the User UID field in the query to the currently selected table row, and pass in `{` ` \"``emailVerified``\"``: true } ` as the user object.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7f3c597-Screen_Shot_2020-08-03_at_1.36.24_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7f3c597-Screen_Shot_2020-08-03_at_1.36.24_PM.png)\n\n###\n\n","completion":" We’ve also configured the `updateUser` query to trigger `listUsers` on success - now, clicking the Verify Email button updates the user’s `emailVerified` field, and re-renders the table. END"}
{"prompt":"Creating a new user\n\n###\n\n","completion":" To create a new user, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Create a user” as the action type. You’ll need to provide a user object. Now technically the Firebase API doesn’t require you to include any fields at all in that object, but you’ll usually want to pass an email and password at least. END"}
{"prompt":"To create a new user, create a new query (+new in the bottom panel), choose your Firebase resource from the resource dropdown, select “Auth (user management)” from the service type dropdown, and pick “Create a user” as the action type. You’ll need to provide a user object. Now technically the Firebase API doesn’t require you to include any fields at all in that object, but you’ll usually want to pass an email and password at least.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c74c117-Screen_Shot_2020-08-03_at_1.41.49_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c74c117-Screen_Shot_2020-08-03_at_1.41.49_PM.png)\n\n###\n\n","completion":" Keep in mind that the user object field is dynamic, so you can pass values from other Retool components (a form, two text inputs, etc.) as you build your UI. END"}
{"prompt":"title: \"Control functionality with feature flags\"\ncategorySlug: \"legacy\"\nexcerpt: \"Build an app to enable functionality on a per-user basis with feature flagging.\"\nhidden: true\n\n###\n\n","completion":" Feature flags allow you to manage access to data or functionality on a granular level. A common use case for feature flags is to enable certain features on a per-user basis. END"}
{"prompt":"Feature flags allow you to manage access to data or functionality on a granular level. A common use case for feature flags is to enable certain features on a per-user basis.\n\n###\n\n","completion":" This guide explains how to build a feature flagging tool using the [Table](https:\/\/retool.com\/components\/table) and [Feature Flags](https:\/\/retool.com\/components\/feature-flags) components. Using this tool, you select a user from the table and toggle available feature flags. These changes are saved back to the user record to ensure a persistent state. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Try out the app to see the feature flag tool in action (toggles are disabled). END"}
{"prompt":"Try out the app to see the feature flag tool in action (toggles are disabled).\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/ee04c5f4-b0ed-4cdc-90dd-7f10d26b815b\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Retrieve a list of users\n\n###\n\n","completion":" Create a query to retrieve the `users` table from the sample `onboarding_db` PostgreSQL database. END"}
{"prompt":"Create a query to retrieve the `users` table from the sample `onboarding_db` PostgreSQL database.\n\n###\n\n","completion":" Next, drag a **Table** component from the **Component Library** to the Canvas. The table displays the results of the most recently created query and loads the list of users. END"}
{"prompt":"Next, drag a **Table** component from the **Component Library** to the Canvas. The table displays the results of the most recently created query and loads the list of users.\n\n###\n\n","completion":" ![The table displays the results of the query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0926fd5-feature-flags-02.png) END"}
{"prompt":"![The table displays the results of the query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0926fd5-feature-flags-02.png)\n\n###\n\n","completion":" The `users` table contains a `feature_flags` column that is initially empty. This will be used to store feature flag information when enabled or disabled. END"}
{"prompt":"Define feature flags\n\n###\n\n","completion":" The Feature Flags component contains a list of toggles that can trigger queries when enabled or disabled. Each toggle can include a description and metadata to provide further context about each flag. END"}
{"prompt":"The Feature Flags component contains a list of toggles that can trigger queries when enabled or disabled. Each toggle can include a description and metadata to provide further context about each flag.\n\n###\n\n","completion":" Drag a **Feature Flags** component from the **Component Library** to the Canvas. Two feature flag toggles are created automatically but this guide only requires one---remove one of the feature flags. END"}
{"prompt":"Drag a **Feature Flags** component from the **Component Library** to the Canvas. Two feature flag toggles are created automatically but this guide only requires one---remove one of the feature flags.\n\n###\n\n","completion":" You can set the **Toggle Checked?** setting of the toggle so it dynamically reflects the state of a feature flag. Set the value to `{{ table1.selectedRow.data.feature_flags.feature1 }}`. The toggle is checked only if this is evaluated as a <<glossary:truthy value>>. Since `feature1` does not currently exist, it is evaluated as `false` and switched off. END"}
{"prompt":"You can set the **Toggle Checked?** setting of the toggle so it dynamically reflects the state of a feature flag. Set the value to `{{ table1.selectedRow.data.feature_flags.feature1 }}`. The toggle is checked only if this is evaluated as a <<glossary:truthy value>>. Since `feature1` does not currently exist, it is evaluated as `false` and switched off.\n\n###\n\n","completion":" ![A toggle is checked when its value is truthy.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d70b2b8-feature-flags-03.png) END"}
{"prompt":"Set and unset feature flags\n\n###\n\n","completion":" The last step is to create two queries that set and unset the feature flag for the user. These queries run when the toggle is enabled or disabled. Both of these queries set the appropriate boolean value for `feature1`, creating the key if necessary. END"}
{"prompt":"Set the feature flag\n\n###\n\n","completion":" Create a new query that sets the feature flag and make the following changes: END"}
{"prompt":"Create a new query that sets the feature flag and make the following changes:\n\n###\n\n","completion":" The action to update a record requires a column filter to identify which record to update. It must be a unique identifier to avoid incorrect changes. A list of available filters is automatically populated using the available table columns. Set the value to `{{ table1.selectedRow.data.id}}`. END"}
{"prompt":"The action to update a record requires a column filter to identify which record to update. It must be a unique identifier to avoid incorrect changes. A list of available filters is automatically populated using the available table columns. Set the value to `{{ table1.selectedRow.data.id}}`.\n\n###\n\n","completion":" The **Changeset** contains the information to update. To update the feature flag state, select **Object** as the data type and set the value to: END"}
{"prompt":"The **Changeset** contains the information to update. To update the feature flag state, select **Object** as the data type and set the value to:\n\n###\n\n","completion":" ![The query updates the record to enable the feature flag.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4e9383a-feature-flags-04.png) END"}
{"prompt":"![The query updates the record to enable the feature flag.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4e9383a-feature-flags-04.png)\n\n###\n\n","completion":" Save these changes and then rename the query to `setFeature1`. END"}
{"prompt":"Unset the feature flag\n\n###\n\n","completion":" Duplicate the query you just created. Click ••• and select **Duplicate**. and change the **Changeset** to: END"}
{"prompt":"Duplicate the query you just created. Click ••• and select **Duplicate**. and change the **Changeset** to:\n\n###\n\n","completion":" Save these changes and then rename the query to `unsetFeature1`. END"}
{"prompt":"Refresh the table after submission\n\n###\n\n","completion":" Add an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to both queries that reload the table to show the changes automatically: END"}
{"prompt":"Add an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to both queries that reload the table to show the changes automatically:\n\n###\n\n","completion":" ![Both queries can refresh the table by running the getUsers query on success.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9cc371a-feature-flags-05.png) END"}
{"prompt":"![Both queries can refresh the table by running the getUsers query on success.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9cc371a-feature-flags-05.png)\n\n###\n\n","completion":" Click **Save** to save the additional changes. END"}
{"prompt":"Update toggle actions\n\n###\n\n","completion":" Now that you have queries to set and unset feature flags, update the Feature Flag component toggle to trigger the respective query when turned on or off: END"}
{"prompt":"Now that you have queries to set and unset feature flags, update the Feature Flag component toggle to trigger the respective query when turned on or off:\n\n###\n\n","completion":" ![Each toggle can trigger a query when checked or unchecked.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2c5b59a-feature-flags-06.png) END"}
{"prompt":"![Each toggle can trigger a query when checked or unchecked.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2c5b59a-feature-flags-06.png)\n\n###\n\n","completion":" You can now toggle feature flags. Turning on a feature flag triggers the `setFeature1` query, and turning it off triggers `unsetFeature1`. Both queries automatically refresh the table so changes are immediately reflected. END"}
{"prompt":"You can now toggle feature flags. Turning on a feature flag triggers the `setFeature1` query, and turning it off triggers `unsetFeature1`. Both queries automatically refresh the table so changes are immediately reflected.\n\n###\n\n","completion":" ![You can select a user from the table and toggle the feature flag.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/437540c-feature-flags-07.png) END"}
{"prompt":"title: \"Form components\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-concepts\"\nexcerpt: \"Learn more about Retool's form components and compare their features.\"\nhidden: false\n\n###\n\n","completion":" You can build forms to collect information from your users with the [Form](#the-form-component) or [JSON Schema Form](#the-json-schema-form-component) components. You can manually add inputs to forms or generate them from a resource or table. Form submission is then managed with [event handling](https:\/\/docs.retool.com\/docs\/event-handlers). When users submit a form, you can use the input values to write to databases, make API requests, send emails, etc. END"}
{"prompt":"You can build forms to collect information from your users with the [Form](#the-form-component) or [JSON Schema Form](#the-json-schema-form-component) components. You can manually add inputs to forms or generate them from a resource or table. Form submission is then managed with [event handling](https:\/\/docs.retool.com\/docs\/event-handlers). When users submit a form, you can use the input values to write to databases, make API requests, send emails, etc.\n\n###\n\n","completion":" The Form and JSON Schema Form components work differently to create forms. Learn more about these differences and [compare their features](#comparison) to decide which one meets your needs. END"}
{"prompt":"The Form component\n\n###\n\n","completion":" The [Form](https:\/\/retool.com\/components\/form) component functions as a container—you add input components from the Components library and place them in the form. The Form component gives you complete control over the layout, allowing you to adjust the position or size of inputs. You can also add other components to customize the form's appearance further. END"}
{"prompt":"The [Form](https:\/\/retool.com\/components\/form) component functions as a container—you add input components from the Components library and place them in the form. The Form component gives you complete control over the layout, allowing you to adjust the position or size of inputs. You can also add other components to customize the form's appearance further.\n\n###\n\n","completion":" You can set the Form component's **Initial data** property to populate inputs using other data, such as from a selected table row. END"}
{"prompt":"You can set the Form component's **Initial data** property to populate inputs using other data, such as from a selected table row.\n\n###\n\n","completion":" Try out the demo below to see the form in action (submissions are disabled), then read [Create forms using the Form component](https:\/\/docs.retool.com\/docs\/create-forms-using-form-component) to learn how to build this. END"}
{"prompt":"Try out the demo below to see the form in action (submissions are disabled), then read [Create forms using the Form component](https:\/\/docs.retool.com\/docs\/create-forms-using-form-component) to learn how to build this.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/68672890-f018-4fcd-a568-a82a0a5ddd43\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Form inputs\n\n###\n\n","completion":" You can manually add form inputs or generate them from a resource or table. To generate inputs, add a form to the canvas and click **Generate form**. This opens a modal where you can select a resource or table, along with the inputs. END"}
{"prompt":"You can manually add form inputs or generate them from a resource or table. To generate inputs, add a form to the canvas and click **Generate form**. This opens a modal where you can select a resource or table, along with the inputs.\n\n###\n\n","completion":" ![Generating a form](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ba683ae8-4934-4550-913d-e4c32db4511d.png) END"}
{"prompt":"![Generating a form](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ba683ae8-4934-4550-913d-e4c32db4511d.png)\n\n###\n\n","completion":" Retool evaluates each column to set an appropriate label and input type, but you can edit these properties as well. You can also deselect columns that you don't want to use in your form. Click **Generate form** when you're done configuring the inputs. END"}
{"prompt":"Retool evaluates each column to set an appropriate label and input type, but you can edit these properties as well. You can also deselect columns that you don't want to use in your form. Click **Generate form** when you're done configuring the inputs.\n\n###\n\n","completion":" When you generate a form from a database, Retool automatically adds a query that's configured to create a record. You can connect this query to your form using an [event handler](https:\/\/docs.retool.com\/docs\/event-handlers) to write data back to your database. Forms generated from tables don't include this query, so you need to create a query or configure a similar action to use with form submission. END"}
{"prompt":"The JSON Schema Form component\n\n###\n\n","completion":" [JSON Schema Form](https:\/\/retool.com\/components\/json-schema-form) is based on the [react-jsonschema-form](https:\/\/github.com\/rjsf-team\/react-jsonschema-form) library. You define which input fields to include and how they are rendered using [JSON](https:\/\/github.com\/rjsf-team\/react-jsonschema-form) and [UI](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/api-reference\/uiSchema) schemas. JSON Schema Form displays input fields in a single-column layout only, and you cannot add other components to the form. END"}
{"prompt":"[JSON Schema Form](https:\/\/retool.com\/components\/json-schema-form) is based on the [react-jsonschema-form](https:\/\/github.com\/rjsf-team\/react-jsonschema-form) library. You define which input fields to include and how they are rendered using [JSON](https:\/\/github.com\/rjsf-team\/react-jsonschema-form) and [UI](https:\/\/rjsf-team.github.io\/react-jsonschema-form\/docs\/api-reference\/uiSchema) schemas. JSON Schema Form displays input fields in a single-column layout only, and you cannot add other components to the form.\n\n###\n\n","completion":" JSON Schema Form allows for more programmatic flexibility as you can dynamically change the JSON schema instead of making manual changes. You can also use the **Default Form data** property of JSON Schema Form to automatically populate inputs using other data, such as a selected table row. END"}
{"prompt":"JSON Schema Form allows for more programmatic flexibility as you can dynamically change the JSON schema instead of making manual changes. You can also use the **Default Form data** property of JSON Schema Form to automatically populate inputs using other data, such as a selected table row.\n\n###\n\n","completion":" Try out the demo below to see the form in action (submissions are disabled), then read [Create forms using the JSON Schema Form component](https:\/\/docs.retool.com\/docs\/create-forms-using-json-schema-form-component) to learn how to build this. END"}
{"prompt":"Try out the demo below to see the form in action (submissions are disabled), then read [Create forms using the JSON Schema Form component](https:\/\/docs.retool.com\/docs\/create-forms-using-json-schema-form-component) to learn how to build this.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/fa6890ca-ae98-4b96-bbc5-781cf69c78fc\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Comparison\n\n###\n\n","completion":" Retool recommends using the Form component in most cases. You should consider using JSON Schema Form if: END"}
{"prompt":"Integrate Retool and Front\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f9278bc-Screen_Shot_2021-05-12_at_5.20.19_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f9278bc-Screen_Shot_2021-05-12_at_5.20.19_PM.png)\n\n###\n\n","completion":" To connect your resource to Front, give your resource a name then click \"Connect to Front\". Then follow the OAuth flow, signing in to Front to connect Retool. END"}
{"prompt":"To connect your resource to Front, give your resource a name then click \"Connect to Front\". Then follow the OAuth flow, signing in to Front to connect Retool.\n\n###\n\n","completion":" Save the resource and that's it! You can now query the Front API in Retool! END"}
{"prompt":"Querying the Front API\n\n###\n\n","completion":" After setting up a Front integration with Retool, a new option for a Front query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the Front api spec to send and retrieve data from Front. You can learn about the popular endpoints for syncing contacts with CRMs, automating message replies with chatbots, and building dashboards for analytics [here](https:\/\/dev.frontapp.com\/docs\/core-api-overview). END"}
{"prompt":"After setting up a Front integration with Retool, a new option for a Front query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the Front api spec to send and retrieve data from Front. You can learn about the popular endpoints for syncing contacts with CRMs, automating message replies with chatbots, and building dashboards for analytics [here](https:\/\/dev.frontapp.com\/docs\/core-api-overview).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/44f0ba9-Screen_Shot_2021-05-12_at_5.46.03_PM.png) END"}
{"prompt":"How to embed a Retool app as a Front plugin\n\n###\n\n","completion":" Once you've built your app, click share, select public and enable public link access. After copying the public access link to the Retool app, go to the \"Plugins & API\" settings page in Front and then \"Add a plugin\" and paste the link. END"}
{"prompt":"title: \"Configure Git Syncing\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to sync Retool apps with Git.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Retool apps can be synced with a Git repository, letting you customize how you develop and deploy Retool apps across multiple environments and helping your team adhere to application development lifecycle best practices. END"}
{"prompt":"Retool apps can be synced with a Git repository, letting you customize how you develop and deploy Retool apps across multiple environments and helping your team adhere to application development lifecycle best practices.\n\n###\n\n","completion":" The most common approach is to have multiple instances of Retool representing multiple environments: development, staging, and production. Code promotion across environments is controlled via Git, so that every change must be reviewed as a pull request before being promoted to a higher environment. END"}
{"prompt":"The most common approach is to have multiple instances of Retool representing multiple environments: development, staging, and production. Code promotion across environments is controlled via Git, so that every change must be reviewed as a pull request before being promoted to a higher environment.\n\n###\n\n","completion":" With this approach, engineers can safely build Retool apps on the development instance as well as run tests & perform QA on the staging instance; end-users can access the applications on the production instance. END"}
{"prompt":"With this approach, engineers can safely build Retool apps on the development instance as well as run tests & perform QA on the staging instance; end-users can access the applications on the production instance.\n\n###\n\n","completion":" **Note:** you must be on version `2.41.13` or later to use Git syncing. END"}
{"prompt":"Git syncing overview\n\n###\n\n","completion":" In the below diagram, the development instance is configured to continually push changes to a `dev` branch. The staging and production instances are configured to automatically watch and deploy code from the `staging` and `master` branches, respectively. END"}
{"prompt":"In the below diagram, the development instance is configured to continually push changes to a `dev` branch. The staging and production instances are configured to automatically watch and deploy code from the `staging` and `master` branches, respectively.\n\n###\n\n","completion":" In this setup, engineers will only have access to build and edit applications on the development instance of Retool. The apps on the staging and production instances are locked from changes in the Retool user interface (i.e. the instance is read-only). END"}
{"prompt":"In this setup, engineers will only have access to build and edit applications on the development instance of Retool. The apps on the staging and production instances are locked from changes in the Retool user interface (i.e. the instance is read-only).\n\n###\n\n","completion":" At your own cadence, you can merge changes from `dev` to `staging` to `production`. END"}
{"prompt":"At your own cadence, you can merge changes from `dev` to `staging` to `production`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e8abdb4-retool-git-syncing.png) END"}
{"prompt":"Setting up Retool Git syncing with GitHub\n\n###\n\n","completion":" As you set up Git syncing, note that this is a unidirectional process. Any individual Retool instance can either push changes to your Git repository _or_ pull changes from it. END"}
{"prompt":"As you set up Git syncing, note that this is a unidirectional process. Any individual Retool instance can either push changes to your Git repository _or_ pull changes from it.\n\n###\n\n","completion":" A typical setup will include: END"}
{"prompt":"1. Create an empty Git repository\n\n###\n\n","completion":" In order to set up Git syncing, we'll need to initialize an empty repository following these steps: END"}
{"prompt":"In order to set up Git syncing, we'll need to initialize an empty repository following these steps:\n\n###\n\n","completion":" Go to GitHub and create a new repository. END"}
{"prompt":"Go to GitHub and create a new repository.\n\n###\n\n","completion":" Create a new local directory and clone the repository: END"}
{"prompt":"Create a new local directory and clone the repository:\n\n###\n\n","completion":" Navigate into the repository: END"}
{"prompt":"Navigate into the repository:\n\n###\n\n","completion":" Create an empty commit using the `--allow-empty` flag: END"}
{"prompt":"Create an empty commit using the `--allow-empty` flag:\n\n###\n\n","completion":" Push this up to GitHub: END"}
{"prompt":"Push this up to GitHub:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/060f277-empty_repo.png) END"}
{"prompt":"2. Get your public key and connect to your branch\n\n###\n\n","completion":" As an admin, login to Retool and go to **Settings** > **Advanced**. Toward the bottom of the page, there is a section for **Git Syncing URL and Branch**. END"}
{"prompt":"As an admin, login to Retool and go to **Settings** > **Advanced**. Toward the bottom of the page, there is a section for **Git Syncing URL and Branch**.\n\n###\n\n","completion":" Enter your GitHub URL and branch name and click \"Save\". Make sure you enter the SSH URL, **not** the HTTPS URL. The SSH URL should mirror this format: END"}
{"prompt":"Enter your GitHub URL and branch name and click \"Save\". Make sure you enter the SSH URL, **not** the HTTPS URL. The SSH URL should mirror this format:\n\n###\n\n","completion":" Your Retool instance provides a public key to authorize Git syncing. Click the blue link to **Download Retool's public key**. Open the `retool.pub` file and copy the entire key to your clipboard. END"}
{"prompt":"Your Retool instance provides a public key to authorize Git syncing. Click the blue link to **Download Retool's public key**. Open the `retool.pub` file and copy the entire key to your clipboard.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c66ac23-Screen_Shot_2019-06-16_at_10.45.08_PM.png) END"}
{"prompt":"3. Configure the Deploy Key in GitHub\n\n###\n\n","completion":" Navigate back to your GitHub repository and click on the **Settings** tab, then click **Deploy Keys** on the left sidebar. Click **Add Deploy Key**, give it a title, and paste the Retool public key from your clipboard. END"}
{"prompt":"Navigate back to your GitHub repository and click on the **Settings** tab, then click **Deploy Keys** on the left sidebar. Click **Add Deploy Key**, give it a title, and paste the Retool public key from your clipboard.\n\n###\n\n","completion":" Make sure you check the box for **Allow Write Access** so that Retool can commit to this repository. END"}
{"prompt":"Make sure you check the box for **Allow Write Access** so that Retool can commit to this repository.\n\n###\n\n","completion":" ![Add Retool's public key to your Git repository. Make sure you grant write access.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0ce7805-Screen_Shot_2019-06-12_at_7.28.22_PM.png) END"}
{"prompt":"4. Test that syncing works\n\n###\n\n","completion":" Create a new app or make a change to an existing app in Retool. After about 10 seconds, you should should see the changes syncing to your repository. END"}
{"prompt":"Create a new app or make a change to an existing app in Retool. After about 10 seconds, you should should see the changes syncing to your repository.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/717c677-Screen_Shot_2019-06-12_at_7.41.03_PM.png) END"}
{"prompt":"Configure a read-only Retool instance\n\n###\n\n","completion":" A common setup is to have your production Retool instance be read-only. This is required to sync apps from GitHub to your Retool instance. By configuring this feature, you will disable making any changes to production Retool apps from the browser and force all changes to be read from the Git repository. END"}
{"prompt":"A common setup is to have your production Retool instance be read-only. This is required to sync apps from GitHub to your Retool instance. By configuring this feature, you will disable making any changes to production Retool apps from the browser and force all changes to be read from the Git repository.\n\n###\n\n","completion":" Before configuring a **read-only** instance of Retool, make sure you've already configured a separate instance to push changes to an existing repository. END"}
{"prompt":"1. Lock the instance from in-app changes\n\n###\n\n","completion":" To lock your instance from in-app changes, define the following environment variable in your `docker.env` file: END"}
{"prompt":"2. Create a new branch in your GitHub repository\n\n###\n\n","completion":" From the command line or GitHub UI, create a new branch for this instance to follow. Give it a name that makes sense for this instance (e.g. `staging` for the staging instance). END"}
{"prompt":"3. Get your public key and connect to your branch\n\n###\n\n","completion":" As an admin, login to Retool and go to **Settings** > **Advanced**. Toward the bottom of the page, there is a section for **Git Syncing URL and Branch**. END"}
{"prompt":"4. Configure the Deploy Key in GitHub\n\n###\n\n","completion":" Navigate back to your GitHub repository and click on the **Settings** tab, then click **Deploy Keys** on the left sidebar. Click **Add Deploy Key**, give it a title, and paste the Retool public key from your clipboard. END"}
{"prompt":"Navigate back to your GitHub repository and click on the **Settings** tab, then click **Deploy Keys** on the left sidebar. Click **Add Deploy Key**, give it a title, and paste the Retool public key from your clipboard.\n\n###\n\n","completion":" ![Adding the deploy key of the read-only instance to the repository. Leave the option for \"Allow write access\" unchecked.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0aa31bc-Screen_Shot_2021-02-23_at_9.49.32_PM.jpg) END"}
{"prompt":"![Adding the deploy key of the read-only instance to the repository. Leave the option for \"Allow write access\" unchecked.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0aa31bc-Screen_Shot_2021-02-23_at_9.49.32_PM.jpg)\n\n###\n\n","completion":" Write access is not required as the instance is read-only. Enabling this option may cause unexpected behavior. END"}
{"prompt":"5. Test that syncing works\n\n###\n\n","completion":" Wait a few moments and then refresh the Retool page in the browser. You should now see the same apps from your GitHub repository appear in Retool. END"}
{"prompt":"Retool application DSL\n\n###\n\n","completion":" Retool encodes data for each Retool application internally using an extension of JSON. While effective, it is a format that makes it difficult to visualize change history, so instead of directly storing this data in version control, Retool reformats the data into a YAML file. END"}
{"prompt":"Retool encodes data for each Retool application internally using an extension of JSON. While effective, it is a format that makes it difficult to visualize change history, so instead of directly storing this data in version control, Retool reformats the data into a YAML file.\n\n###\n\n","completion":" A simple page that with a table showing data from a query might be represented as follows: END"}
{"prompt":"A simple page that with a table showing data from a query might be represented as follows:\n\n###\n\n","completion":" Every save in Retool automatically triggers a new commit message in the repository. END"}
{"prompt":"title: \"Connect to GitHub\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect GitHub to Retool.\"\nhidden: false\nmetadata: \n\n###\n\n","completion":" You can connect to [GitHub](https:\/\/github.com) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with GitHub data using GraphQL. END"}
{"prompt":"You can connect to [GitHub](https:\/\/github.com) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with GitHub data using GraphQL.\n\n###\n\n","completion":" To use GitHub as a source control provider to manage your apps, resources, and workflows, go to the [Source Control](https:\/\/docs.retool.com\/docs\/source-control) documentation instead. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **GitHub** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **GitHub** resource type.\n\n###\n\n","completion":" ![Create GitHub resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/e764eb4e-75b7-4564-8fc3-99b63081568f.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the GitHub resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"Specify a name and location for the GitHub resource. Retool displays the resource name and type in query editors to help users identify them.\n\n###\n\n","completion":" Next, configure the authentication settings. Click **Continue with Personal Token** or **Continue with OAuth** to toggle between [personal access tokens](https:\/\/docs.github.com\/en\/authentication\/keeping-your-account-and-data-secure\/creating-a-personal-access-token) and [OAuth authentication](https:\/\/docs.github.com\/en\/apps\/oauth-apps\/using-oauth-apps\/authorizing-oauth-apps). END"}
{"prompt":"Personal access token\n\n###\n\n","completion":" To use a personal access token for authentication, enter the following settings. END"}
{"prompt":"To use a personal access token for authentication, enter the following settings.\n\n###\n\n","completion":" ![Use GitHub personal token](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/40ce123e-e396-4738-b506-d570f5e45d65.png) END"}
{"prompt":"OAuth\n\n###\n\n","completion":" To use OAuth for authentication, first create a new OAuth app in Github by visiting the **Developer Settings** page within your account **Settings**. Copy the **OAuth callback URL** in the Retool resource page and use it as the **Authorization callback URL** in GitHub. END"}
{"prompt":"To use OAuth for authentication, first create a new OAuth app in Github by visiting the **Developer Settings** page within your account **Settings**. Copy the **OAuth callback URL** in the Retool resource page and use it as the **Authorization callback URL** in GitHub.\n\n###\n\n","completion":" In the settings section of your GitHub app, copy the **Client ID** and **Client Secret** keys and enter them in the Retool resource settings. Select the permissions you'd like to authorize to the **Scopes** dropdown. END"}
{"prompt":"In the settings section of your GitHub app, copy the **Client ID** and **Client Secret** keys and enter them in the Retool resource settings. Select the permissions you'd like to authorize to the **Scopes** dropdown.\n\n###\n\n","completion":" ![GitHub OAuth settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/15bcbe58-3f0a-48cf-896d-a45c8991751c.png) END"}
{"prompt":"![GitHub OAuth settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/15bcbe58-3f0a-48cf-896d-a45c8991751c.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to GitHub. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Created GitHub resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/6597996e-1976-454d-8fa3-f0e89e4d33fc.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your GitHub resource is now ready to use. To interact with GitHub data, select the resource in the query editor. END"}
{"prompt":"title: \"Connect to Google Analytics\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect the Google Analytics APIs to Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool's Google Analytics integration provides a convenient UI for connecting to and querying Google Analytic's [**Management API v3**](https:\/\/developers.google.com\/analytics\/devguides\/config\/mgmt\/v3) and the [**Analytics Reporting API v4**](https:\/\/developers.google.com\/analytics\/devguides\/reporting\/core\/v4) . END"}
{"prompt":"Retool's Google Analytics integration provides a convenient UI for connecting to and querying Google Analytic's [**Management API v3**](https:\/\/developers.google.com\/analytics\/devguides\/config\/mgmt\/v3) and the [**Analytics Reporting API v4**](https:\/\/developers.google.com\/analytics\/devguides\/reporting\/core\/v4) .\n\n###\n\n","completion":" The Reporting API v4 can be used to programmatically access report data and user activity from Google Analytics properties using Universal Analytics. The Management API v3 can be used to retrieve data about your Google Analytics accounts, properties and views, as well as manage user permissions and account settings. END"}
{"prompt":"Connecting to Google Analytics\n\n###\n\n","completion":" To build Retool apps with your Google Analytics data you'll first need to create a resource for querying the Google Analytics API. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to a data source. END"}
{"prompt":"To build Retool apps with your Google Analytics data you'll first need to create a resource for querying the Google Analytics API. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to a data source.\n\n###\n\n","completion":" Get started by navigating to the **Resources** page, clicking **Create new** and then selecting **Google Analytics** as your resource type. END"}
{"prompt":"Retool hosted setup\n\n###\n\n","completion":" Retool uses OAuth to connect to Google Analytics, allowing you to authenticate with just a few clicks. END"}
{"prompt":"Retool uses OAuth to connect to Google Analytics, allowing you to authenticate with just a few clicks.\n\n###\n\n","completion":" First, Enter a name for your resource that you’ll use when querying it in the editor (e.g. “Marketing Site Google Analytics”). Next, you’ll need to decide whether you want to grant **Read and write** or **Read only** access to Retool. Retool uses the option you select here to determine the scopes passed with the OAuth request. END"}
{"prompt":"First, Enter a name for your resource that you’ll use when querying it in the editor (e.g. “Marketing Site Google Analytics”). Next, you’ll need to decide whether you want to grant **Read and write** or **Read only** access to Retool. Retool uses the option you select here to determine the scopes passed with the OAuth request.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1364f3a-GA_Cloud_Resource_PageCloud.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1364f3a-GA_Cloud_Resource_PageCloud.png)\n\n###\n\n","completion":" Click **Connect to Google Analytics** to begin Google's authorization flow. After completing the authorization flow, you should see a message indicating a successful connection. END"}
{"prompt":"Self hosted setup\n\n###\n\n","completion":" If you host Retool yourself, you'll need to provide credentials for a Google OAuth2 client. If you do not already have a client configured follow our [instructions for creating a Google OAuth2 client](https:\/\/docs.retool.com\/docs\/google-oauth-credentials). END"}
{"prompt":"If you host Retool yourself, you'll need to provide credentials for a Google OAuth2 client. If you do not already have a client configured follow our [instructions for creating a Google OAuth2 client](https:\/\/docs.retool.com\/docs\/google-oauth-credentials).\n\n###\n\n","completion":" Enter your client ID and client secret, and confirm your Google auth client has the correct callback URL. Click **Create Resource**. END"}
{"prompt":"Enter your client ID and client secret, and confirm your Google auth client has the correct callback URL. Click **Create Resource**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6365b85-GA_Onprem_Resource_PageOnPrem.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6365b85-GA_Onprem_Resource_PageOnPrem.png)\n\n###\n\n","completion":" You can now select your newly-created Google Analytics resource from the _Resource_ dropdown in in the in-app Query Editor, as well as the Query Library. END"}
{"prompt":"Advanced settings\n\n###\n\n","completion":" For resources using OAuth 2.0 authentication scheme Retool provides the option to share credentials between users or to require each user to authenticate using their own credentials. The Google Analytics resource defaults to sharing credentials between users. If you would like each app user to login with their own Google account uncheck **Share Google Analytics credentials between users** in the Advanced section. END"}
{"prompt":"For resources using OAuth 2.0 authentication scheme Retool provides the option to share credentials between users or to require each user to authenticate using their own credentials. The Google Analytics resource defaults to sharing credentials between users. If you would like each app user to login with their own Google account uncheck **Share Google Analytics credentials between users** in the Advanced section.\n\n###\n\n","completion":" To learn more about how OAuth 2.0 credentials work in Retool refer to our [API Authentication docs](https:\/\/docs.retool.com\/docs\/api-authentication#oauth-20). END"}
{"prompt":"Querying Google Analytics\n\n###\n\n","completion":" To query the APIs select your Google Analytics resource from the Resource dropdown. Then select the API you want to query from the **API** dropdown. Next select the desired API operation from the **Operation** dropdown. Note you can search through available operations by typing in the Operations dropdown field. END"}
{"prompt":"To query the APIs select your Google Analytics resource from the Resource dropdown. Then select the API you want to query from the **API** dropdown. Next select the desired API operation from the **Operation** dropdown. Note you can search through available operations by typing in the Operations dropdown field.\n\n###\n\n","completion":" Once you have selected an API operation a form will display the query and request body parameters available for the selected operation. END"}
{"prompt":"Once you have selected an API operation a form will display the query and request body parameters available for the selected operation.\n\n###\n\n","completion":" You can display the results of Google Analytics API queries as with any other query in Retool. You will have to examine the response to see which part of it you actually want to display. A good place to start looking is always in the top-level `data` field - `{{yourQuery.data}}`. END"}
{"prompt":"You can display the results of Google Analytics API queries as with any other query in Retool. You will have to examine the response to see which part of it you actually want to display. A good place to start looking is always in the top-level `data` field - `{{yourQuery.data}}`.\n\n###\n\n","completion":" If you're getting UNAUTHORIZED errors while building apps with this resource, it means you haven't authenticated your session. You can do this by pressing the Re-authenticate API button in the query editor and trying to run the query again. END"}
{"prompt":"Tips for the Reporting API v4\n\n###\n\n","completion":" The `\/reports:batchGet` endpoint of the v4 Reporting API allows you to build almost any report, but can be confusing to figure out. We suggest reviewing the Fundamentals section of the Google Analytics API docs, [especially their overview of how the Request Body needs to be formatted](https:\/\/developers.google.com\/analytics\/devguides\/reporting\/core\/v4\/basics#request_body), before you get started. Google also provides an interactive[Request Composer](https:\/\/ga-dev-tools.appspot.com\/request-composer\/) for building requests you can copy and paste into Retool. END"}
{"prompt":"The `\/reports:batchGet` endpoint of the v4 Reporting API allows you to build almost any report, but can be confusing to figure out. We suggest reviewing the Fundamentals section of the Google Analytics API docs, [especially their overview of how the Request Body needs to be formatted](https:\/\/developers.google.com\/analytics\/devguides\/reporting\/core\/v4\/basics#request_body), before you get started. Google also provides an interactive[Request Composer](https:\/\/ga-dev-tools.appspot.com\/request-composer\/) for building requests you can copy and paste into Retool.\n\n###\n\n","completion":" ![Example API request for a list of landing pages with conversion data, filtering out sessions from paid sources.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f66f63a-Sample_GA_Request.png) END"}
{"prompt":"Handling the `\/v4\/reports:batchGet` endpoint response\n\n###\n\n","completion":" The `\/v4\/reports:batchGet` endpoint returns an array of Report objects. While the Report object contains a lot of useful metadata, it takes a bit of wrangling to get the data into format useful for rendering results in a chart or table. We recommend enabling the transformer on your query and adding the following JS snippet to parse results into a useable table. END"}
{"prompt":"The `\/v4\/reports:batchGet` endpoint returns an array of Report objects. While the Report object contains a lot of useful metadata, it takes a bit of wrangling to get the data into format useful for rendering results in a chart or table. We recommend enabling the transformer on your query and adding the following JS snippet to parse results into a useable table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6fb570d-Sample_GA_Transformer.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6fb570d-Sample_GA_Transformer.png)\n\n###\n\n","completion":" Here's an example response after the transformer has been applied: END"}
{"prompt":"1. Get Google Cloud Credentials through a Service Account\n\n###\n\n","completion":" For _Service Account_ authentication, follow Google's documentation here to obtain your private key: <https:\/\/cloud.google.com\/docs\/authentication\/getting-started> END"}
{"prompt":"For _Service Account_ authentication, follow Google's documentation here to obtain your private key: <https:\/\/cloud.google.com\/docs\/authentication\/getting-started>\n\n###\n\n","completion":" You'll want to configure the Service Account with the **Storage Admin** Role. END"}
{"prompt":"You'll want to configure the Service Account with the **Storage Admin** Role.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c69e1b0-Screen_Shot_2020-07-14_at_11.38.52_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c69e1b0-Screen_Shot_2020-07-14_at_11.38.52_AM.png)\n\n###\n\n","completion":" Make sure to export as JSON! END"}
{"prompt":"2. Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"Google Cloud Storage\" as the _type_. Enter a _label_ by which you want to refer to this integration. If you're using Service Account authentication, enter your service account private key in the box provided Press \"Save\" when you're done.\n**Resources** > **Add** > **Google Cloud Storage** END"}
{"prompt":"3. Configuring Your Bucket\n\n###\n\n","completion":" If you want to be able to upload files to a GCS Bucket you'll have to configure the CORS feature in GCS. For more info see here: <https:\/\/cloud.google.com\/storage\/docs\/configuring-cors> END"}
{"prompt":"If you want to be able to upload files to a GCS Bucket you'll have to configure the CORS feature in GCS. For more info see here: <https:\/\/cloud.google.com\/storage\/docs\/configuring-cors>\n\n###\n\n","completion":" Here's an example of a JSON CORS file that you might use to enable Retool to access your Google Cloud Storage bucket. If your Retool instance isn't hosted on `retool.com`, you need to adjust the `origin` accordingly. END"}
{"prompt":"Here's an example of a JSON CORS file that you might use to enable Retool to access your Google Cloud Storage bucket. If your Retool instance isn't hosted on `retool.com`, you need to adjust the `origin` accordingly.\n\n###\n\n","completion":" And then you can run the following command to set the CORS setting on the bucket. END"}
{"prompt":"4. Create Queries\n\n###\n\n","completion":" You can now select your newly-created GCS resource from the _Resource_ dropdown when creating queries in your Retool apps. END"}
{"prompt":"You can now select your newly-created GCS resource from the _Resource_ dropdown when creating queries in your Retool apps.\n\n###\n\n","completion":" Many of the operations are directly transferrable from our [S3 Integration](https:\/\/docs.retool.com\/docs\/s3-integration-1), however see below for an example of a Filepicker uploading files to GCS. END"}
{"prompt":"Many of the operations are directly transferrable from our [S3 Integration](https:\/\/docs.retool.com\/docs\/s3-integration-1), however see below for an example of a Filepicker uploading files to GCS.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f2e2233-Screen_Shot_2020-08-24_at_2.46.31_PM.png) END"}
{"prompt":"title: \"Connect to Google Maps\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect the Google Maps Platform to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to the [Google Maps Platform](https:\/\/mapsplatform.google.com) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, you can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with various Google Maps APIs. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Google Maps resource, you need: END"}
{"prompt":"Google Cloud project configuration\n\n###\n\n","completion":" Retool authenticates with Google using an [API key](https:\/\/developers.google.com\/maps\/documentation\/places\/web-service\/get-api-key) that is associated with your Google Cloud project. Retool supports the following Google Maps Platform APIs. You must enable these APIs on the Google Cloud project associated with the API key you provide: END"}
{"prompt":"1. Create a Google Maps resource\n\n###\n\n","completion":" Sign in to your Retool organization and select the **Resources** tab, then click **Create new > Resource**. Retool provides built-in integrations for a variety of popular data sources to get started quickly. Select the **Google Maps** integration to start configuring the resource. END"}
{"prompt":"Sign in to your Retool organization and select the **Resources** tab, then click **Create new > Resource**. Retool provides built-in integrations for a variety of popular data sources to get started quickly. Select the **Google Maps** integration to start configuring the resource.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/5c500fb2-9b75-4f0c-8453-84d740ec6a26.webp) END"}
{"prompt":"2. Configure the resource\n\n###\n\n","completion":" Set the name and folder for the Google Maps resource. Retool displays the name and the resource type in query editors to help users identify them. END"}
{"prompt":"Set the name and folder for the Google Maps resource. Retool displays the name and the resource type in query editors to help users identify them.\n\n###\n\n","completion":" Next, enter your API key. This allows Retool to authenticate with Google when you run queries. You can create and manage Google Maps API keys using the [Google Cloud console](https:\/\/console.cloud.google.com\/google\/maps-apis\/overview). END"}
{"prompt":"Next, enter your API key. This allows Retool to authenticate with Google when you run queries. You can create and manage Google Maps API keys using the [Google Cloud console](https:\/\/console.cloud.google.com\/google\/maps-apis\/overview).\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/7f1d3ff3-993a-427a-aca7-64bcb1cae5b9.webp) END"}
{"prompt":"3. Save the resource\n\n###\n\n","completion":" Once finished, click **Create resource** to complete the setup. You can click **Create app** to start building a Retool app or **Back to resources** to return to the **Resources** tab. END"}
{"prompt":"Once finished, click **Create resource** to complete the setup. You can click **Create app** to start building a Retool app or **Back to resources** to return to the **Resources** tab.\n\n###\n\n","completion":" ![Resource created](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/26a85c30-fa19-4fa1-a69d-7d6f0167bd31.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Google Maps resource is now ready to use. To interact with Google Maps Platform data, select the resource in the query editor. You can select the type of data or API to use from the **Operation** dropdown menu when writing a query. END"}
{"prompt":"Your Google Maps resource is now ready to use. To interact with Google Maps Platform data, select the resource in the query editor. You can select the type of data or API to use from the **Operation** dropdown menu when writing a query.\n\n###\n\n","completion":" ![Query the Google Maps resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5a8f1bc-Google_Maps_Geocode.png) END"}
{"prompt":"Creating OAuth credentials\n\n###\n\n","completion":" ![](https:\/\/files.readme.io\/9fa3528-GCPOAuthStep1.png) END"}
{"prompt":"![](https:\/\/files.readme.io\/9fa3528-GCPOAuthStep1.png)\n\n###\n\n","completion":" ![](https:\/\/files.readme.io\/eca93af-GCPStep2OAuth.png) END"}
{"prompt":"![](https:\/\/files.readme.io\/eca93af-GCPStep2OAuth.png)\n\n###\n\n","completion":" ![](https:\/\/files.readme.io\/844c2e9-GCPStep3OAuth.png) END"}
{"prompt":"![](https:\/\/files.readme.io\/844c2e9-GCPStep3OAuth.png)\n\n###\n\n","completion":" ![](https:\/\/files.readme.io\/e9e42ac-GCPOAuthStep_4.png) END"}
{"prompt":"![](https:\/\/files.readme.io\/e9e42ac-GCPOAuthStep_4.png)\n\n###\n\n","completion":" 6.Click **Create**. You will be then be presented with a client ID and client secret that you can use to create a resource in Retool. END"}
{"prompt":"6.Click **Create**. You will be then be presented with a client ID and client secret that you can use to create a resource in Retool.\n\n###\n\n","completion":" ![](https:\/\/files.readme.io\/a136be9-GCPOAuthstep5.png) END"}
{"prompt":"title: \"Connect to Google Search Console\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect the Google Search Console API to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Google Search Console](https:\/\/search.google.com\/search-console\/about) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Google Search Console data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Google Search Console resource, you need: END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Google Search Console** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Google Search Console** resource type.\n\n###\n\n","completion":" ![Create Google Cloud Storage resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/d748cc7c-8e7c-4e7b-8177-5a0b142675b3.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Google Search Console resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"Retool Cloud setup\n\n###\n\n","completion":" Retool uses OAuth to connect to Google Search Console. You’ll need to decide whether to grant **Read and write** or **Read only** access to Retool. Retool uses the option you select here to determine the scopes passed with the OAuth request. END"}
{"prompt":"Retool uses OAuth to connect to Google Search Console. You’ll need to decide whether to grant **Read and write** or **Read only** access to Retool. Retool uses the option you select here to determine the scopes passed with the OAuth request.\n\n###\n\n","completion":" ![Configure Google Search Console on Retool Cloud](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/38f543db-5f97-4c51-8256-32fdb8c2e641.png) END"}
{"prompt":"![Configure Google Search Console on Retool Cloud](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/38f543db-5f97-4c51-8256-32fdb8c2e641.png)\n\n###\n\n","completion":" Click **Connect to Google Search Console** to begin Google's authorization flow. After completing the authorization flow, you should see a message indicating a successful connection. END"}
{"prompt":"Self-hosted Retool setup\n\n###\n\n","completion":" On self-hosted deployments, you'll need to provide credentials for a Google OAuth2 client. If you do not already have a client configured, see Retool's [instructions for creating a Google OAuth2 client](https:\/\/docs.retool.com\/docs\/google-oauth-credentials). Next, configure the required settings. END"}
{"prompt":"On self-hosted deployments, you'll need to provide credentials for a Google OAuth2 client. If you do not already have a client configured, see Retool's [instructions for creating a Google OAuth2 client](https:\/\/docs.retool.com\/docs\/google-oauth-credentials). Next, configure the required settings.\n\n###\n\n","completion":" Copy the **OAuth callback URL** to your Google auth client. Click **Create Resource**. END"}
{"prompt":"Copy the **OAuth callback URL** to your Google auth client. Click **Create Resource**.\n\n###\n\n","completion":" ![Configure Google Search Console on Self-hosted Retool](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/428f9bba-f696-43fc-97d8-c8fb349bdd1a.png) END"}
{"prompt":"Additional settings\n\n###\n\n","completion":" For resources using OAuth 2.0, Retool provides the option to share credentials between users or to require each user to authenticate using their own credentials. The Google Search Console resource defaults to sharing credentials between users. If you want each app user to log in with their own Google account, uncheck **Share Google Search Console credentials between users**. END"}
{"prompt":"For resources using OAuth 2.0, Retool provides the option to share credentials between users or to require each user to authenticate using their own credentials. The Google Search Console resource defaults to sharing credentials between users. If you want each app user to log in with their own Google account, uncheck **Share Google Search Console credentials between users**.\n\n###\n\n","completion":" To learn more about OAuth 2.0 credentials in Retool, refer to Retool's [API Authentication documentation](https:\/\/docs.retool.com\/docs\/api-authentication#oauth-20). END"}
{"prompt":"4. Save the resource\n\n###\n\n","completion":" Click **Create resource** to complete the setup. You can then click either **Create a new app now** to immediately start building a Retool app. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create a new app now** to immediately start building a Retool app.\n\n###\n\n","completion":" ![Create new app after saving Google Search Console resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/ab78aaf7-e4f4-4638-831b-172eab59d131.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Google Search Console resource is now ready to use. To interact with Google Search Console data, select the resource in the query editor. END"}
{"prompt":"title: \"Connect to Google Sheets\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your Google Sheets data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can build Retool apps using your [Google Sheets](https:\/\/docs.google.com\/spreadsheets) data. Your apps can read and write data in Google Sheets like any other data source, allowing you to [query data using SQL](https:\/\/docs.retool.com\/docs\/sql-queries#query-json-with-sql) and combine it with other data sources. END"}
{"prompt":"Create a new Google Sheets resource\n\n###\n\n","completion":" First, create a new [resource](https:\/\/docs.retool.com\/docs\/resources) to connect to Google Sheets. A resource represents a connection between Retool and your data source. It stores authentication and connection details so you can use the data in your apps. END"}
{"prompt":"First, create a new [resource](https:\/\/docs.retool.com\/docs\/resources) to connect to Google Sheets. A resource represents a connection between Retool and your data source. It stores authentication and connection details so you can use the data in your apps.\n\n###\n\n","completion":" To get started, log in to Retool and select the **Resources** tab. Click **Create new** and then select **Google Sheets**. Enter a name for the new resource (e.g., `David's Google Sheets`). END"}
{"prompt":"Authenticate with Google\n\n###\n\n","completion":" You can use one of the following authentication methods when connecting to Google, depending on the type of access you need. END"}
{"prompt":"OAuth authentication methods\n\n###\n\n","completion":" OAuth enables you to quickly authenticate with Google. You also have some control over the scope of permissions that Retool has with your Google Sheets data. END"}
{"prompt":"OAuth enables you to quickly authenticate with Google. You also have some control over the scope of permissions that Retool has with your Google Sheets data.\n\n###\n\n","completion":" You can grant Retool either **Read and write** or **Read only** access to your Google Sheets data. This option determines the scopes passed with the OAuth request. We recommend **Read and write** so that Retool can read and write spreadsheet data (e.g., create new sheets or update cell rows). END"}
{"prompt":"You can grant Retool either **Read and write** or **Read only** access to your Google Sheets data. This option determines the scopes passed with the OAuth request. We recommend **Read and write** so that Retool can read and write spreadsheet data (e.g., create new sheets or update cell rows).\n\n###\n\n","completion":" Retool's default OAuth configuration is at the user level. If you want all users in your organization to share access using your Google credentials, rather than be prompted to authenticate themselves, check the **Share Google Sheets credentials between users** option. END"}
{"prompt":"Retool's default OAuth configuration is at the user level. If you want all users in your organization to share access using your Google credentials, rather than be prompted to authenticate themselves, check the **Share Google Sheets credentials between users** option.\n\n###\n\n","completion":" ![Google Sheets OAuth options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/google-sheets\/165d0e30-4b45-4196-9e1f-691f902865b1.png) END"}
{"prompt":"![Google Sheets OAuth options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/google-sheets\/165d0e30-4b45-4196-9e1f-691f902865b1.png)\n\n###\n\n","completion":" Select the scope and whether you want to share credentials between users, then click **Connect to Google Sheets** to begin Google's authorization flow. After completing the authorization flow, you can click **Create a new app** to start building an app with Google Sheets data. END"}
{"prompt":"OAuth and Self-hosted Retool\n\n###\n\n","completion":" [Self-hosted Retool](https:\/\/docs.retool.com\/docs\/self-hosted) users must [create a Google OAuth client app](https:\/\/docs.tryretool.com\/docs\/sso-google-and-okta#section-google) before completing the OAuth authentication flow. END"}
{"prompt":"[Self-hosted Retool](https:\/\/docs.retool.com\/docs\/self-hosted) users must [create a Google OAuth client app](https:\/\/docs.tryretool.com\/docs\/sso-google-and-okta#section-google) before completing the OAuth authentication flow.\n\n###\n\n","completion":" Once you have created a Google OAuth client app, use the [Google Cloud Platform](https:\/\/console.developers.google.com\/apis\/library) console to verify that the project in the navigation bar is associated with the client app (under **Enabled APIs & Services**). You must also enable the following services in the Google API Library dashboard: END"}
{"prompt":"Once you have created a Google OAuth client app, use the [Google Cloud Platform](https:\/\/console.developers.google.com\/apis\/library) console to verify that the project in the navigation bar is associated with the client app (under **Enabled APIs & Services**). You must also enable the following services in the Google API Library dashboard:\n\n###\n\n","completion":" Once complete, you can perform the OAuth authentication flow to connect with Google Sheets. END"}
{"prompt":"Service account authentication method\n\n###\n\n","completion":" We recommend using service account authentication if you'd like to share credentials across users, but limit Retool's access to a subset of spreadsheets. This authentication flow restricts Retool's access to sheets shared with the service account email address only. END"}
{"prompt":"We recommend using service account authentication if you'd like to share credentials across users, but limit Retool's access to a subset of spreadsheets. This authentication flow restricts Retool's access to sheets shared with the service account email address only.\n\n###\n\n","completion":" First, create a new service account to use for Retool. Navigate to the [Google Sheets API credentials](https:\/\/console.cloud.google.com\/apis\/api\/sheets.googleapis.com\/credentials) in the Google Cloud Platform console, confirm that project selected in the navigation bar matches the project you'd like to use, and verify that the Google Sheets API and Google Drive API are enabled for the project. END"}
{"prompt":"First, create a new service account to use for Retool. Navigate to the [Google Sheets API credentials](https:\/\/console.cloud.google.com\/apis\/api\/sheets.googleapis.com\/credentials) in the Google Cloud Platform console, confirm that project selected in the navigation bar matches the project you'd like to use, and verify that the Google Sheets API and Google Drive API are enabled for the project.\n\n###\n\n","completion":" ![GCP console](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/google-sheets\/e33e2e0a-5239-4623-a350-b31e1fe0f2ff.png) END"}
{"prompt":"![GCP console](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/google-sheets\/e33e2e0a-5239-4623-a350-b31e1fe0f2ff.png)\n\n###\n\n","completion":" Click **Create credentials** and select **Service account**. Give your service account a name (e.g., `Retool Sheets resource`) so it's easy to identify and click **Done**. END"}
{"prompt":"Click **Create credentials** and select **Service account**. Give your service account a name (e.g., `Retool Sheets resource`) so it's easy to identify and click **Done**.\n\n###\n\n","completion":" Next, navigate to the service account settings to create a new key. Select **Keys**, then click **Add Key > Create a new key**. Select **JSON** as the key type and click **Create**. Download the JSON key for the service account and make sure to save it somewhere safe. END"}
{"prompt":"Next, navigate to the service account settings to create a new key. Select **Keys**, then click **Add Key > Create a new key**. Select **JSON** as the key type and click **Create**. Download the JSON key for the service account and make sure to save it somewhere safe.\n\n###\n\n","completion":" Finally, navigate back to the Google Sheets resource configuration screen in Retool and enter the newly created JSON private key. Retool displays a confirmation message that includes the email address associated with the service account. Make a note of this email address as you must share with it any sheets that you want Retool to access. We recommend including this email address as part of the resource name so it's easy for users to identify when they write queries. END"}
{"prompt":"Finally, navigate back to the Google Sheets resource configuration screen in Retool and enter the newly created JSON private key. Retool displays a confirmation message that includes the email address associated with the service account. Make a note of this email address as you must share with it any sheets that you want Retool to access. We recommend including this email address as part of the resource name so it's easy for users to identify when they write queries.\n\n###\n\n","completion":" ![Google Sheets resource configuration](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/google-sheets\/952f0e80-3ca6-4d92-98d5-f3b31c9675ee.png) END"}
{"prompt":"Query Google Sheets\n\n###\n\n","completion":" You can now select your new Google Sheets resource from the **Resource** dropdown when creating queries in your Retool apps. Refer to our [Interacting with Google Sheets](https:\/\/docs.retool.com\/docs\/google-sheets) tutorial for a guide to querying, and writing back to, Google Sheets with Retool. END"}
{"prompt":"You can now select your new Google Sheets resource from the **Resource** dropdown when creating queries in your Retool apps. Refer to our [Interacting with Google Sheets](https:\/\/docs.retool.com\/docs\/google-sheets) tutorial for a guide to querying, and writing back to, Google Sheets with Retool.\n\n###\n\n","completion":" Depending on how data is formatted in the spreadsheet, the Google Sheets API may return all values as strings (e.g.,`\"0.05\"`). You can use a [transformer](https:\/\/docs.retool.com\/docs\/transformers) to parse number values and use them across your app without any additional casting or parsing. You can include the following JavaScript snippet as a transformer for any Google Sheets query to parse number values. END"}
{"prompt":"Depending on how data is formatted in the spreadsheet, the Google Sheets API may return all values as strings (e.g.,`\"0.05\"`). You can use a [transformer](https:\/\/docs.retool.com\/docs\/transformers) to parse number values and use them across your app without any additional casting or parsing. You can include the following JavaScript snippet as a transformer for any Google Sheets query to parse number values.\n\n###\n\n","completion":" ![Using a query transformer to parse numerical values in a Read data Google Sheets query response](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b8fc850-ga_snippet.png) END"}
{"prompt":"Clear data from a Google sheet\n\n###\n\n","completion":" The built-in Google Sheets integration supports deleting rows, appending rows, etc., but if you need to clear a specific data range, it's often better to create a [REST API](https:\/\/docs.retool.com\/docs\/connect-api-resource) integration with [Google Sheets API](https:\/\/developers.google.com\/sheets\/api\/reference\/rest). Make sure to configure [OAuth 2.0](https:\/\/docs.retool.com\/docs\/api-authentication#oauth-20) when you create the resource as well. END"}
{"prompt":"The built-in Google Sheets integration supports deleting rows, appending rows, etc., but if you need to clear a specific data range, it's often better to create a [REST API](https:\/\/docs.retool.com\/docs\/connect-api-resource) integration with [Google Sheets API](https:\/\/developers.google.com\/sheets\/api\/reference\/rest). Make sure to configure [OAuth 2.0](https:\/\/docs.retool.com\/docs\/api-authentication#oauth-20) when you create the resource as well.\n\n###\n\n","completion":" After configuring the resource, you can then create a query to [clear](https:\/\/developers.google.com\/sheets\/api\/reference\/rest\/v4\/spreadsheets.values\/clear?hl=en) the data range. The data range parameters depend on your use case, but you can see an [example](https:\/\/community.retool.com\/t\/how-do-i-delete-data-on-a-google-sheet-from-retool\/8472\/5) in our Retool Community Forum. END"}
{"prompt":"title: \"Interact with Google Sheets data\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to build an app that interacts with data from Google Sheets.\"\nhidden: false\n\n###\n\n","completion":" Retool makes it easy for you to build apps with Google Sheets data, including connecting Google Sheets with other APIs. Retool supports reading and writing data from Google Sheets, and with our [query JSON via SQL](https:\/\/docs.retool.com\/docs\/sql-queries#query-json-with-sql), you can easily combine Google Sheets with other data sources. END"}
{"prompt":"**Building your first application with Google Sheets**\n\n###\n\n","completion":" Let’s say you’d like to build a Retool app to send invites to users who’ve signed up to be beta testers of your new product. Their contact information is stored in a Google Sheets spreadsheet in the Google Drive that you setup as your new resource. To kick off building your app, let’s first make sure your spreadsheet is properly formatted. END"}
{"prompt":"Spreadsheet requirements\n\n###\n\n","completion":" In Retool, you can specify which sheet in a Google spreadsheet from which you’d like to query data. The first row in that sheet must have column names that map to the data listed in the rows below. Here’s what a well-formatted sheet looks like: END"}
{"prompt":"In Retool, you can specify which sheet in a Google spreadsheet from which you’d like to query data. The first row in that sheet must have column names that map to the data listed in the rows below. Here’s what a well-formatted sheet looks like:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7f35766-spreadsheet_requirements_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7f35766-spreadsheet_requirements_1.png)\n\n###\n\n","completion":" Just like the example above, the sheet you query in Retool should have no additional data besides: END"}
{"prompt":"Just like the example above, the sheet you query in Retool should have no additional data besides:\n\n###\n\n","completion":" There should be no empty columns _between_ your column names. You should also avoid empty rows, as they can cause offset issues when appending data. END"}
{"prompt":"There should be no empty columns _between_ your column names. You should also avoid empty rows, as they can cause offset issues when appending data.\n\n###\n\n","completion":" To easily reference your column names in Retool, we recommend the following naming conventions: END"}
{"prompt":"To easily reference your column names in Retool, we recommend the following naming conventions:\n\n###\n\n","completion":" If you have a sheet that _does_ have some additional data in it (e.g. some summary statistics off to the right) you can instead use our [A1 notation](https:\/\/docs.retool.com\/docs\/google-sheets#a1-notation) option. It requires a bit more work to setup, so for this tutorial we instead recommend creating a new sheet that references your desired data, and formatting that new sheet as above. END"}
{"prompt":"If you have a sheet that _does_ have some additional data in it (e.g. some summary statistics off to the right) you can instead use our [A1 notation](https:\/\/docs.retool.com\/docs\/google-sheets#a1-notation) option. It requires a bit more work to setup, so for this tutorial we instead recommend creating a new sheet that references your desired data, and formatting that new sheet as above.\n\n###\n\n","completion":" Retool also queries a maximum of 26 columns, `A:Z`, by default. If you have more than 26 columns in your data, you’ll need to use [A1 notation](https:\/\/docs.retool.com\/docs\/google-sheets#a1-notation). (For example, if you have 28 columns, your A1 notation would be `A:AB`.) END"}
{"prompt":"Reading your data into a Table component\n\n###\n\n","completion":" In your app, create a new query that you’ll use to read in data from your sheet. END"}
{"prompt":"In your app, create a new query that you’ll use to read in data from your sheet.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/66d8d11-reading_your_data_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/66d8d11-reading_your_data_1.png)\n\n###\n\n","completion":" Select your Google Sheets resource from the Resource dropdown, for this example that’s “David’s Google Sheets”. Then select your desired spreadsheet, here that’s “Beta signups”. (If this is left blank, Retool will use the first sheet in the spreadsheet.) END"}
{"prompt":"Select your Google Sheets resource from the Resource dropdown, for this example that’s “David’s Google Sheets”. Then select your desired spreadsheet, here that’s “Beta signups”. (If this is left blank, Retool will use the first sheet in the spreadsheet.)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cf22031-reading_your_data_2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cf22031-reading_your_data_2.png)\n\n###\n\n","completion":" Click **Preview** to see your data in Retool! END"}
{"prompt":"Click **Preview** to see your data in Retool!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6a02c44-reading_your_data_3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6a02c44-reading_your_data_3.png)\n\n###\n\n","completion":" To save, click **Save & Run**. Next, drag a Table component onto your canvas: END"}
{"prompt":"To save, click **Save & Run**. Next, drag a Table component onto your canvas:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/272dd42-reading_your_data_4.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/272dd42-reading_your_data_4.png)\n\n###\n\n","completion":" By default, Retool’s Table component automatically populates with the `.data` of the first query you create (e.g. `query1`). In Retool, `{{query1.data}}` is an array of JSON objects, one for each row structured like his: END"}
{"prompt":"Options on your read query\n\n###\n\n","completion":" Retool provides a few different options for a read query with Google Sheets. END"}
{"prompt":"Retool provides a few different options for a read query with Google Sheets.\n\n###\n\n","completion":" **Limit:** sets an integer limit on the rows returned from your sheet, excluding your column names row. END"}
{"prompt":"**Limit:** sets an integer limit on the rows returned from your sheet, excluding your column names row.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/00c8afb-reading_your_data_5.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/00c8afb-reading_your_data_5.png)\n\n###\n\n","completion":" In the example sheet: END"}
{"prompt":"In the example sheet:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/72f0acb-spreadsheet_requirements_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/72f0acb-spreadsheet_requirements_1.png)\n\n###\n\n","completion":" A read query with a limit of 2 would return the rows for Ines and Oliver, excluding the rows for Priya, Asia, and Isaac. The following JSON would be returned: END"}
{"prompt":"A read query with a limit of 2 would return the rows for Ines and Oliver, excluding the rows for Priya, Asia, and Isaac. The following JSON would be returned:\n\n###\n\n","completion":" **Offset:** sets an integer offset on the rows returned from your sheet, excluding your column names row. END"}
{"prompt":"**Offset:** sets an integer offset on the rows returned from your sheet, excluding your column names row.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5f4723b-reading_your_data_6.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5f4723b-reading_your_data_6.png)\n\n###\n\n","completion":" Again, in the example sheet: END"}
{"prompt":"Again, in the example sheet:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5801289-spreadsheet_requirements_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5801289-spreadsheet_requirements_1.png)\n\n###\n\n","completion":" A read query with an offset of 1 would return the rows for Oliver, Priya, Asia, and Isaac and exclude the row for Ines. The following JSON would be returned: END"}
{"prompt":"A1 Notation\n\n###\n\n","completion":" If you need to select a specific section of a sheet, you can use [A1 Notation](https:\/\/developers.google.com\/sheets\/api\/guides\/concepts#a1_notation) in Retool. In this example spreadsheet, the row data starts at column B and there are some summary statistics off to the right: END"}
{"prompt":"If you need to select a specific section of a sheet, you can use [A1 Notation](https:\/\/developers.google.com\/sheets\/api\/guides\/concepts#a1_notation) in Retool. In this example spreadsheet, the row data starts at column B and there are some summary statistics off to the right:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bbbc4d5-spreadsheet_requirements_2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bbbc4d5-spreadsheet_requirements_2.png)\n\n###\n\n","completion":" To select the data from this sheet, you can write A1 notation to get the exact above cells with `B1:E6`, or to get any rows added in the future, `B:E`. To use A1 notation, click `use A1 notation`: END"}
{"prompt":"To select the data from this sheet, you can write A1 notation to get the exact above cells with `B1:E6`, or to get any rows added in the future, `B:E`. To use A1 notation, click `use A1 notation`:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8d5ffcc-reading_your_data_7.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8d5ffcc-reading_your_data_7.png)\n\n###\n\n","completion":" Add your A1 notation, here `B:E`, and your data will be returned as an array of JSON objects: END"}
{"prompt":"Add your A1 notation, here `B:E`, and your data will be returned as an array of JSON objects:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2b41b48-reading_your_data_8.png) END"}
{"prompt":"Appending rows to your data\n\n###\n\n","completion":" In this example, you'll enable the users of your app to add a new beta tester to the table. This new data will then be appended to your spreadsheet. END"}
{"prompt":"Prepare your table to accept new rows\n\n###\n\n","completion":" First, click on `table1` in the canvas, and in the Inspector, make each column editable: END"}
{"prompt":"First, click on `table1` in the canvas, and in the Inspector, make each column editable:\n\n###\n\n","completion":" ![Table showing editable columns](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1f26856a-9168-4e13-bf62-e48729962c21.png) END"}
{"prompt":"![Table showing editable columns](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1f26856a-9168-4e13-bf62-e48729962c21.png)\n\n###\n\n","completion":" Next, still in the Inspector, toggle on the **Show add row button**. END"}
{"prompt":"Next, still in the Inspector, toggle on the **Show add row button**.\n\n###\n\n","completion":" To test it out and see how Retool stores this newly added row, click the **+** button and fill out the information for a new beta tester: END"}
{"prompt":"To test it out and see how Retool stores this newly added row, click the **+** button and fill out the information for a new beta tester:\n\n###\n\n","completion":" ![Table with add new row tooltip](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/tutorials\/bde16b46-8a3f-4234-ba19-667c9a3487ca.png) END"}
{"prompt":"![Table with add new row tooltip](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/tutorials\/bde16b46-8a3f-4234-ba19-667c9a3487ca.png)\n\n###\n\n","completion":" After filling out the row in `table1`, the data for the new beta tester is stored in `table1.newRow`. END"}
{"prompt":"Create a query to append rows to your spreadsheet\n\n###\n\n","completion":" Next, create a query named `appendRow` using your Google Sheets resource and configure it with the following settings: END"}
{"prompt":"Next, create a query named `appendRow` using your Google Sheets resource and configure it with the following settings:\n\n###\n\n","completion":" ![Query inspector for appendRow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/tutorials\/72ce0638-d6e2-40f3-84e7-27678bb988c7.png) END"}
{"prompt":"Connect the appendRow query to your table\n\n###\n\n","completion":" The last step to append a row to your spreadsheet is connecting the `appendRow` query to an event handler in `table1`. Select `table1` and in the **Interaction** section of the Inspector: END"}
{"prompt":"The last step to append a row to your spreadsheet is connecting the `appendRow` query to an event handler in `table1`. Select `table1` and in the **Interaction** section of the Inspector:\n\n###\n\n","completion":" ![Save new event handler for appendRow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/tutorials\/4926de3d-52ec-4e81-99b0-827cc35f0ac8.png) END"}
{"prompt":"Updating a row\n\n###\n\n","completion":" Next, you can wire up a “Send invite text” button. You'll need to add an Action button column to the table. Click on the `table1` component to select it, then click on **New action** in the property inspector. END"}
{"prompt":"Next, you can wire up a “Send invite text” button. You'll need to add an Action button column to the table. Click on the `table1` component to select it, then click on **New action** in the property inspector.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d1733af-update_row_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d1733af-update_row_1.png)\n\n###\n\n","completion":" A new column called \"Actions\" will appear in your table, with each row featuring a button. You can rename the button by clicking on **Action 1** in the list and then changing **Action button text** to \"Send invite text\". END"}
{"prompt":"A new column called \"Actions\" will appear in your table, with each row featuring a button. You can rename the button by clicking on **Action 1** in the list and then changing **Action button text** to \"Send invite text\".\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6aa5a3f-update_row_2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6aa5a3f-update_row_2.png)\n\n###\n\n","completion":" You'd probably want to use something like the [Twilio API](https:\/\/retool.com\/integrations\/twilio) to send the text message when this button is pushed. This example, though, will just focus on updating the spreadsheet as if you’ve sent the text message successfully. END"}
{"prompt":"You'd probably want to use something like the [Twilio API](https:\/\/retool.com\/integrations\/twilio) to send the text message when this button is pushed. This example, though, will just focus on updating the spreadsheet as if you’ve sent the text message successfully.\n\n###\n\n","completion":" Next, you'll want to add a new column, `invite_text_sent`, to your spreadsheet: END"}
{"prompt":"Next, you'll want to add a new column, `invite_text_sent`, to your spreadsheet:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/57c7a4a-spreadsheet_requirements_3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/57c7a4a-spreadsheet_requirements_3.png)\n\n###\n\n","completion":" Create another new query, `update_invite_sent`, and select the **Update a spreadsheet** action. Retool needs a way to figure out which row you intend to update. To do that, you must specify a unique column and the corresponding value, such that Retool can detect the single row to update: END"}
{"prompt":"Create another new query, `update_invite_sent`, and select the **Update a spreadsheet** action. Retool needs a way to figure out which row you intend to update. To do that, you must specify a unique column and the corresponding value, such that Retool can detect the single row to update:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/927e68b-update_row_3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/927e68b-update_row_3.png)\n\n###\n\n","completion":" A good candidate for your unique column would be a primary key like id, but in this case you can use the `phone_number` column, as that is unique per beta tester. You'll want to match the phone number for whichever row the “Send invite text” button is clicked. Set your **Filter by** column to be `phone_number` and the value to be `{{ table1.selectedRow.data.phone_number }}`. Next, you'll want to turn your new column's value to `TRUE`, so in the update value field, add `{ \"invite_text_sent\": \"TRUE\" }. END"}
{"prompt":"A good candidate for your unique column would be a primary key like id, but in this case you can use the `phone_number` column, as that is unique per beta tester. You'll want to match the phone number for whichever row the “Send invite text” button is clicked. Set your **Filter by** column to be `phone_number` and the value to be `{{ table1.selectedRow.data.phone_number }}`. Next, you'll want to turn your new column's value to `TRUE`, so in the update value field, add `{ \"invite_text_sent\": \"TRUE\" }.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bea3be8-update_row_4.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bea3be8-update_row_4.png)\n\n###\n\n","completion":" You'll next need to hook up the new `update_invitation_sent` query to the action buttons in the table. With the table selected, click on the Action Button in the inspector, and set the **Action query** to the new `update_invitation_sent` query: END"}
{"prompt":"You'll next need to hook up the new `update_invitation_sent` query to the action buttons in the table. With the table selected, click on the Action Button in the inspector, and set the **Action query** to the new `update_invitation_sent` query:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7168e7b-update_row_5.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7168e7b-update_row_5.png)\n\n###\n\n","completion":" As a final step, once again set your read query as the **on success trigger** for this update query, so that the table data always matches what is in the Google sheet: END"}
{"prompt":"As a final step, once again set your read query as the **on success trigger** for this update query, so that the table data always matches what is in the Google sheet:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/04af7af-update_row_6.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/04af7af-update_row_6.png)\n\n###\n\n","completion":" That's it! Now, when you click the “Send Invite Text” button, you’ll see the “invite_text_column” update from `FALSE` to `TRUE`. END"}
{"prompt":"Value formatting\n\n###\n\n","completion":" By default, Retool fetches data from Google Sheets as formatted strings. For example, if your spreadsheet cell has a value of `1.23` formatted in USD, a query in Retool from Google Sheets will return `\"$1.23\"`. END"}
{"prompt":"By default, Retool fetches data from Google Sheets as formatted strings. For example, if your spreadsheet cell has a value of `1.23` formatted in USD, a query in Retool from Google Sheets will return `\"$1.23\"`.\n\n###\n\n","completion":" Let’s take a look at our Beta Invites example spreadsheet (we’ve added one more column, `num_users` so we can work with numeric values): END"}
{"prompt":"Let’s take a look at our Beta Invites example spreadsheet (we’ve added one more column, `num_users` so we can work with numeric values):\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/97642d1-Docs_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/97642d1-Docs_1.png)\n\n###\n\n","completion":" When you inspect the returned results of a query by hovering over it, you can see the formatted strings: END"}
{"prompt":"When you inspect the returned results of a query by hovering over it, you can see the formatted strings:\n\n###\n\n","completion":" ![Notice \"10\" vs. 10](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ecf47e3-Docs_2.png) END"}
{"prompt":"![Notice \"10\" vs. 10](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ecf47e3-Docs_2.png)\n\n###\n\n","completion":" Formatted strings work well when you are: END"}
{"prompt":"Formatted strings work well when you are:\n\n###\n\n","completion":" Formatted strings do not work well when you try to apply Retool’s column formats to them. For example, a formatted boolean from Google Sheets is `\"TRUE\"` or `\"FALSE\"` , resulting in an always checked Checkbox as both values evaluate to `true`: END"}
{"prompt":"Formatted strings do not work well when you try to apply Retool’s column formats to them. For example, a formatted boolean from Google Sheets is `\"TRUE\"` or `\"FALSE\"` , resulting in an always checked Checkbox as both values evaluate to `true`:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/45e7a5c-DOCS_3.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/45e7a5c-DOCS_3.gif)\n\n###\n\n","completion":" Additionally, any column sorting will be string based, which is likely not what you want when sorting columns that are numbers in your spreadsheet, but formatted strings when pulled into Retool: END"}
{"prompt":"Additionally, any column sorting will be string based, which is likely not what you want when sorting columns that are numbers in your spreadsheet, but formatted strings when pulled into Retool:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2f75a02-DOCS_4.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2f75a02-DOCS_4.png)\n\n###\n\n","completion":" As you can see, a lot of Retool’s table features don’t work as well out of the box with formatted strings so we recently built the ability to read in unformatted typed values from Google Sheets. END"}
{"prompt":"Unformatted typed values\n\n###\n\n","completion":" Now, if your Google spreadsheet has multiple data types, like booleans and numbers, you can instead choose to read in those typed values by selecting “Read data as typed values” in the Data Types section of your read query in the Query Editor. We default you to the original behavior, formatted strings: END"}
{"prompt":"Now, if your Google spreadsheet has multiple data types, like booleans and numbers, you can instead choose to read in those typed values by selecting “Read data as typed values” in the Data Types section of your read query in the Query Editor. We default you to the original behavior, formatted strings:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/dc97511-Docs_5.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/dc97511-Docs_5.png)\n\n###\n\n","completion":" But you can now switch to read in unformatted typed values: END"}
{"prompt":"But you can now switch to read in unformatted typed values:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/570943f-DOCS_6.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/570943f-DOCS_6.png)\n\n###\n\n","completion":" Here’s an example of changing a query over to unformatted typed values. You’ll notice that Retool automatically detects the column format and allows other formats to be applied correctly. Also, sorting now works as you’d expect: END"}
{"prompt":"Here’s an example of changing a query over to unformatted typed values. You’ll notice that Retool automatically detects the column format and allows other formats to be applied correctly. Also, sorting now works as you’d expect:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/70fb4d5-DOCS_7.gif) END"}
{"prompt":"Updating a table with unformatted values\n\n###\n\n","completion":" Earlier in our tutorial we walked through how to update data in your spreadsheet from changes in your Retool table. If the value in your “Filter by” is populated from a table, e.g. `{{table1.selectedRow.data.id}}`, and that table reads from a query with unformatted typed values, then we need to make the same distinction in our update query so that we can properly match rows from our Google spreadsheet. END"}
{"prompt":"Earlier in our tutorial we walked through how to update data in your spreadsheet from changes in your Retool table. If the value in your “Filter by” is populated from a table, e.g. `{{table1.selectedRow.data.id}}`, and that table reads from a query with unformatted typed values, then we need to make the same distinction in our update query so that we can properly match rows from our Google spreadsheet.\n\n###\n\n","completion":" Again, by default we will check “Compare formatted spreadsheet cell values,” but uncheck it like in the screenshot below to compare via unformatted typed values: END"}
{"prompt":"Again, by default we will check “Compare formatted spreadsheet cell values,” but uncheck it like in the screenshot below to compare via unformatted typed values:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/146bde5-DOCS_8.png) END"}
{"prompt":"New: Bulk update a spreadsheet by primary key\n\n###\n\n","completion":" Previously, bulk updating a spreadsheet from a table required a lot of custom JS in Retool, so we built an action for it! END"}
{"prompt":"Previously, bulk updating a spreadsheet from a table required a lot of custom JS in Retool, so we built an action for it!\n\n###\n\n","completion":" First, make sure that your data set in your Google Sheet has a primary key column — any column that has a unique value per row is a good candidate (e.g. a unique ID). END"}
{"prompt":"First, make sure that your data set in your Google Sheet has a primary key column — any column that has a unique value per row is a good candidate (e.g. a unique ID).\n\n###\n\n","completion":" In our example spreadsheet, we could use `phone_number` as the primary key: END"}
{"prompt":"In our example spreadsheet, we could use `phone_number` as the primary key:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4c4ce13-bu_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4c4ce13-bu_1.png)\n\n###\n\n","completion":" If your data set does not have a primary key, you can add a simple row number to identify your row: END"}
{"prompt":"If your data set does not have a primary key, you can add a simple row number to identify your row:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6f27d66-bu_2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6f27d66-bu_2.png)\n\n###\n\n","completion":" Now, let’s say you've set up a query to read your data from your Google Sheet into a table: END"}
{"prompt":"Now, let’s say you've set up a query to read your data from your Google Sheet into a table:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b0a7a16-bu_3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b0a7a16-bu_3.png)\n\n###\n\n","completion":" Make sure that you make any columns you want to change **editable** (you can learn more about Retool's Table component in [Working With Tables](https:\/\/docs.retool.com\/docs\/tables): END"}
{"prompt":"Make sure that you make any columns you want to change **editable** (you can learn more about Retool's Table component in [Working With Tables](https:\/\/docs.retool.com\/docs\/tables):\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0b1ec77-bu_4.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0b1ec77-bu_4.png)\n\n###\n\n","completion":" Now, you need to create your bulk update query and set it up so that it is triggered when you edit your table. END"}
{"prompt":"Now, you need to create your bulk update query and set it up so that it is triggered when you edit your table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fa80800-bu_5.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fa80800-bu_5.png)\n\n###\n\n","completion":" Lastly, remember to re-run your read query to populate your table with the updated values: END"}
{"prompt":"Lastly, remember to re-run your read query to populate your table with the updated values:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fc6a48e-bu_6.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fc6a48e-bu_6.png)\n\n###\n\n","completion":" Now, you can edit multiple rows at once, click **Save Changes** and see those updates in your Google Spreadsheet! END"}
{"prompt":"Now, you can edit multiple rows at once, click **Save Changes** and see those updates in your Google Spreadsheet!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8976165-bu_6.gif) END"}
{"prompt":"Bulk update via JS Loop\n\n###\n\n","completion":" If the action to bulk update a spreadsheet by primary key described above does not work for you, drop us a note at support@retool.com. You can also still use the following set of instructions to loop through each change to a row in the table, and trigger a single row update query for each change. END"}
{"prompt":"If the action to bulk update a spreadsheet by primary key described above does not work for you, drop us a note at support@retool.com. You can also still use the following set of instructions to loop through each change to a row in the table, and trigger a single row update query for each change.\n\n###\n\n","completion":" Here’s the table as it exists right now, after previously making all of the columns editable: END"}
{"prompt":"Here’s the table as it exists right now, after previously making all of the columns editable:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7f4e3f-bulk_update_1.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7f4e3f-bulk_update_1.png)\n\n###\n\n","completion":" When you edit any cell, Retool adds the updated row to the `table1.recordUpdates` array. Also, you can click into the left panel to see the value of `recordUpdates` at any point in time. Try changing Priya's `interested_in_beta_testing` status from “FALSE” to “TRUE”: END"}
{"prompt":"When you edit any cell, Retool adds the updated row to the `table1.recordUpdates` array. Also, you can click into the left panel to see the value of `recordUpdates` at any point in time. Try changing Priya's `interested_in_beta_testing` status from “FALSE” to “TRUE”:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0d18e1a-bulk_update_2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0d18e1a-bulk_update_2.png)\n\n###\n\n","completion":" Now you can write a row update query that will map to a single entry in `recordUpdates`. As before, you need to tell Retool which row to update, so we’ll use a filter on `phone_number` again, since it is a unique column value per row. Set the update value to be `{{ table1.recordUpdates[i] }}`. END"}
{"prompt":"Now you can write a row update query that will map to a single entry in `recordUpdates`. As before, you need to tell Retool which row to update, so we’ll use a filter on `phone_number` again, since it is a unique column value per row. Set the update value to be `{{ table1.recordUpdates[i] }}`.\n\n###\n\n","completion":" The `i` variable will evaluate as 0 by default, making this a single update to the row filtered by `table1.recordUpdates[0].phone_number`. The values that are `table1.recordUpdates[0]` will be written to your Google sheet, effectively replacing the entire row with the updated values from Retool. END"}
{"prompt":"The `i` variable will evaluate as 0 by default, making this a single update to the row filtered by `table1.recordUpdates[0].phone_number`. The values that are `table1.recordUpdates[0]` will be written to your Google sheet, effectively replacing the entire row with the updated values from Retool.\n\n###\n\n","completion":" Next, create a new **Run JS Code** query to trigger the `update_row` query for each item in the `recordUpdates` array. Rename it to `bulk_update`. END"}
{"prompt":"Next, create a new **Run JS Code** query to trigger the `update_row` query for each item in the `recordUpdates` array. Rename it to `bulk_update`.\n\n###\n\n","completion":" Here you'll define `i` for each instance in the [additionalScope object](\/reference\/javascript-api-methods-query#querytrigger) option on the `.trigger()` JS Method, and that `i` value will overwrite the default value. If the item is the last update, then you'll trigger your read query, `query1` , to reload and show all of the changes in the table. END"}
{"prompt":"Here you'll define `i` for each instance in the [additionalScope object](\/reference\/javascript-api-methods-query#querytrigger) option on the `.trigger()` JS Method, and that `i` value will overwrite the default value. If the item is the last update, then you'll trigger your read query, `query1` , to reload and show all of the changes in the table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7359f0f-bulk_update_3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7359f0f-bulk_update_3.png)\n\n###\n\n","completion":" Here’s the code above: END"}
{"prompt":"Here’s the code above:\n\n###\n\n","completion":" Last step! Set the table to use this JS Query as its \"Bulk update action\" setting in the inspector under the \"Table Edit Queries\" section of the table settings. That will cause the table to trigger the `bulk_updates` query when the \"Save Changes\" button is clicked by the user. END"}
{"prompt":"Last step! Set the table to use this JS Query as its \"Bulk update action\" setting in the inspector under the \"Table Edit Queries\" section of the table settings. That will cause the table to trigger the `bulk_updates` query when the \"Save Changes\" button is clicked by the user.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1a7984f-bulk_update_4.png) END"}
{"prompt":"title: \"Connect to GraphQL APIs\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your GraphQL endpoints to Retool.\"\nhidden: false\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/qUwD3uTwUtU%3Ffeature%3Doembed&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DqUwD3uTwUtU&image=https%3A\/\/i.ytimg.com\/vi\/qUwD3uTwUtU\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?v=qUwD3uTwUtU&feature=youtu.be\",\n\"title\": \"Connecting a GraphQL Endpoint to Retool\",\n\"favicon\": \"https:\/\/s.ytimg.com\/yts\/img\/favicon-vfl8qSV2F.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/qUwD3uTwUtU\/hqdefault.jpg\"\n}\n[\/block] END"}
{"prompt":"Adding your GraphQL endpoint as a resource\n\n###\n\n","completion":" Create a new resource in Retool and select \"GraphQL\" as the _type_. Enter your API endpoint in the \"Base URL\" field. Depending on how authentication is set up for your API, you may need to enter URL parameters or headers, or set the method via the \"Authentication\" dropdown. END"}
{"prompt":"Create a new resource in Retool and select \"GraphQL\" as the _type_. Enter your API endpoint in the \"Base URL\" field. Depending on how authentication is set up for your API, you may need to enter URL parameters or headers, or set the method via the \"Authentication\" dropdown.\n\n###\n\n","completion":" See [here](https:\/\/docs.retool.com\/docs\/apis#section-api-authentication) for more details on authentication. END"}
{"prompt":"See [here](https:\/\/docs.retool.com\/docs\/apis#section-api-authentication) for more details on authentication.\n\n###\n\n","completion":" **Resources** > **Add** > **GraphQL** END"}
{"prompt":"**Resources** > **Add** > **GraphQL**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c44f9eb-Screen_Shot_2021-06-10_at_8.26.25_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c44f9eb-Screen_Shot_2021-06-10_at_8.26.25_PM.png)\n\n###\n\n","completion":" Once you have entered your credentials you can click \"Test Connection\" to validate them. END"}
{"prompt":"Once you have entered your credentials you can click \"Test Connection\" to validate them.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4d32e31-ScreenRecording2021-06-10at08.21.14PM.gif) END"}
{"prompt":"Using GraphQL without adding a resource\n\n###\n\n","completion":" It is also possible to connect to a GraphQL endpoint directly in the Retool interface by pasting the GraphQL endpoint URL directly into the query panel \"URL\" field. END"}
{"prompt":"It is also possible to connect to a GraphQL endpoint directly in the Retool interface by pasting the GraphQL endpoint URL directly into the query panel \"URL\" field.\n\n###\n\n","completion":" You can add any necessary tokens in the \"Headers\" and \"URL Parameters\" input fields. END"}
{"prompt":"You can add any necessary tokens in the \"Headers\" and \"URL Parameters\" input fields.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c64fe1d-Screen_Shot_2021-06-11_at_8.44.50_AM.png) END"}
{"prompt":"2. GraphQL Queries\n\n###\n\n","completion":" You can now select your newly-created GraphQL resource from the _Resource_ dropdown when creating queries in your Retool apps. END"}
{"prompt":"Query Arguments and Variables\n\n###\n\n","completion":" GraphQL queries have one main distinction from other queries in Retool — arguments. Instead of putting Retool variables (e.g. `{{textInput.value}}`) directly into the query body, you can specify arguments within the query body and bind them to Retool variables via the \"Variables\" section underneath the editor. This makes your queries much neater. END"}
{"prompt":"Automatic refreshing\n\n###\n\n","completion":" We parse the GraphQL query. If it's a mutation, we won't automatically refresh the query every time the parameters change. (Much like `POST` requests in REST APIs.) END"}
{"prompt":"Query introspection and auto-completion\n\n###\n\n","completion":" We read the schema from your introspection endpoint, and use it for autocomplete and linting. END"}
{"prompt":"Dynamic fields in GraphQL query body\n\n###\n\n","completion":" For most situations, using query arguments and variables (above) should be enough. However, in certain situations (e.g. dynamically selecting fields to query for), you may want to use JavaScript in the query body. END"}
{"prompt":"For most situations, using query arguments and variables (above) should be enough. However, in certain situations (e.g. dynamically selecting fields to query for), you may want to use JavaScript in the query body.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0426714-Screen_Shot_2021-06-25_at_2.47.01_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0426714-Screen_Shot_2021-06-25_at_2.47.01_PM.png)\n\n###\n\n","completion":" You can explore the schema using the schema panel on the right side of the bottom panel. END"}
{"prompt":"You can explore the schema using the schema panel on the right side of the bottom panel.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/37b44d3-ScreenRecording2021-06-10at08.07.50PM.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/37b44d3-ScreenRecording2021-06-10at08.07.50PM.gif)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1236256-Screen_Shot_2021-06-11_at_8.52.46_AM.png) END"}
{"prompt":"Auto-formatting\n\n###\n\n","completion":" To reformat your GraphQL query nicely, press the Format button in the **...** menu in the top bar or press ⌘+L. END"}
{"prompt":"To reformat your GraphQL query nicely, press the Format button in the **...** menu in the top bar or press ⌘+L.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fb46d60-Screen_Shot_2021-06-11_at_8.58.14_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fb46d60-Screen_Shot_2021-06-11_at_8.58.14_AM.png)\n\n###\n\n","completion":" You can display the results of GraphQL queries as with any other query in Retool. END"}
{"prompt":"You can display the results of GraphQL queries as with any other query in Retool.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/02f483e-Screen_Shot_2018-10-03_at_4.04.03_PM.png) END"}
{"prompt":"3. GraphQL Mutations\n\n###\n\n","completion":" You can run GraphQL mutations the same way you would run a query. With mutations you are likely to have some input variables. END"}
{"prompt":"You can run GraphQL mutations the same way you would run a query. With mutations you are likely to have some input variables.\n\n###\n\n","completion":" You can define input variables and their types as seen in the example below. You can then populate the variables input field with the appropriate values. END"}
{"prompt":"You can define input variables and their types as seen in the example below. You can then populate the variables input field with the appropriate values.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/80f42a0-Screen_Shot_2021-06-11_at_10.35.17_AM.png) END"}
{"prompt":"GraphQL Server-side Pagination\n\n###\n\n","completion":" The Retool table component supports GraphQL Relay based pagination which allows you to pass a cursor to the endpoint and return a subset of the values. END"}
{"prompt":"The Retool table component supports GraphQL Relay based pagination which allows you to pass a cursor to the endpoint and return a subset of the values.\n\n###\n\n","completion":" To do this, enable \"Server Side Pagination\" in your table component settings, specify the pagination type as \"GraphQL Relay cursor based\" and populate values for your \"Previous page\" and \"Next page\" cursors. END"}
{"prompt":"To do this, enable \"Server Side Pagination\" in your table component settings, specify the pagination type as \"GraphQL Relay cursor based\" and populate values for your \"Previous page\" and \"Next page\" cursors.\n\n###\n\n","completion":" For more details, see the guide to [Server side pagination](https:\/\/docs.retool.com\/docs\/server-side-pagination#graphql-relay-cursor-based). END"}
{"prompt":"Templates using GraphQL\n\n###\n\n","completion":" You can explore a number of templates using GraphQL in the Retool product. END"}
{"prompt":"title: \"Connect to gRPC\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your gRPC endpoints to Retool.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In addition to REST and GraphQL based APIs, Retool supports connecting to services via gRPC. Here is how you can setup gRPC endpoints for your deployment. END"}
{"prompt":"1. Update Retool to the latest build\n\n###\n\n","completion":" `.\/update_retool.sh` END"}
{"prompt":"2. Add proto files\n\n###\n\n","completion":" On the host machine create a protos\/ folder and add the .proto files into there END"}
{"prompt":"3. Mount Volumes\n\n###\n\n","completion":" In the `docker-compose.yml` add END"}
{"prompt":"In the `docker-compose.yml` add\n\n###\n\n","completion":" to the 3 volume sections for api, db-connector and db-ssh-connector END"}
{"prompt":"4. Add folder path ENV Variable\n\n###\n\n","completion":" In `docker.env` add the path to the proto files END"}
{"prompt":"In `docker.env` add the path to the proto files\n\n###\n\n","completion":" Retool will automatically include the Google proto files and the `\/retool_backend\/protos` folder in the include directories. If your proto files use imports which rely on a different base folder you can add that directory to the `PROTO_IMPORT_DIRECTORY_PATH` environment variable and it will also include that path. END"}
{"prompt":"Creating a gRPC Resource\n\n###\n\n","completion":" &nbsp; END"}
{"prompt":"&nbsp;\n\n###\n\n","completion":" Now that your proto files are setup you should be able to select gRPC under APIs and see the service names for your proto files in the list: END"}
{"prompt":"Now that your proto files are setup you should be able to select gRPC under APIs and see the service names for your proto files in the list:\n\n###\n\n","completion":" ![Form for a new gRPC resource. Service names are parsed from the proto files.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_F98570A0013F1AD1DF0E655A9DD2404DEE499ADE56FEB2B8399DF85D68F79D3E_1592253488548_Screen%2BShot%2B2020-06-15%2Bat%2B1.37.58%2BPM.png) END"}
{"prompt":"Self-signed and client certs\n\n###\n\n","completion":" For self signed certs you can set the path to the `.pem` file in the `NODE_EXTRA_CA_CERTS` environment variable: <https:\/\/docs.retool.com\/docs\/configure-ssl-certificates> END"}
{"prompt":"For self signed certs you can set the path to the `.pem` file in the `NODE_EXTRA_CA_CERTS` environment variable: <https:\/\/docs.retool.com\/docs\/configure-ssl-certificates>\n\n###\n\n","completion":" For client side certs you can add those into the resource form: END"}
{"prompt":"For client side certs you can add those into the resource form:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a9f5558-Screen_Shot_2021-07-22_at_2.28.20_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a9f5558-Screen_Shot_2021-07-22_at_2.28.20_PM.png)\n\n###\n\n","completion":" Once you have a resource connected you can create a query using it. The methods\/rpc’s for that service will be available in the query. Placeholder JSON is generated to match the Request message. END"}
{"prompt":"Once you have a resource connected you can create a query using it. The methods\/rpc’s for that service will be available in the query. Placeholder JSON is generated to match the Request message.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_F98570A0013F1AD1DF0E655A9DD2404DEE499ADE56FEB2B8399DF85D68F79D3E_1592253641276_Screen%2BShot%2B2020-06-15%2Bat%2B1.39.18%2BPM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_F98570A0013F1AD1DF0E655A9DD2404DEE499ADE56FEB2B8399DF85D68F79D3E_1592253641276_Screen%2BShot%2B2020-06-15%2Bat%2B1.39.18%2BPM.png)\n\n###\n\n","completion":" Then you can use your query in your apps END"}
{"prompt":"Then you can use your query in your apps\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_F98570A0013F1AD1DF0E655A9DD2404DEE499ADE56FEB2B8399DF85D68F79D3E_1592253864734_Screen%2BRecording%2B2020-06-15%2Bat%2B01.43%2BPM.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_F98570A0013F1AD1DF0E655A9DD2404DEE499ADE56FEB2B8399DF85D68F79D3E_1592253864734_Screen%2BRecording%2B2020-06-15%2Bat%2B01.43%2BPM.gif)\n\n###\n\n","completion":" Let us know if you have any questions or run into any roadblocks! END"}
{"prompt":"title: \"Header frame and changes to Retool-specific navigation\"\ncategorySlug: \"legacy\"\nexcerpt: \"Explore the new functionality and changes to Retool-specific navigation like browsing apps and production\/staging toggles.\"\nhidden: true\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8805a12-CleanShot_2021-07-25_at_23.09.562x.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8805a12-CleanShot_2021-07-25_at_23.09.562x.png)\n\n###\n\n","completion":" A few months back, we introduced an opt-in, customizable Header frame in Retool, ideal for adding custom navigation to all of your Retool apps. As of on-premise version 2.95, this Header frame will be on by default for all users. END"}
{"prompt":"A few months back, we introduced an opt-in, customizable Header frame in Retool, ideal for adding custom navigation to all of your Retool apps. As of on-premise version 2.95, this Header frame will be on by default for all users.\n\n###\n\n","completion":" To accommodate this functionality, we’ve made some changes to how the app navigation bar and [custom branding](https:\/\/docs.retool.com\/docs\/custom-branding) work. END"}
{"prompt":"Retool-specific navigation\n\n###\n\n","completion":" Previously, all Retool apps featured a navigation bar at the top, with the Retool logo (or your custom branding logo) on the left and a user menu, search icon, app navigation menu, and some edit and share functionality on the right. Additionally, there was a toggle to switch between production and staging environments. END"}
{"prompt":"Previously, all Retool apps featured a navigation bar at the top, with the Retool logo (or your custom branding logo) on the left and a user menu, search icon, app navigation menu, and some edit and share functionality on the right. Additionally, there was a toggle to switch between production and staging environments.\n\n###\n\n","completion":" ![Previous default navigation UI](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ce3b6e8-OldHeader.png) END"}
{"prompt":"![Previous default navigation UI](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ce3b6e8-OldHeader.png)\n\n###\n\n","completion":" When we set out to introduce a custom navigation component, we knew this configuration would need to change — stacking an app's custom navigation on top of this existing app navigation was not an ideal solution. END"}
{"prompt":"When we set out to introduce a custom navigation component, we knew this configuration would need to change — stacking an app's custom navigation on top of this existing app navigation was not an ideal solution.\n\n###\n\n","completion":" We want editors to have flexibility when it comes to the appearance of their Retool apps. By eliminating the default navigation bar, we give you full control over how your apps and custom headers appear to your end-users. Now, your viewers will only see your custom navigation bar. END"}
{"prompt":"We want editors to have flexibility when it comes to the appearance of their Retool apps. By eliminating the default navigation bar, we give you full control over how your apps and custom headers appear to your end-users. Now, your viewers will only see your custom navigation bar.\n\n###\n\n","completion":" ![End user mode](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/270e1a0-CleanShot_2021-07-22_at_13.21.132x.png) END"}
{"prompt":"![End user mode](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/270e1a0-CleanShot_2021-07-22_at_13.21.132x.png)\n\n###\n\n","completion":" For your end users, we've moved all Retool-specific operations, like navigating apps, toggling between production and staging mode, and editing user settings, to a floating user menu in the bottom left of the screen. END"}
{"prompt":"For your end users, we've moved all Retool-specific operations, like navigating apps, toggling between production and staging mode, and editing user settings, to a floating user menu in the bottom left of the screen.\n\n###\n\n","completion":" ![End user mode](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ad5a652-CleanShot_2022-02-24_at_20.46.212x.png) END"}
{"prompt":"![End user mode](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ad5a652-CleanShot_2022-02-24_at_20.46.212x.png)\n\n###\n\n","completion":" Customers on the Enterprise plan can also disable the Retool branding on the Branding settings page. END"}
{"prompt":"Customers on the Enterprise plan can also disable the Retool branding on the Branding settings page.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9673913-settings_gif.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9673913-settings_gif.gif)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b0c107c-CleanShot_2022-02-24_at_21.31.522x.png) END"}
{"prompt":"Displaying your logo by default\n\n###\n\n","completion":" If you previously uploaded a custom logo and\/or applied a background color using the Branding feature, we’ll still show these in the header of each app. END"}
{"prompt":"If you previously uploaded a custom logo and\/or applied a background color using the Branding feature, we’ll still show these in the header of each app.\n\n###\n\n","completion":" ![Custom logo and background color](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d68b87a-default_custom_header.png) END"}
{"prompt":"![Custom logo and background color](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d68b87a-default_custom_header.png)\n\n###\n\n","completion":" Editors can override this default behavior in individual apps by adding components or modules to a header frame. END"}
{"prompt":"Editors can override this default behavior in individual apps by adding components or modules to a header frame.\n\n###\n\n","completion":" To change this default behavior globally, toggle off the \"Show custom logo in app header frame by default\" setting. END"}
{"prompt":"To change this default behavior globally, toggle off the \"Show custom logo in app header frame by default\" setting.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0bdd452-setting_turn_off.png) END"}
{"prompt":"Adding a navigation component with your logo\n\n###\n\n","completion":" You can also add a custom navigation with a logo to any app. Simply search for “navigation” in the component picker on the righthand side of the editor and drag the component into the header frame. END"}
{"prompt":"You can also add a custom navigation with a logo to any app. Simply search for “navigation” in the component picker on the righthand side of the editor and drag the component into the header frame.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/82cf9d5-gif_dragging_nav.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/82cf9d5-gif_dragging_nav.gif)\n\n###\n\n","completion":" With the navigation component selected, add a URL to your logo image and it will appear in the Navigation component. END"}
{"prompt":"With the navigation component selected, add a URL to your logo image and it will appear in the Navigation component.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7360d2c-CleanShot_2021-07-25_at_23.04.592x.png) END"}
{"prompt":"Adding your logo to the header frame as an image\n\n###\n\n","completion":" If you don’t want a custom navigation component and don’t want your logo displayed in every app by default, you can also add a logo to an app’s header frame on an individual basis. Simply drag an Image component into the header frame, size and place it as you like, and it’ll appear on a persistent header in that app. END"}
{"prompt":"If you don’t want a custom navigation component and don’t want your logo displayed in every app by default, you can also add a logo to an app’s header frame on an individual basis. Simply drag an Image component into the header frame, size and place it as you like, and it’ll appear on a persistent header in that app.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/44dcf4c-CleanShot_2021-07-25_at_23.07.542x.png) END"}
{"prompt":"title: \"Retool Docs\"\ncategorySlug: \"get-started-guides\"\nexcerpt: \"Learn how to build internal tools powered by your data.\"\nhidden: false\nmetadata: \n  title: \"Retool documentation\"\n  description: \"Learn how to build internal tools with rich user interfaces, powered by your data.\"\n\n###\n\n","completion":" Retool enables you to quickly build internal tools powered by your data. Connect and query your databases and APIs, build web or mobile apps with rich user interfaces, automate complex tasks, and create database tables for your data in seconds. END"}
{"prompt":"Retool enables you to quickly build internal tools powered by your data. Connect and query your databases and APIs, build web or mobile apps with rich user interfaces, automate complex tasks, and create database tables for your data in seconds.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  .rm-Guides .content-body {\\n    max-width: 100%;\\n  }\\n\\n  section.content-toc.grid-25 {\\n    display: none;\\n  }\\n\\n  svg {\\n    display: inline-block;\\n    vertical-align: middle;\\n  }\\n  \\n\\n<\/style>\\n<section class=\\\"quickstart landing two-column\\\">\\n  <h2>Explore our products<\/h2>\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a href=\\\"\/docs\/apps\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 18\\\" fill=\\\"none\\\"\\n            class=\\\"retool-icon retool-icon-app\\\">\\n            <path\\n              d=\\\"M3 2.75H13C13.6904 2.75 14.25 3.30964 14.25 4V10C14.25 10.6904 13.6904 11.25 13 11.25H3C2.30964 11.25 1.75 10.6904 1.75 10V4C1.75 3.30964 2.30964 2.75 3 2.75Z\\\"\\n              fill=\\\"var(--faint-blue)\\\" stroke=\\\"var(--dark-blue)\\\" stroke-width=\\\"1.5\\\"><\/path>\\n            <path\\n              d=\\\"M5 14.25C5 13.8358 5.33579 13.5 5.75 13.5H10.25C10.6642 13.5 11 13.8358 11 14.25C11 14.6642 10.6642 15 10.25 15H5.75C5.33579 15 5 14.6642 5 14.25Z\\\"\\n              fill=\\\"var(--dark-blue)\\\"><\/path>\\n          <\/svg> Apps<\/div>\\n        <div class=\\\"description\\\">\\n          Build internal tools with rich user interfaces.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/retool-mobile\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 1 16 18\\\" fill=\\\"none\\\"\\n            class=\\\"retool-icon retool-icon-app-mobile\\\">\\n            <rect x=\\\"3.75\\\" y=\\\"1.75\\\" width=\\\"8.5\\\" height=\\\"12.5\\\" rx=\\\"1.25\\\" fill=\\\"var(--faint-green)\\\"\\n              stroke=\\\"var(--dark-green)\\\" stroke-width=\\\"1.5\\\"><\/rect>\\n            <rect x=\\\"6.5\\\" y=\\\"10.5\\\" width=\\\"3\\\" height=\\\"1.5\\\" rx=\\\"0.75\\\" fill=\\\"var(--dark-green)\\\"><\/rect>\\n          <\/svg> Mobile<\/div>\\n        <div class=\\\"description\\\">\\n          Ship native apps to your mobile team in minutes.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/retool-workflows\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 16\\\" fill=\\\"none\\\" class=\\\"flex-no-shrink\\\">\\n            <path fill=\\\"var(--faint-plum)\\\" fill-rule=\\\"evenodd\\\"\\n              d=\\\"M4.35 7.074a2.307 2.307 0 110-2.148l3.13-1.957A2.308 2.308 0 1112 2.308a2.308 2.308 0 01-4.14 1.404L4.603 5.748a2.332 2.332 0 010 .504L7.86 8.288a2.308 2.308 0 11-.38.742L4.35 7.075z\\\"\\n              clip-rule=\\\"evenodd\\\"><\/path>\\n            <path fill=\\\"var(--dark-plum)\\\" fill-rule=\\\"evenodd\\\"\\n              d=\\\"M3.692 6A1.385 1.385 0 11.923 6a1.385 1.385 0 012.77 0zm.659 1.074a2.307 2.307 0 110-2.148l3.13-1.957A2.308 2.308 0 1112 2.308a2.308 2.308 0 01-4.14 1.404L4.603 5.748a2.332 2.332 0 010 .504L7.86 8.288a2.308 2.308 0 11-.38.742L4.35 7.075zm5.341-3.382a1.385 1.385 0 100-2.769 1.385 1.385 0 000 2.77zm1.385 6a1.385 1.385 0 11-2.77 0 1.385 1.385 0 012.77 0z\\\"\\n              clip-rule=\\\"evenodd\\\"><\/path>\\n          <\/svg> Workflows<\/div>\\n        <div class=\\\"description\\\">\\n          Visual workflow automation. Now with code.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/retool-database\\\">\\n        <div class=\\\"name\\\"><img src=\\\"https:\/\/retool-edge.com\/e30cf301c7fbb136a2b8359f63f5b0f5.svg\\\" alt=\\\"tab-icon\\\">\\n          Database<\/div>\\n        <div class=\\\"description\\\">\\n          Power apps with a built-in PostgreSQL database.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/retool-embed\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 18\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\"\\n            class=\\\"\\\">\\n            <g clip-path=\\\"url(#custom_components_svg__a)\\\">\\n              <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n                d=\\\"M9.618 3.903a.77.77 0 0 0-.577-.904.73.73 0 0 0-.886.562l-1.753 8.33a.77.77 0 0 0 .577.903.73.73 0 0 0 .885-.562l1.754-8.329zm-4.602 7.223a.75.75 0 0 1-1.06-.036l-2.63-2.818a.75.75 0 0 1 0-1.023l2.63-2.818a.75.75 0 0 1 1.096 1.023L2.9 7.76l2.152 2.306a.75.75 0 0 1-.036 1.06zm5.99-6.732a.75.75 0 0 1 1.06.037l2.63 2.818a.75.75 0 0 1 0 1.023l-2.63 2.818a.75.75 0 0 1-1.097-1.024l2.153-2.306-2.153-2.306a.75.75 0 0 1 .037-1.06z\\\"\\n                fill=\\\"currentColor\\\"><\/path>\\n            <\/g>\\n            <defs>\\n              <clipPath id=\\\"custom_components_svg__a\\\">\\n                <path fill=\\\"#fff\\\" d=\\\"M0 0h16v16H0z\\\"><\/path>\\n              <\/clipPath>\\n            <\/defs>\\n          <\/svg> Embed<\/div>\\n        <div class=\\\"description\\\">\\n          Embedded, customer-facing apps.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/self-hosted\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 2 16 18\\\" fill=\\\"none\\\"\\n            xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\">\\n            <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n              d=\\\"M14.6945 6H5.30509C5.13674 6 5 6.14704 5 6.32806V9.31234C5 9.49416 5.13674 9.64066 5.30509 9.64066H14.6945C14.8633 9.64066 15 9.49416 15 9.31234V6.32806C15 6.14704 14.8633 6 14.6945 6ZM5.99229 8.55312H10.0001V6.82932H5.99229V8.55312Z\\\"\\n              fill=\\\"#5768A6\\\"><\/path>\\n            <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n              d=\\\"M14.6945 10.3596H5.30509C5.13674 10.3596 5 10.5066 5 10.6882V13.6717C5 13.8533 5.13674 14 5.30509 14H14.6945C14.8633 14 15 13.8533 15 13.6717V10.6877C15 10.5063 14.8633 10.3596 14.6945 10.3596ZM5.99229 13.0417H10.0001V11.3176H5.99229V13.0417Z\\\"\\n              fill=\\\"#5768A6\\\"><\/path>\\n          <\/svg> Self-hosted<\/div>\\n        <div class=\\\"description\\\">\\n          Deploy Retool on your own infrastructure.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\\n\\n<section class=\\\"quickstart landing three-column\\\">\\n  <h2>Explore the platform<\/h2>\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a href=\\\"\/docs\/data-sources\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 18\\\" fill=\\\"none\\\"\\n            class=\\\"retool-icon retool-icon-new-resource\\\">\\n            <path\\n              d=\\\"M12.4452 3.64485C12.7879 3.76724 13.0463 3.89035 13.2319 4C13.0463 4.10965 12.7879 4.23276 12.4452 4.35515C11.3791 4.73592 9.80761 5 8 5C6.19239 5 4.6209 4.73592 3.55476 4.35515C3.21205 4.23276 2.95371 4.10965 2.76806 4C2.95371 3.89035 3.21205 3.76724 3.55476 3.64485C4.6209 3.26408 6.19239 3 8 3C9.80761 3 11.3791 3.26408 12.4452 3.64485Z\\\"\\n              fill=\\\"var(--faint-orange)\\\"><\/path>\\n            <path\\n              d=\\\"M2.5 11.8114V9.54664C3.78183 10.1273 5.76904 10.5 8 10.5C10.231 10.5 12.2182 10.1273 13.5 9.54664V11.8114L13.4822 11.8267C13.3153 11.9676 12.9848 12.1622 12.4452 12.3549C11.3791 12.7358 9.80759 13 8 13C6.19242 13 4.62094 12.7358 3.55479 12.3549C3.01519 12.1622 2.68469 11.9676 2.51776 11.8267L2.5 11.8114Z\\\"\\n              fill=\\\"var(--faint-orange)\\\"><\/path>\\n            <path\\n              d=\\\"M13.5 5.54664L13.5 8C11.992 8.89062 9.69553 9 8 9C6.31977 9 4.01616 8.89544 2.5 8V5.54664C3.78183 6.12726 5.76904 6.5 8 6.5C10.231 6.5 12.2182 6.12726 13.5 5.54664Z\\\"\\n              fill=\\\"var(--faint-orange)\\\"><\/path>\\n            <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n              d=\\\"M8 1.5C11.866 1.5 15 2.61929 15 4V12C15 13.38 11.8662 14.5 8 14.5C4.13385 14.5 1 13.38 1 12V4C1 2.61929 4.13401 1.5 8 1.5ZM13.2319 4C13.0463 3.89035 12.7879 3.76724 12.4452 3.64485C11.3791 3.26408 9.80761 3 8 3C6.19239 3 4.6209 3.26408 3.55476 3.64485C3.21205 3.76724 2.95371 3.89035 2.76806 4C2.95371 4.10965 3.21205 4.23276 3.55476 4.35515C4.6209 4.73592 6.19239 5 8 5C9.80761 5 11.3791 4.73592 12.4452 4.35515C12.7879 4.23276 13.0463 4.10965 13.2319 4ZM2.5 9.54664V11.8114L2.51776 11.8267C2.68469 11.9676 3.01519 12.1622 3.55479 12.3549C4.62094 12.7358 6.19242 13 8 13C9.80758 13 11.3791 12.7358 12.4452 12.3549C12.9848 12.1622 13.3153 11.9676 13.4822 11.8267L13.5 11.8114V9.54664C12.2182 10.1273 10.231 10.5 8 10.5C5.76904 10.5 3.78183 10.1273 2.5 9.54664ZM13.5 8L13.5 5.54664C12.2182 6.12726 10.231 6.5 8 6.5C5.76904 6.5 3.78183 6.12726 2.5 5.54664V8C4.01616 8.89544 6.31977 9 8 9C9.69553 9 11.992 8.89062 13.5 8Z\\\"\\n              fill=\\\"var(--dark-orange)\\\"><\/path>\\n          <\/svg> Data sources<\/div>\\n        <div class=\\\"description\\\">\\n          Integrate data sources like PostgreSQL, APIs, Salesforce, and more.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/data-queries\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 18\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\"\\n            class=\\\"\\\" style=\\\"height: 16px; width: 16px;\\\">\\n            <rect width=\\\"16\\\" height=\\\"16\\\" rx=\\\"3\\\" fill=\\\"#3C92DC\\\"><\/rect>\\n            <path\\n              d=\\\"M8 8.875a9.026 9.026 0 004.782-1.1.5.5 0 00.218-.409V5c0-1.374-2.592-2-5-2s-5 .626-5 2v2.366a.5.5 0 00.218.413A9.026 9.026 0 008 8.875zM8 4c2.625 0 4 .743 4 1s-1.375 1-4 1-4-.743-4-1 1.375-1 4-1zM8 10.125a11.985 11.985 0 01-4.648-.858A.25.25 0 003 9.5V11c0 1.374 2.592 2 5 2s5-.626 5-2V9.5a.25.25 0 00-.352-.228c-1.477.59-3.057.88-4.648.853z\\\"\\n              fill=\\\"#fff\\\"><\/path>\\n          <\/svg> Data queries<\/div>\\n        <div class=\\\"description\\\">\\n          Write SQL queries and API requests to interact with data.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/app-scripting-events\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 18\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\"\\n            class=\\\"retool-icon retool-icon-js-query _epzeo\\\">\\n            <rect x=\\\"1\\\" y=\\\"1\\\" width=\\\"14\\\" height=\\\"14\\\" rx=\\\"3\\\" fill=\\\"#E3BC5E\\\"><\/rect>\\n            <path\\n              d=\\\"M6.204 4.593a.868.868 0 0 0-.868.868v3.843c-.003.59-.28.899-.786.899a.876.876 0 0 1-.412-.092c-.426-.225-.767-.727-1.249-.727-.491 0-.92.415-.735.87.347.857 1.242 1.246 2.297 1.246 1.543 0 2.617-.868 2.621-2.196V5.461a.868.868 0 0 0-.868-.868ZM11.692 6c.402.209.768.636 1.22.636.49 0 .906-.42.69-.858-.386-.788-1.317-1.278-2.594-1.278-1.664 0-2.863.848-2.852 2.116-.004 1.035.772 1.617 2.03 1.886l.762.167c.8.173 1.16.376 1.166.758-.007.416-.423.706-1.13.706-.416 0-.755-.097-.987-.286-.354-.288-.7-.71-1.156-.71-.48 0-.892.407-.725.858.372 1.01 1.423 1.498 2.889 1.498 1.814 0 2.888-.768 2.895-2.062-.007-1.088-.793-1.754-2.23-2.05l-.626-.133c-.662-.133-1.081-.34-1.067-.745.003-.373.345-.642 1.028-.642.282 0 .511.049.687.14Z\\\"\\n              fill=\\\"#fff\\\"><\/path>\\n          <\/svg> App scripting and events<\/div>\\n        <div class=\\\"description\\\">\\n          Use JavaScript anywhere, control app behavior, and respond to user actions.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/app-management\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 18\\\" fill=\\\"none\\\"\\n            class=\\\"retool-icon retool-icon-create-mobile-app-from-import\\\">\\n            <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n              d=\\\"M8 7.21777C8.41421 7.21777 8.75 7.55183 8.75 7.96391V14.2539C8.75 14.666 8.41421 15 8 15C7.58579 15 7.25 14.666 7.25 14.2539V7.96391C7.25 7.55183 7.58579 7.21777 8 7.21777Z\\\"\\n              fill=\\\"var(--dark-green)\\\"><\/path>\\n            <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n              d=\\\"M7.46967 7.43631C7.76256 7.14493 8.23744 7.14493 8.53033 7.43631L10.9621 9.85553C11.255 10.1469 11.255 10.6193 10.9621 10.9107C10.6692 11.2021 10.1943 11.2021 9.90143 10.9107L8 9.0191L6.09857 10.9107C5.80567 11.2021 5.3308 11.2021 5.03791 10.9107C4.74501 10.6193 4.74501 10.1469 5.03791 9.85553L7.46967 7.43631Z\\\"\\n              fill=\\\"var(--dark-green)\\\"><\/path>\\n            <path\\n              d=\\\"M3 2.5H13C13.2761 2.5 13.5 2.72386 13.5 3V13C13.5 13.2761 13.2761 13.5 13 13.5H11.75C11.3358 13.5 11 13.8358 11 14.25C11 14.6642 11.3358 15 11.75 15H13C14.1046 15 15 14.1046 15 13V3C15 1.89543 14.1046 1 13 1H3C1.89543 1 1 1.89543 1 3V13C1 14.1046 1.89543 15 3 15H4.25C4.66421 15 5 14.6642 5 14.25C5 13.8358 4.66421 13.5 4.25 13.5H3C2.72386 13.5 2.5 13.2761 2.5 13V3C2.5 2.72386 2.72386 2.5 3 2.5Z\\\"\\n              fill=\\\"var(--dark-green)\\\"><\/path>\\n            <path d=\\\"M2 5H14V6.5H2V5Z\\\" fill=\\\"var(--dark-green)\\\"><\/path>\\n            <path d=\\\"M13 2.5H3C2.72386 2.5 2.5 2.72386 2.5 3V5H13.5V3C13.5 2.72386 13.2761 2.5 13 2.5Z\\\"\\n              fill=\\\"var(--faint-green)\\\"><\/path>\\n          <\/svg> App management<\/div>\\n        <div class=\\\"description\\\">\\n          Import and export apps, write user documentation, and release versions.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/org-user-management\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 2 16 18\\\" fill=\\\"none\\\"\\n            class=\\\"retool-icon retool-icon-shared\\\">\\n            <path fill=\\\"#2494f4\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n              d=\\\"M13 8C14.1046 8 15 7.10457 15 6C15 4.89543 14.1046 4 13 4C11.8954 4 11 4.89543 11 6C11 7.10457 11.8954 8 13 8ZM8 10C9.10457 10 10 9.10457 10 8C10 6.89543 9.10457 6 8 6C6.89543 6 6 6.89543 6 8C6 9.10457 6.89543 10 8 10ZM8 11C4.66298 11 3.94023 13.4347 4.00373 15.1829C4.0211 15.661 4.44062 16 4.91903 16H11.081C11.5594 16 11.9789 15.661 11.9963 15.1829C12.0598 13.4347 11.337 11 8 11ZM11.4395 9.21923C13.5456 9.93351 14.0461 12.2485 13.9973 14H16.0814C16.5598 14 16.9794 13.661 16.9967 13.1829C17.0602 11.4347 16.3375 9 13.0005 9C12.3987 9 11.8819 9.07918 11.4395 9.21923Z\\\"\\n              fill=\\\"currentColor\\\"><\/path>\\n          <\/svg> Org and user management<\/div>\\n        <div class=\\\"description\\\">\\n          Onboard users, control access, and configure sign-in options.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/source-control\\\">\\n        <div class=\\\"name\\\"><svg width=\\\"16\\\" height=\\\"16\\\" viewBox=\\\"0 0 16 18\\\" fill=\\\"none\\\" xmlns=\\\"http:\/\/www.w3.org\/2000\/svg\\\"\\n            class=\\\"retool-icon retool-icon-branch\\\">\\n            <path fill=\\\"#333\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"\\n              d=\\\"M3.375 3.625C3.375 3.00368 3.87868 2.5 4.5 2.5C5.12132 2.5 5.625 3.00368 5.625 3.625C5.625 4.24632 5.12132 4.75 4.5 4.75C3.87868 4.75 3.375 4.24632 3.375 3.625ZM1.875 3.625C1.875 2.17525 3.05025 1 4.5 1C5.68913 1 6.69359 1.79069 7.0163 2.875H9.16667C10.8695 2.875 12.25 4.25546 12.25 5.95833V9.9837C13.3343 10.3064 14.125 11.3109 14.125 12.5C14.125 13.9497 12.9497 15.125 11.5 15.125C10.0503 15.125 8.875 13.9497 8.875 12.5C8.875 11.3109 9.66569 10.3064 10.75 9.9837V5.95833C10.75 5.08388 10.0411 4.375 9.16667 4.375L7.0163 4.375C6.76432 5.22167 6.09667 5.88931 5.25 6.1413L5.25 9.9837C6.33431 10.3064 7.125 11.3109 7.125 12.5C7.125 13.9497 5.94975 15.125 4.5 15.125C3.05025 15.125 1.875 13.9497 1.875 12.5C1.875 11.3109 2.66569 10.3064 3.75 9.9837V6.1413C2.66569 5.81859 1.875 4.81413 1.875 3.625ZM10.375 12.5C10.375 11.8787 10.8787 11.375 11.5 11.375C12.1213 11.375 12.625 11.8787 12.625 12.5C12.625 13.1213 12.1213 13.625 11.5 13.625C10.8787 13.625 10.375 13.1213 10.375 12.5ZM4.5 11.375C3.87868 11.375 3.375 11.8787 3.375 12.5C3.375 13.1213 3.87868 13.625 4.5 13.625C5.12132 13.625 5.625 13.1213 5.625 12.5C5.625 11.8787 5.12132 11.375 4.5 11.375Z\\\">\\n            <\/path>\\n          <\/svg> Source Control<\/div>\\n        <div class=\\\"description\\\">\\n          Manage changes to Retool apps using SCM providers like GitHub and GitLab.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\\n<section class=\\\"quickstart landing two-column\\\">\\n  <h2>Additional resources<\/h2>\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a href=\\\"https:\/\/updates.retool.com\\\" target=\\\"_blank\\\">\\n        <div class=\\\"name\\\">What's new at Retool<\/div>\\n        <div class=\\\"description\\\">\\n          Release notes and announcements.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"https:\/\/retool.com\/blog\\\" target=\\\"_blank\\\">\\n        <div class=\\\"name\\\">Retool Blog<\/div>\\n        <div class=\\\"description\\\">\\n          Tutorials, announcements, and engineering deep cuts.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"https:\/\/community.retool.com\/\\\" target=\\\"_blank\\\">\\n        <div class=\\\"name\\\">Community forum<\/div>\\n        <div class=\\\"description\\\">\\n          Product support, feature requests, and user discussions.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"https:\/\/retool.com\/templates\\\" target=\\\"_blank\\\">\\n        <div class=\\\"name\\\">Templates<\/div>\\n        <div class=\\\"description\\\">\\n          Ready-made templates for rapid development.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"https:\/\/retool.com\/pricing\\\" target=\\\"_blank\\\">\\n        <div class=\\\"name\\\">Pricing<\/div>\\n        <div class=\\\"description\\\">\\n          Pricing plans that scale for any organization.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"https:\/\/retool.com\/startups\\\" target=\\\"_blank\\\">\\n        <div class=\\\"name\\\">Retool for Startups<\/div>\\n        <div class=\\\"description\\\">\\n          Up to $25K in credits for a year.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n        <li>\\n      <a href=\\\"\/page\/security\\\">\\n        <div class=\\\"name\\\">Security<\/div>\\n        <div class=\\\"description\\\">\\n          Information about the security of Retool's infrastructure.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n        <li>\\n      <a href=\\\"\/page\/privacy-policy\\\">\\n        <div class=\\\"name\\\">Privacy policy<\/div>\\n        <div class=\\\"description\\\">\\n          Retool's privacy policy.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"About this documentation\n\n###\n\n","completion":" Retool Docs organizes content into different types with distinct purposes. END"}
{"prompt":"title: \"Horizontal scaling for self-hosted deployments\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-concepts\"\nexcerpt: \"Learn about horizontally scaling self-hosted Retool deployments.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Retool is packaged as a single stateless Docker container. The only dependency it has is a Postgres database that Retool uses for storing data like user information, organization settings, audit logs, and applications. END"}
{"prompt":"Retool is packaged as a single stateless Docker container. The only dependency it has is a Postgres database that Retool uses for storing data like user information, organization settings, audit logs, and applications.\n\n###\n\n","completion":" At startup, Retool checks and runs any pending migrations on the database, and then starts itself up. The Retool server serves the API and frontend assets. END"}
{"prompt":"Scale a Retool instance\n\n###\n\n","completion":" These are the general steps for scaling a Retool instance: END"}
{"prompt":"These are the general steps for scaling a Retool instance:\n\n###\n\n","completion":" See our [GitHub repo](https:\/\/github.com\/tryretool\/retool-onpremise) for a full list of deployment options. END"}
{"prompt":"Zero downtime upgrades\n\n###\n\n","completion":" When you upgrade to a Retool version that requires running database migrations, it's possible for multi-container setups to run into downtime issues. This is because every container tries to run the migration at startup, which can lead to a deadlock. Follow these steps to avoid downtime. END"}
{"prompt":"title: \"How Retool Embed works\"\ncategorySlug: \"retool-embed\"\nparentDocSlug: \"retool-embed-concepts\"\nexcerpt: \"Learn more about Retool Embed and how it works.\"\nhidden: false\n\n###\n\n","completion":" Retool Embed is a way to let external users––partners, vendors, customers––securely access embedded Retool apps within your product. You can use any authentication solution to give users access, and then control app behavior, data access, and audit usage on a per-user basis. END"}
{"prompt":"Retool Embed is a way to let external users––partners, vendors, customers––securely access embedded Retool apps within your product. You can use any authentication solution to give users access, and then control app behavior, data access, and audit usage on a per-user basis.\n\n###\n\n","completion":" Rather than relying on internal teams to manage customer workflows, you can embed Retool apps into your product to make the experience self-serve. For example, you could: END"}
{"prompt":"Rather than relying on internal teams to manage customer workflows, you can embed Retool apps into your product to make the experience self-serve. For example, you could:\n\n###\n\n","completion":" Each of these experiences could be built in Retool and then integrated into your product using the Retool Embed flow. END"}
{"prompt":"How Retool Embed works\n\n###\n\n","completion":" Retool Embed doesn't change much in how you build in Retool. You still use resources, components, and queries to build your apps. END"}
{"prompt":"Retool Embed doesn't change much in how you build in Retool. You still use resources, components, and queries to build your apps.\n\n###\n\n","completion":" There are a few additional steps to provide access and embed apps after you build them. These steps are covered in more detail in the [Retool Embed quickstart](https:\/\/docs.retool.com\/docs\/retool-embed-quickstart), but a brief overview is provided below. END"}
{"prompt":"Access tokens and permission groups\n\n###\n\n","completion":" To embed apps, you need to create an access token with the **Embed** scope. This token allows you to create sessions for embedding Retool apps. END"}
{"prompt":"To embed apps, you need to create an access token with the **Embed** scope. This token allows you to create sessions for embedding Retool apps.\n\n###\n\n","completion":" After creating the access token, you need to create permission groups for your users. These groups determine the apps individual users can access. For example, you might give access to apps according to the subscription level customers are on. END"}
{"prompt":"Embed URL\n\n###\n\n","completion":" The embed URL is a single-use link scoped to a user session for an application. Your backend will make a POST request to Retool with the access token, permission groups, app info, and user info to generate the URL. After Retool returns the embed URL, you use it in an iframe to display the app. END"}
{"prompt":"Requirements and recommendations\n\n###\n\n","completion":" To use Retool Embed, you must: END"}
{"prompt":"To use Retool Embed, you must:\n\n###\n\n","completion":" In addition to these requirements, Retool also recommends that you: END"}
{"prompt":"In addition to these requirements, Retool also recommends that you:\n\n###\n\n","completion":" When you deploy Retool at scale, you can have [separate instances](https:\/\/docs.retool.com\/docs\/deploy-retool-at-scale#when-to-deploy-multiple-retool-instances) for internal and external use. This helps with separation of concerns, performance, scalability, managing updates, development lifecycle, and permissions. END"}
{"prompt":"When you deploy Retool at scale, you can have [separate instances](https:\/\/docs.retool.com\/docs\/deploy-retool-at-scale#when-to-deploy-multiple-retool-instances) for internal and external use. This helps with separation of concerns, performance, scalability, managing updates, development lifecycle, and permissions.\n\n###\n\n","completion":" For external use cases, you might also want to use [Source Control](https:\/\/docs.retool.com\/docs\/source-control) to release your apps. This allows you to use a Git-based workflow to release apps to external users. END"}
{"prompt":"Other ways to embed Retool apps\n\n###\n\n","completion":" Retool Embed is the supported way to authenticate users into embedded Retool apps, but there are other ways you can embed Retool. See [Sharing Retool apps](https:\/\/docs.retool.com\/docs\/share-retool-apps) for more. END"}
{"prompt":"title: \"Hub-and-spoke deployment management\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-concepts\"\nexcerpt: \"Learn about the hub-and-spoke model and use it to effectively manage Retool at scale.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" The _hub and spoke model_ is an organizational model that can set up your teams to implement and scale Retool effectively. Using this model, a centralized group of administrators own Retool deployments and: END"}
{"prompt":"The _hub and spoke model_ is an organizational model that can set up your teams to implement and scale Retool effectively. Using this model, a centralized group of administrators own Retool deployments and:\n\n###\n\n","completion":" This model enables developers to build tooling for end users. It is the most common approach used by organizations running Retool. END"}
{"prompt":"This model enables developers to build tooling for end users. It is the most common approach used by organizations running Retool.\n\n###\n\n","completion":" ![Hub and spoke model](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/bb5fec2e-4b7e-45ba-bdbf-a210c74b4122.png) END"}
{"prompt":"Organizational setup\n\n###\n\n","completion":" With hub and spoke, teams (spokes) are centralized around a central team (the hub). END"}
{"prompt":"Hub\n\n###\n\n","completion":" The hub (central team) is responsible for: END"}
{"prompt":"Spokes\n\n###\n\n","completion":" The teams (spokes) that surround the hub are responsible for: END"}
{"prompt":"The teams (spokes) that surround the hub are responsible for:\n\n###\n\n","completion":" After deploying Retool, the _hub_ is responsible for making sure that the _spokes_ can build and use apps efficiently. This is achieved by properly configuring access controls, delegating ownership to approval processes, and building onboarding guides. END"}
{"prompt":"Role-Based Access Controls in Retool\n\n###\n\n","completion":" [Retool’s user and group permissions](https:\/\/docs.retool.com\/docs\/user-permissions) allow administrators to control how users use, edit, and own apps or resources. User assignment to groups can be done through your Retool organization's settings or through a supported [identity provider](https:\/\/docs.retool.com\/docs\/sso-google-and-okta). END"}
{"prompt":"Manage group permissions\n\n###\n\n","completion":" Group permissions can only be set using your Retool organization's settings. If you need to onboard multiple teams, we recommend you organize apps into folders and apply group permissions to them. END"}
{"prompt":"Group permissions can only be set using your Retool organization's settings. If you need to onboard multiple teams, we recommend you organize apps into folders and apply group permissions to them.\n\n###\n\n","completion":" For example, a Driver Operations team at a ride-sharing startup is replacing their Google Sheets workflows with a more resilient Retool app and Postgres database. The administrator can: END"}
{"prompt":"For example, a Driver Operations team at a ride-sharing startup is replacing their Google Sheets workflows with a more resilient Retool app and Postgres database. The administrator can:\n\n###\n\n","completion":" As your organization grows, you can use the same process to add new teams and app builders. END"}
{"prompt":"User management through an Identity Provider\n\n###\n\n","completion":" We recommend integrating Retool with an existing identity provider (IdP) if you need to provision and manage many groups of stakeholders, such as Okta, Azure, or Google. Retool supports [SAML](https:\/\/docs.retool.com\/docs\/sso-google-and-okta) and [OpenID](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider) SSO, as well as [just-in-time (JIT) user provisioning](https:\/\/docs.retool.com\/docs\/sso-google-and-okta#6-optional-but-recommended-turn-on-jit-user-provisioning). END"}
{"prompt":"We recommend integrating Retool with an existing identity provider (IdP) if you need to provision and manage many groups of stakeholders, such as Okta, Azure, or Google. Retool supports [SAML](https:\/\/docs.retool.com\/docs\/sso-google-and-okta) and [OpenID](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider) SSO, as well as [just-in-time (JIT) user provisioning](https:\/\/docs.retool.com\/docs\/sso-google-and-okta#6-optional-but-recommended-turn-on-jit-user-provisioning).\n\n###\n\n","completion":" As new teams and user groups are added, you can configure role-mapping between your identity provider and Retool as needed. New team members are automatically provisioned with Retool accounts (via [SCIM](https:\/\/docs.retool.com\/docs\/scim-user-provisioning) or [Group Push](https:\/\/docs.retool.com\/docs\/scim-user-provisioning#enabling-group-push)), streamlining the onboarding process. END"}
{"prompt":"As new teams and user groups are added, you can configure role-mapping between your identity provider and Retool as needed. New team members are automatically provisioned with Retool accounts (via [SCIM](https:\/\/docs.retool.com\/docs\/scim-user-provisioning) or [Group Push](https:\/\/docs.retool.com\/docs\/scim-user-provisioning#enabling-group-push)), streamlining the onboarding process.\n\n###\n\n","completion":" We recommend working with our Deployed Engineering team to identify which environment variables need to be configured. END"}
{"prompt":"Resource connections\n\n###\n\n","completion":" The central team has control over the [resources](https:\/\/docs.retool.com\/docs\/resources) used in your Retool apps that allow teams to safely build apps with them. In addition to our [granular permissions model for Resources](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions), the central team can restrict requests at the database or API level. END"}
{"prompt":"Lock down requests at the API level\n\n###\n\n","completion":" If you have OpenID SSO integrated with Retool and are building apps on top of REST endpoints, you can pass the JWT obtained from the login as a header to each request. This ensures the Retool user is always authorized to make these requests. If you don’t have OpenID SSO set up but have a separate authorization server, you can also define a [custom authentication workflow](https:\/\/docs.retool.com\/docs\/custom-api-authentication#1-creating-an-empty-rest-query-resource) to let your backend authenticate a user into your API. END"}
{"prompt":"Lock down requests at the database level\n\n###\n\n","completion":" If you’d like control both read and write access to certain databases, we recommend creating separate database users (and multiple resources), then assigning the proper permission groups to those resources. END"}
{"prompt":"If you’d like control both read and write access to certain databases, we recommend creating separate database users (and multiple resources), then assigning the proper permission groups to those resources.\n\n###\n\n","completion":" At scale, for both new group and resource provisioning, teams should create a ticketing process in which access is reviewed by the central team. END"}
{"prompt":"Onboarding guides\n\n###\n\n","completion":" As you’re setting up your Retool deployment, it’s important that teams can quickly onboard onto Retool and deliver value for end users. We recommend you create organization-specific guides on the following topics: END"}
{"prompt":"As you’re setting up your Retool deployment, it’s important that teams can quickly onboard onto Retool and deliver value for end users. We recommend you create organization-specific guides on the following topics:\n\n###\n\n","completion":" You can use our [technical onboarding template](https:\/\/docs.google.com\/document\/d\/1YDzNbT4mCAniA2NLOJTFkeGluhZ4Gdxxt8ZNp0YXXBY\/edit?usp=sharing) (Google Doc) to get started. END"}
{"prompt":"Application development\n\n###\n\n","completion":" At scale and in production, having the right Retool app development process is key to ensuring a smooth and stable product for end users. Because it is so easy to build a Retool app, it is important that the proper safeguards are in place to prevent bugs and ensure high-quality updates. [Source Control](https:\/\/docs.retool.com\/docs\/source-control) and [Releases](https:\/\/docs.retool.com\/docs\/release-management) are two key features to enforce a development lifecycle that meets the needs of enterprise clients. END"}
{"prompt":"Source Control in Retool\n\n###\n\n","completion":" [Source Control](https:\/\/docs.retool.com\/docs\/source-control) allows organizations to manage changes to their Retool applications using pull requests on remote source control management (SCM) providers, such as GitHub and GitLab. Instead of making changes directly to an application, changes are made on a separate branch. END"}
{"prompt":"[Source Control](https:\/\/docs.retool.com\/docs\/source-control) allows organizations to manage changes to their Retool applications using pull requests on remote source control management (SCM) providers, such as GitHub and GitLab. Instead of making changes directly to an application, changes are made on a separate branch.\n\n###\n\n","completion":" When an app is protected, it can no longer be modified without reviewing and merging the changes in a source control provider (like GitHub or GitLab). This workflow mirrors a typical SDLC in which no engineer can push code directly to the master branch. END"}
{"prompt":"When an app is protected, it can no longer be modified without reviewing and merging the changes in a source control provider (like GitHub or GitLab). This workflow mirrors a typical SDLC in which no engineer can push code directly to the master branch.\n\n###\n\n","completion":" At scale, this level of protection is critical so that production applications in Retool cannot simply be modified by changing something in the Retool editor. Additionally, it enables multiple editors to work on the same application at the same time. END"}
{"prompt":"At scale, this level of protection is critical so that production applications in Retool cannot simply be modified by changing something in the Retool editor. Additionally, it enables multiple editors to work on the same application at the same time.\n\n###\n\n","completion":" Source Control enables users to sync applications across multiple instances of Retool. A common approach is to have staging and production instances of Retool be configured as read-only, pulling changes from the staging and master branches. All development happens via branches in a development instance and code is merged into the master branch. See our [recommended workflow](https:\/\/docs.retool.com\/docs\/recommended-workflow) for using Source Control in Retool. END"}
{"prompt":"Reviews and ownership\n\n###\n\n","completion":" Using the hub-and-spoke model, the hub is responsible for the Source Control integration and can assign owners to review pull requests. All applications live within a single repository owned by the hub. END"}
{"prompt":"Using the hub-and-spoke model, the hub is responsible for the Source Control integration and can assign owners to review pull requests. All applications live within a single repository owned by the hub.\n\n###\n\n","completion":" When the hub has configured the required access controls and permissions, it should not be heavily involved in the day-to-day development of apps, but may coordinate releases to production. END"}
{"prompt":"Versions and Releases\n\n###\n\n","completion":" [Releases](https:\/\/docs.retool.com\/docs\/release-management) lets you version and release app changes to your users. This method can also be used in conjunction with Source Control. END"}
{"prompt":"[Releases](https:\/\/docs.retool.com\/docs\/release-management) lets you version and release app changes to your users. This method can also be used in conjunction with Source Control.\n\n###\n\n","completion":" Although you can configure your application to use the master branch, you may still not want it to update every time the branch is updated. In these cases, you can create versioned releases and control when updates are available to your users. END"}
{"prompt":"Developer ergonomics and reusability\n\n###\n\n","completion":" Retool has built-in features that make it easy to avoid duplicative work when writing queries and building apps. At scale, with potentially hundreds of apps, Retool also gives you the ability to ensure your apps are discoverable and visually consistent. END"}
{"prompt":"Reusing groups of components using modules\n\n###\n\n","completion":" You can use [modules](https:\/\/docs.retool.com\/docs\/modules) to share groups of components across Retool apps. This encourages code reuse and delivers a more consistent end-user experience across your applications. Changes to a module are immediately reflected across all apps in which it is used. END"}
{"prompt":"You can use [modules](https:\/\/docs.retool.com\/docs\/modules) to share groups of components across Retool apps. This encourages code reuse and delivers a more consistent end-user experience across your applications. Changes to a module are immediately reflected across all apps in which it is used.\n\n###\n\n","completion":" We recommend using modules when you’re reusing the same set of components across apps. Modules let you specify [inputs](https:\/\/docs.retool.com\/docs\/modules#inputs) and [outputs](https:\/\/docs.retool.com\/docs\/modules#outputs), allowing you to centralize logic that is easily reused across different use cases. END"}
{"prompt":"Improve discovery with navigation\n\n###\n\n","completion":" The [Navigation](https:\/\/retool.com\/components\/navigation) component can help users find apps and makes it more convenient for end users to navigate across apps and other online resources in a single workflow. For [multi-page applications](https:\/\/docs.retool.com\/docs\/share-data-between-apps), or for groups of apps dedicated to specific workflows, create a navigational menu once as a module, then reuse it across apps. END"}
{"prompt":"Reuse queries\n\n###\n\n","completion":" The [Query Library](https:\/\/docs.retool.com\/docs\/query-library) enables you do create and reuse queries in the same way as modules function to reuse components. You can write, share, and control access to queries from the Query Library, which is important if you have many apps leveraging the same data source. END"}
{"prompt":"The [Query Library](https:\/\/docs.retool.com\/docs\/query-library) enables you do create and reuse queries in the same way as modules function to reuse components. You can write, share, and control access to queries from the Query Library, which is important if you have many apps leveraging the same data source.\n\n###\n\n","completion":" Any queries in individual apps should be moved into the Query Library if you find the same queries being written across apps. Queries within the Query Library also have permissions, so if you have complex or sensitive queries and want a specific team to own them, you can manage access through your organization settings. END"}
{"prompt":"Customize style with themes\n\n###\n\n","completion":" You can create [themes](https:\/\/docs.retool.com\/docs\/design-and-usability#themes) with custom color palettes that can be easily applied to applications with one click. Themes provide a way for builders to build applications that match existing brand guidelines used in their organization. END"}
{"prompt":"title: \"Import and export apps\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-guides\"\nexcerpt: \"Learn how to import and export Retool apps in JSON.\"\nhidden: false\n\n###\n\n","completion":" You can import and export apps in JSON to share apps across your organization. Importing and exporting is also useful for copying apps between cloud and self-hosted Retool instances and for bulk renaming components or queries in an app. END"}
{"prompt":"You can import and export apps in JSON to share apps across your organization. Importing and exporting is also useful for copying apps between cloud and self-hosted Retool instances and for bulk renaming components or queries in an app.\n\n###\n\n","completion":" The JSON export of an app contains its queries, components, and modules. It does not contain any resources. After importing an app, check the queries and their resources are correctly configured. If you intend to import an app into a different Retool organization, you must create those resources separately. END"}
{"prompt":"Import apps\n\n###\n\n","completion":" To import an app from an existing app, in the **App actions** menu, click **Import app from JSON**. This replaces the current app with the imported app. END"}
{"prompt":"To import an app from an existing app, in the **App actions** menu, click **Import app from JSON**. This replaces the current app with the imported app.\n\n###\n\n","completion":" ![Import and export from app actions menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/96f114ee-c076-419c-bb09-659c92ba86d9.png) END"}
{"prompt":"![Import and export from app actions menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/96f114ee-c076-419c-bb09-659c92ba86d9.png)\n\n###\n\n","completion":" To import an app from the homepage, on the **Apps** tab, click **Create new** > **From JSON**. This creates a new app. END"}
{"prompt":"To import an app from the homepage, on the **Apps** tab, click **Create new** > **From JSON**. This creates a new app.\n\n###\n\n","completion":" ![Import app from JSON homepage](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/c853679f-7d38-4650-933e-8610ab6566ca.png) END"}
{"prompt":"Export apps to JSON\n\n###\n\n","completion":" When you export an app, the JSON file for the app downloads to your browser. END"}
{"prompt":"When you export an app, the JSON file for the app downloads to your browser.\n\n###\n\n","completion":" To export an app from the App editor, in the **App actions** menu, click **Export to JSON**. END"}
{"prompt":"To export an app from the App editor, in the **App actions** menu, click **Export to JSON**.\n\n###\n\n","completion":" To export an app from the homepage, on the **Apps** tab, select the `...` menu on the app and click **Export and download**. END"}
{"prompt":"To export an app from the homepage, on the **Apps** tab, select the `...` menu on the app and click **Export and download**.\n\n###\n\n","completion":" ![Export app as JSON from homepage](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/27a8111f-11fd-4361-88a8-4a1ea0b1e577.png) END"}
{"prompt":"title: \"Insert CSV data into a database\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to build an app that writes a CSV file to a database.\"\nhidden: false\n\n###\n\n","completion":" Let's say we're engineers, and operations people keep on bugging us about **CRUD-related tasks**, like **bulk adding rows into our database** via uploaded CSVs. We'll build a tool to **selectively upload rows from a CSV into our API, in 5 minutes.** END"}
{"prompt":"1. Uploading files\n\n###\n\n","completion":" Let's start by dragging in a `File Button` component from the right panel and toggle on `Parse files`: END"}
{"prompt":"Let's start by dragging in a `File Button` component from the right panel and toggle on `Parse files`:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d05eaf7-Screen_Recording_2021-08-25_at_12.20.43_PM.mov-7A50816F-5332-4A96-ABD5-E89CC5EF7CBF.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d05eaf7-Screen_Recording_2021-08-25_at_12.20.43_PM.mov-7A50816F-5332-4A96-ABD5-E89CC5EF7CBF.gif)\n\n###\n\n","completion":" Great! This button will now automatically parse CSV and JSON, so we can try uploading a file now. If you don't have a CSV ready, you can download one [here](https:\/\/cdn.tryretool.com\/docs\/books.csv). END"}
{"prompt":"Great! This button will now automatically parse CSV and JSON, so we can try uploading a file now. If you don't have a CSV ready, you can download one [here](https:\/\/cdn.tryretool.com\/docs\/books.csv).\n\n###\n\n","completion":" After uploading the CSV, you should see the `.parsedValue` of the `File button` component populate with rows: END"}
{"prompt":"After uploading the CSV, you should see the `.parsedValue` of the `File button` component populate with rows:\n\n###\n\n","completion":" ![Some parsed rows after uploading a file.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/30e5b87-Screen_Shot_2021-08-25_at_12.24.29_PM.png) END"}
{"prompt":"![Some parsed rows after uploading a file.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/30e5b87-Screen_Shot_2021-08-25_at_12.24.29_PM.png)\n\n###\n\n","completion":" Great! END"}
{"prompt":"2. Render uploaded rows\n\n###\n\n","completion":" Now that our CSV is in Retool, we want to render its rows into a `Table`. Let's drag one on from the right hand side. (By default, it will come with some placeholder data, but we'll replace it with our new user data soon.) END"}
{"prompt":"Now that our CSV is in Retool, we want to render its rows into a `Table`. Let's drag one on from the right hand side. (By default, it will come with some placeholder data, but we'll replace it with our new user data soon.)\n\n###\n\n","completion":" ![A table, with some placeholder data.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/756836b-Table_Drag_n_Drop.gif) END"}
{"prompt":"![A table, with some placeholder data.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/756836b-Table_Drag_n_Drop.gif)\n\n###\n\n","completion":" Nice! Now let's change the `Table` to pull in data from our `File Button` component, rather than from its placeholder data. Change the table data property to: `{{fileButton1.parsedValue[0]}}`: END"}
{"prompt":"Nice! Now let's change the `Table` to pull in data from our `File Button` component, rather than from its placeholder data. Change the table data property to: `{{fileButton1.parsedValue[0]}}`:\n\n###\n\n","completion":" ![Changing our Table to pull in data from our FilePicker.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/019d5e1-Screen_Shot_2021-08-25_at_12.26.59_PM.png) END"}
{"prompt":"![Changing our Table to pull in data from our FilePicker.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/019d5e1-Screen_Shot_2021-08-25_at_12.26.59_PM.png)\n\n###\n\n","completion":" Great! Now, in your table, you should have the book data we previously downloaded: END"}
{"prompt":"Great! Now, in your table, you should have the book data we previously downloaded:\n\n###\n\n","completion":" ![Uploaded users, rendered in a Table.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a2ed5e2-Screenshot_2021-06-16_at_7.06.38_PM.png) END"}
{"prompt":"3. POSTing rows to a sample API\n\n###\n\n","completion":" Almost there! Now let's add an action button on to each row, so we can choose which rows to update. END"}
{"prompt":"Almost there! Now let's add an action button on to each row, so we can choose which rows to update.\n\n###\n\n","completion":" Let's create another query `query2` and attach this query to an action button on a table. END"}
{"prompt":"Let's create another query `query2` and attach this query to an action button on a table.\n\n###\n\n","completion":" To add an action button to a table click on the `Table`, and scroll down on the right hand side until you see `Action`, and where you can add an action button. Let's enable it, give it the text `Upload`, and attach it to `query2`. END"}
{"prompt":"To add an action button to a table click on the `Table`, and scroll down on the right hand side until you see `Action`, and where you can add an action button. Let's enable it, give it the text `Upload`, and attach it to `query2`.\n\n###\n\n","completion":" ![Adding an action button on our Table.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7456403-Upload__query2.gif) END"}
{"prompt":"![Adding an action button on our Table.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7456403-Upload__query2.gif)\n\n###\n\n","completion":" Now let's edit `query2` and select REST API as the _Resource_ type. END"}
{"prompt":"Now let's edit `query2` and select REST API as the _Resource_ type.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cc6c9aa-RESTQuery.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cc6c9aa-RESTQuery.gif)\n\n###\n\n","completion":" In our API call, we can pass in the parameters, such as `name`, `image_url`, etc. in the `JSON` body. If it's safe to do so (eg. you're on a staging API), then you can run the query to see if it's successful. When you're ready, let's hit \"Save\", and we're ready to move to the next step. END"}
{"prompt":"In our API call, we can pass in the parameters, such as `name`, `image_url`, etc. in the `JSON` body. If it's safe to do so (eg. you're on a staging API), then you can run the query to see if it's successful. When you're ready, let's hit \"Save\", and we're ready to move to the next step.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/28a021a-Screenshot_2021-06-16_at_7.24.24_PM.png) END"}
{"prompt":"4. Verify it's working\n\n###\n\n","completion":" Last step! Let's write a SQL query to actually pull in data from our database, and render it onto a `Table` beneath this one. To write a SQL query, let's hit the \"New Query\" button on the query editor, and then choose the `onboarding_db` resource: END"}
{"prompt":"Last step! Let's write a SQL query to actually pull in data from our database, and render it onto a `Table` beneath this one. To write a SQL query, let's hit the \"New Query\" button on the query editor, and then choose the `onboarding_db` resource:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/06dc391-Screenshot_2021-06-16_at_7.31.59_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/06dc391-Screenshot_2021-06-16_at_7.31.59_PM.png)\n\n###\n\n","completion":" The SQL for our example database is: END"}
{"prompt":"The SQL for our example database is:\n\n###\n\n","completion":" Let's preview it, and save it if it looks good. To render it on to a `Table`, let's first drag one on from the right hand side. By default, it should pull in your last saved query. If not, connect your `Table` to your query by typing in `{{ query3.data }}`. Now you have your actual users pulled in! END"}
{"prompt":"Let's preview it, and save it if it looks good. To render it on to a `Table`, let's first drag one on from the right hand side. By default, it should pull in your last saved query. If not, connect your `Table` to your query by typing in `{{ query3.data }}`. Now you have your actual users pulled in!\n\n###\n\n","completion":" To really test if our tool works, we'll need to refresh `query3` whenever we upload a user (since we don't want to refresh the page after every insert). So let's click on the `query2`, and scroll to the \"After this query runs\" section. We want to add `query3` there, so every time we add a user, our tool will pull in the new users from the database: END"}
{"prompt":"To really test if our tool works, we'll need to refresh `query3` whenever we upload a user (since we don't want to refresh the page after every insert). So let's click on the `query2`, and scroll to the \"After this query runs\" section. We want to add `query3` there, so every time we add a user, our tool will pull in the new users from the database:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0c41a8b-Screenshot_2021-06-16_at_7.35.07_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0c41a8b-Screenshot_2021-06-16_at_7.35.07_PM.png)\n\n###\n\n","completion":" **That's it! When you hit the action button on the first `Table`, it'll make a `POST` request back to our API. After that succeeds, the query to pull in users from our database will refresh, and we'll be able to see all the users we've added.** Here's the complete tool we built in a few minutes: END"}
{"prompt":"**That's it! When you hit the action button on the first `Table`, it'll make a `POST` request back to our API. After that succeeds, the query to pull in users from our database will refresh, and we'll be able to see all the users we've added.** Here's the complete tool we built in a few minutes:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c420063-Screenshot_2021-06-16_at_8.41.07_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c420063-Screenshot_2021-06-16_at_8.41.07_PM.png)\n\n###\n\n","completion":" **This tool is now production-ready**. If you don't want coworkers bugging you about CRUD tasks again, you can send them the link to this Retool, which they can use themselves. If you [give them specific permissions](https:\/\/docs.retool.com\/docs\/user-permissions), they won't be able to edit the tool and change the queries - they'll just be able to use the tool you've created. END"}
{"prompt":"title: \"Interact with Airtable data\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to connect Airtable data to Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool can connect to Airtable using either SQL via [Sequin](https:\/\/www.sequin.io\/) or GraphQL via [BaseQL](https:\/\/www.baseql.com\/). END"}
{"prompt":"Connect via Sequin\n\n###\n\n","completion":" Let's build a customer support dashboard from scratch using Airtable and Retool. The app will allow you to search through all your customers and then see all the contacts, tasks, meetings and invoices related to the customer in one, clean view. END"}
{"prompt":"Let's build a customer support dashboard from scratch using Airtable and Retool. The app will allow you to search through all your customers and then see all the contacts, tasks, meetings and invoices related to the customer in one, clean view.\n\n###\n\n","completion":" ![Single View of Customer](https:\/\/docs.sequin.io\/assets\/retool-svoc\/001_single_view_of_customer.png) END"}
{"prompt":"![Single View of Customer](https:\/\/docs.sequin.io\/assets\/retool-svoc\/001_single_view_of_customer.png)\n\n###\n\n","completion":" Retool doesn't come with a native Airtable integration. And while you can use Retool's REST API connector with Airtable, because Airtable's API comes with rate limits and pagination, it's a bit clumsy to work with. END"}
{"prompt":"Retool doesn't come with a native Airtable integration. And while you can use Retool's REST API connector with Airtable, because Airtable's API comes with rate limits and pagination, it's a bit clumsy to work with.\n\n###\n\n","completion":" Luckily, Retool comes out of the box with first-class support for SQL. So in this tutorial we'll use [Sequin](https:\/\/sequin.io) to turn Airtable into a Postgres database. This will allow you to connect Airtable to Retool as a database so you can build the apps you need in minutes. END"}
{"prompt":"Airtable Setup\n\n###\n\n","completion":" For this tutorial we'll use Airtable's [customer success management template](https:\/\/airtable.com\/templates\/sales-and-customers\/expWibrfsinGaxuX5\/customer-success-management). This base is a great example of how Airtable can manage all your customer data and relationships. But it also showcases the limits of using Airtable when you need finer workflows or permissions. This is where Retool comes in. END"}
{"prompt":"For this tutorial we'll use Airtable's [customer success management template](https:\/\/airtable.com\/templates\/sales-and-customers\/expWibrfsinGaxuX5\/customer-success-management). This base is a great example of how Airtable can manage all your customer data and relationships. But it also showcases the limits of using Airtable when you need finer workflows or permissions. This is where Retool comes in.\n\n###\n\n","completion":" ![Airtable customer success template](https:\/\/docs.sequin.io\/assets\/retool-svoc\/002_airtable_base.png) END"}
{"prompt":"![Airtable customer success template](https:\/\/docs.sequin.io\/assets\/retool-svoc\/002_airtable_base.png)\n\n###\n\n","completion":" First, add the Airtable customer success management template to your Airtable workspace: END"}
{"prompt":"First, add the Airtable customer success management template to your Airtable workspace:\n\n###\n\n","completion":" ![Add template](https:\/\/docs.sequin.io\/assets\/retool-svoc\/003_copy_template.png) END"}
{"prompt":"Sequin Setup\n\n###\n\n","completion":" Now, let's turn the customer success management base in Airtable into a Postgres database that works with Retool using [Sequin](https:\/\/sequin.io). END"}
{"prompt":"Now, let's turn the customer success management base in Airtable into a Postgres database that works with Retool using [Sequin](https:\/\/sequin.io).\n\n###\n\n","completion":" ![Add base](https:\/\/docs.sequin.io\/assets\/retool-svoc\/004_add_base.png) END"}
{"prompt":"![Add base](https:\/\/docs.sequin.io\/assets\/retool-svoc\/004_add_base.png)\n\n###\n\n","completion":" ![Add base](https:\/\/docs.sequin.io\/assets\/retool-svoc\/005_create.png) END"}
{"prompt":"![Add base](https:\/\/docs.sequin.io\/assets\/retool-svoc\/005_create.png)\n\n###\n\n","completion":" ![Connect](https:\/\/docs.sequin.io\/assets\/retool-svoc\/006_connection.png) END"}
{"prompt":"Retool Resource Setup\n\n###\n\n","completion":" Now, just add your Sequin database to Retool like any other Postgres database: END"}
{"prompt":"Now, just add your Sequin database to Retool like any other Postgres database:\n\n###\n\n","completion":" ![Create new resource](https:\/\/docs.sequin.io\/assets\/retool-svoc\/007_create_resource.png) END"}
{"prompt":"![Create new resource](https:\/\/docs.sequin.io\/assets\/retool-svoc\/007_create_resource.png)\n\n###\n\n","completion":" ![Select Postgres](https:\/\/docs.sequin.io\/assets\/retool-svoc\/008_select_postgres.png) END"}
{"prompt":"![Select Postgres](https:\/\/docs.sequin.io\/assets\/retool-svoc\/008_select_postgres.png)\n\n###\n\n","completion":" ![Enter DB credentials](https:\/\/docs.sequin.io\/assets\/retool-svoc\/009_enter_db_cred.png) END"}
{"prompt":"![Enter DB credentials](https:\/\/docs.sequin.io\/assets\/retool-svoc\/009_enter_db_cred.png)\n\n###\n\n","completion":" ![Confirm resource](https:\/\/docs.sequin.io\/assets\/retool-svoc\/010_confirm_resource.png) END"}
{"prompt":"Retool App Setup\n\n###\n\n","completion":" With Airtable successfully connected to Retool using Sequin, we are ready to build an app that shows you all your customer data in one view. Or, as some call it, a _single view of customer_. END"}
{"prompt":"With Airtable successfully connected to Retool using Sequin, we are ready to build an app that shows you all your customer data in one view. Or, as some call it, a _single view of customer_.\n\n###\n\n","completion":" ![Create app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/011_create_app.png) END"}
{"prompt":"![Create app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/011_create_app.png)\n\n###\n\n","completion":" ![Select initial data](https:\/\/docs.sequin.io\/assets\/retool-svoc\/012_select_initial_data.png) END"}
{"prompt":"![Select initial data](https:\/\/docs.sequin.io\/assets\/retool-svoc\/012_select_initial_data.png)\n\n###\n\n","completion":" ![Name app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/013_name_app.png) END"}
{"prompt":"![Name app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/013_name_app.png)\n\n###\n\n","completion":" ![Starting app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/014_starting_app.png) END"}
{"prompt":"![Starting app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/014_starting_app.png)\n\n###\n\n","completion":" ![Starting edit](https:\/\/docs.sequin.io\/assets\/retool-svoc\/015_start_edit.png) END"}
{"prompt":"![Starting edit](https:\/\/docs.sequin.io\/assets\/retool-svoc\/015_start_edit.png)\n\n###\n\n","completion":" ![Clean app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/016_clean_app.png) END"}
{"prompt":"Create the customer accounts table\n\n###\n\n","completion":" With the basic scaffolding of your Retool application in place, you can begin to tailor the app to our needs using SQL. END"}
{"prompt":"With the basic scaffolding of your Retool application in place, you can begin to tailor the app to our needs using SQL.\n\n###\n\n","completion":" First, look at the query section in bottom panel. You can see that because Sequin has transformed your Airtable base into a proper Postgres database, you have access to all of Retool's SQL capabilities. For instance, you can see the entire schema of your base as well as the column types. And as you write SQL queries, you get the benefits of autocomplete: END"}
{"prompt":"First, look at the query section in bottom panel. You can see that because Sequin has transformed your Airtable base into a proper Postgres database, you have access to all of Retool's SQL capabilities. For instance, you can see the entire schema of your base as well as the column types. And as you write SQL queries, you get the benefits of autocomplete:\n\n###\n\n","completion":" ![SQL editor](https:\/\/docs.sequin.io\/assets\/retool-svoc\/017_sql_editor.png) END"}
{"prompt":"![SQL editor](https:\/\/docs.sequin.io\/assets\/retool-svoc\/017_sql_editor.png)\n\n###\n\n","completion":" Now, go ahead and edit the query that populates the account table so that you only pull in the data you need for each customer account: END"}
{"prompt":"Now, go ahead and edit the query that populates the account table so that you only pull in the data you need for each customer account:\n\n###\n\n","completion":" This query is selecting just the columns you need from the `accounts` table. You'll note that the syntax for pulling in the `primary_csm` is a little different. The `primary_csm` column is a collaborator field in Airtable - so it's stored as JSON in your Sequin database. The `->> 'name'` syntax pulls out just the value of the `name` key in the JSON. END"}
{"prompt":"This query is selecting just the columns you need from the `accounts` table. You'll note that the syntax for pulling in the `primary_csm` is a little different. The `primary_csm` column is a collaborator field in Airtable - so it's stored as JSON in your Sequin database. The `->> 'name'` syntax pulls out just the value of the `name` key in the JSON.\n\n###\n\n","completion":" You'll also note that to bring in the number of tasks for each account you `JOIN` the `accounts` table with the `task_manager` table. Linked records appear in Airtable as arrays because it is possible for one records to be linked to many other records. In this case, you know that each task is linked to one account, so the `[1]` syntax extracts the one and only account from the array to complete the join. END"}
{"prompt":"You'll also note that to bring in the number of tasks for each account you `JOIN` the `accounts` table with the `task_manager` table. Linked records appear in Airtable as arrays because it is possible for one records to be linked to many other records. In this case, you know that each task is linked to one account, so the `[1]` syntax extracts the one and only account from the array to complete the join.\n\n###\n\n","completion":" The query then filters the results at the `WHERE` clause based on the value in the search bar. If nothing is entered in the search bar, the entire list of accounts is returned. END"}
{"prompt":"The query then filters the results at the `WHERE` clause based on the value in the search bar. If nothing is entered in the search bar, the entire list of accounts is returned.\n\n###\n\n","completion":" When you click to **Save and Run** button, the results of the query are shown as a preview. Everything looks good. So as a last step, rename this query to `list_accounts` by clicking and then editing the name of the query in the left bar. END"}
{"prompt":"When you click to **Save and Run** button, the results of the query are shown as a preview. Everything looks good. So as a last step, rename this query to `list_accounts` by clicking and then editing the name of the query in the left bar.\n\n###\n\n","completion":" ![List accounts](https:\/\/docs.sequin.io\/assets\/retool-svoc\/018_list_accounts.png) END"}
{"prompt":"![List accounts](https:\/\/docs.sequin.io\/assets\/retool-svoc\/018_list_accounts.png)\n\n###\n\n","completion":" Finally, let's make this table look good. With accounts table selected in the canvas, go into the inspector in the right panel to re-organize the columns and give them clear titles. Hide the `id` column by clicking the little \"eye\" icon since its more of a reference field. Lastly, adjust the table sort and pagination to your liking. END"}
{"prompt":"Finally, let's make this table look good. With accounts table selected in the canvas, go into the inspector in the right panel to re-organize the columns and give them clear titles. Hide the `id` column by clicking the little \"eye\" icon since its more of a reference field. Lastly, adjust the table sort and pagination to your liking.\n\n###\n\n","completion":" ![Clean accounts](https:\/\/docs.sequin.io\/assets\/retool-svoc\/019_clean_accounts_table.png) END"}
{"prompt":"![Clean accounts](https:\/\/docs.sequin.io\/assets\/retool-svoc\/019_clean_accounts_table.png)\n\n###\n\n","completion":" With the table looking good, give it a title. Drag and drop a `text` component above the table. END"}
{"prompt":"With the table looking good, give it a title. Drag and drop a `text` component above the table.\n\n###\n\n","completion":" ![Add title](https:\/\/docs.sequin.io\/assets\/retool-svoc\/020_add_title.png) END"}
{"prompt":"![Add title](https:\/\/docs.sequin.io\/assets\/retool-svoc\/020_add_title.png)\n\n###\n\n","completion":" Then, in the inspector, use markdown to give the text component a value of `# 📂 Accounts`. This will make the text an `H1` header. END"}
{"prompt":"Then, in the inspector, use markdown to give the text component a value of `# 📂 Accounts`. This will make the text an `H1` header.\n\n###\n\n","completion":" ![Final accounts table](https:\/\/docs.sequin.io\/assets\/retool-svoc\/021_final_accounts_table.png) END"}
{"prompt":"Add the remaining customer data\n\n###\n\n","completion":" Voila, your first table is complete. The accounts table is now pulling data live from Airtable and is easily searchable. With SQL and Retool at your fingertips, that was pretty quick. Now, lets add the remaining customer data. END"}
{"prompt":"Voila, your first table is complete. The accounts table is now pulling data live from Airtable and is easily searchable. With SQL and Retool at your fingertips, that was pretty quick. Now, lets add the remaining customer data.\n\n###\n\n","completion":" We're going to repeat the same steps we used to create the account table, but in a slightly more efficient flow: END"}
{"prompt":"1. Layout the remaining tables and titles\n\n###\n\n","completion":" In order to show all the relevant information for any given account, your app should show the **Contacts**, **Tasks**, **Meetings**, and **Invoices** for the account selected. Each of these will be their own table. So we can layout the entire application by dragging and dropping tables and text components into the canvas. In a couple clicks you'll end up with an app that looks something like this: END"}
{"prompt":"In order to show all the relevant information for any given account, your app should show the **Contacts**, **Tasks**, **Meetings**, and **Invoices** for the account selected. Each of these will be their own table. So we can layout the entire application by dragging and dropping tables and text components into the canvas. In a couple clicks you'll end up with an app that looks something like this:\n\n###\n\n","completion":" ![Layout](https:\/\/docs.sequin.io\/assets\/retool-svoc\/022_layout.png) END"}
{"prompt":"2. Add data to the tables\n\n###\n\n","completion":" Filling each table up with data is a two step process: END"}
{"prompt":"Filling each table up with data is a two step process:\n\n###\n\n","completion":" Let's start with the contacts table. END"}
{"prompt":"Let's start with the contacts table.\n\n###\n\n","completion":" First, open the bottom panel and click **New** to add a new query: END"}
{"prompt":"First, open the bottom panel and click **New** to add a new query:\n\n###\n\n","completion":" ![New query](https:\/\/docs.sequin.io\/assets\/retool-svoc\/023_create_query.png) END"}
{"prompt":"![New query](https:\/\/docs.sequin.io\/assets\/retool-svoc\/023_create_query.png)\n\n###\n\n","completion":" To retrieve the contacts, we can write a simple SQL query: END"}
{"prompt":"To retrieve the contacts, we can write a simple SQL query:\n\n###\n\n","completion":" Here, the `SELECT` statement is pulling in the specific columns for the table. While the `WHERE` clause is filtering the returned results based on the account selected in the accounts table (i.e. `table`). END"}
{"prompt":"Here, the `SELECT` statement is pulling in the specific columns for the table. While the `WHERE` clause is filtering the returned results based on the account selected in the accounts table (i.e. `table`).\n\n###\n\n","completion":" When you select an account in the accounts table (I recommend selecting `Soho Real Estate` account for testing) and then click the **Save and Run** button, you'll see this query returns just the contacts for the selected account. Exactly what you are looking for. END"}
{"prompt":"When you select an account in the accounts table (I recommend selecting `Soho Real Estate` account for testing) and then click the **Save and Run** button, you'll see this query returns just the contacts for the selected account. Exactly what you are looking for.\n\n###\n\n","completion":" Name the query `list_contacts` so it's easy to identify. Now, click on the empty table under the **Contacts** heading in the canvas. The inspector on the right will now show the settings for the table. Enter `{{ list_contacts.data }}` into the data field. This will fill the table with the data returned from the `list_contacts` query. END"}
{"prompt":"Name the query `list_contacts` so it's easy to identify. Now, click on the empty table under the **Contacts** heading in the canvas. The inspector on the right will now show the settings for the table. Enter `{{ list_contacts.data }}` into the data field. This will fill the table with the data returned from the `list_contacts` query.\n\n###\n\n","completion":" ![Contacts](https:\/\/docs.sequin.io\/assets\/retool-svoc\/024_contacts.png) END"}
{"prompt":"![Contacts](https:\/\/docs.sequin.io\/assets\/retool-svoc\/024_contacts.png)\n\n###\n\n","completion":" Just repeat this pattern to populate the remaining tables. Here are the PostgreSQL queries you can use for each table. They all follow the same pattern: END"}
{"prompt":"Just repeat this pattern to populate the remaining tables. Here are the PostgreSQL queries you can use for each table. They all follow the same pattern:\n\n###\n\n","completion":" **Tasks** (`list_tasks`) END"}
{"prompt":"**Tasks** (`list_tasks`)\n\n###\n\n","completion":" **Meetings** ('list_meetings`) END"}
{"prompt":"**Meetings** ('list_meetings`)\n\n###\n\n","completion":" **Invoices** ('list_invoices`) END"}
{"prompt":"**Invoices** ('list_invoices`)\n\n###\n\n","completion":" After creating and connecting all your queries, your app should now feel almost complete. You can search for an account like \"Soho Real Estate\", select it, and all the tables will show the details for the account. END"}
{"prompt":"After creating and connecting all your queries, your app should now feel almost complete. You can search for an account like \"Soho Real Estate\", select it, and all the tables will show the details for the account.\n\n###\n\n","completion":" ![Working app](https:\/\/docs.sequin.io\/assets\/retool-svoc\/025_working_app.png) END"}
{"prompt":"3. Make the tables look pretty\n\n###\n\n","completion":" To make the app easy to use, let's make each table a little more functional. END"}
{"prompt":"To make the app easy to use, let's make each table a little more functional.\n\n###\n\n","completion":" As a first step, to make these additional tables easy to read, turn on **Compact mode** in the inspector. This will allow each table to show more information. END"}
{"prompt":"As a first step, to make these additional tables easy to read, turn on **Compact mode** in the inspector. This will allow each table to show more information.\n\n###\n\n","completion":" ![Compact mode](https:\/\/docs.sequin.io\/assets\/retool-svoc\/026_compact_mode.png) END"}
{"prompt":"![Compact mode](https:\/\/docs.sequin.io\/assets\/retool-svoc\/026_compact_mode.png)\n\n###\n\n","completion":" Next, add readable column names and column types to each table. Simply select the table in the canvas, then select the column in the inspector and give it a name and type. For example, change the column title for `invoice_amount` to `Amount` and make it's column type `USD (dollars)`. END"}
{"prompt":"Next, add readable column names and column types to each table. Simply select the table in the canvas, then select the column in the inspector and give it a name and type. For example, change the column title for `invoice_amount` to `Amount` and make it's column type `USD (dollars)`.\n\n###\n\n","completion":" ![Name and type](https:\/\/docs.sequin.io\/assets\/retool-svoc\/027_name_and_type.png) END"}
{"prompt":"![Name and type](https:\/\/docs.sequin.io\/assets\/retool-svoc\/027_name_and_type.png)\n\n###\n\n","completion":" Retool has many options to make these tables sparkle, but with just these minor changes your app should be easy to use. END"}
{"prompt":"Retool has many options to make these tables sparkle, but with just these minor changes your app should be easy to use.\n\n###\n\n","completion":" You now have a single view of customer app with all your key customer data in one, clean window. END"}
{"prompt":"You now have a single view of customer app with all your key customer data in one, clean window.\n\n###\n\n","completion":" ![Name and type](https:\/\/docs.sequin.io\/assets\/retool-svoc\/028_final_read_app.png) END"}
{"prompt":"Writing to Airtable\n\n###\n\n","completion":" Let's say you want to allow your customer success agents to create new tasks for accounts. END"}
{"prompt":"Let's say you want to allow your customer success agents to create new tasks for accounts.\n\n###\n\n","completion":" To add this functionality, you'll first set up the components and then connect the data. END"}
{"prompt":"To add this functionality, you'll first set up the components and then connect the data.\n\n###\n\n","completion":" In this case, you'll use a simple modal to collect the details of the task. END"}
{"prompt":"The Sequin Proxy\n\n###\n\n","completion":" Sequin promotes a one-way data-flow. You read data from Airtable using the Sequin Postgres database, and then you write to Airtable through the [Sequin Proxy](\/reference#writes). END"}
{"prompt":"Sequin promotes a one-way data-flow. You read data from Airtable using the Sequin Postgres database, and then you write to Airtable through the [Sequin Proxy](\/reference#writes).\n\n###\n\n","completion":" The proxy sits between your code and Airtable's API so that any CREATES, UPDATES, or DELETES are written to both Airtable and your Sequin database simultaneously. This ensures your Retool app is responsive and fast. END"}
{"prompt":"The proxy sits between your code and Airtable's API so that any CREATES, UPDATES, or DELETES are written to both Airtable and your Sequin database simultaneously. This ensures your Retool app is responsive and fast.\n\n###\n\n","completion":" ![Proxy flow](https:\/\/docs.sequin.io\/assets\/retool-svoc\/039_proxy_flow.png) END"}
{"prompt":"![Proxy flow](https:\/\/docs.sequin.io\/assets\/retool-svoc\/039_proxy_flow.png)\n\n###\n\n","completion":" To use the Sequin Proxy, you just need to change the hostname for all your Airtable API calls from `https:\/\/api.airtable.com` to `https:\/\/proxy.sequin.io\/api.airtable.com`. After that change, you use the Airtable API like you normally would. END"}
{"prompt":"To use the Sequin Proxy, you just need to change the hostname for all your Airtable API calls from `https:\/\/api.airtable.com` to `https:\/\/proxy.sequin.io\/api.airtable.com`. After that change, you use the Airtable API like you normally would.\n\n###\n\n","completion":" So in this case, to create a new task on Airtable, you'll perform a `POST` to Airtable via the Sequin Proxy. This update will be applied to Airtable and your Sequin Postgres database simultaneously, which means Retool will always display the latest data. END"}
{"prompt":"Add a modal\n\n###\n\n","completion":" From the components list, find the modal component, and then drag and drop its button onto the canvas just above the Task table. END"}
{"prompt":"From the components list, find the modal component, and then drag and drop its button onto the canvas just above the Task table.\n\n###\n\n","completion":" You can make the button green with the text \"New Task\". END"}
{"prompt":"You can make the button green with the text \"New Task\".\n\n###\n\n","completion":" ![Add modal](https:\/\/docs.sequin.io\/assets\/retool-svoc\/029_add_modal.png) END"}
{"prompt":"![Add modal](https:\/\/docs.sequin.io\/assets\/retool-svoc\/029_add_modal.png)\n\n###\n\n","completion":" Now, let's build a form in the modal to collect the details of a new task. END"}
{"prompt":"Now, let's build a form in the modal to collect the details of a new task.\n\n###\n\n","completion":" When you click on the \"New Task\" button the modal will appear. The modal doesn't need to be huge, so you can adjust the height of the modal to `350px` in the inspector. END"}
{"prompt":"When you click on the \"New Task\" button the modal will appear. The modal doesn't need to be huge, so you can adjust the height of the modal to `350px` in the inspector.\n\n###\n\n","completion":" Now, drag and drop several components into the modal: END"}
{"prompt":"Now, drag and drop several components into the modal:\n\n###\n\n","completion":" By the end, your modal should look something like this: END"}
{"prompt":"By the end, your modal should look something like this:\n\n###\n\n","completion":" ![Build modal](https:\/\/docs.sequin.io\/assets\/retool-svoc\/030_build_modal.png) END"}
{"prompt":"Connect the modal\n\n###\n\n","completion":" First, make sure the user can close the modal: END"}
{"prompt":"First, make sure the user can close the modal:\n\n###\n\n","completion":" ![close modal](https:\/\/docs.sequin.io\/assets\/retool-svoc\/031_close_modal.png) END"}
{"prompt":"![close modal](https:\/\/docs.sequin.io\/assets\/retool-svoc\/031_close_modal.png)\n\n###\n\n","completion":" Trigger the `close_modal` query when the user closes the modal or clicks the cancel button. END"}
{"prompt":"Trigger the `close_modal` query when the user closes the modal or clicks the cancel button.\n\n###\n\n","completion":" ![connect close](https:\/\/docs.sequin.io\/assets\/retool-svoc\/032_connect_close.png) END"}
{"prompt":"![connect close](https:\/\/docs.sequin.io\/assets\/retool-svoc\/032_connect_close.png)\n\n###\n\n","completion":" Next, let's trigger the creation of a new task when the user clicks save. END"}
{"prompt":"Next, let's trigger the creation of a new task when the user clicks save.\n\n###\n\n","completion":" To do so, we first need to add the Sequin Proxy as a resource. END"}
{"prompt":"To do so, we first need to add the Sequin Proxy as a resource.\n\n###\n\n","completion":" Click the Retool icon in the upper left corner, and select Resources. END"}
{"prompt":"Click the Retool icon in the upper left corner, and select Resources.\n\n###\n\n","completion":" ![Click resource](https:\/\/docs.sequin.io\/assets\/retool-svoc\/033_click_resource.png) END"}
{"prompt":"![Click resource](https:\/\/docs.sequin.io\/assets\/retool-svoc\/033_click_resource.png)\n\n###\n\n","completion":" On the Resource page, click the blue **Create New** button and then select **REST API** from the options. END"}
{"prompt":"On the Resource page, click the blue **Create New** button and then select **REST API** from the options.\n\n###\n\n","completion":" ![Select Rest](https:\/\/docs.sequin.io\/assets\/retool-svoc\/034_select_api.png) END"}
{"prompt":"![Select Rest](https:\/\/docs.sequin.io\/assets\/retool-svoc\/034_select_api.png)\n\n###\n\n","completion":" Configure your the Airtable API: END"}
{"prompt":"Configure your the Airtable API:\n\n###\n\n","completion":" Then click the blue **Create resource** button. END"}
{"prompt":"Then click the blue **Create resource** button.\n\n###\n\n","completion":" ![Configure API](https:\/\/docs.sequin.io\/assets\/retool-svoc\/035_configure_API.png) END"}
{"prompt":"![Configure API](https:\/\/docs.sequin.io\/assets\/retool-svoc\/035_configure_API.png)\n\n###\n\n","completion":" Navigate back to your app, open the bottom panel and click to create a new query as follows: END"}
{"prompt":"Navigate back to your app, open the bottom panel and click to create a new query as follows:\n\n###\n\n","completion":" The body of this API query is creating a new record in the `Task Manager` table. The details of the task are being pulled from the values entered in the modal. END"}
{"prompt":"The body of this API query is creating a new record in the `Task Manager` table. The details of the task are being pulled from the values entered in the modal.\n\n###\n\n","completion":" As a last step, after a new task is created, we want to refresh the data in the app. To do so, in the **On success trigger** field at the bottom of the page, select the `list_accounts` query. This will cause all the tables on the page to refresh. END"}
{"prompt":"As a last step, after a new task is created, we want to refresh the data in the app. To do so, in the **On success trigger** field at the bottom of the page, select the `list_accounts` query. This will cause all the tables on the page to refresh.\n\n###\n\n","completion":" Click **Save** and name the query `ceate_new_task`. END"}
{"prompt":"Click **Save** and name the query `ceate_new_task`.\n\n###\n\n","completion":" ![Create task](https:\/\/docs.sequin.io\/assets\/retool-svoc\/036_create_task_query.png) END"}
{"prompt":"![Create task](https:\/\/docs.sequin.io\/assets\/retool-svoc\/036_create_task_query.png)\n\n###\n\n","completion":" When the user clicks save in the modal, we want to create a new task, close the modal, and then refresh the data on the page. END"}
{"prompt":"When the user clicks save in the modal, we want to create a new task, close the modal, and then refresh the data on the page.\n\n###\n\n","completion":" So as a last step, let's create one more query to string these functions together. END"}
{"prompt":"So as a last step, let's create one more query to string these functions together.\n\n###\n\n","completion":" Click to create a new query and select `Run JS Code (JavaScript)` as the resource. Then enter this code: END"}
{"prompt":"Click to create a new query and select `Run JS Code (JavaScript)` as the resource. Then enter this code:\n\n###\n\n","completion":" Click the save button and name this query `run_modal`: END"}
{"prompt":"Click the save button and name this query `run_modal`:\n\n###\n\n","completion":" ![Run modal](https:\/\/docs.sequin.io\/assets\/retool-svoc\/037_run_modal.png) END"}
{"prompt":"![Run modal](https:\/\/docs.sequin.io\/assets\/retool-svoc\/037_run_modal.png)\n\n###\n\n","completion":" Now, let's connect this new query to the modal. We want to trigger the `run_modal` query when the user clicks the save button. So open the modal, and select the Save button. In the inspector, select to `Run a query` on click. Select `run_modal` from the drop down. END"}
{"prompt":"Now, let's connect this new query to the modal. We want to trigger the `run_modal` query when the user clicks the save button. So open the modal, and select the Save button. In the inspector, select to `Run a query` on click. Select `run_modal` from the drop down.\n\n###\n\n","completion":" ![Final connect](https:\/\/docs.sequin.io\/assets\/retool-svoc\/038_final_connect.png) END"}
{"prompt":"![Final connect](https:\/\/docs.sequin.io\/assets\/retool-svoc\/038_final_connect.png)\n\n###\n\n","completion":" Last step! Test it out. Open the modal and create a task. Click the save button. The modal will close and your new task appears instantly ✨ END"}
{"prompt":"Last step! Test it out. Open the modal and create a task. Click the save button. The modal will close and your new task appears instantly ✨\n\n###\n\n","completion":" Now, with the power of SQL and the Sequin Proxy, you can build Retool apps on your Airtable data in no time. END"}
{"prompt":"Connecting via BaseQL\n\n###\n\n","completion":" _Note: BaseQL is only available on the Airtable Pro Plan._ END"}
{"prompt":"_Note: BaseQL is only available on the Airtable Pro Plan._\n\n###\n\n","completion":" To get started, we'll need to install BaseQL from the Airtable Marketplace. Head over to your marketplace tab and search for BaseQL: END"}
{"prompt":"To get started, we'll need to install BaseQL from the Airtable Marketplace. Head over to your marketplace tab and search for BaseQL:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/345cf32-Screen_Shot_2020-11-20_at_2.55.44_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/345cf32-Screen_Shot_2020-11-20_at_2.55.44_PM.png)\n\n###\n\n","completion":" Once you've got BaseQL installed, head over to whichever Airtable base you want to query and use in Retool. We've got a base of Sharks (from Shark Tank, of course) queued up here that we want to use in Retool. END"}
{"prompt":"Once you've got BaseQL installed, head over to whichever Airtable base you want to query and use in Retool. We've got a base of Sharks (from Shark Tank, of course) queued up here that we want to use in Retool.\n\n###\n\n","completion":" Click \"Apps\" on the right side, and select BaseQL. END"}
{"prompt":"Click \"Apps\" on the right side, and select BaseQL.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3423896-Screen_Shot_2020-11-20_at_2.35.43_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3423896-Screen_Shot_2020-11-20_at_2.35.43_PM.png)\n\n###\n\n","completion":" First, you'll need to get your Airtable API Key. Click on your account icon on the top right of your screen. END"}
{"prompt":"First, you'll need to get your Airtable API Key. Click on your account icon on the top right of your screen.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/83bdaa4-Screen_Shot_2020-11-20_at_2.36.10_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/83bdaa4-Screen_Shot_2020-11-20_at_2.36.10_PM.png)\n\n###\n\n","completion":" This account doesn't have an API Key yet, so we'll need to generate one with the \"Generate API Key\" button. END"}
{"prompt":"This account doesn't have an API Key yet, so we'll need to generate one with the \"Generate API Key\" button.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/914c7ce-Screen_Shot_2020-11-20_at_2.36.31_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/914c7ce-Screen_Shot_2020-11-20_at_2.36.31_PM.png)\n\n###\n\n","completion":" Once you've got this API Key copied to your clipboard, head back to your base and paste it into BaseQL's API Key field. BaseQL gives you two options - you can use an inline IDE for writing queries (\"GraphQL Explorer\"), or open the BaseQL app directly and write queries there. Either way, you should see an endpoint that BaseQL generates on their servers. It should look something like this: END"}
{"prompt":"Once you've got this API Key copied to your clipboard, head back to your base and paste it into BaseQL's API Key field. BaseQL gives you two options - you can use an inline IDE for writing queries (\"GraphQL Explorer\"), or open the BaseQL app directly and write queries there. Either way, you should see an endpoint that BaseQL generates on their servers. It should look something like this:\n\n###\n\n","completion":" `https:\/\/api.baseql.com\/airtable\/graphql\/appb5EQO5dqP1YdprX` END"}
{"prompt":"`https:\/\/api.baseql.com\/airtable\/graphql\/appb5EQO5dqP1YdprX`\n\n###\n\n","completion":" This is the endpoint we'll query in Retool. END"}
{"prompt":"This is the endpoint we'll query in Retool.\n\n###\n\n","completion":" Pop open a Retool app (or [create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one), head down to your query editor on the bottom of your screen, and create a new query with the \"+ new\" button. Select \"GraphQL\" from the dropdown, and paste your endpoint from above into the \"URL\" field. Then you should be good to go! END"}
{"prompt":"A basic BaseQL Airtable query\n\n###\n\n","completion":" Going back to our Sharks example, here's a simple GraphQL query that pulls in some of the data from our base: END"}
{"prompt":"title: \"Add users\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to invite users to Retool and how to authenticate them.\"\nhidden: false\n\n###\n\n","completion":" **Retool manages authentication for all the tools you build in Retool.** In the cloud version, that means that if you authenticated via SSO (as you should!), and somebody else SSO's in with the same domain, they'll get read access to the tools you've created. END"}
{"prompt":"**Retool manages authentication for all the tools you build in Retool.** In the cloud version, that means that if you authenticated via SSO (as you should!), and somebody else SSO's in with the same domain, they'll get read access to the tools you've created.\n\n###\n\n","completion":" Depending on how you sign in, and whether you use the cloud or on premise version, the user invite flow is different. To invite users, you should visit `\/settings`. END"}
{"prompt":"Google SSO\n\n###\n\n","completion":" When you sign in to Retool via G Suite, Retool checks if an organization has already been created for that G Suite domain. If an organization already exists, you get added to that organization and can access all Retool apps for that organization in view-only mode. An `admin` can change your permissions by adding you to a User Group that has more permissions. END"}
{"prompt":"When you sign in to Retool via G Suite, Retool checks if an organization has already been created for that G Suite domain. If an organization already exists, you get added to that organization and can access all Retool apps for that organization in view-only mode. An `admin` can change your permissions by adding you to a User Group that has more permissions.\n\n###\n\n","completion":" If no organization is found, Retool creates a new one and adds you as an `admin` to that new organization. END"}
{"prompt":"Email + password\n\n###\n\n","completion":" When you sign in to Retool via email and password, Retool always creates a new organization for you, even if you sign in with an email address that matches the domain of an existing Retool organization. When using email and password sign in, if you want to access the Retool apps of others, you need an invitation from them. Or, if you want others to use your Retool apps, you need to invite them. END"}
{"prompt":"Okta SSO\n\n###\n\n","completion":" Okta SSO is currently not supported in the cloud version of Retool. Please [contact us](https:\/\/retool.com\/demo\/?utm_source=website&utm_medium=support-site&utm_campaign=chilipiper&utm_content=okta-sso) for more details. END"}
{"prompt":"On premise\n\n###\n\n","completion":" For on premise deployments of Retool, only the first user can sign up. For all subsequent users, they have to be invited from within the application itself. END"}
{"prompt":"Google SSO\n\n###\n\n","completion":" Users with the same domain will be able to sign in, but will not be able to view or edit pages, datasources, or anything else. **You must explicitly add them to a group in order for them to have permissions.** END"}
{"prompt":"Okta SSO\n\n###\n\n","completion":" Once you add somebody to the Retool group on Okta, they're allowed to sign in to Retool. **But you must explicitly grant them permissions inside Retool** - otherwise they won't be able to view or edit pages, datasources, or anything else. END"}
{"prompt":"Email + password\n\n###\n\n","completion":" Users who sign in via email and password will not be able to see anything after signing in, just like Google SSO. **We suggest disabling email + password sign in \/ up on on-premise deployments.** (To do this, set the [`RESTRICTED_DOMAIN`](\/reference\/environment-variables-reference#restricted_domain) environment variable.) END"}
{"prompt":"Properties\n\n###\n\n","completion":"  The email address of the current user. END"}
{"prompt":"  The email address of the current user.\n\n###\n\n","completion":"  The first name of the current user. END"}
{"prompt":"  The first name of the current user.\n\n###\n\n","completion":"  The first and last names of the current user. END"}
{"prompt":"  The first and last names of the current user.\n\n###\n\n","completion":"  The permission groups for which this user belongs. END"}
{"prompt":"  The permission groups for which this user belongs.\n\n###\n\n","completion":"  The unique ID of the current user. END"}
{"prompt":"  The unique ID of the current user.\n\n###\n\n","completion":"  The last name of the current user. END"}
{"prompt":"  The last name of the current user.\n\n###\n\n","completion":"  A list of key-value pairs with any available metadata of the current user. END"}
{"prompt":"  A list of key-value pairs with any available metadata of the current user.\n\n###\n\n","completion":"  The profile photo URL from the SSO provider of the current user. END"}
{"prompt":"  The profile photo URL from the SSO provider of the current user.\n\n###\n\n","completion":"  The unique, non-sequential ID of the current user. END"}
{"prompt":"title: \"Helper methods\"\ncategorySlug: \"javascript-api\"\nexcerpt: \"JavaScript API utility methods for managing arrays and objects.\"\nhidden: false\n\n###\n\n","completion":" Use these methods to format data as arrays and objects. END"}
{"prompt":"formatDataAsArray()\n\n###\n\n","completion":" Formats data as an array of objects or an array of arrays. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" An object to convert to an array. END"}
{"prompt":"An object to convert to an array.\n\n###\n\n","completion":" A boolean to specify whether to return an array of arrays. Defaults to \"false\". END"}
{"prompt":"Return value\n\n###\n\n","completion":" An array of objects or an array of arrays. END"}
{"prompt":"Example\n\n###\n\n","completion":" Format data returned from a SQL query as an array, where each item represents one row of the query result. END"}
{"prompt":"formatDataAsObject()\n\n###\n\n","completion":" Formats data as object. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" An array to convert to an object. END"}
{"prompt":"Return value\n\n###\n\n","completion":" An object containing `data`. END"}
{"prompt":"Example\n\n###\n\n","completion":" Return a Table component's `recordUpdates` property, an array, as an object grouped by common keys. END"}
{"prompt":"Return a Table component's `recordUpdates` property, an array, as an object grouped by common keys.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<style>\\n.markdown-body h3:first-of-type {\\n margin-top: inherit;\\n}\\n \\n.markdown-body h3 {\\n padding-bottom: 6px;\\n border-bottom: 1px solid #eee;\\n margin-top: 50px;\\n font-weight: 500;\\n}\\n \\n.markdown-body h4 {\\n margin-top: 25px;\\n}\\n \\n.markdown-body table:not(.plain) tr:nth-child(2n) {\\n background-color: #fff;\\n}\\n\\n.markdown-body table tr th:first-child {\\n width: 30%\\n}\\n\\n.markdown-body table tr th:last-child {\\n width: 50%;\\n}\\n \\ndetails {\\n border: 1px solid #eee;\\n border-radius: var(--border-radius);\\n padding: 10px;\\n}\\n\\ndetails summary {\\n font-weight: var(--font-weight);\\n font-family: var(--font-family-mono);\\n font-size: 0.9rem;\\n color: #047d65;\\n}\\n\\n\\ndiv.optional, div.required {\\n display: inline;\\n font-family: var(--font-family);\\n color: white;\\n font-size: 13px;\\n padding: 2px 8px;\\n border-radius: var(--border-radius-lg);\\n font-weight: 300;\\n}\\n\\ndiv.required {\\n background: var(--red);\\n\\n}\\n\\ndiv.optional {\\n background: var(--chalk);\\n}\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"Methods\n\n###\n\n","completion":" Use these methods to parse CSV, JSON, and XLSX files. END"}
{"prompt":"fileUtils.parseCSV()\n\n###\n\n","completion":" Parses a CSV file that resolves to the file's contents. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the Base64-encoded CSV file. END"}
{"prompt":"A string to specify the Base64-encoded CSV file.\n\n###\n\n","completion":" An object that controls settings for the file parsing. END"}
{"prompt":"Return value\n\n###\n\n","completion":" Returns a Promise that resolves to a list of objects with one key per column. END"}
{"prompt":"Example\n\n###\n\n","completion":" Parse the contents of the file uploaded using `uploadFileButton`. The `results` array represents each row of the CSV, where `results[0]` is the first row. END"}
{"prompt":"fileUtils.parseJSON()\n\n###\n\n","completion":" Parses a JSON file that resolves to the file's contents. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the Base64-encoded JSON file. END"}
{"prompt":"Return value\n\n###\n\n","completion":" Returns a Promise that resolves to an object with the file's contents. END"}
{"prompt":"Example\n\n###\n\n","completion":" Parse the contents of the file uploaded using `uploadFileButton` into the `results` array. END"}
{"prompt":"fileUtils.parseXLSX()\n\n###\n\n","completion":" Parses an XLSX file that resolves to the file's contents. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the Base64-encoded XLSX file. END"}
{"prompt":"Return value\n\n###\n\n","completion":" Returns a Promise that resolves to an object with the file's contents. The result contains an object for each sheet with a nested object for each row. END"}
{"prompt":"Parse the contents of the file uploaded using `uploadFileButton` into the `results` array.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n.markdown-body h3:first-of-type {\\n margin-top: inherit;\\n}\\n \\n.markdown-body h3 {\\n padding-bottom: 6px;\\n border-bottom: 1px solid #eee;\\n margin-top: 50px;\\n font-weight: 500;\\n}\\n \\n.markdown-body h4 {\\n margin-top: 25px;\\n}\\n \\n.markdown-body table:not(.plain) tr:nth-child(2n) {\\n background-color: #fff;\\n}\\n\\n.markdown-body table tr th:first-child {\\n width: 30%\\n}\\n\\n.markdown-body table tr th:last-child {\\n width: 50%;\\n}\\n \\ndetails {\\n border: 1px solid #eee;\\n border-radius: var(--border-radius);\\n padding: 10px;\\n}\\n\\ndetails summary {\\n font-weight: var(--font-weight);\\n font-family: var(--font-family-mono);\\n font-size: 0.9rem;\\n color: #047d65;\\n}\\n\\n\\ndiv.optional, div.required {\\n display: inline;\\n font-family: var(--font-family);\\n color: white;\\n font-size: 13px;\\n padding: 2px 8px;\\n border-radius: var(--border-radius-lg);\\n font-weight: 300;\\n}\\n\\ndiv.required {\\n background: var(--red);\\n\\n}\\n\\ndiv.optional {\\n background: var(--chalk);\\n}\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"Methods\n\n###\n\n","completion":" Use `localStorage` methods to save data locally to the browser. END"}
{"prompt":"localStorage.clear()\n\n###\n\n","completion":" Clears all keys and values from Retool's `localStorage`. END"}
{"prompt":"Return value\n\n###\n\n","completion":" None. END"}
{"prompt":"Example\n\n###\n\n","completion":" Clear all keys and values from Retool's `localStorage`. END"}
{"prompt":"localStorage.setValue()\n\n###\n\n","completion":" Store a value to Retool's `localStorage`. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the name of the key to set. END"}
{"prompt":"A string to specify the name of the key to set.\n\n###\n\n","completion":" A string, object, boolean, number, or array to set as the key's value. END"}
{"prompt":"Example\n\n###\n\n","completion":" Store `localUserCookie` value as `user.cookieValue`. END"}
{"prompt":"Store `localUserCookie` value as `user.cookieValue`.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n.markdown-body h3:first-of-type {\\n margin-top: inherit;\\n}\\n \\n.markdown-body h3 {\\n padding-bottom: 6px;\\n border-bottom: 1px solid #eee;\\n margin-top: 50px;\\n font-weight: 500;\\n}\\n \\n.markdown-body h4 {\\n margin-top: 25px;\\n}\\n \\n.markdown-body table:not(.plain) tr:nth-child(2n) {\\n background-color: #fff;\\n}\\n\\n.markdown-body table tr th:first-child {\\n width: 30%\\n}\\n\\n.markdown-body table tr th:last-child {\\n width: 50%;\\n}\\n \\ndetails {\\n border: 1px solid #eee;\\n border-radius: var(--border-radius);\\n padding: 10px;\\n}\\n\\ndetails summary {\\n font-weight: var(--font-weight);\\n font-family: var(--font-family-mono);\\n font-size: 0.9rem;\\n color: #047d65;\\n}\\n\\n\\ndiv.optional, div.required {\\n display: inline;\\n font-family: var(--font-family);\\n color: white;\\n font-size: 13px;\\n padding: 2px 8px;\\n border-radius: var(--border-radius-lg);\\n font-weight: 300;\\n}\\n\\ndiv.required {\\n background: var(--red);\\n\\n}\\n\\ndiv.optional {\\n background: var(--chalk);\\n}\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"title: \"Query\"\ncategorySlug: \"javascript-api\"\nexcerpt: \"JavaScript API methods for interacting with queries.\"\nhidden: false\nmetadata: \n\n###\n\n","completion":" Use query methods to control when and how queries run. END"}
{"prompt":"query.invalidateCache()\n\n###\n\n","completion":" Declares the cached results of the query invalid. The next time the query is triggered, it will return fresh results. END"}
{"prompt":"Example\n\n###\n\n","completion":" Invalidate the cache for the `getUsers` query. END"}
{"prompt":"query.reset()\n\n###\n\n","completion":" Clears the `data` and `error` properties of the query. END"}
{"prompt":"Example\n\n###\n\n","completion":" Clear the `data` and `error` properties of the `getUsers` query. END"}
{"prompt":"query.trigger()\n\n###\n\n","completion":" Runs the query. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" An object to pass to the query and to control behavior after the query returns. END"}
{"prompt":"Return value\n\n###\n\n","completion":" Returns a Promise that resolves to the query's `data` property. END"}
{"prompt":"Example\n\n###\n\n","completion":" Trigger `getUserById` with additional scope, and call different functions if the query succeeds or fails. END"}
{"prompt":"Trigger `getUserById` with additional scope, and call different functions if the query succeeds or fails.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n.markdown-body h3:first-of-type {\\n margin-top: inherit;\\n}\\n \\n.markdown-body h3 {\\n padding-bottom: 6px;\\n border-bottom: 1px solid #eee;\\n margin-top: 50px;\\n font-weight: 500;\\n}\\n \\n.markdown-body h4 {\\n margin-top: 25px;\\n}\\n \\n.markdown-body table:not(.plain) tr:nth-child(2n) {\\n background-color: #fff;\\n}\\n\\n.markdown-body table tr th:first-child {\\n width: 30%\\n}\\n\\n.markdown-body table tr th:last-child {\\n width: 50%;\\n}\\n \\ndetails {\\n border: 1px solid #eee;\\n border-radius: var(--border-radius);\\n padding: 10px;\\n}\\n\\ndetails summary {\\n font-weight: var(--font-weight);\\n font-family: var(--font-family-mono);\\n font-size: 0.9rem;\\n color: #047d65;\\n}\\n\\n\\ndiv.optional, div.required {\\n display: inline;\\n font-family: var(--font-family);\\n color: white;\\n font-size: 13px;\\n padding: 2px 8px;\\n border-radius: var(--border-radius-lg);\\n font-weight: 300;\\n}\\n\\ndiv.required {\\n background: var(--red);\\n\\n}\\n\\ndiv.optional {\\n background: var(--chalk);\\n}\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"Methods\n\n###\n\n","completion":" Use [temporary state](https:\/\/docs.retool.com\/docs\/temporary-state) methods to temporarily store data within a Retool app. END"}
{"prompt":"temporaryState.setIn()\n\n###\n\n","completion":" Sets the value of `temporaryState` at a specified location. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" An array of keys or indexes to select, where each item represents a key or index in the path to the object to update. END"}
{"prompt":"An array of keys or indexes to select, where each item represents a key or index in the path to the object to update.\n\n###\n\n","completion":" A string, object, boolean, number, or array to set as the value at the path. END"}
{"prompt":"Return value\n\n###\n\n","completion":" Returns a void Promise when the method resolves. END"}
{"prompt":"Example\n\n###\n\n","completion":" Set the second item of `key1`, nested in `object1` in `tempState`, to `value2`. END"}
{"prompt":"temporaryState.setValue()\n\n###\n\n","completion":" Sets the value of a temporary state variable. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string, object, boolean, number, or array to set as the value of the temporary state object. END"}
{"prompt":"Example\n\n###\n\n","completion":" Set the value of `tempState` to the sorting method used on `usersTable`. END"}
{"prompt":"Set the value of `tempState` to the sorting method used on `usersTable`.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n.markdown-body h3:first-of-type {\\n margin-top: inherit;\\n}\\n \\n.markdown-body h3 {\\n padding-bottom: 6px;\\n border-bottom: 1px solid #eee;\\n margin-top: 50px;\\n font-weight: 500;\\n}\\n \\n.markdown-body h4 {\\n margin-top: 25px;\\n}\\n \\n.markdown-body table:not(.plain) tr:nth-child(2n) {\\n background-color: #fff;\\n}\\n\\n.markdown-body table tr th:first-child {\\n width: 30%\\n}\\n\\n.markdown-body table tr th:last-child {\\n width: 50%;\\n}\\n \\ndetails {\\n border: 1px solid #eee;\\n border-radius: var(--border-radius);\\n padding: 10px;\\n}\\n\\ndetails summary {\\n font-weight: var(--font-weight);\\n font-family: var(--font-family-mono);\\n font-size: 0.9rem;\\n color: #047d65;\\n}\\n\\n\\ndiv.optional, div.required {\\n display: inline;\\n font-family: var(--font-family);\\n color: white;\\n font-size: 13px;\\n padding: 2px 8px;\\n border-radius: var(--border-radius-lg);\\n font-weight: 300;\\n}\\n\\ndiv.required {\\n background: var(--red);\\n\\n}\\n\\ndiv.optional {\\n background: var(--chalk);\\n}\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"Methods\n\n###\n\n","completion":" Use these methods to interact with the Retool app interface. END"}
{"prompt":"utils.confetti()\n\n###\n\n","completion":" Shows confetti animation. END"}
{"prompt":"Example\n\n###\n\n","completion":" Show the confetti animation. END"}
{"prompt":"utils.copyToClipboard()\n\n###\n\n","completion":" Copies the given string to the user's clipboard. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the content to copy. END"}
{"prompt":"Example\n\n###\n\n","completion":" Copy `table1`'s selected cell contents to the user's clipboard. END"}
{"prompt":"utils.downloadFile()\n\n###\n\n","completion":" Generates a file containing the specified data which is then downloaded by the user's browser. END"}
{"prompt":"Generates a file containing the specified data which is then downloaded by the user's browser.\n\n###\n\n","completion":" To download data from a Table component, use [utils.exportData](\/reference\/javascript-api-methods-utility#exportdata). END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string or object to specify the data to download. To download Base64-encoded data, provide an object that contains the parameter `base64Binary` with the Base64-encoded value. END"}
{"prompt":"A string or object to specify the data to download. To download Base64-encoded data, provide an object that contains the parameter `base64Binary` with the Base64-encoded value.\n\n###\n\n","completion":" A string to specify the downloaded file name. Defaults to \"file\" if not set. END"}
{"prompt":"Examples\n\n###\n\n","completion":" Download the results of `getUsersQuery` as a YAML file named `users-data`. END"}
{"prompt":"Download the results of `getUsersQuery` as a YAML file named `users-data`.\n\n###\n\n","completion":" Download `BASE64_STRING` as a CSV file named `users-data`. END"}
{"prompt":"utils.downloadPage()\n\n###\n\n","completion":" Generates a PDF file of the current view which is then downloaded by the user's browser. It excludes [Custom](https:\/\/retool.com\/components\/custom-component), [HTML](https:\/\/retool.com\/components\/html), and [IFrame](https:\/\/retool.com\/components\/iframe) components. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the name of the downloaded file. END"}
{"prompt":"A string to specify the name of the downloaded file.\n\n###\n\n","completion":" An object that controls the PDF formatting and selectors and components to exclude. END"}
{"prompt":"Example\n\n###\n\n","completion":" Download a PDF of the current view, excluding `container1` and its nested components, as `users_dashboard.pdf`. END"}
{"prompt":"utils.exportData()\n\n###\n\n","completion":" Generates a file containing data for the specified [Table](https:\/\/retool.com\/components\/table) component which is then downloaded by the user's browser. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" An object or array containing the table data to export. `data` can be the table's `data`, `normalizedData`, or `displayedData`. END"}
{"prompt":"An object or array containing the table data to export. `data` can be the table's `data`, `normalizedData`, or `displayedData`.\n\n###\n\n","completion":" A string to specify the name of the downloaded file. Defaults to \"export\". When `fileType` is `xlsx`, `fileName` must follow [Excel worksheet naming guidelines](https:\/\/support.microsoft.com\/en-us\/office\/rename-a-worksheet-3f1f7148-ee83-404d-8ef0-9ff99fbad1f9). END"}
{"prompt":"A string to specify the name of the downloaded file. Defaults to \"export\". When `fileType` is `xlsx`, `fileName` must follow [Excel worksheet naming guidelines](https:\/\/support.microsoft.com\/en-us\/office\/rename-a-worksheet-3f1f7148-ee83-404d-8ef0-9ff99fbad1f9).\n\n###\n\n","completion":" A string to specify the type of the downloaded file. One of `csv` (default), `tsv`, `xlsx`, or `json`. END"}
{"prompt":"Example\n\n###\n\n","completion":" Download `usersTable.data` as a CSV named `usersData`. END"}
{"prompt":"utils.getCurrentPosition()\n\n###\n\n","completion":" Retrieves the user's current geographical location, if allowed by the user. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" An object that contains a callback function. END"}
{"prompt":"Return value\n\n###\n\n","completion":" An object that contains a timestamp and a `coords` object that contains the following properties. END"}
{"prompt":"Example\n\n###\n\n","completion":" Retrieve the coordinates of the current user and calls `updateMap` upon success. END"}
{"prompt":"utils.getDataByObjectURL()\n\n###\n\n","completion":" Converts the contents of a `blob:` or `file:\/\/` URL to a Base64-encoded string. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the blob or URL to convert. END"}
{"prompt":"Return value\n\n###\n\n","completion":" A Base64-encoded string. END"}
{"prompt":"Example\n\n###\n\n","completion":" Convert a captured [signature image](https:\/\/docs.retool.com\/reference\/component-mobile-signature) to a Base64-encoded string and pass it to a SQL query using [additionalScope](https:\/\/docs.retool.com\/docs\/scripting-retool#trigger-a-query). END"}
{"prompt":"utils.openApp()\n\n###\n\n","completion":" Opens a Retool app. The app must be in the same organization as the caller of `openApp`. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the UUID of the app to open. `appUuid` is in the `retoolContext` state while in edit mode and in the URL of the app. END"}
{"prompt":"A string to specify the UUID of the app to open. `appUuid` is in the `retoolContext` state while in edit mode and in the URL of the app.\n\n###\n\n","completion":" An object that controls how to open the app. END"}
{"prompt":"Example\n\n###\n\n","completion":" Open an app with the query parameters `source=updateUsersApp`. END"}
{"prompt":"utils.openUrl()\n\n###\n\n","completion":" Opens a URL. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" A string to specify the URL to open. END"}
{"prompt":"A string to specify the URL to open.\n\n###\n\n","completion":" An object that controls how to open the URL. END"}
{"prompt":"Example\n\n###\n\n","completion":" Open [Retool Docs](https:\/\/docs.retool.com) in the current tab. END"}
{"prompt":"utils.showNotification()\n\n###\n\n","completion":" Shows a notification message on the top right corner of the screen. END"}
{"prompt":"Syntax\n\n###\n\n","completion":" An object that controls the notification settings. END"}
{"prompt":"Example\n\n###\n\n","completion":" Display a success message after deleting a user. END"}
{"prompt":"Display a success message after deleting a user.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n.markdown-body h3:first-of-type {\\n margin-top: inherit;\\n}\\n \\n.markdown-body h3 {\\n padding-bottom: 6px;\\n border-bottom: 1px solid #eee;\\n margin-top: 50px;\\n font-weight: 500;\\n}\\n \\n.markdown-body h4 {\\n margin-top: 25px;\\n}\\n \\n.markdown-body table:not(.plain) tr:nth-child(2n) {\\n background-color: #fff;\\n}\\n\\n.markdown-body table tr th:first-child {\\n width: 30%\\n}\\n\\n.markdown-body table tr th:last-child {\\n width: 50%;\\n}\\n \\ndetails {\\n border: 1px solid #eee;\\n border-radius: var(--border-radius);\\n padding: 10px;\\n}\\n\\ndetails summary {\\n font-weight: var(--font-weight);\\n font-family: var(--font-family-mono);\\n font-size: 0.9rem;\\n color: #047d65;\\n}\\n\\n\\ndiv.optional, div.required {\\n display: inline;\\n font-family: var(--font-family);\\n color: white;\\n font-size: 13px;\\n padding: 2px 8px;\\n border-radius: var(--border-radius-lg);\\n font-weight: 300;\\n}\\n\\ndiv.required {\\n background: var(--red);\\n\\n}\\n\\ndiv.optional {\\n background: var(--chalk);\\n}\\n\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"title: \"Globals\"\ncategorySlug: \"javascript-api\"\nexcerpt: \"Global JavaScript variables in Retool.\"\nhidden: false\n\n###\n\n","completion":" Available properties for Retool's global JavaScript objects with data types or values. You can [write JavaScript almost anywhere](https:\/\/docs.retool.com\/docs\/javascript-overview) in Retool to read information from globals. END"}
{"prompt":"Properties\n\n###\n\n","completion":"  The name and path of the app. END"}
{"prompt":"  The name and path of the app.\n\n###\n\n","completion":"  The unique ID of the app. END"}
{"prompt":"  The unique ID of the app.\n\n###\n\n","completion":"  The selected environment. END"}
{"prompt":"  The selected environment.\n\n###\n\n","completion":"  Whether the current app is open in the App editor. END"}
{"prompt":"  Whether the current app is open in the App editor.\n\n###\n\n","completion":"  The release version of the current app. Defaults to `latest` if using the current working version. END"}
{"prompt":"  The release version of the current app. Defaults to `latest` if using the current working version.\n\n###\n\n","completion":"  A list of queries currently running. END"}
{"prompt":"Properties\n\n###\n\n","completion":"  Default list of colors that are automatically assigned to options in supported components. END"}
{"prompt":"  Default list of colors that are automatically assigned to options in supported components.\n\n###\n\n","completion":"  Default background color of the app. END"}
{"prompt":"  Default background color of the app.\n\n###\n\n","completion":"  Default color to indicate destructive actions, errors, and negative trends. END"}
{"prompt":"  Default color to indicate destructive actions, errors, and negative trends.\n\n###\n\n","completion":"  Default color to highlight matched text in searches. END"}
{"prompt":"  Default color to highlight matched text in searches.\n\n###\n\n","completion":"  Default color to indicate neutral information. END"}
{"prompt":"  Default color to indicate neutral information.\n\n###\n\n","completion":"  Default accent color. END"}
{"prompt":"  Default accent color.\n\n###\n\n","completion":"  Default secondary accent color that is optionally available. Falls back to `primary` if not set. END"}
{"prompt":"  Default secondary accent color that is optionally available. Falls back to `primary` if not set.\n\n###\n\n","completion":"  Default color to indicate successful actions, completion, and positive trends. END"}
{"prompt":"  Default color to indicate successful actions, completion, and positive trends.\n\n###\n\n","completion":"  Default background color for containers and tables. END"}
{"prompt":"  Default background color for containers and tables.\n\n###\n\n","completion":"  Default tertiary accent color that is optionally available. Falls back to `secondary` if not set. END"}
{"prompt":"  Default tertiary accent color that is optionally available. Falls back to `secondary` if not set.\n\n###\n\n","completion":"  Default color to indicate warnings. END"}
{"prompt":"Properties\n\n###\n\n","completion":"  The hash fragment of the current URL. END"}
{"prompt":"  The hash fragment of the current URL.\n\n###\n\n","completion":"  The current URL used to access the app, including parameters and hash fragments. END"}
{"prompt":"Properties\n\n###\n\n","completion":" The current size of the canvas. This includes any content that must be scrolled into view. END"}
{"prompt":"The current size of the canvas. This includes any content that must be scrolled into view.\n\n###\n\n","completion":"  The height of the canvas. This value increases as the layout increases vertically and includes content that must be scrolled into view. END"}
{"prompt":"  The height of the canvas. This value increases as the layout increases vertically and includes content that must be scrolled into view.\n\n###\n\n","completion":"  The width of the canvas. This value is responsive to the horizontal space available. END"}
{"prompt":"title: \"JavaScript API overview\"\ncategorySlug: \"javascript-api\"\nexcerpt: \"Learn about Retool's built-in JavaScript API methods and properties.\"\nhidden: false\n\n###\n\n","completion":" Retool's JavaScript API helps you build complex functionality in apps and workflows. You can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) almost anywhere to use these objects and methods. END"}
{"prompt":"title: \"JavaScript in Retool\"\ncategorySlug: \"legacy\"\nexcerpt: \"A quick breakdown of important JavaScript methods for building in Retool\"\nhidden: true\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b3e0823-03_JS_No_Logo.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b3e0823-03_JS_No_Logo.png)\n\n###\n\n","completion":" Because JavaScript is such an integral part in building in Retool, we'll be going over specific JavaScript concepts that are particularly important in Retool. If you're brand new to JavaScript\/programming in general, there are a few external resources that can help you get started. END"}
{"prompt":"Because JavaScript is such an integral part in building in Retool, we'll be going over specific JavaScript concepts that are particularly important in Retool. If you're brand new to JavaScript\/programming in general, there are a few external resources that can help you get started.\n\n###\n\n","completion":" There's a lot of overlap between JavaScript Basics and JavaScript in Retool, so if you're already familiar with the basics, feel free to skip this section and jump straight to JavaScript in Retool! END"}
{"prompt":"There's a lot of overlap between JavaScript Basics and JavaScript in Retool, so if you're already familiar with the basics, feel free to skip this section and jump straight to JavaScript in Retool!\n\n###\n\n","completion":" You can think of programming at a high level as just: manipulating data with logic. Retool is all about showing and manipulating your data with drag-and-drop buttons, tables, maps, etc. END"}
{"prompt":"You can think of programming at a high level as just: manipulating data with logic. Retool is all about showing and manipulating your data with drag-and-drop buttons, tables, maps, etc.\n\n###\n\n","completion":" So first, we'll cover data in general, how you can represent data, and then how you write logic to show and manipulate that data in Retool. END"}
{"prompt":"Data types\n\n###\n\n","completion":" Everything in JavaScript is an object, which means it's just a thing with some properties (like a length) and some built-in methods that can manipulate this thing. END"}
{"prompt":"Everything in JavaScript is an object, which means it's just a thing with some properties (like a length) and some built-in methods that can manipulate this thing.\n\n###\n\n","completion":" JavaScript has the following common data types, and all are valid in Retool. END"}
{"prompt":"Data Conversion\n\n###\n\n","completion":" Managing data types is a fundamental concept that comes up fairly often when manipulating data in Retool. Let's say you want to get the sum of all the prices in your inventory, but the price column is stored as a string in your database. You can use JavaScript data conversion methods to turn those strings into sum-able integers! END"}
{"prompt":"Truthy vs Falsy\n\n###\n\n","completion":" Because of JavaScript's under-the-hood [type casting](https:\/\/www.freecodecamp.org\/news\/js-type-coercion-explained-27ba3d9a2839\/), all data is either true or false. Numbers can be true or false, words\/strings can be true or false. Since true and false are reserved keywords in JavaScript that refer directly to the Boolean type `true` or `false`, we say \"truthy\" or \"falsy\" as the category that data can fall under. Everything is truthy, except for the following 7 falsy values: END"}
{"prompt":"Because of JavaScript's under-the-hood [type casting](https:\/\/www.freecodecamp.org\/news\/js-type-coercion-explained-27ba3d9a2839\/), all data is either true or false. Numbers can be true or false, words\/strings can be true or false. Since true and false are reserved keywords in JavaScript that refer directly to the Boolean type `true` or `false`, we say \"truthy\" or \"falsy\" as the category that data can fall under. Everything is truthy, except for the following 7 falsy values:\n\n###\n\n","completion":" Q: Is `\"0\"` truthy or falsy?\nA: Truthy. It's a non-empty string (truthy). END"}
{"prompt":"Q: Is `\"0\"` truthy or falsy?\nA: Truthy. It's a non-empty string (truthy).\n\n###\n\n","completion":" Q: Is `-0` truthy or falsy?\nA: Falsy. It evaluates to just 0 (falsy). END"}
{"prompt":"Q: Is `-0` truthy or falsy?\nA: Falsy. It evaluates to just 0 (falsy).\n\n###\n\n","completion":" Q: Is `\"false\"` truthy or falsy?\nA: Truthy. It's a non-empty string (truthy). END"}
{"prompt":"Q: Is `\"false\"` truthy or falsy?\nA: Truthy. It's a non-empty string (truthy).\n\n###\n\n","completion":" More on truthy vs falsy in JavaScript [here](https:\/\/www.sitepoint.com\/javascript-truthy-falsy\/). END"}
{"prompt":"Operators\n\n###\n\n","completion":" A comparison operator compares its operands (the values before and after the operator) and returns true if the statement is truthy, or false if the statement is falsy. END"}
{"prompt":"A comparison operator compares its operands (the values before and after the operator) and returns true if the statement is truthy, or false if the statement is falsy.\n\n###\n\n","completion":" Logical operators will also return a boolean depending on the truthiness (or falsiness) of the statement, with the exception of the `||` and `&&` operators which can return a non-boolean, depending on the operands. END"}
{"prompt":"JSON and Data\n\n###\n\n","completion":" There are two main concepts at play here: accessing data in an Object and accessing data in an array. END"}
{"prompt":"There are two main concepts at play here: accessing data in an Object and accessing data in an array.\n\n###\n\n","completion":" Then, in the JavaScript in Retool section, we can begin thinking about accessing data in an Object in an array in an Object. This is referred to as nested data, which is how Retool queries to your database or API will return data. END"}
{"prompt":"Accessing data in an Object\n\n###\n\n","completion":" Values in an Object can be accessed using either dot notation (`object_name.key_name`) or bracket notation (`object_name['key_name']`). When working with dot notation, property identifies can only be alphanumeric (and \\_ and $). Dot notation can be limiting (properties can't start with a number), but adding a . after an object will pull up a helpful autocomplete menu in Retool. More on that below! END"}
{"prompt":"Values in an Object can be accessed using either dot notation (`object_name.key_name`) or bracket notation (`object_name['key_name']`). When working with dot notation, property identifies can only be alphanumeric (and \\_ and $). Dot notation can be limiting (properties can't start with a number), but adding a . after an object will pull up a helpful autocomplete menu in Retool. More on that below!\n\n###\n\n","completion":" Here's an example where we first define an Object with the name `obj1`, then access the value held by the `'greeting'` key: END"}
{"prompt":"Here's an example where we first define an Object with the name `obj1`, then access the value held by the `'greeting'` key:\n\n###\n\n","completion":" Retool will offer autocomplete options when writing JavaScript. If you have an Object (which also includes queries or components, like `text1`) and aren't sure which columns, properties or methods you can access, type `.` END"}
{"prompt":"Retool will offer autocomplete options when writing JavaScript. If you have an Object (which also includes queries or components, like `text1`) and aren't sure which columns, properties or methods you can access, type `.`\n\n###\n\n","completion":" In this case, dot notation is better than bracket notation since a `[` will not bring up the autocomplete menu. END"}
{"prompt":"In this case, dot notation is better than bracket notation since a `[` will not bring up the autocomplete menu.\n\n###\n\n","completion":" ![text1. will bring up a menu of all the methods\/functions and properties available to text1, along with an example and their type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e0bc2c3-JSAutocomplete.png) END"}
{"prompt":"![text1. will bring up a menu of all the methods\/functions and properties available to text1, along with an example and their type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e0bc2c3-JSAutocomplete.png)\n\n###\n\n","completion":" ![getUsers.data. shows a menu of the available columns](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f05d04f-JSAutocomplete_query.png) END"}
{"prompt":"Accessing data in an array\n\n###\n\n","completion":" Values in an array can be accessed using the `index`, or numeric location, of the target. The index always starts at 0, so the first element of an array can be accessed using `array[0]`. END"}
{"prompt":"Values in an array can be accessed using the `index`, or numeric location, of the target. The index always starts at 0, so the first element of an array can be accessed using `array[0]`.\n\n###\n\n","completion":" Here's an example: END"}
{"prompt":"JavaScript in Retool\n\n###\n\n","completion":" Data in Retool can be manipulated using JavaScript. Data objects have properties that can be referenced. For example, you can access a query's data property via `query.data`, and a Text Input component's inputted value via `textinput.value` and a Table component's selected row via `table.selectedRow.data`. END"}
{"prompt":"Data in Retool can be manipulated using JavaScript. Data objects have properties that can be referenced. For example, you can access a query's data property via `query.data`, and a Text Input component's inputted value via `textinput.value` and a Table component's selected row via `table.selectedRow.data`.\n\n###\n\n","completion":" ![Example of query1.data , which is an Object filled with arrays, where each array matches a column from the database table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1613025899693_image.png) END"}
{"prompt":"![Example of query1.data , which is an Object filled with arrays, where each array matches a column from the database table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1613025899693_image.png)\n\n###\n\n","completion":" Imagine you have a database. This database stores user information—id, name, email and so on. Once you write a SQL query to get this data from your database into Retool, how would you display this data? END"}
{"prompt":"Imagine you have a database. This database stores user information—id, name, email and so on. Once you write a SQL query to get this data from your database into Retool, how would you display this data?\n\n###\n\n","completion":" You guessed it—JavaScript! You can use JavaScript on the `query.data` value returned from the query you just ran. We're going to go over a few commonly used JavaScript methods in Retool that would help accomplish this. END"}
{"prompt":"You guessed it—JavaScript! You can use JavaScript on the `query.data` value returned from the query you just ran. We're going to go over a few commonly used JavaScript methods in Retool that would help accomplish this.\n\n###\n\n","completion":" In Retool, JavaScript can be written between `{{ }}` or directly in the JavaScript query type, which we'll get into later. You can also reference the values of Retool components from within `{{ }}`! More on pulling data from your components [here](https:\/\/docs.retool.com\/docs\/assemble-components#component-properties). END"}
{"prompt":"In Retool, JavaScript can be written between `{{ }}` or directly in the JavaScript query type, which we'll get into later. You can also reference the values of Retool components from within `{{ }}`! More on pulling data from your components [here](https:\/\/docs.retool.com\/docs\/assemble-components#component-properties).\n\n###\n\n","completion":" ![This Button Component is using JavaScript in between {{ }} to be disabled when the Checkbox Component isn't checked.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1610516704030_image.png) END"}
{"prompt":"![This Button Component is using JavaScript in between {{ }} to be disabled when the Checkbox Component isn't checked.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1610516704030_image.png)\n\n###\n\n","completion":" JavaScript in between `{{ }}` is limited in a few ways. To output a value from a set of `{{ }}`, it needs to be a self executing function, method, or single value like `{{ query1.data.map(row=>row.id) }}` or `{{ query1.data.id.length }}`. You can't run any Retool-specific methods from inside them, like `text1.setValue()`. (Those Retool-specific methods must be run from a JavaScript query, and complicated if-else statements are easier to manage inside of a Transformer, which we'll get into next.) END"}
{"prompt":"JavaScript in between `{{ }}` is limited in a few ways. To output a value from a set of `{{ }}`, it needs to be a self executing function, method, or single value like `{{ query1.data.map(row=>row.id) }}` or `{{ query1.data.id.length }}`. You can't run any Retool-specific methods from inside them, like `text1.setValue()`. (Those Retool-specific methods must be run from a JavaScript query, and complicated if-else statements are easier to manage inside of a Transformer, which we'll get into next.)\n\n###\n\n","completion":" You can access and use the output from any query. For example, `{{ getProducts.data }}` returns the following data where `getProducts` is a SQL query to get data from a `products` table in a database. END"}
{"prompt":"You can access and use the output from any query. For example, `{{ getProducts.data }}` returns the following data where `getProducts` is a SQL query to get data from a `products` table in a database.\n\n###\n\n","completion":" Here's what `getProducts.data` looks like: END"}
{"prompt":"Here's what `getProducts.data` looks like:\n\n###\n\n","completion":" You can then use `{{ getProducts.data }}` in a Table Component to display it! END"}
{"prompt":"You can then use `{{ getProducts.data }}` in a Table Component to display it!\n\n###\n\n","completion":" The most common example of `{{ }}` in action: END"}
{"prompt":"The most common example of `{{ }}` in action:\n\n###\n\n","completion":" ![The Table Component accepts data as an Object of keys (column names) that point to values (column values).](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1610514956912_image.png) END"}
{"prompt":"Ternaries\n\n###\n\n","completion":" Since you can't write if else logic in between `{{ }}` , but you want to conditionally return data, you can use ternaries. Ternaries are a one-line version of an if else statement (MDN docs [here](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Operators\/Conditional_Operator)). END"}
{"prompt":"Since you can't write if else logic in between `{{ }}` , but you want to conditionally return data, you can use ternaries. Ternaries are a one-line version of an if else statement (MDN docs [here](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Operators\/Conditional_Operator)).\n\n###\n\n","completion":" `condition` ? `execute if condition is true` : `execute if condition is false` END"}
{"prompt":"`condition` ? `execute if condition is true` : `execute if condition is false`\n\n###\n\n","completion":" Since everything in JavaScript is either truthy or falsy, the condition section can be a statement with a comparison operator (e.g. === or >=), or just a plain old object (e.g. `table1.data` or `checkbox1.value`). If `table1.data` exists (has data, and is not empty), the condition will evaluate as true and the first action will execute. See example below! END"}
{"prompt":"Since everything in JavaScript is either truthy or falsy, the condition section can be a statement with a comparison operator (e.g. === or >=), or just a plain old object (e.g. `table1.data` or `checkbox1.value`). If `table1.data` exists (has data, and is not empty), the condition will evaluate as true and the first action will execute. See example below!\n\n###\n\n","completion":" ![The ternary in a text component's value checks if table1.data exists, then prints the corresponding text.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1610516268094_image.png) END"}
{"prompt":"JavaScript Queries\n\n###\n\n","completion":" JavaScript queries are a special query type in Retool that allow you to write multi-line JavaScript, trigger other queries, download data from your app, set temporary state to store data in your current browser session, etc. Go ahead and read our [JavaScript query docs](https:\/\/docs.retool.com\/docs\/scripting-retool) on all the cool things they can do! END"}
{"prompt":"JavaScript queries are a special query type in Retool that allow you to write multi-line JavaScript, trigger other queries, download data from your app, set temporary state to store data in your current browser session, etc. Go ahead and read our [JavaScript query docs](https:\/\/docs.retool.com\/docs\/scripting-retool) on all the cool things they can do!\n\n###\n\n","completion":" One thing you can't do is set table data manually in a JavaScript query. You can return some data, then use the JavaScript query's data in the table's value field, but `table1.data = something` won't work, nor will something like `table1.hidden = true`. Components in Retool are generally read only, and are only modifiable with specific methods, found in the Scripting Retool docs linked above (and [here](https:\/\/docs.retool.com\/docs\/scripting-retool)). END"}
{"prompt":"One thing you can't do is set table data manually in a JavaScript query. You can return some data, then use the JavaScript query's data in the table's value field, but `table1.data = something` won't work, nor will something like `table1.hidden = true`. Components in Retool are generally read only, and are only modifiable with specific methods, found in the Scripting Retool docs linked above (and [here](https:\/\/docs.retool.com\/docs\/scripting-retool)).\n\n###\n\n","completion":" Quick note: for security reasons, all JavaScript runs in a sandbox. END"}
{"prompt":"Quick note: for security reasons, all JavaScript runs in a sandbox.\n\n###\n\n","completion":" If JavaScript ran directly on your page, other people in your org could inject malicious scripts to end users, including yourself. To prevent that, we execute all JavaScript in a separate iframe, on a different domain. END"}
{"prompt":"If JavaScript ran directly on your page, other people in your org could inject malicious scripts to end users, including yourself. To prevent that, we execute all JavaScript in a separate iframe, on a different domain.\n\n###\n\n","completion":" That means that inside of your preloaded JavaScript, you won't be able to use jQuery, or other hosted libraries to create your own components, listen to events on the Retool page, etc. You can, however, import libraries. To learn more about importing libraries, read [Preloaded JavaScript and Libraries](https:\/\/docs.retool.com\/docs\/custom-js-code#custom-javascript-libraries). You would need to add it to the libraries section in settings > advanced, then you should be able to get access to the library's methods. END"}
{"prompt":"Queries and transformers\n\n###\n\n","completion":" Queries are best for calling JavaScript methods (ie `query.trigger()`, `state1.setValue()`, etc) while transformers are best for returning a single value or data object. END"}
{"prompt":"Viewing your data\n\n###\n\n","completion":" We're going to take a quick detour and take a look at the ways you can view your data before we get into accessing nested, and more complicated data structures. Viewing your data gives you a birds-eye view of the maze that is nested data, and therefore, makes it easier to access the values you're looking for. END"}
{"prompt":"We're going to take a quick detour and take a look at the ways you can view your data before we get into accessing nested, and more complicated data structures. Viewing your data gives you a birds-eye view of the maze that is nested data, and therefore, makes it easier to access the values you're looking for.\n\n###\n\n","completion":" To recap from the beginning, once you successfully query your database, you'll get data back and into your Retool app. This data can be accessed in the data property of the query, like\n`{{ getPeople.data }}`. `{{ getPeople.data }}` is a nested Object (an Object with Objects with arrays inside). END"}
{"prompt":"To recap from the beginning, once you successfully query your database, you'll get data back and into your Retool app. This data can be accessed in the data property of the query, like\n`{{ getPeople.data }}`. `{{ getPeople.data }}` is a nested Object (an Object with Objects with arrays inside).\n\n###\n\n","completion":" Retool offers 3 main ways to view this query data: the Query Preview, the Left Panel and the (green) Value Preview. END"}
{"prompt":"Retool offers 3 main ways to view this query data: the Query Preview, the Left Panel and the (green) Value Preview.\n\n###\n\n","completion":" The Preview option will show your data formatted as a table, with easy to view headers\/column names and values. END"}
{"prompt":"The Preview option will show your data formatted as a table, with easy to view headers\/column names and values.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614179877155_image.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614179877155_image.png)\n\n###\n\n","completion":" The Left Panel has information about all of your query, component, transformer, temporary state, global variables (ie current_user or urlparams) data in Retool. You can expand out the object you're interested in to learn more about its data structure. END"}
{"prompt":"The Left Panel has information about all of your query, component, transformer, temporary state, global variables (ie current_user or urlparams) data in Retool. You can expand out the object you're interested in to learn more about its data structure.\n\n###\n\n","completion":" Each object (in bold) will have its type next to it (in gray) like `{}` or `[]`, as well as its length in number of items or number of keys. END"}
{"prompt":"Each object (in bold) will have its type next to it (in gray) like `{}` or `[]`, as well as its length in number of items or number of keys.\n\n###\n\n","completion":" Each key represents different properties of a query, like `error` to indicate the presence of an error or `isFetching` to let you know if the query is still running. It also has the `data` key, the most important key for queries. END"}
{"prompt":"Each key represents different properties of a query, like `error` to indicate the presence of an error or `isFetching` to let you know if the query is still running. It also has the `data` key, the most important key for queries.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614180058287_image.png)\n![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614179985374_image.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614180058287_image.png)\n![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614179985374_image.png)\n\n###\n\n","completion":" This preview shows the raw data. You can even copy the value to your clipboard. END"}
{"prompt":"This preview shows the raw data. You can even copy the value to your clipboard.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614182766083_image.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614182766083_image.png)\n\n###\n\n","completion":" Again, all 3 screenshots are showing `getUsers.data`, just presented in different ways. Now let's learn how to actually access, and use, this data! END"}
{"prompt":"Accessing nested data\n\n###\n\n","completion":" This is one of the most important concepts in Retool. We'll learn how to access specific data returned from your database (via queries) so you can start using that data in your apps. END"}
{"prompt":"This is one of the most important concepts in Retool. We'll learn how to access specific data returned from your database (via queries) so you can start using that data in your apps.\n\n###\n\n","completion":" In the example below, the `getPeople` query has the `data` key\/property (the syntax is interchangeable here), which has the keys `first`, `id` and `last`, which are the column names from our `people` table. The `first` key points to an array of first name strings. END"}
{"prompt":"In the example below, the `getPeople` query has the `data` key\/property (the syntax is interchangeable here), which has the keys `first`, `id` and `last`, which are the column names from our `people` table. The `first` key points to an array of first name strings.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614179985374_image.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614179985374_image.png)\n\n###\n\n","completion":" `{{ getPeople.data }}` returns the following data. Again, it's the same as the data we see above in the Left Panel screenshot, just presented differently. END"}
{"prompt":"`{{ getPeople.data }}` returns the following data. Again, it's the same as the data we see above in the Left Panel screenshot, just presented differently.\n\n###\n\n","completion":" Let's say we want to access the array of ids to use in a dropdown to allow end users to select the user they'd like more info on. To access the array of ids, we can use `{{ getPeople.data.id }}`. END"}
{"prompt":"Let's say we want to access the array of ids to use in a dropdown to allow end users to select the user they'd like more info on. To access the array of ids, we can use `{{ getPeople.data.id }}`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614183576098_image.png)\n![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-university\/s_7734B4D2A2C75152DD4EF4D98919BE06B2434D4761687644E09F2B949F6C5AC4_1614183612749_image.png) END"}
{"prompt":"Data Conversion\n\n###\n\n","completion":" There are two data conversion methods that are special to Retool:\n`formatDataAsArray` and `formatDataAsObject`. END"}
{"prompt":"There are two data conversion methods that are special to Retool:\n`formatDataAsArray` and `formatDataAsObject`.\n\n###\n\n","completion":" Data from SQL queries are returned as an Object of arrays, where each key is a column name that points to an array of column values. END"}
{"prompt":"Data from SQL queries are returned as an Object of arrays, where each key is a column name that points to an array of column values.\n\n###\n\n","completion":" If you want to show the data as an array of Objects instead (where each Object represents a row), you can use the helper function `formatDataAsArray` like so: `{{formatDataAsArray(sqlQuery.data)}}` END"}
{"prompt":"Array methods\n\n###\n\n","completion":" Similarly, whether you need to find the row of data based on the id selected from a Dropdown component, or add new values to the array stored in Retool's temp state (docs [here](https:\/\/docs.retool.com\/docs\/temporary-state)), you'll need to use JavaScript! END"}
{"prompt":"Dates\n\n###\n\n","completion":" [Moment](https:\/\/momentjs.com\/docs) is a preinstalled JavaScript library that helps you manage dates. You can use it anywhere you can use JavaScript with `{{ moment() }}`. END"}
{"prompt":"[Moment](https:\/\/momentjs.com\/docs) is a preinstalled JavaScript library that helps you manage dates. You can use it anywhere you can use JavaScript with `{{ moment() }}`.\n\n###\n\n","completion":" Most SQL databases store dates in a `date` or `datetime` type column, so if you have a `string` date (like '12\/25\/1995'), your database will likely reject it. You'll need to convert the `string` into a proper `date` type before sending it to your database; this is where Moment comes in. END"}
{"prompt":"title: \"JavaScript\"\ncategorySlug: \"app-scripting-and-events\"\nparentDocSlug: \"app-scripting-events-concepts\"\nexcerpt: \"Write JavaScript in Retool.\"\nhidden: false\n\n###\n\n","completion":" When building apps in Retool, anything inside `{{ }}` is JavaScript. You can use it to access variables custom to your app, as well as globals provided by Retool. You can also write custom JavaScript to manipulate data. END"}
{"prompt":"When building apps in Retool, anything inside `{{ }}` is JavaScript. You can use it to access variables custom to your app, as well as globals provided by Retool. You can also write custom JavaScript to manipulate data.\n\n###\n\n","completion":" For security purposes, all JavaScript runs in a separate iframe, on a different domain. This is to prevent JavaScript injection, such as cross-site scripting (XSS) attacks. END"}
{"prompt":"Manipulating Data\n\n###\n\n","completion":" Because anything inside of `{{ }}` is just JavaScript, you can manipulate the variables in Retool. Let's say you want to make a string lowercase, just write `{{ textinput1.value.toLowerCase() }}`. Adding 100 to a value would just be: `{{ textinput1.value + 100 }}`. Making a date show up in the format you want using `moment` would just be: `{{ moment(table1.selectedRow.data.date_column).format('YYYY-MM-DD') }}` .You can even do more complex things, like map over an array of objects, and pick out one of the fields: `{{ query1.data.map(i => i.name) }}`. END"}
{"prompt":"Because anything inside of `{{ }}` is just JavaScript, you can manipulate the variables in Retool. Let's say you want to make a string lowercase, just write `{{ textinput1.value.toLowerCase() }}`. Adding 100 to a value would just be: `{{ textinput1.value + 100 }}`. Making a date show up in the format you want using `moment` would just be: `{{ moment(table1.selectedRow.data.date_column).format('YYYY-MM-DD') }}` .You can even do more complex things, like map over an array of objects, and pick out one of the fields: `{{ query1.data.map(i => i.name) }}`.\n\n###\n\n","completion":" Because it's all JavaScript, Retool can handle any JSON shape returned by databases and API's. Just write a quick 1-liner to transform data. END"}
{"prompt":"Complex JavaScript\n\n###\n\n","completion":" If you want to write multiple lines of code we suggest using [Transformers](https:\/\/docs.retool.com\/docs\/transformers) rather than writing them in-line in `{{ }}`. This is useful if you want to do things like filter, transform, and even join different data sets. Here's an example transformer that takes the results of a database query, filters out for approved users, and returns an array with their credit_amount multiplied by 10: END"}
{"prompt":"Run JS Code (Perform custom behavior using JavaScript)\n\n###\n\n","completion":" You can also manipulate the components in your Retool app programmatically, by [Scripting Retool](https:\/\/docs.retool.com\/docs\/scripting-retool). Rather than doing this in Transformers, you should create queries of type `Run JS Code`. END"}
{"prompt":"You can also manipulate the components in your Retool app programmatically, by [Scripting Retool](https:\/\/docs.retool.com\/docs\/scripting-retool). Rather than doing this in Transformers, you should create queries of type `Run JS Code`.\n\n###\n\n","completion":" For example if you want to iterate over a CSV file and call an API for every row in the CSV, you could do something like this: END"}
{"prompt":"For example if you want to iterate over a CSV file and call an API for every row in the CSV, you could do something like this:\n\n###\n\n","completion":" See more about how to write JavaScript queries [here](https:\/\/docs.retool.com\/docs\/scripting-retool). END"}
{"prompt":"Variables\n\n###\n\n","completion":" All of the components and queries have names: for example, `textinput1`, or `query1`. And all of them are globally available on the page you're in, so you can refer to them elsewhere on the page: for example, `{{ textinput1.value }}` or `{{ query1.data }}`. See our API docs for [components](https:\/\/retool.com\/components) or [databases](https:\/\/docs.retool.com\/docs\/queries) for more details. END"}
{"prompt":"All of the components and queries have names: for example, `textinput1`, or `query1`. And all of them are globally available on the page you're in, so you can refer to them elsewhere on the page: for example, `{{ textinput1.value }}` or `{{ query1.data }}`. See our API docs for [components](https:\/\/retool.com\/components) or [databases](https:\/\/docs.retool.com\/docs\/queries) for more details.\n\n###\n\n","completion":" For example, set the `value` of a `Text` component to be `{{ table.selectedRow.data.first_name }}`, and the `Text` component will change based on the selected row of the `table`. END"}
{"prompt":"For example, set the `value` of a `Text` component to be `{{ table.selectedRow.data.first_name }}`, and the `Text` component will change based on the selected row of the `table`.\n\n###\n\n","completion":" But we give you other variables too, including libraries like like [Lodash](https:\/\/lodash.com\/) (`_`), and [Moment](https:\/\/momentjs.com\/) (`moment`), as well as variables that represent the email of the currently logged in user (`current_user`), the current URL and its parameters (`urlparams`), and the browser's localstorage (`localstorage`). END"}
{"prompt":"Exploring objects using the Model Browser\n\n###\n\n","completion":" If you want to see a list of all available variables on a page, open up the Model Browser at the top of the page. That'll open up the left pane, which shows you a list of all the components, queries, and other global variables available. Anything you can see there can be accessed in Retool. END"}
{"prompt":"If you want to see a list of all available variables on a page, open up the Model Browser at the top of the page. That'll open up the left pane, which shows you a list of all the components, queries, and other global variables available. Anything you can see there can be accessed in Retool.\n\n###\n\n","completion":" ![You can open the left model browser from the top nav bar](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/97e696e-model_browser.png) END"}
{"prompt":"![You can open the left model browser from the top nav bar](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/97e696e-model_browser.png)\n\n###\n\n","completion":" Expand one of the variables on the left to see its values. For example here we can see `textinput1` and `query1`. END"}
{"prompt":"Expand one of the variables on the left to see its values. For example here we can see `textinput1` and `query1`.\n\n###\n\n","completion":" ![Use the model browser to inspect the Retool variables (components, queries, and globals)](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c051446-model_browser_details.png) END"}
{"prompt":"![Use the model browser to inspect the Retool variables (components, queries, and globals)](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c051446-model_browser_details.png)\n\n###\n\n","completion":" As you type in `textinput1`, you can actually see the `textinput1.value` field updating on the left hand panel! END"}
{"prompt":"As you type in `textinput1`, you can actually see the `textinput1.value` field updating on the left hand panel!\n\n###\n\n","completion":" (We've hidden some specific keys for components and queries, since they generally aren't used.) END"}
{"prompt":"Connecting to Jira\n\n###\n\n","completion":" To build Retool apps with your Jira data, you'll first need to create a resource for querying the Jira API. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to a data source. END"}
{"prompt":"To build Retool apps with your Jira data, you'll first need to create a resource for querying the Jira API. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to a data source.\n\n###\n\n","completion":" Get started by navigating to the Resources page, clicking Create new and then selecting Jira as your resource type. END"}
{"prompt":"Retool hosted setup\n\n###\n\n","completion":" Retool uses OAuth to connect to Jira, allowing you to authenticate with just a few clicks. END"}
{"prompt":"Retool uses OAuth to connect to Jira, allowing you to authenticate with just a few clicks.\n\n###\n\n","completion":" First, enter a name for your resource that you’ll use when querying it in the editor (e.g. “DevOps JIRA”). Next, you’ll need to enter your Jira domain. Construct your domain URL using the following structure: END"}
{"prompt":"First, enter a name for your resource that you’ll use when querying it in the editor (e.g. “DevOps JIRA”). Next, you’ll need to enter your Jira domain. Construct your domain URL using the following structure:\n\n###\n\n","completion":" `api.atlassian.com\/ex\/jira\/{cloudid}` END"}
{"prompt":"`api.atlassian.com\/ex\/jira\/{cloudid}`\n\n###\n\n","completion":" Click **Test OAuth integration with your own account**. END"}
{"prompt":"Click **Test OAuth integration with your own account**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5e481873-1df9-4e98-a733-56cbfcbbac20.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5e481873-1df9-4e98-a733-56cbfcbbac20.png)\n\n###\n\n","completion":" Then, follow the Jira authorization steps to authorize the access for the same domain you entered in the server variables and press **Accept**. After completing the authorization flow, you should see a message indicating a successful connection. Your resource is ready for use! END"}
{"prompt":"Then, follow the Jira authorization steps to authorize the access for the same domain you entered in the server variables and press **Accept**. After completing the authorization flow, you should see a message indicating a successful connection. Your resource is ready for use!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c523986-Jira_add.png) END"}
{"prompt":"Self hosted setup\n\n###\n\n","completion":" If you host Retool yourself, you'll need to provide credentials for an Atlassian OAuth2 app. You can create an app and access credentials via the [Atlassian Developer Console](https:\/\/developer.atlassian.com\/console\/myapps\/). END"}
{"prompt":"If you host Retool yourself, you'll need to provide credentials for an Atlassian OAuth2 app. You can create an app and access credentials via the [Atlassian Developer Console](https:\/\/developer.atlassian.com\/console\/myapps\/).\n\n###\n\n","completion":" First, Enter a name for your resource that you’ll use when querying it in the editor (e.g. “DevOps JIRA”). END"}
{"prompt":"First, Enter a name for your resource that you’ll use when querying it in the editor (e.g. “DevOps JIRA”).\n\n###\n\n","completion":" Then, enter your client ID and client secret, and confirm your Atlassian app is using the Retool provided callback URL. END"}
{"prompt":"Then, enter your client ID and client secret, and confirm your Atlassian app is using the Retool provided callback URL.\n\n###\n\n","completion":" You'll also need to enter the name of your Jira domain. Construct your domain URL using the following structure: END"}
{"prompt":"You'll also need to enter the name of your Jira domain. Construct your domain URL using the following structure:\n\n###\n\n","completion":" `api.atlassian.com\/ex\/jira\/{cloudid}` END"}
{"prompt":"`api.atlassian.com\/ex\/jira\/{cloudid}`\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7d3f2365-040d-4b15-9661-e84ac4752d89.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7d3f2365-040d-4b15-9661-e84ac4752d89.png)\n\n###\n\n","completion":" Click **Create Resource.** END"}
{"prompt":"Click **Create Resource.**\n\n###\n\n","completion":" You can now select your newly-created Jira resource from the Resource dropdown in in the in-app Query Editor, as well as the Query Library. END"}
{"prompt":"Querying the Jira API\n\n###\n\n","completion":" After setting up a Jira integration with Retool, a new option for a Jira query will appear in the select a resource dropdown of the Retool query editor. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the Jira API spec to send and retrieve data from Jira. You can learn about the popular examples and endpoints like creating a new issue, modifying a project, assign tickets to users and more [here](https:\/\/developer.atlassian.com\/server\/jira\/platform\/jira-rest-api-examples\/). END"}
{"prompt":"Making a new Lambda IAM user\n\n###\n\n","completion":" Head over to [IAM](https:\/\/console.aws.amazon.com\/iam\/home), make a new user, and call it `retool-lambda-invoker`. Only enable \"programmatic access\". END"}
{"prompt":"Head over to [IAM](https:\/\/console.aws.amazon.com\/iam\/home), make a new user, and call it `retool-lambda-invoker`. Only enable \"programmatic access\".\n\n###\n\n","completion":" ![Creating an IAM user and setting the access type.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/93e97d4-Screen_Shot_2019-05-05_at_5.07.37_PM.png) END"}
{"prompt":"![Creating an IAM user and setting the access type.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/93e97d4-Screen_Shot_2019-05-05_at_5.07.37_PM.png)\n\n###\n\n","completion":" Hit \"next\" to grant the account permissions.You'll need to grant 2 specific permission types: [ListFunctions](https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/API_ListFunctions.html) and [Invoke](https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/API_Invoke.html). END"}
{"prompt":"Configuring Permissions\n\n###\n\n","completion":" Click **Attach existing policies directly**. If you already have a the correct Lambda permissions policy set up, you can search for it and select it here; however, it's likely that you'll have to create a new policy. If so, click on the **Create Policy** button. END"}
{"prompt":"Click **Attach existing policies directly**. If you already have a the correct Lambda permissions policy set up, you can search for it and select it here; however, it's likely that you'll have to create a new policy. If so, click on the **Create Policy** button.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b75bf02-Screen_Shot_2019-05-05_at_5.46.38_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b75bf02-Screen_Shot_2019-05-05_at_5.46.38_PM.png)\n\n###\n\n","completion":" In the policy editor, make the following selections: END"}
{"prompt":"In the policy editor, make the following selections:\n\n###\n\n","completion":" Under **Service** search for and select **Lambda**.\nUnder **Access level > List** select **ListFunctions**.\nUnder **Access level > Write** select **InvokeFunction**.\nUnder **Resources** select **All resources**.\nClick **Review Policy**. END"}
{"prompt":"Under **Service** search for and select **Lambda**.\nUnder **Access level > List** select **ListFunctions**.\nUnder **Access level > Write** select **InvokeFunction**.\nUnder **Resources** select **All resources**.\nClick **Review Policy**.\n\n###\n\n","completion":" ![Create the Lambda policy.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/209d4da-Screen_Shot_2019-05-05_at_5.08.15_PM.png) END"}
{"prompt":"![Create the Lambda policy.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/209d4da-Screen_Shot_2019-05-05_at_5.08.15_PM.png)\n\n###\n\n","completion":" Create a **Name** for your policy (you can call it something like \"LambdaInvoker\") and click **Create Policy**. END"}
{"prompt":"Create a **Name** for your policy (you can call it something like \"LambdaInvoker\") and click **Create Policy**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9d731c3-Screen_Shot_2019-05-05_at_5.08.45_PM.png) END"}
{"prompt":"Creating the IAM User\n\n###\n\n","completion":" Back in the \"Add user\" screen, search for and select the Lambda permissions policy you just created, or just select your pre-existing policy if you skipped the creation step above. END"}
{"prompt":"Back in the \"Add user\" screen, search for and select the Lambda permissions policy you just created, or just select your pre-existing policy if you skipped the creation step above.\n\n###\n\n","completion":" ![Select the Lambda permissions policy.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/78c0bab-Screen_Shot_2019-05-05_at_5.09.08_PM.png) END"}
{"prompt":"![Select the Lambda permissions policy.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/78c0bab-Screen_Shot_2019-05-05_at_5.09.08_PM.png)\n\n###\n\n","completion":" Click **Next** (you can skip adding Tags) and then **Create User**. END"}
{"prompt":"Click **Next** (you can skip adding Tags) and then **Create User**.\n\n###\n\n","completion":" Your Lambda user has been created! END"}
{"prompt":"Your Lambda user has been created!\n\n###\n\n","completion":" ![Success page indicating your Lambda user has been created.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0d9f2c0-Screen_Shot_2019-05-05_at_5.09.31_PM.png) END"}
{"prompt":"Connecting to Retool\n\n###\n\n","completion":" In the resources selector view - choose \"Lambda.\" You will be prompted to provide an Access Key ID and Secret Access Key ID, as well as specify your AWS Region. You can find out how to obtain these in the [Lambda Docs](https:\/\/docs.aws.amazon.com\/general\/latest\/gr\/aws-sec-cred-types.html#access-keys-and-secret-access-keys). END"}
{"prompt":"In the resources selector view - choose \"Lambda.\" You will be prompted to provide an Access Key ID and Secret Access Key ID, as well as specify your AWS Region. You can find out how to obtain these in the [Lambda Docs](https:\/\/docs.aws.amazon.com\/general\/latest\/gr\/aws-sec-cred-types.html#access-keys-and-secret-access-keys).\n\n###\n\n","completion":" ![Enter your Lambda credentials in Retool.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/211962a-Screen_Shot_2019-05-05_at_6.35.31_PM.png) END"}
{"prompt":"![Enter your Lambda credentials in Retool.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/211962a-Screen_Shot_2019-05-05_at_6.35.31_PM.png)\n\n###\n\n","completion":" You can then specify the Lambda function you want to call from the dropdown, and add a payload: END"}
{"prompt":"You can then specify the Lambda function you want to call from the dropdown, and add a payload:\n\n###\n\n","completion":" ![Calling a Lambda function from the Retool editor.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b1bc54c-Screen_Shot_2019-05-05_at_6.50.44_PM.png) END"}
{"prompt":"title: \"Legacy Table component migration\"\nexcerpt: \"Learn about updated properties in the new Table component.\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-concepts\"\nhidden: true\n\n###\n\n","completion":" You don't have to upgrade existing apps that use the legacy Table component. You can continue to configure the legacy Table in your existing apps, and then use the new Table component when you have an app to build. END"}
{"prompt":"You don't have to upgrade existing apps that use the legacy Table component. You can continue to configure the legacy Table in your existing apps, and then use the new Table component when you have an app to build.\n\n###\n\n","completion":" If you want to migrate an existing app to use the new Table component, use this guide to learn more about the differences before migrating. END"}
{"prompt":"Column configuration\n\n###\n\n","completion":" The new Table no longer supports the Auto column format. Each column must have an explicit format. Each column can contain an optional source key, which maps the column to a field in the data source. If the source key is omitted, the column is effectively a custom column. END"}
{"prompt":"Properties\n\n###\n\n","completion":" Some commonly used Table properties have been renamed. Anywhere in your app where you reference these properties, you’ll want to update those references to the new property names. END"}
{"prompt":"selectedRow\n\n###\n\n","completion":" The property to access the Table’s selected row changed from `table1.selectedRow.data` to `table1.selectedRow`. END"}
{"prompt":"currentRow\n\n###\n\n","completion":" `currentRow` in a column’s mapped values is now `currentSourceRow`, to make it explicit that it references the underlying source row’s data. END"}
{"prompt":"recordUpdates and changeSet\n\n###\n\n","completion":" The legacy Table’s edited fields were exposed in `recordUpdates` and `changeSet`. These fields are now `changesetArray` and `changesetObject`, respectively. These properties no longer contain the entire row’s data, and instead only contain the modified fields. END"}
{"prompt":"Pagination controls\n\n###\n\n","completion":" Pagination controls are now nested under `table1.pagination`. This means referencing a table’s `pageSize`, for example, is done using `table1.pagination.pageSize`. Pagination is now accessible in the Table’s **Add-ons** section in the **Inspect** tab. END"}
{"prompt":"Save and cancel buttons\n\n###\n\n","completion":" The new Table exposes the built-in save and cancel buttons for bulk editing in the **Add-ons** section of the **Inspect** tab. END"}
{"prompt":"Sorting controls\n\n###\n\n","completion":" The legacy Table exposed several fields to represent the Table’s sorting state: `defaultSortDescending`, `defaultSortByColumn`, `sortedColumn`, `sortedDesc`. The new Table exposes the `sort` and `sortObject` properties, which represent the entire sort state of the table. END"}
{"prompt":"Filtering controls\n\n###\n\n","completion":" The legacy Table did not support nested filtering. The new Table supports nested filters with the `filterStack` property. END"}
{"prompt":"Feature comparison\n\n###\n\n","completion":" See below for a feature-by-feature comparison of the legacy Table and the new Table. END"}
{"prompt":"title: \"Connect to Linear\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect Linear to Retool.\"\nhidden: false\n\n###\n\n","completion":" _Note: Retool currently only supports connecting to Linear's API via our GraphQL API integration._ END"}
{"prompt":"Connecting to the Linear API\n\n###\n\n","completion":" Retool can connect to Linear using [GraphQL](https:\/\/graphql.org\/) via their [API](https:\/\/developers.linear.app\/docs\/graphql\/working-with-the-graphql-api). When doing so you can choose to authenticate either using OAuth 2.0 or a personal API key. If you want to restrict access given through the resource you’ll need to use OAuth 2.0, a resource set up with a personal API key will automatically have the same permissions as the user who generated the key.\nTo get started you’ll need to create a new GraphQL resource in Retool. This can be done by navigating to the **Resource** page clicking the **Create new** button in the top right and selecting **GraphQL**. END"}
{"prompt":"Retool can connect to Linear using [GraphQL](https:\/\/graphql.org\/) via their [API](https:\/\/developers.linear.app\/docs\/graphql\/working-with-the-graphql-api). When doing so you can choose to authenticate either using OAuth 2.0 or a personal API key. If you want to restrict access given through the resource you’ll need to use OAuth 2.0, a resource set up with a personal API key will automatically have the same permissions as the user who generated the key.\nTo get started you’ll need to create a new GraphQL resource in Retool. This can be done by navigating to the **Resource** page clicking the **Create new** button in the top right and selecting **GraphQL**.\n\n###\n\n","completion":" ![Selecting a GraphQL resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6dde86d-image11.png) END"}
{"prompt":"![Selecting a GraphQL resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6dde86d-image11.png)\n\n###\n\n","completion":" For the base URL you’ll use Linear's GraphQL endpoint: <https:\/\/api.linear.app\/graphql> END"}
{"prompt":"For the base URL you’ll use Linear's GraphQL endpoint: <https:\/\/api.linear.app\/graphql>\n\n###\n\n","completion":" And then follow the instructions in either the [Personal API Key](https:\/\/docs.retool.com\/docs\/linear-integration#personal-api-key), or [OAuth 2.0](https:\/\/docs.retool.com\/docs\/linear-integration#oauth2) section depending on the authorization you’d like to use. (Note: Linear’s GraphQL API supports introspection so it does not have to be disabled.) END"}
{"prompt":"And then follow the instructions in either the [Personal API Key](https:\/\/docs.retool.com\/docs\/linear-integration#personal-api-key), or [OAuth 2.0](https:\/\/docs.retool.com\/docs\/linear-integration#oauth2) section depending on the authorization you’d like to use. (Note: Linear’s GraphQL API supports introspection so it does not have to be disabled.)\n\n###\n\n","completion":" ![Shared settings for configuring a Linear resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/aaf70bd-image2.png) END"}
{"prompt":"Personal API Key\n\n###\n\n","completion":" In order to authenticate using a personal API key you’ll need an account with the appropriate permissions on your workspace to generate the key. All requests made to the API will be seen as actions taken by this account. END"}
{"prompt":"In order to authenticate using a personal API key you’ll need an account with the appropriate permissions on your workspace to generate the key. All requests made to the API will be seen as actions taken by this account.\n\n###\n\n","completion":" Once you have the personal key you’ll enter it as an Authorization header and be good to go! END"}
{"prompt":"Once you have the personal key you’ll enter it as an Authorization header and be good to go!\n\n###\n\n","completion":" ![Linear resource set up using a personal API key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4b2dcb9-image12.png) END"}
{"prompt":"![Linear resource set up using a personal API key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4b2dcb9-image12.png)\n\n###\n\n","completion":" You can generate a personal key in the API tab of the settings section in said account on Linear. END"}
{"prompt":"You can generate a personal key in the API tab of the settings section in said account on Linear.\n\n###\n\n","completion":" **Linear > Account Menu > Settings > API > Personal API Keys > Create Key** END"}
{"prompt":"**Linear > Account Menu > Settings > API > Personal API Keys > Create Key**\n\n###\n\n","completion":" ![Accessing the settings menu in the linear console](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7c2861-image14.png) END"}
{"prompt":"![Accessing the settings menu in the linear console](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7c2861-image14.png)\n\n###\n\n","completion":" ![Menu for managing api authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d563495-image9.png) END"}
{"prompt":"![Menu for managing api authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d563495-image9.png)\n\n###\n\n","completion":" In order to create a key you’ll need to give it a label and once you do you’ll only be able to see it until you navigate away from, or reload, the page (you can generate multiple keys, but nevertheless it’s good to keep yours in a safe place). END"}
{"prompt":"In order to create a key you’ll need to give it a label and once you do you’ll only be able to see it until you navigate away from, or reload, the page (you can generate multiple keys, but nevertheless it’s good to keep yours in a safe place).\n\n###\n\n","completion":" ![View right after creating api key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3b85af6-image16.png) END"}
{"prompt":"![View right after creating api key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3b85af6-image16.png)\n\n###\n\n","completion":" With this key in hand head back to your resource setup in Retool and enter it as an Authorization header and you're good to go! END"}
{"prompt":"OAuth 2.0\n\n###\n\n","completion":" Start by setting authentication to OAuth 2.0 as shown below and described [here](https:\/\/docs.retool.com\/docs\/api-authentication#oauth-20). END"}
{"prompt":"Start by setting authentication to OAuth 2.0 as shown below and described [here](https:\/\/docs.retool.com\/docs\/api-authentication#oauth-20).\n\n###\n\n","completion":" ![Linear resource set up with OAuth 2.0 selected for authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/793c11c-image1.png) END"}
{"prompt":"![Linear resource set up with OAuth 2.0 selected for authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/793c11c-image1.png)\n\n###\n\n","completion":" Important things to note are that END"}
{"prompt":"Important things to note are that\n\n###\n\n","completion":" You’ll then configure your OAuth 2.0 setup as follows. Note you’ll either need access to an existing OAuth2 app in linear or the ability to create a new one (the configuration of the app is covered below). END"}
{"prompt":"You’ll then configure your OAuth 2.0 setup as follows. Note you’ll either need access to an existing OAuth2 app in linear or the ability to create a new one (the configuration of the app is covered below).\n\n###\n\n","completion":" ![OAuth2 set up for linear in retool with example scopes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a080023-image15.png) END"}
{"prompt":"![OAuth2 set up for linear in retool with example scopes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a080023-image15.png)\n\n###\n\n","completion":" Important things to note here are END"}
{"prompt":"Important things to note here are\n\n###\n\n","completion":" **Linear > Account Menu > Settings > API > Your Applications** END"}
{"prompt":"**Linear > Account Menu > Settings > API > Your Applications**\n\n###\n\n","completion":" ![Menu for accessing existing OAuth2 apps and creating new ones](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bfcb96f-image13.png) END"}
{"prompt":"![Menu for accessing existing OAuth2 apps and creating new ones](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bfcb96f-image13.png)\n\n###\n\n","completion":" Once you’ve either accessed an existing app or created your own you’ll want to END"}
{"prompt":"Once you’ve either accessed an existing app or created your own you’ll want to\n\n###\n\n","completion":" The rest of the fields can be configured as you wish. END"}
{"prompt":"The rest of the fields can be configured as you wish.\n\n###\n\n","completion":" ![OAuth2 app set up with client id\/secret and callback URLs highlighted](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7773f1-image8.png) END"}
{"prompt":"Basic Read\/Write Query\n\n###\n\n","completion":" Since the Linear GraphQL API supports introspection, it’s possible to use Retool’s schema browser to examine the structure of your database. An example of a read query is given below with the schema exposed (note that there are many more possible fields to query than shown here). END"}
{"prompt":"Since the Linear GraphQL API supports introspection, it’s possible to use Retool’s schema browser to examine the structure of your database. An example of a read query is given below with the schema exposed (note that there are many more possible fields to query than shown here).\n\n###\n\n","completion":" ![Querying Linear for issues](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9ede04b-image4.png) END"}
{"prompt":"![Querying Linear for issues](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9ede04b-image4.png)\n\n###\n\n","completion":" Data from this query is then returned in the following format END"}
{"prompt":"Data from this query is then returned in the following format\n\n###\n\n","completion":" ![Structure of the data property in a sample GraphQL query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/de347ba-image7.png) END"}
{"prompt":"![Structure of the data property in a sample GraphQL query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/de347ba-image7.png)\n\n###\n\n","completion":" Writing to GraphQL is done through mutations that are passed variables using the _$variable_name : Type_ syntax. Unlike with some other queries values aren’t passed directly to the query with {{}} flags, instead declaring a variable within a GraphQL query generates a field in the GUI in which a value can be passed. END"}
{"prompt":"Writing to GraphQL is done through mutations that are passed variables using the _$variable_name : Type_ syntax. Unlike with some other queries values aren’t passed directly to the query with {{}} flags, instead declaring a variable within a GraphQL query generates a field in the GUI in which a value can be passed.\n\n###\n\n","completion":" ![Mutation with variable fields shown in the GUI](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/88487c3-image10.png) END"}
{"prompt":"Relay Cursor Based Pagination in Retool\n\n###\n\n","completion":" The Linear GraphQL database is compatible with relay cursor based pagination. Pagination can happen either forward or backward, in either case, we’ll need to pass a specifically named variable for the cursor and the number of records to pull. END"}
{"prompt":"The Linear GraphQL database is compatible with relay cursor based pagination. Pagination can happen either forward or backward, in either case, we’ll need to pass a specifically named variable for the cursor and the number of records to pull.\n\n###\n\n","completion":" When selecting relay cursor based pagination in the table component the table checks for three values END"}
{"prompt":"When selecting relay cursor based pagination in the table component the table checks for three values\n\n###\n\n","completion":" And returns three addition values END"}
{"prompt":"And returns three addition values\n\n###\n\n","completion":" When paging forward, the value of _afterCursor_ will be set to whatever is currently in _Next page cursor_ and the value of _beforeCursor_ will be set to null. Similarly, when paging forward, the _beforeCursor_ is set to the value of _Previous page cursor_ and _afterCursor_ is set to null. The two values Previous and Next page cursor are the cursor values for the records at, respectively, the top and bottom of the current page. The value _pageSize_ corresponds to the number of records in a page and so gets passed to both first and last. The table also checks the value _Whether or not there is more data to load_ to determine whether or not to allow continued pagination in the current direction. END"}
{"prompt":"When paging forward, the value of _afterCursor_ will be set to whatever is currently in _Next page cursor_ and the value of _beforeCursor_ will be set to null. Similarly, when paging forward, the _beforeCursor_ is set to the value of _Previous page cursor_ and _afterCursor_ is set to null. The two values Previous and Next page cursor are the cursor values for the records at, respectively, the top and bottom of the current page. The value _pageSize_ corresponds to the number of records in a page and so gets passed to both first and last. The table also checks the value _Whether or not there is more data to load_ to determine whether or not to allow continued pagination in the current direction.\n\n###\n\n","completion":" Passing _beforeCursor_ and _afterCursor_ as inputs to the pagination query and setting it to run on input change ensures that it runs on every page change. END"}
{"prompt":"Pagination with Linear\n\n###\n\n","completion":" When using cursor based pagination in Linear we’ll want to query for issues for edges as they contain cursor data as well as the node itself. Additionally, Linear lets us query the following values from pageInfo to aid with pagination: END"}
{"prompt":"When using cursor based pagination in Linear we’ll want to query for issues for edges as they contain cursor data as well as the node itself. Additionally, Linear lets us query the following values from pageInfo to aid with pagination:\n\n###\n\n","completion":" We can therefore write our pagination query as follows: END"}
{"prompt":"We can therefore write our pagination query as follows:\n\n###\n\n","completion":" The Linear GraphQL API will throw an error when trying to pass any variable from first\/after with any variable from last\/before, however, so when using one pair the values for the other pair need to be passed as undefined. We can do this as follows: END"}
{"prompt":"The Linear GraphQL API will throw an error when trying to pass any variable from first\/after with any variable from last\/before, however, so when using one pair the values for the other pair need to be passed as undefined. We can do this as follows:\n\n###\n\n","completion":" ![Expressions for last, before_cursor, first, and after_cursor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d5bb4ac-image3.png) END"}
{"prompt":"![Expressions for last, before_cursor, first, and after_cursor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d5bb4ac-image3.png)\n\n###\n\n","completion":" Note: The table loads with both _beforeCursor_ and _afterCursor_ set to null and we’ve set up the ternary expressions this way so that the table defaults to loading the first page of data. If first is passed without an _afterCursor_ it begins at the start of the table, similarly if last is passed with a _beforeCursor_ it begins at the end. END"}
{"prompt":"Note: The table loads with both _beforeCursor_ and _afterCursor_ set to null and we’ve set up the ternary expressions this way so that the table defaults to loading the first page of data. If first is passed without an _afterCursor_ it begins at the start of the table, similarly if last is passed with a _beforeCursor_ it begins at the end.\n\n###\n\n","completion":" From here the nodes can be passed as data to the table, and the values from _pageInfo_ to the three values that the table checks for to handle pagination. However! When paginating backwards the Linear GraphQL API also returns nodes in reverse order, additionally _startCursor_ will correspond with node closest to the end of the table and _endCursor_ with the node closest to the front. END"}
{"prompt":"From here the nodes can be passed as data to the table, and the values from _pageInfo_ to the three values that the table checks for to handle pagination. However! When paginating backwards the Linear GraphQL API also returns nodes in reverse order, additionally _startCursor_ will correspond with node closest to the end of the table and _endCursor_ with the node closest to the front.\n\n###\n\n","completion":" In order to remedy this, we’ll set up a transformer to ensure the values get passed correctly. END"}
{"prompt":"In order to remedy this, we’ll set up a transformer to ensure the values get passed correctly.\n\n###\n\n","completion":" And then pass values to the table as follows: END"}
{"prompt":"And then pass values to the table as follows:\n\n###\n\n","completion":" ![Passing Previous page cursor, Next page cursor, and Whether or not there is more data to load to table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4ab7c45-image6.png) END"}
{"prompt":"![Passing Previous page cursor, Next page cursor, and Whether or not there is more data to load to table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4ab7c45-image6.png)\n\n###\n\n","completion":" From there we're good to go! A full screenshot of the setup is shown below: END"}
{"prompt":"From there we're good to go! A full screenshot of the setup is shown below:\n\n###\n\n","completion":" ![Full set up for table with server side pagination query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d3f4fab-image5.png) END"}
{"prompt":"title: \"App management overview\"\ncategorySlug: \"app-management\"\nexcerpt: \"Manage your Retool web and mobile apps.\"\nhidden: false\n\n###\n\n","completion":" Version and release apps, roll back changes, and learn how to build performant apps. END"}
{"prompt":"Get started\n\n###\n\n","completion":" Learn how to create a new release, then start managing your apps. END"}
{"prompt":"Learn how to create a new release, then start managing your apps.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(66.66666666666666% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/zj9yMdtHzgCfYGAkcMji?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Create a release\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(66.66666666666666% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/zj9yMdtHzgCfYGAkcMji?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Create a release\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\nhr.landing-divider {\\nmargin: 60px 0;\\nborder-width: 0;\\n}\\n  \\n   section.get-started {\\n display: flex;\\n      margin-bottom: 25px;\\n }\\n  \\n   section.get-started div.get-started-description {\\n width: 50%;\\n flex-shrink: 0;\\n flex-direction: column;\\n }\\n  \\n   section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n }\\n\\n   section.two-column ul.ctas {\\n grid-template-columns: repeat(2,1fr);\\n }\\n\\n section.three-column ul.ctas {\\n grid-template-columns: repeat(3,1fr);\\n }\\n\\n   section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n border: 1px solid rgb(240, 241, 255);\\n background: #fbfbfb;\\n border-radius: 5px;\\n transition: background 200ms ease 0s, color 200ms ease 0s, box-shadow 200ms ease 0s, border 200ms\\n }\\n\\n section ul.ctas li a {\\n padding: 10px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transform 400ms ease 0s;\\n }\\n\\n section ul.ctas li:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n border: 1px solid rgb(209, 214, 255);\\n }\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight,600);\\n color: rgb(104, 117, 217);\\n }\\n \\n\\n section.get-started div.get-started-image {\\n width: 100%;\\n margin-left: 20px;\\n }\\n \\n section.get-started .get-started-image img {\\n border-radius: 6px;\\n }\\n\\n\\n\\n\\n @media only screen and (max-width:1029px) {\\n\\n section.two-column ul.ctas, section.three-column ul.ctas {\\n grid-template-columns: repeat(1,1fr) !important;\\n }\\n\\n section.get-started {\\n flex-direction: column-reverse;\\n }\\n\\n section.get-started div.get-started-description {\\n width: 100%;\\n }\\n\\n section.get-started div.get-started-image, div.CodeTabs {\\n margin-left: 0;\\n }\\n \\nsection.get-started div.get-started-components-image {\\n margin-right: 0;\\n margin-top: 20px;\\n }\\n\\n }\\n<\/style>\\n\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\nhr.landing-divider {\\nmargin: 60px 0;\\nborder-width: 0;\\n}\\n  \\n   section.get-started {\\n display: flex;\\n      margin-bottom: 25px;\\n }\\n  \\n   section.get-started div.get-started-description {\\n width: 50%;\\n flex-shrink: 0;\\n flex-direction: column;\\n }\\n  \\n   section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n }\\n\\n   section.two-column ul.ctas {\\n grid-template-columns: repeat(2,1fr);\\n }\\n\\n section.three-column ul.ctas {\\n grid-template-columns: repeat(3,1fr);\\n }\\n\\n   section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n border: 1px solid rgb(240, 241, 255);\\n background: #fbfbfb;\\n border-radius: 5px;\\n transition: background 200ms ease 0s, color 200ms ease 0s, box-shadow 200ms ease 0s, border 200ms\\n }\\n\\n section ul.ctas li a {\\n padding: 10px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transform 400ms ease 0s;\\n }\\n\\n section ul.ctas li:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n border: 1px solid rgb(209, 214, 255);\\n }\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight,600);\\n color: rgb(104, 117, 217);\\n }\\n \\n\\n section.get-started div.get-started-image {\\n width: 100%;\\n margin-left: 20px;\\n }\\n \\n section.get-started .get-started-image img {\\n border-radius: 6px;\\n }\\n\\n\\n\\n\\n @media only screen and (max-width:1029px) {\\n\\n section.two-column ul.ctas, section.three-column ul.ctas {\\n grid-template-columns: repeat(1,1fr) !important;\\n }\\n\\n section.get-started {\\n flex-direction: column-reverse;\\n }\\n\\n section.get-started div.get-started-description {\\n width: 100%;\\n }\\n\\n section.get-started div.get-started-image, div.CodeTabs {\\n margin-left: 0;\\n }\\n \\nsection.get-started div.get-started-components-image {\\n margin-right: 0;\\n margin-top: 20px;\\n }\\n\\n }\\n<\/style>\\n\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<hr class=\\\"landing-divider\\\" \/>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n    <li>\\n <a\\n href=\\\"releases-and-history\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Manage app releases<\/div>\\n <div class=\\\"description\\\">\\nVersion apps or revert changes to a previous state.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"app-documentation\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Include user documentation<\/div>\\n <div class=\\\"description\\\">\\n Write READMEs and in-app documentation.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"import-export-apps\\\"\\n style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Import and export apps<\/div>\\n <div class=\\\"description\\\">\\n Import and export Retool apps using JSON.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a\\n href=\\\"command-palette\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Command Palette<\/div>\\n <div class=\\\"description\\\">\\nSearch and execute commands across Retool. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"debug-tools\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Debug Tools<\/div>\\n <div class=\\\"description\\\">\\n Resolve issues with built-in debugging tools.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"app-performance-best-practices\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Best practices<\/div>\\n <div class=\\\"description\\\">\\n Recommendations for building performant apps.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Manage dog walkers\"\ncategorySlug: \"legacy\"\nexcerpt: \"Build an app to manage dog walkers and text them if there is bad weather.\"\nhidden: true\n\n###\n\n","completion":" **Let's say we're a dog-walking company, and we want to inform our walkers that their walks tomorrow are cancelled due to an incoming snowstorm.** We'll build a tool to text our dog-walkers informing them of the news **in 5 minutes**. END"}
{"prompt":"1. Pull in walkers\n\n###\n\n","completion":" Let's start with an API request to get all our dog walkers. Make a REST API resource to GET the data from your server. For this demo, we'll use [a mock server](http:\/\/www.mocky.io\/v2\/5b6c3fa72f00003700893c76). Press run (or or ⌘⏎) to preview the request. END"}
{"prompt":"Let's start with an API request to get all our dog walkers. Make a REST API resource to GET the data from your server. For this demo, we'll use [a mock server](http:\/\/www.mocky.io\/v2\/5b6c3fa72f00003700893c76). Press run (or or ⌘⏎) to preview the request.\n\n###\n\n","completion":" ![We can preview the query results.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0576aab-Screenshot_2021-06-29_at_12.56.45_AM.png) END"}
{"prompt":"![We can preview the query results.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0576aab-Screenshot_2021-06-29_at_12.56.45_AM.png)\n\n###\n\n","completion":" Great! You can see list of users under the `result` key. END"}
{"prompt":"Great! You can see list of users under the `result` key.\n\n###\n\n","completion":" Now, let's load this data into a table to make it easier to view. Drag a table component from the right hand side onto the canvas. Set the data value to `{{ getDogWalkers.data }}` to load the table with the results from our query. END"}
{"prompt":"Now, let's load this data into a table to make it easier to view. Drag a table component from the right hand side onto the canvas. Set the data value to `{{ getDogWalkers.data }}` to load the table with the results from our query.\n\n###\n\n","completion":" ![A table loaded with the query data.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/36542ef-Screenshot_2021-06-29_at_12.58.30_AM.png) END"}
{"prompt":"![A table loaded with the query data.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/36542ef-Screenshot_2021-06-29_at_12.58.30_AM.png)\n\n###\n\n","completion":" We're off to a good start. END"}
{"prompt":"2. Send them text messages\n\n###\n\n","completion":" Now that we have our walkers loaded into the table, we want to add an **action button**. Scroll down in the table options, and click the **Action** toggle. Set the action button text to something like \"Text walker\". END"}
{"prompt":"Now that we have our walkers loaded into the table, we want to add an **action button**. Scroll down in the table options, and click the **Action** toggle. Set the action button text to something like \"Text walker\".\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a3970a4-text_walker.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a3970a4-text_walker.gif)\n\n###\n\n","completion":" You can see the button appear in its own column on the table. END"}
{"prompt":"You can see the button appear in its own column on the table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d4a1015-Screenshot_2021-06-29_at_1.38.00_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d4a1015-Screenshot_2021-06-29_at_1.38.00_AM.png)\n\n###\n\n","completion":" Now, let's write a query to connect to this action button. We will use the Twilio Message API to send these texts. Create a new query, and call it `sendWalkerMessage`. Set the resource to your Twilio integration. Pick the `POST` Message path from the operation list. You should see a list appear, automatically populated with the request parameters. Set the `from` number to your Twilio number, and `AccountSID` to your Twilio account SID. The `body` is the message you want to send your walker. **We can dynamically set the `to` field to the walker's phone number with JavaScript using our `{{}}` notation.** The expression here is `{{ table1.selectedRow.data.number }}`. END"}
{"prompt":"Now, let's write a query to connect to this action button. We will use the Twilio Message API to send these texts. Create a new query, and call it `sendWalkerMessage`. Set the resource to your Twilio integration. Pick the `POST` Message path from the operation list. You should see a list appear, automatically populated with the request parameters. Set the `from` number to your Twilio number, and `AccountSID` to your Twilio account SID. The `body` is the message you want to send your walker. **We can dynamically set the `to` field to the walker's phone number with JavaScript using our `{{}}` notation.** The expression here is `{{ table1.selectedRow.data.number }}`.\n\n###\n\n","completion":" ![A preview of the values for our Twilio API request.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/97484c3-Screenshot_2021-06-29_at_1.34.00_AM.png) END"}
{"prompt":"![A preview of the values for our Twilio API request.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/97484c3-Screenshot_2021-06-29_at_1.34.00_AM.png)\n\n###\n\n","completion":" **That's it!** You can test the query out by pressing the `Text walker` button. It will send your walkers a text! END"}
{"prompt":"3. Actually Using it\n\n###\n\n","completion":" **This tool is now production-ready.** If you don't want coworkers bugging you about contacting dog walkers, send them a link to this tool. You can also use the Twilio API to keep track of which users have responded to your texts, and extend your tool to your needs! If you want, you can change permissions Not bad for a few minutes of work. END"}
{"prompt":"title: \"Manage Source Control deployments\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to manage and monitor Source Control deployments on your self-hosted Retool instance.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Organizations that use [Source Control](https:\/\/docs.retool.com\/docs\/source-control)—a branch-based workflow for managing and deploying changes to Retool apps—can use the Deployment Dashboard to view the status and details of deployments, download logs for further information, and manually deploy the latest changes. END"}
{"prompt":"View Source Control deployments\n\n###\n\n","completion":" The Deployment Dashboard contains the following details about the most recent deployments (up to 100) for your self-hosted instance. END"}
{"prompt":"The Deployment Dashboard contains the following details about the most recent deployments (up to 100) for your self-hosted instance.\n\n###\n\n","completion":" ![Viewing deployments](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2F07599e69-8d59-4faa-adee-4d68203aab3b.png) END"}
{"prompt":"Source Control status\n\n###\n\n","completion":" The Deployment Dashboard also includes details about your instance's Source Control configuration. You can review the current configuration, test the connection to the source control management (SCM) provider, or edit the configuration. END"}
{"prompt":"Manually deploy latest changes\n\n###\n\n","completion":" The **Deploy** section displays the commit SHA that is currently deployed. If you need to deploy the latest state of your configured main branch, click **Deploy Latest** to manually start a deployment. END"}
{"prompt":"The **Deploy** section displays the commit SHA that is currently deployed. If you need to deploy the latest state of your configured main branch, click **Deploy Latest** to manually start a deployment.\n\n###\n\n","completion":" ![Deploy latest](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fa977a9f3-840f-4f0f-a207-15a368ea01c9.png) END"}
{"prompt":"title: \"Manage time zones\"\ncategorySlug: \"app-scripting-and-events\"\nparentDocSlug: \"app-scripting-events-guides\"\nexcerpt: \"Learn how to manage time zones in Date Time and other components.\"\nhidden: false\n\n###\n\n","completion":" Components such as [Date Time](https:\/\/retool.com\/components\/date-time) can manage the time zone differences between displayed values and input values. This is useful if you have users in multiple time zones; they can work with dates and times based on their local time zone, but any values remain in their original time zone (e.g., UTC). END"}
{"prompt":"Components such as [Date Time](https:\/\/retool.com\/components\/date-time) can manage the time zone differences between displayed values and input values. This is useful if you have users in multiple time zones; they can work with dates and times based on their local time zone, but any values remain in their original time zone (e.g., UTC).\n\n###\n\n","completion":" To manage time zones on these components, toggle **Manage time zone** in the **Inspect** tab of the right panel. END"}
{"prompt":"To manage time zones on these components, toggle **Manage time zone** in the **Inspect** tab of the right panel.\n\n###\n\n","completion":" When **Manage time zone** is on, you can display timestamps local to a given time zone and encode a timestamp with a time zone offset. END"}
{"prompt":"When **Manage time zone** is on, you can display timestamps local to a given time zone and encode a timestamp with a time zone offset.\n\n###\n\n","completion":" The demo app below shows the difference in how date and time values appear when using managed and unmanaged time zones. Each component has the same underlying value. END"}
{"prompt":"The demo app below shows the difference in how date and time values appear when using managed and unmanaged time zones. Each component has the same underlying value.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdemos%2Fff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/7471efd8-5f84-418a-a297-3a47c97ca842\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Change the display of a date and time\n\n###\n\n","completion":" To change the display of a time based on time zone, toggle on **Manage time zone**. END"}
{"prompt":"To change the display of a time based on time zone, toggle on **Manage time zone**.\n\n###\n\n","completion":" ![Manage time zone option on the Date Time component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/05e3d0c6-2a78-44cc-bb93-63e08df8a7eb.png) END"}
{"prompt":"Local time\n\n###\n\n","completion":" To display a time based on the end-user's local time zone, select **Local time** in the **Display** dropdown of the Inspector. This shows the timestamp adjusted for the user's local time, inferred from their browser or device. END"}
{"prompt":"Offset\n\n###\n\n","completion":" To display a time based on a given time zone offset from UTC, in the **Display** field select the offset. In some locations, the offset for an area changes during daylight saving time (e.g., Eastern Time is `-4:00` during daylight saving time and `-5:00` otherwise). END"}
{"prompt":"Specific time zone\n\n###\n\n","completion":" To display a time based on a given time zone: END"}
{"prompt":"To display a time based on a given time zone:\n\n###\n\n","completion":" Time zones automatically adjust for daylight saving time. END"}
{"prompt":"Save values in a specified time zone\n\n###\n\n","completion":" When working with dates and times, you can specify how to encode values with time zones. It can be useful to consistently save values in UTC and use local time zones only for display. You can set the component's **Value** to be **UTC**, a specific offset, or **Local time**. END"}
{"prompt":"Use dates and times in tables and other components\n\n###\n\n","completion":" You can also manage time zones for date and time values in the [Table](https:\/\/retool.com\/components\/table) component: set the **Column Type** to **Time** or **Datetime**. You can also use the same **Manage time zone** options in other components that support date and time values. END"}
{"prompt":"You can also manage time zones for date and time values in the [Table](https:\/\/retool.com\/components\/table) component: set the **Column Type** to **Time** or **Datetime**. You can also use the same **Manage time zone** options in other components that support date and time values.\n\n###\n\n","completion":" ![Date Time column with mapped value moment formatting](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/87004f2a-07df-41be-b7c1-9fec46623a76.png) END"}
{"prompt":"![Date Time column with mapped value moment formatting](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/87004f2a-07df-41be-b7c1-9fec46623a76.png)\n\n###\n\n","completion":" If you use date and time values elsewhere, such as a [Text](https:\/\/retool.com\/components\/text) component or in a notification, you can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) using the pre-loaded [Moment](https:\/\/momentjs.com\/) library to format time zone differences. For example, you can convert and display a timestamp using the current user's local time: END"}
{"prompt":"If you use date and time values elsewhere, such as a [Text](https:\/\/retool.com\/components\/text) component or in a notification, you can [write JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) using the pre-loaded [Moment](https:\/\/momentjs.com\/) library to format time zone differences. For example, you can convert and display a timestamp using the current user's local time:\n\n###\n\n","completion":" In this example, a value of `2022-09-01T15:00:00.000Z` (15:00 UTC) would appear to a user in New York (Eastern Time) as `2022-09-01 11:00am (-5:00)`. END"}
{"prompt":"In this example, a value of `2022-09-01T15:00:00.000Z` (15:00 UTC) would appear to a user in New York (Eastern Time) as `2022-09-01 11:00am (-5:00)`.\n\n###\n\n","completion":" You can also use this formatting for the **Mapped value** on a **Table** column: END"}
{"prompt":"You can also use this formatting for the **Mapped value** on a **Table** column:\n\n###\n\n","completion":" ![Text column with mapped value moment formatting](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/70a3d9b9-2c70-4ac3-9fb8-f923099054c8.png) END"}
{"prompt":"title: \"Manage Source Control branches\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to view, edit, delete, and switch Source Control branches.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Branches can be managed from edit mode of any open branch of an app. END"}
{"prompt":"Viewing, editing, and deleting branches\n\n###\n\n","completion":" Click the **Actions** button, then select **Manage branches**. A dialog box will appear displaying all of the app's current branches — including your branches and those made by other developers. You can preview the application on a given branch, edit the app on a branch, or delete a branch. END"}
{"prompt":"Click the **Actions** button, then select **Manage branches**. A dialog box will appear displaying all of the app's current branches — including your branches and those made by other developers. You can preview the application on a given branch, edit the app on a branch, or delete a branch.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6c862d1-Screen_Shot_2021-06-16_at_10.41.14_AM.png) END"}
{"prompt":"Switching branches\n\n###\n\n","completion":" It's also possible to switch branches from an app's home page listing, editor mode, or preview mode. END"}
{"prompt":"It's also possible to switch branches from an app's home page listing, editor mode, or preview mode.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b033ab1-Screen_Shot_2021-06-16_at_10.42.34_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b033ab1-Screen_Shot_2021-06-16_at_10.42.34_AM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e13bdab-Screen_Shot_2021-06-16_at_10.43.10_AM.png) END"}
{"prompt":"Multi-instance\n\n###\n\n","completion":" If you’d like to preview a branch of an app created and pushed from another instance, create a new branch in your current instance, and use the Reset branch functionality to pull in the origin branch changes. END"}
{"prompt":"If you’d like to preview a branch of an app created and pushed from another instance, create a new branch in your current instance, and use the Reset branch functionality to pull in the origin branch changes.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f66bf3f-Screen_Shot_2021-06-15_at_5.58.21_PM.png) END"}
{"prompt":"title: \"Connect to Microsoft SQL Server\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your Microsoft SQL Server database to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [your Microsoft SQL Server database](https:\/\/www.microsoft.com\/en-us\/sql-server\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Microsoft SQL Server data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Microsoft SQL Server resource, you need: END"}
{"prompt":"Microsoft SQL Server authentication\n\n###\n\n","completion":" Retool authenticates with Microsoft SQL Server databases using a username and password. END"}
{"prompt":"SSL connections\n\n###\n\n","completion":" Retool can connect to Microsoft SQL Server databases using SSL. If required, you can provide CA certificate, client key, and client certificate credentials that allow Retool to connect using SSL. END"}
{"prompt":"Allow Retool to access the Microsoft SQL Server database\n\n###\n\n","completion":" If the Microsoft SQL Server host is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Microsoft SQL Server** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Microsoft SQL Server** resource type.\n\n###\n\n","completion":" ![Select a resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/a4ca012d-aa17-42c9-a4bf-a29f8d0deace.webp) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Microsoft SQL Server resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"General\n\n###\n\n","completion":" Provide the following connection settings for your Microsoft SQL Server host and database. END"}
{"prompt":"Advanced options\n\n###\n\n","completion":" Retool organization administrators can configure the following settings for Microsoft SQL resources. END"}
{"prompt":"Retool organization administrators can configure the following settings for Microsoft SQL resources.\n\n###\n\n","completion":" ![Configure advanced options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/d811b713-ebbb-4cba-ab17-a58cbd18df97.webp) END"}
{"prompt":"![Configure advanced options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/d811b713-ebbb-4cba-ab17-a58cbd18df97.webp)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Microsoft SQL Server. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/75eb85ae-0140-46b2-af36-87c420765db4.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Microsoft SQL Server resource is now ready to use. To interact with Microsoft SQL Server data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"title: \"Migrate from Git Syncing to Source Control\"\ncategorySlug: \"source-control\"\nexcerpt: \"Learn how to migrate from Git Syncing to Source Control.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" At a high level, migrating to Source Control entails the following: END"}
{"prompt":"At a high level, migrating to Source Control entails the following:\n\n###\n\n","completion":" Depending on whether you’ve already set up Source Control or not, follow the respective guide below. END"}
{"prompt":"From Git Syncing to Source Control\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c541277-Screen_Shot_2021-06-15_at_5.26.22_PM.png) END"}
{"prompt":"title: \"Mobile app development\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-concepts\"excerpt: \"Learn about Retool Mobile app development.\"\nhidden: false\n\n###\n\n","completion":" [Retool Mobile](https:\/\/retool.com\/products\/mobile) is a complete solution for building mobile apps that run natively on iOS and Android, and on the web as progressive web apps (PWA). You [connect your data sources](\/docs\/resources), visually build your app's interface, and write queries to interact with your data. END"}
{"prompt":"[Retool Mobile](https:\/\/retool.com\/products\/mobile) is a complete solution for building mobile apps that run natively on iOS and Android, and on the web as progressive web apps (PWA). You [connect your data sources](\/docs\/resources), visually build your app's interface, and write queries to interact with your data.\n\n###\n\n","completion":" Mobile apps can use built-in functionality of mobile devices, such as [NFC readers](\/reference\/component-mobile-nfc-reader) and [cameras](\/reference\/component-mobile-image-input). Retool Mobile also supports [Zebra Android devices](\/docs\/retool-mobile-zebra) with integrated scanners and sensors. END"}
{"prompt":"Mobile apps can use built-in functionality of mobile devices, such as [NFC readers](\/reference\/component-mobile-nfc-reader) and [cameras](\/reference\/component-mobile-image-input). Retool Mobile also supports [Zebra Android devices](\/docs\/retool-mobile-zebra) with integrated scanners and sensors.\n\n###\n\n","completion":" Retool makes all of your mobile apps available in the [Retool Mobile app for iOS and Android](#natively-with-retool-mobile-for-ios-and-android). You can use this app to browse, search, and run your organization's Retool Mobile apps natively. You can also [configure apps to work offline](\/docs\/retool-mobile-offline-mode) to cache data and enqueue changes to run when the connection is restored. END"}
{"prompt":"Build Retool Mobile apps\n\n###\n\n","completion":" You build mobile apps using the [App editor](\/docs\/app-editor) for Retool Mobile, Retool's drag-and-drop app building web interface. You use the App editor to: END"}
{"prompt":"You build mobile apps using the [App editor](\/docs\/app-editor) for Retool Mobile, Retool's drag-and-drop app building web interface. You use the App editor to:\n\n###\n\n","completion":" ![The App editor for Retool Mobile](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/4926af13-ef96-4800-902d-bb50fcd54ace.webp) END"}
{"prompt":"Mobile app interface\n\n###\n\n","completion":" The UI of Retool Mobile apps consists of _screens_ and _components_: END"}
{"prompt":"The UI of Retool Mobile apps consists of _screens_ and _components_:\n\n###\n\n","completion":" The App editor includes an additional _mobile panel_ on the left to manage screens and components. END"}
{"prompt":"The App editor includes an additional _mobile panel_ on the left to manage screens and components.\n\n###\n\n","completion":" You configure screens and components using the **Inspector** in the right panel. You can use event handlers to trigger queries or other actions in response to user events, such as pressing a button, navigating to another screen, or using the pull-to-refresh gesture. END"}
{"prompt":"You configure screens and components using the **Inspector** in the right panel. You can use event handlers to trigger queries or other actions in response to user events, such as pressing a button, navigating to another screen, or using the pull-to-refresh gesture.\n\n###\n\n","completion":" ![Screens and components](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/fbdacf2b-24d8-477e-83e1-14a332b5f9b1.webp) END"}
{"prompt":"Mobile screens\n\n###\n\n","completion":" Retool Mobile apps contain separate <<glossary:screens>> to serve different purposes. Only a single screen is visible to a user at any one time. Users can navigate between screens using interface elements like a tab bar, or interactions that trigger event handlers. END"}
{"prompt":"Mobile components\n\n###\n\n","completion":" Retool's [mobile-specific components](\/reference\/components-mobile) are the fundamental building blocks of Retool Mobile apps. They are prebuilt interface elements designed for mobile devices to display data, allow user input, and trigger actions based on interactions. END"}
{"prompt":"Retool's [mobile-specific components](\/reference\/components-mobile) are the fundamental building blocks of Retool Mobile apps. They are prebuilt interface elements designed for mobile devices to display data, allow user input, and trigger actions based on interactions.\n\n###\n\n","completion":" You assemble mobile components for each screen to perform a certain task (e.g., a list of contacts). Any changes to the component's state are immediately reflected. END"}
{"prompt":"You assemble mobile components for each screen to perform a certain task (e.g., a list of contacts). Any changes to the component's state are immediately reflected.\n\n###\n\n","completion":" ![Configure component settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/04b295da-8fca-4899-a259-6a151e7321dd.webp) END"}
{"prompt":"Handle user interactions\n\n###\n\n","completion":" You can configure screens and components with event handlers that trigger queries or other actions in response to user events, such as pressing a button, navigating to another screen, or using the pull-to-refresh gesture. END"}
{"prompt":"You can configure screens and components with event handlers that trigger queries or other actions in response to user events, such as pressing a button, navigating to another screen, or using the pull-to-refresh gesture.\n\n###\n\n","completion":" ![Refresh event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b071ed92-5b03-464d-9615-099f429d05f1.webp) END"}
{"prompt":"Run Retool Mobile apps\n\n###\n\n","completion":" Retool Mobile eliminates the need for compiling apps, complex distribution, and store listings with lengthy reviews. Instead of separate apps, you use a single app—Retool Mobile for iOS and Android—to browse and run apps natively. Retool Mobile apps also function as progressive web apps. END"}
{"prompt":"Retool Mobile eliminates the need for compiling apps, complex distribution, and store listings with lengthy reviews. Instead of separate apps, you use a single app—Retool Mobile for iOS and Android—to browse and run apps natively. Retool Mobile apps also function as progressive web apps.\n\n###\n\n","completion":" This approach simplifies deployment and makes all Retool Mobile apps instantly available. You can share links to apps so users can launch them on their device, or open them in a browser. END"}
{"prompt":"Natively with Retool Mobile for iOS and Android\n\n###\n\n","completion":" The Retool Mobile app for iOS and Android uses [React Native](http:\/\/react-native.org\/) to run mobile apps natively. Users can log in to their Retool organization, browse or search for mobile apps, and launch them on their mobile device. END"}
{"prompt":"The Retool Mobile app for iOS and Android uses [React Native](http:\/\/react-native.org\/) to run mobile apps natively. Users can log in to their Retool organization, browse or search for mobile apps, and launch them on their mobile device.\n\n###\n\n","completion":" ![Browse and launch apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/96ea5a3a-7329-4df2-b762-b2e64fc7707f.webp) END"}
{"prompt":"![Browse and launch apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/96ea5a3a-7329-4df2-b762-b2e64fc7707f.webp)\n\n###\n\n","completion":" You can share Retool Mobile app links with users to launch them automatically in the Retool Mobile app. If a user doesn't have the app installed, they are automatically routed to the Apple App Store or Google Play. END"}
{"prompt":"On the web\n\n###\n\n","completion":" You can also launch Retool Mobile apps as progressive web apps (PWA). This makes it possible to use Retool Mobile apps on a wide range of devices that are unable to use the Retool Mobile app for iOS and Android (e.g., Amazon Fire tablets). END"}
{"prompt":"You can also launch Retool Mobile apps as progressive web apps (PWA). This makes it possible to use Retool Mobile apps on a wide range of devices that are unable to use the Retool Mobile app for iOS and Android (e.g., Amazon Fire tablets).\n\n###\n\n","completion":" ![Viewer link](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/bd06bd16-4fbe-441e-9c1b-f908e142f605.webp) END"}
{"prompt":"![Viewer link](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/bd06bd16-4fbe-441e-9c1b-f908e142f605.webp)\n\n###\n\n","completion":" Retool Mobile apps viewed on the web include a QR code that can open the app directly in Retool Mobile. END"}
{"prompt":"Functionality considerations\n\n###\n\n","completion":" Some functionality supported by Retool is not available in Retool Mobile due to restrictions or limitations when apps run natively. END"}
{"prompt":"General limitations\n\n###\n\n","completion":" Certain functionality supported by desktop Retool web apps are not available in Retool Mobile. As you build Retool Mobile apps, keep these considerations in mind to ensure a consistent and seamless experience. END"}
{"prompt":"Certain functionality supported by desktop Retool web apps are not available in Retool Mobile. As you build Retool Mobile apps, keep these considerations in mind to ensure a consistent and seamless experience.\n\n###\n\n","completion":" In addition, certain versions of Android: END"}
{"prompt":"JavaScript limitations\n\n###\n\n","completion":" Certain JavaScript features are unavailable. This includes: END"}
{"prompt":"Certain JavaScript features are unavailable. This includes:\n\n###\n\n","completion":" Interactions using the web console are also unavailable in Retool Mobile. This includes `console.log()` or running commands using the **Console** tab of [Debug Tools](\/docs\/debug-tools). Instead, you can use components to display output by setting their values (e.g., Text Area) or **Run JS Code** JavaScript queries to perform certain commands directly in the App editor. END"}
{"prompt":"Testing and debugging\n\n###\n\n","completion":" You can use Retool's [Debug Tools](\/docs\/debug-tools) to explore your Retool Mobile app, review errors, and debug issues during development. You can also use the Model browser in the left panel of the App editor to explore all component and query properties. END"}
{"prompt":"You can use Retool's [Debug Tools](\/docs\/debug-tools) to explore your Retool Mobile app, review errors, and debug issues during development. You can also use the Model browser in the left panel of the App editor to explore all component and query properties.\n\n###\n\n","completion":" ![Debug Tools](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/5140b2aa-b8fb-40a9-bbde-79b77b117e90.webp) END"}
{"prompt":"![Debug Tools](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/5140b2aa-b8fb-40a9-bbde-79b77b117e90.webp)\n\n###\n\n","completion":" Retool Mobile does not support interactions using the web console. This includes `console.log()` or running JavaScript using the **Console** tab of Debug Tools. Instead, you can use components to display output by setting their values (e.g., Text Area) or **Run JS Code** JavaScript queries to perform certain commands directly in the App editor. END"}
{"prompt":"Retool Mobile does not support interactions using the web console. This includes `console.log()` or running JavaScript using the **Console** tab of Debug Tools. Instead, you can use components to display output by setting their values (e.g., Text Area) or **Run JS Code** JavaScript queries to perform certain commands directly in the App editor.\n\n###\n\n","completion":" ![Output the current version of the app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d639cb09-82e4-48c0-96ba-a96dc2a6f7a3.webp) END"}
{"prompt":"Compare Retool Mobile with Retool on the web\n\n###\n\n","completion":" You build Retool Mobile apps using the same tools and workflows to build web apps on Retool. As you consider using Retool Mobile, there are some differences to keep in mind and certain functionality not available in mobile apps. END"}
{"prompt":"title: \"Reuse queries and components\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to reuse groups of components and queries across apps.\"\nhidden: false\n\n###\n\n","completion":" A module is a reusable group of components and queries. You might use a module to reuse common components in multiple apps or split up common functionality into smaller parts. For example, you can use modules to: END"}
{"prompt":"Build a module\n\n###\n\n","completion":" You can create a module from scratch, by cloning a module from an app, or by copying components to a module. Once you've created your module, you can define it further with inputs and outputs. END"}
{"prompt":"Create a module\n\n###\n\n","completion":" To create a module, on your home page, select **Create new > Module** and give it a unique name. You can change the name any time in the App editor. END"}
{"prompt":"To create a module, on your home page, select **Create new > Module** and give it a unique name. You can change the name any time in the App editor.\n\n###\n\n","completion":" ![Create new module](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/25023c1e-bd8a-40f4-9baa-c101d1585670.png) END"}
{"prompt":"![Create new module](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/25023c1e-bd8a-40f4-9baa-c101d1585670.png)\n\n###\n\n","completion":" After creating a module, [assemble components](https:\/\/docs.retool.com\/docs\/assemble-components) using the same methods you would use to build an app. END"}
{"prompt":"Clone an app to a module\n\n###\n\n","completion":" Cloning an app to a module copies the app's components and queries to the new module, leaving the app unchanged. To clone an app from an existing module, click on the **App actions** menu and select **Clone to module**. END"}
{"prompt":"Cloning an app to a module copies the app's components and queries to the new module, leaving the app unchanged. To clone an app from an existing module, click on the **App actions** menu and select **Clone to module**.\n\n###\n\n","completion":" ![Clone app to module](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5494e124-482c-458c-8d0c-bbcf62cacfd7.png) END"}
{"prompt":"Copy components to a module\n\n###\n\n","completion":" To copy components to a module, select the components—`Cmd + Click` (or `Ctrl + Click` on Windows)—you'd like to include and select **Duplicate to module**. END"}
{"prompt":"To copy components to a module, select the components—`Cmd + Click` (or `Ctrl + Click` on Windows)—you'd like to include and select **Duplicate to module**.\n\n###\n\n","completion":" ![Export components to a new module](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e3f91dd2-3722-4732-b41c-edd9120dae5e.png) END"}
{"prompt":"Add inputs\n\n###\n\n","completion":" Inputs are data or queries that can be passed into your modules from apps or other modules. Modules inputs are a separate concept from [component inputs](https:\/\/docs.retool.com\/docs\/assemble-components) and can be either a **data input** or a **query input**. END"}
{"prompt":"Data inputs\n\n###\n\n","completion":" A data input is a property—a string, object, number, or boolean—that apps can pass into your module. END"}
{"prompt":"A data input is a property—a string, object, number, or boolean—that apps can pass into your module.\n\n###\n\n","completion":" To add a data input: END"}
{"prompt":"To add a data input:\n\n###\n\n","completion":" In the following example, `filterType` and `filterOptions` are data inputs used to populate the `Select` component. END"}
{"prompt":"In the following example, `filterType` and `filterOptions` are data inputs used to populate the `Select` component.\n\n###\n\n","completion":" ![Add module data input](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1b1705c1-7db1-4b63-9e5a-8273d434648a.png) END"}
{"prompt":"Query inputs\n\n###\n\n","completion":" Query inputs allow you to pass queries into modules from parent apps. The module can then trigger these queries directly. For example, you might want to run different queries based on the parent app, helping your module's reusability. END"}
{"prompt":"Query inputs allow you to pass queries into modules from parent apps. The module can then trigger these queries directly. For example, you might want to run different queries based on the parent app, helping your module's reusability.\n\n###\n\n","completion":" To add a query input: END"}
{"prompt":"To add a query input:\n\n###\n\n","completion":" Though query inputs are not defined in modules, you can view them in the query editor and add [<<glossary:event handlers>>](\/docs\/event-handlers) to them. END"}
{"prompt":"Though query inputs are not defined in modules, you can view them in the query editor and add [<<glossary:event handlers>>](\/docs\/event-handlers) to them.\n\n###\n\n","completion":" In the following example, `createNewDeal` is a query input. Using `createNewDeal` as a query input allows parent apps to pass their own queries to the module. In the module, the input queries can be used in event handlers and given success and failure trigger queries. END"}
{"prompt":"In the following example, `createNewDeal` is a query input. Using `createNewDeal` as a query input allows parent apps to pass their own queries to the module. In the module, the input queries can be used in event handlers and given success and failure trigger queries.\n\n###\n\n","completion":" ![Add module query input](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/18e4e26b-943e-4acf-9d41-8da3cd2bded2.png) END"}
{"prompt":"![Add module query input](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/18e4e26b-943e-4acf-9d41-8da3cd2bded2.png)\n\n###\n\n","completion":" When the **Create app** button is clicked in the module, the `createNewDeal` query from the parent app is called. END"}
{"prompt":"Trigger module queries from parent apps\n\n###\n\n","completion":" Query inputs are used to trigger queries within a module, not from the parent app defining the query. If you need to trigger a module's query from its parent app, you can use data inputs. END"}
{"prompt":"Query inputs are used to trigger queries within a module, not from the parent app defining the query. If you need to trigger a module's query from its parent app, you can use data inputs.\n\n###\n\n","completion":" To test out this behavior, [download and import the JSON](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8ee48756-c6db-48f7-966f-a9049f3c8d04.json) of an example module using data inputs. END"}
{"prompt":"Test inputs with sample values\n\n###\n\n","completion":" Because module inputs are controlled by the app using a module, to preview your module you may want to pass through test values. When you select the module container, the right panel of the App editor shows a **Test inputs** section. There, you can test your module's behavior given expected values for each of your inputs. END"}
{"prompt":"Because module inputs are controlled by the app using a module, to preview your module you may want to pass through test values. When you select the module container, the right panel of the App editor shows a **Test inputs** section. There, you can test your module's behavior given expected values for each of your inputs.\n\n###\n\n","completion":" ![Module test inputs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f658f1fd-db9b-4057-bd62-1a39452df7c2.png) END"}
{"prompt":"Add outputs\n\n###\n\n","completion":" Outputs are properties that apps using your module can reference. Outputs are the only data within a module exposed to apps using your module. END"}
{"prompt":"Outputs are properties that apps using your module can reference. Outputs are the only data within a module exposed to apps using your module.\n\n###\n\n","completion":" To add an output: END"}
{"prompt":"To add an output:\n\n###\n\n","completion":" ![Add module outputs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f7687de1-517e-4628-94ee-934162c70991.png) END"}
{"prompt":"![Add module outputs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/f7687de1-517e-4628-94ee-934162c70991.png)\n\n###\n\n","completion":" In apps which use your module, you can refer to outputs using the naming convention `{{ moduleName.outputName }}`. In the parent app, you can confirm this value by viewing the module in the **State > Components** section, where you should see the output within the module object. END"}
{"prompt":"Use modules with apps and other modules\n\n###\n\n","completion":" Modules can be used and imported into apps and other modules, exported to JSON, and exported as apps. END"}
{"prompt":"Add modules to apps and other modules\n\n###\n\n","completion":" To add a module to your app or module: END"}
{"prompt":"To add a module to your app or module:\n\n###\n\n","completion":" ![Use module in app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b034a7fc-dd2b-41d0-8b14-f936ac2fcab0.png) END"}
{"prompt":"Import and export modules in JSON\n\n###\n\n","completion":" You can import and export modules using JSON the same way you would [import and export an app](https:\/\/docs.retool.com\/docs\/import-export-apps). END"}
{"prompt":"You can import and export modules using JSON the same way you would [import and export an app](https:\/\/docs.retool.com\/docs\/import-export-apps).\n\n###\n\n","completion":" Importing a module from an existing app or module replaces the app with the imported module. To import a module into an existing app or module, go to the **App actions** menu and select **Import app from JSON**. END"}
{"prompt":"Importing a module from an existing app or module replaces the app with the imported module. To import a module into an existing app or module, go to the **App actions** menu and select **Import app from JSON**.\n\n###\n\n","completion":" You can also import a module from your home page by selecting **Create new > From JSON**. END"}
{"prompt":"Module sizing\n\n###\n\n","completion":" You can set default dimensions of your module by resizing the blue container in the App editor. Components within this container automatically resize the same as they [resize in apps](https:\/\/docs.retool.com\/docs\/app-editor#resize-components), including dynamically based on their contents using the **Hug Contents** option in the **Inspect** tab. END"}
{"prompt":"Module permissions\n\n###\n\n","completion":" Users who can view an app can view any modules used in that app. Users must have write access to a module to edit it, even if the user has edit access to an app using the module. END"}
{"prompt":"Users who can view an app can view any modules used in that app. Users must have write access to a module to edit it, even if the user has edit access to an app using the module.\n\n###\n\n","completion":" Users who can edit a module can add the module to apps. END"}
{"prompt":"Releases and versions\n\n###\n\n","completion":" Apps always use the latest version of any contained modules. END"}
{"prompt":"Apps always use the latest version of any contained modules.\n\n###\n\n","completion":" To revert a module to a previous state, go to **Module actions > Release and history > History** and select **Revert** next to the state to restore. This updates the module in all apps using the module. END"}
{"prompt":"Connecting to MongoDB\n\n###\n\n","completion":" Retool supports connecting to both managed and self-hosted MongoDB databases, including MongoDB Atlas Clusters and AWS DocumentDB. Retool uses version 4.1 of the MongoDB Node driver. END"}
{"prompt":"Retool supports connecting to both managed and self-hosted MongoDB databases, including MongoDB Atlas Clusters and AWS DocumentDB. Retool uses version 4.1 of the MongoDB Node driver.\n\n###\n\n","completion":" ![Configuring a MongoDB resource in Retool](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fresources%2Fac49af65-e431-4664-b2d6-af64f58a14c3.png) END"}
{"prompt":"Connecting to MongoDB Atlas Clusters\n\n###\n\n","completion":" You'll need to get a connection string for connecting to your cluster in the Atlas UI by going through the cluster connect flow. Note the placeholder database name `myFirstDatabase` in the example below: it needs to be updated to point to a real collection name in your cluster. END"}
{"prompt":"You'll need to get a connection string for connecting to your cluster in the Atlas UI by going through the cluster connect flow. Note the placeholder database name `myFirstDatabase` in the example below: it needs to be updated to point to a real collection name in your cluster.\n\n###\n\n","completion":" ![Connection string highlighted here. You can find it in the connect flow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/09d10cc-Screen_Shot_2021-06-11_at_4.47.51_PM.png) END"}
{"prompt":"![Connection string highlighted here. You can find it in the connect flow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/09d10cc-Screen_Shot_2021-06-11_at_4.47.51_PM.png)\n\n###\n\n","completion":" To connect Retool to the MongoDB cluster above, specify host `cluster0.qch9r.mongodb.net` with the DNS seed list connection format. Your database name is the name of the collection you want to query. Make sure you've provisioned database and network access first! END"}
{"prompt":"Supported methods\n\n###\n\n","completion":" Retool supports the following MongoDB methods: END"}
{"prompt":"Basic Queries\n\n###\n\n","completion":" Write MongoDB queries from Retool's editor interface. Select the method to query your database with, the collection you want to use the query with, and you're good to go. END"}
{"prompt":"Write MongoDB queries from Retool's editor interface. Select the method to query your database with, the collection you want to use the query with, and you're good to go.\n\n###\n\n","completion":" Below is an example of querying a MongoDB database for companies where `name = 'Uber'` END"}
{"prompt":"Below is an example of querying a MongoDB database for companies where `name = 'Uber'`\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/378c1d6-Screen_Shot_2021-06-07_at_4.48.16_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/378c1d6-Screen_Shot_2021-06-07_at_4.48.16_PM.png)\n\n###\n\n","completion":" Here's an example of using MongoDB's Extended JSON Syntax to query based on an `ObjectId` END"}
{"prompt":"Here's an example of using MongoDB's Extended JSON Syntax to query based on an `ObjectId`\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9333654-Screen_Shot_2021-06-07_at_5.01.53_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9333654-Screen_Shot_2021-06-07_at_5.01.53_PM.png)\n\n###\n\n","completion":" See below for some simple equivalencies from the normal MongoDB syntax and the Extended JSON Syntax. In Retool, use the Extended JSON Syntax. END"}
{"prompt":"Dynamic Queries\n\n###\n\n","completion":" Just like any other datasource in Retool, you can also refer to dynamic variables inside your MongoDB Queries. Here's an example of searching a MongoDB database based on a value of a textinput: END"}
{"prompt":"Just like any other datasource in Retool, you can also refer to dynamic variables inside your MongoDB Queries. Here's an example of searching a MongoDB database based on a value of a textinput:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8ea64b7-Screen_Shot_2018-08-30_at_10.44.54_PM.png) END"}
{"prompt":"title: \"Monitor resource utilization\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to monitor the memory and CPU utilization of your Retool instance.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" When self-hosting Retool, you can allocate a specific amount of memory or CPU to the hosts where Retool’s containers are deployed. As more users access Retool apps, Retool’s containers use more of these resources. END"}
{"prompt":"When self-hosting Retool, you can allocate a specific amount of memory or CPU to the hosts where Retool’s containers are deployed. As more users access Retool apps, Retool’s containers use more of these resources.\n\n###\n\n","completion":" Retool logs events that you can use to understand the resource utilization of your Retool deployment. Monitoring these logs helps you ensure that resource utilization stays within the limits of your hosting environment, and proactively scale resources as utilization increases. END"}
{"prompt":"Access logs\n\n###\n\n","completion":" How you access logs depends on your hosting platform. Retool uses several containers to deliver the application and resource utilization logs are output by the `api` container. END"}
{"prompt":"How you access logs depends on your hosting platform. Retool uses several containers to deliver the application and resource utilization logs are output by the `api` container.\n\n###\n\n","completion":" For deployments using a single EC2 host, you can access resource utilization logs using this process: END"}
{"prompt":"For deployments using a single EC2 host, you can access resource utilization logs using this process:\n\n###\n\n","completion":" You can use docker logging drivers to export these logs to various log management services like AWS CloudWatch, Google Cloud Logging, DataDog, Splunk, etc. END"}
{"prompt":"Logs overview\n\n###\n\n","completion":" The Retool `api` container runs several processes that support the Retool application. Each process has a random `pid` value assigned to it. Retool emits a resource utilization event per process every 20 seconds. See below for an example event: END"}
{"prompt":"The Retool `api` container runs several processes that support the Retool application. Each process has a random `pid` value assigned to it. Retool emits a resource utilization event per process every 20 seconds. See below for an example event:\n\n###\n\n","completion":" Each event contains information for a given process and for the container as a whole. You can use the `Memory Stats for container` object to track memory utilization over time. END"}
{"prompt":"Each event contains information for a given process and for the container as a whole. You can use the `Memory Stats for container` object to track memory utilization over time.\n\n###\n\n","completion":" You can also approximate CPU utilization for the container by summing the most recent values of the `CPU Usage % for process` key across all running processes. END"}
{"prompt":"Use cases for logs\n\n###\n\n","completion":" You can accomplish several common use cases by exporting resource utilization events to your log management service, including: END"}
{"prompt":"title: \"Multi-instance deployments\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-concepts\"\nexcerpt: \"Learn about deploying Self-hosted Retool to multiple instances.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In general, Retool recommends running one instance of Self-hosted Retool and using [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) for ease of deployment, management, and upgrades. If you have certain security, compliance, and networking requirements, you can run multiple instances of Retool, each with its own database. END"}
{"prompt":"In general, Retool recommends running one instance of Self-hosted Retool and using [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) for ease of deployment, management, and upgrades. If you have certain security, compliance, and networking requirements, you can run multiple instances of Retool, each with its own database.\n\n###\n\n","completion":" ![Diagram of multi-instance deployment](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4140bd1-multi-instance.png) END"}
{"prompt":"![Diagram of multi-instance deployment](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4140bd1-multi-instance.png)\n\n###\n\n","completion":" Each separate instance of Retool can be treated as an “environment” in the typical programming context. Developers typically build in development and staging, and end-users often access apps only in production. It is also possible to spin up more instances to represent Quality Assurance (QA) or User Acceptance Testing (UAT) environments. END"}
{"prompt":"Each separate instance of Retool can be treated as an “environment” in the typical programming context. Developers typically build in development and staging, and end-users often access apps only in production. It is also possible to spin up more instances to represent Quality Assurance (QA) or User Acceptance Testing (UAT) environments.\n\n###\n\n","completion":" There is no limit to the number of separately deployed instances of Retool you can spin up in your organization with a single license key. Users are also de-duplicated in your organization by email address, so additional instances do not affect your user count. END"}
{"prompt":"There is no limit to the number of separately deployed instances of Retool you can spin up in your organization with a single license key. Users are also de-duplicated in your organization by email address, so additional instances do not affect your user count.\n\n###\n\n","completion":" That said, running multiple instances of Retool creates some additional maintenance and synchronization overhead. While apps can be synchronized using [Source Control](https:\/\/docs.retool.com\/docs\/source-control), org settings, groups, themes, and other instance-specific configuration or data must be manually replicated across separate instances. In addition, upgrades should be coordinated across deployments. END"}
{"prompt":"That said, running multiple instances of Retool creates some additional maintenance and synchronization overhead. While apps can be synchronized using [Source Control](https:\/\/docs.retool.com\/docs\/source-control), org settings, groups, themes, and other instance-specific configuration or data must be manually replicated across separate instances. In addition, upgrades should be coordinated across deployments.\n\n###\n\n","completion":" Refer to [Deploy Retool at scale](https:\/\/docs.retool.com\/docs\/deploy-retool-at-scale) to learn more about deploying multiple instances of Self-hosted Retool. END"}
{"prompt":"title: \"Multi-instance development with Source Control\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-concepts\"\nexcerpt: \"Learn more about using multiple instances of your deployment with Source Control.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" We recommend starting app development in an instance representing a staging or development environment; however, an app can be created and protected from any instance of Retool connected to the remote repository (named `retool_source` in the diagram). This is useful if you have a particular resource that's only accessible from your production environment. END"}
{"prompt":"We recommend starting app development in an instance representing a staging or development environment; however, an app can be created and protected from any instance of Retool connected to the remote repository (named `retool_source` in the diagram). This is useful if you have a particular resource that's only accessible from your production environment.\n\n###\n\n","completion":" We also recommend using one branch instead of a \"Git Flow” branching model. Since you have the fine-grain control to release each protected app independently at the cadence of your choosing, we recommend using a single, protected `main` branch that each instance points to. END"}
{"prompt":"We also recommend using one branch instead of a \"Git Flow” branching model. Since you have the fine-grain control to release each protected app independently at the cadence of your choosing, we recommend using a single, protected `main` branch that each instance points to.\n\n###\n\n","completion":" If batching changes across multiple apps is a requirement, we recommend manually coordinating releases to synchronize updates after apps have the latest versions have synced down. If that is insufficient, you could also point your instances to other integration-like branches such as `staging` and `production` and manually cherry-pick and merge to batch and promote changes. END"}
{"prompt":"If batching changes across multiple apps is a requirement, we recommend manually coordinating releases to synchronize updates after apps have the latest versions have synced down. If that is insufficient, you could also point your instances to other integration-like branches such as `staging` and `production` and manually cherry-pick and merge to batch and promote changes.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/28396aa-Protected_Apps__Git_Sync_1.png) END"}
{"prompt":"title: \"Connect to MySQL\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your MySQL database to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect a [MySQL](https:\/\/www.mysql.com\/) database and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, you can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with the database. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a MySQL resource, you need: END"}
{"prompt":"MySQL authentication\n\n###\n\n","completion":" Retool authenticates with MySQL databases using either a [username and password](#username-and-password), or with [AWS IAM](#aws-iam) credentials. The authentication method you use determines the configuration settings required. END"}
{"prompt":"Username and password\n\n###\n\n","completion":" You can provide a username and password for Retool to authenticate with your MySQL host. It is strongly recommended that you create a username and password for this purpose and not reuse an existing user. This provides more granular control over MySQL users and allows you to control the scope of permissions. END"}
{"prompt":"AWS IAM\n\n###\n\n","completion":" For AWS-hosted MySQL databases, Retool supports [IAM authentication](https:\/\/docs.aws.amazon.com\/IAM\/latest\/UserGuide\/introduction.html) that enables authentication using [access keys](https:\/\/docs.aws.amazon.com\/IAM\/latest\/UserGuide\/id_credentials_access-keys.html). Use the [AWS IAM console](https:\/\/console.aws.amazon.com\/iam) to [create and manage AWS IAM keys](https:\/\/docs.aws.amazon.com\/IAM\/latest\/UserGuide\/id_credentials_access-keys.html#Using_CreateAccessKey). END"}
{"prompt":"SSL connections\n\n###\n\n","completion":" Both authentication methods use SSL by default. If required by your database host, you can provide CA certificate, client key, and client certificate credentials that allow Retool to connect using SSL. END"}
{"prompt":"Both authentication methods use SSL by default. If required by your database host, you can provide CA certificate, client key, and client certificate credentials that allow Retool to connect using SSL.\n\n###\n\n","completion":" Retool automatically configures the necessary SSL credentials and certificates for AWS-hosted databases. END"}
{"prompt":"Allow Retool to access your MySQL host\n\n###\n\n","completion":" If your MySQL database is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"1. Create a new resource\n\n###\n\n","completion":" Sign in to your Retool organization and navigate to the **Resources** tab. Click **Create new**, then select **Resource**.\n![Create a new resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/5f4c5f17-b674-473a-a508-2179863f90ef.webp) END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select **MySQL** to start configuring the resource. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select **MySQL** to start configuring the resource.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/60f58ff5-576c-4688-89d0-381b523d9fbb.webp) END"}
{"prompt":"Authentication\n\n###\n\n","completion":" Retool can connect to a MySQL database using either [user and password](#service-account-authentication), or [AWS IAM](#oauth-authentication) authentication. END"}
{"prompt":"User and password authentication\n\n###\n\n","completion":" Select **User and Password** as the authentication method, then provide the following information. END"}
{"prompt":"Select **User and Password** as the authentication method, then provide the following information.\n\n###\n\n","completion":" ![Configure user and password authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/853d2669-ac4a-4035-b28f-1a4557517d94.webp) END"}
{"prompt":"AWS IAM authentication\n\n###\n\n","completion":" Select **AWS IAM Authentication** as the authentication method, then provide the following information. END"}
{"prompt":"Select **AWS IAM Authentication** as the authentication method, then provide the following information.\n\n###\n\n","completion":" ![Configure AWS IAM authentication](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/e80a328a-3926-4853-bf59-b8cfd7df368b.webp) END"}
{"prompt":"SSL connections\n\n###\n\n","completion":" Retool supports SSL connections for both authentication methods using custom certificate credentials. If you're using username and password authentication, check **Connect using SSL** to display additional fields for this information. SSL is required for AWS IAM authentication and cannot be disabled. END"}
{"prompt":"Retool supports SSL connections for both authentication methods using custom certificate credentials. If you're using username and password authentication, check **Connect using SSL** to display additional fields for this information. SSL is required for AWS IAM authentication and cannot be disabled.\n\n###\n\n","completion":" Provide the following information to configure SSL: END"}
{"prompt":"Advanced options\n\n###\n\n","completion":" Retool organization administrators can configure the following settings for MySQL resources. END"}
{"prompt":"Retool organization administrators can configure the following settings for MySQL resources.\n\n###\n\n","completion":" ![Configure resource settings for MySQL](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/a82e588e-9077-4ca2-ada6-aa088669ab4f.webp) END"}
{"prompt":"![Configure resource settings for MySQL](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/a82e588e-9077-4ca2-ada6-aa088669ab4f.webp)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to the MySQL database. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Resource created](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/3adb5169-abc9-434f-af00-244f852f8092.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your MySQL resource is now ready to use. To interact with MySQL data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"title: \"Build app navigation\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to build interfaces for users to navigate your apps and data.\"\nhidden: false\n\n###\n\n","completion":" In addition to the [Sidebar frame](https:\/\/docs.retool.com\/docs\/app-editor#sidebar-frame), you can use Retool's collection of [navigation components](https:\/\/docs.retool.com\/reference\/components-navigation) to help users quickly find the information they need. You can build dropdown menus, step-by-step flows, and tabbed navigation interfaces. You can also create interfaces to paginate through content and data. END"}
{"prompt":"Dropdown menus\n\n###\n\n","completion":" Use the [Navigation](https:\/\/retool.com\/components\/navigation) component to build dropdown menus for your apps. Menu items perform specified actions when clicked, such as triggering queries, opening other Retool apps or web pages, or copying values to the clipboard. END"}
{"prompt":"Use the [Navigation](https:\/\/retool.com\/components\/navigation) component to build dropdown menus for your apps. Menu items perform specified actions when clicked, such as triggering queries, opening other Retool apps or web pages, or copying values to the clipboard.\n\n###\n\n","completion":" ![Dropdown navigation menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/e6d7f199-4f72-447d-b2b0-caa84b4d5b3a.jpg) END"}
{"prompt":"![Dropdown navigation menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/e6d7f199-4f72-447d-b2b0-caa84b4d5b3a.jpg)\n\n###\n\n","completion":" The Navigation component can display a logo which can also perform an action when clicked. END"}
{"prompt":"Configure menu items\n\n###\n\n","completion":" Use the **Menu** section of the **Inspect** tab to configure menu items. You can click on a menu item to configure it using the **Edit menu details** settings. END"}
{"prompt":"Use the **Menu** section of the **Inspect** tab to configure menu items. You can click on a menu item to configure it using the **Edit menu details** settings.\n\n###\n\n","completion":" Drag and drop menu items to reorder them, or click **+ Add new** to create new menu items. Click **•••** to the right of a menu item to delete it. END"}
{"prompt":"Drag and drop menu items to reorder them, or click **+ Add new** to create new menu items. Click **•••** to the right of a menu item to delete it.\n\n###\n\n","completion":" ![Drag menu items into position](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/bc52a983-c49c-4464-8102-60a1a6b44e54.jpg) END"}
{"prompt":"Configure nested menu items\n\n###\n\n","completion":" You can group menu items together as _nested_ dropdown menus. Each _parent_ menu item contains _child_ menu items (submenu items) that appear within the dropdown menu. Dropdown menu items support one level of nesting—child menu items cannot also be parent menu items. END"}
{"prompt":"You can group menu items together as _nested_ dropdown menus. Each _parent_ menu item contains _child_ menu items (submenu items) that appear within the dropdown menu. Dropdown menu items support one level of nesting—child menu items cannot also be parent menu items.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/13a1457b-4373-4eb5-9bcb-2beefd6b2a1c.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/d2bfa48b-1b28-4b7a-aadd-2eb079767228.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/13a1457b-4373-4eb5-9bcb-2beefd6b2a1c.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/d2bfa48b-1b28-4b7a-aadd-2eb079767228.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" To nest a menu item, drag it below and to the right of the menu item you want to nest it under. A blue line appears as you drag menu items around and will indent to the right when nesting. END"}
{"prompt":"To nest a menu item, drag it below and to the right of the menu item you want to nest it under. A blue line appears as you drag menu items around and will indent to the right when nesting.\n\n###\n\n","completion":" Parent menu items include a count of all nested items. END"}
{"prompt":"Perform actions on click\n\n###\n\n","completion":" You configure menu items to perform specific actions when clicked. You can create menus that export data, link to other apps or URLs, copy content to the clipboard, or run queries. END"}
{"prompt":"You configure menu items to perform specific actions when clicked. You can create menus that export data, link to other apps or URLs, copy content to the clipboard, or run queries.\n\n###\n\n","completion":" When configuring menu items to **Open another Retool Page**, you can optionally include [URL query and hash parameters](https:\/\/docs.retool.com\/docs\/url-query-parameters) to pass data to, or configure certain characteristics of, other apps. END"}
{"prompt":"Reuse dropdown menus across multiple apps\n\n###\n\n","completion":" You can reuse the same dropdown menu across other apps by saving it as a [module](https:\/\/docs.retool.com\/docs\/modules). This allows you to create a consistent navigation experience for your organization's apps without recreating it and maintaining multiple copies. END"}
{"prompt":"You can reuse the same dropdown menu across other apps by saving it as a [module](https:\/\/docs.retool.com\/docs\/modules). This allows you to create a consistent navigation experience for your organization's apps without recreating it and maintaining multiple copies.\n\n###\n\n","completion":" You can configure menu items to appear highlighted using the **Highlight** Boolean setting. This is useful to visually highlight a menu item for the current page. A menu item configured to open the current app is highlighted by default. END"}
{"prompt":"You can configure menu items to appear highlighted using the **Highlight** Boolean setting. This is useful to visually highlight a menu item for the current page. A menu item configured to open the current app is highlighted by default.\n\n###\n\n","completion":" ![Highlighting the current menu item](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/500aae42-4091-433e-b1fc-a8265d48d0d1.jpg) END"}
{"prompt":"Stepped navigation\n\n###\n\n","completion":" Use the [Steps](https:\/\/retool.com\/components\/steps) component to create a linear step-by-step flow. You can configure their options manually or dynamically using the [option list](https:\/\/docs.retool.com\/docs\/edit-option-lists) and configure them with event handlers. END"}
{"prompt":"Use the [Steps](https:\/\/retool.com\/components\/steps) component to create a linear step-by-step flow. You can configure their options manually or dynamically using the [option list](https:\/\/docs.retool.com\/docs\/edit-option-lists) and configure them with event handlers.\n\n###\n\n","completion":" ![Edit steps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/0ec47e57-e79b-47e0-a096-4716d88d598b.jpg) END"}
{"prompt":"![Edit steps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/0ec47e57-e79b-47e0-a096-4716d88d598b.jpg)\n\n###\n\n","completion":" You can also [link a Steps component to a Container with multiple views](https:\/\/docs.retool.com\/docs\/containers#link-to-steps-or-tabs) to create a Stepped Container. END"}
{"prompt":"Tabbed navigation\n\n###\n\n","completion":" Use the [Tabs](https:\/\/retool.com\/components\/tabs) component to create a set of tabbed options in your app. You can configure their options manually or dynamically using the [option list](https:\/\/docs.retool.com\/docs\/edit-option-lists) and configure them with event handlers. END"}
{"prompt":"Use the [Tabs](https:\/\/retool.com\/components\/tabs) component to create a set of tabbed options in your app. You can configure their options manually or dynamically using the [option list](https:\/\/docs.retool.com\/docs\/edit-option-lists) and configure them with event handlers.\n\n###\n\n","completion":" ![Tab options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/4585b2cc-03d7-44c8-98f8-63b8ec40a1af.jpg) END"}
{"prompt":"![Tab options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/4585b2cc-03d7-44c8-98f8-63b8ec40a1af.jpg)\n\n###\n\n","completion":" You can also [link a Tabs component to a Container with multiple views](https:\/\/docs.retool.com\/docs\/containers#link-to-steps-or-tabs) to create a Tabbed Container. END"}
{"prompt":"You can also [link a Tabs component to a Container with multiple views](https:\/\/docs.retool.com\/docs\/containers#link-to-steps-or-tabs) to create a Tabbed Container.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/fe8c4c3c-65e4-4100-9f41-10fbdccc6a3f.png\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/container\/7a392bbd-c26b-4895-a004-e0acaf9fb982.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Paginated navigation\n\n###\n\n","completion":" Pagination allows you to present large amounts of data in a more manageable way for your users. Retool's [Pagination](https:\/\/retool.com\/components\/pagination) component presents a sequential set of numbered links to navigate through pages of data. This enables you to paginate almost any kind of information. END"}
{"prompt":"Pagination allows you to present large amounts of data in a more manageable way for your users. Retool's [Pagination](https:\/\/retool.com\/components\/pagination) component presents a sequential set of numbered links to navigate through pages of data. This enables you to paginate almost any kind of information.\n\n###\n\n","completion":" The Pagination component uses a default page and range, along with event handlers to perform actions when a page is clicked. The component adjusts the number of pages shown to fit its width and automatically updates as the selected page value increases. END"}
{"prompt":"Pagination example\n\n###\n\n","completion":" The following example uses the [List View](https:\/\/retool.com\/components\/list-view) to display a custom-built list view of users with the [Avatar](https:\/\/retool.com\/components\/avatar) component. The list displays information about three users at a time and uses the Pagination component to navigate. END"}
{"prompt":"The following example uses the [List View](https:\/\/retool.com\/components\/list-view) to display a custom-built list view of users with the [Avatar](https:\/\/retool.com\/components\/avatar) component. The list displays information about three users at a time and uses the Pagination component to navigate.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/ef51da04-f4b9-41bf-89e6-df5a08048b80.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/3554611c-573f-456f-ba25-eeedb0208331.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/ef51da04-f4b9-41bf-89e6-df5a08048b80.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/3554611c-573f-456f-ba25-eeedb0208331.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" The `getUsers` query retrieves a list of user information from the `onboarding_db` resource: END"}
{"prompt":"The `getUsers` query retrieves a list of user information from the `onboarding_db` resource:\n\n###\n\n","completion":" The Pagination component’s **Page count** is set to `{{ (Math.ceil((getUsers.data.id.length)\/3)) }}`. This calculates how many pages there are and rounds up if the last page contains less than three users. END"}
{"prompt":"The Pagination component’s **Page count** is set to `{{ (Math.ceil((getUsers.data.id.length)\/3)) }}`. This calculates how many pages there are and rounds up if the last page contains less than three users.\n\n###\n\n","completion":" The Avatar component uses the Pagination component's selected value, `pagination1.value`, when specifying the index to reference. END"}
{"prompt":"The Avatar component uses the Pagination component's selected value, `pagination1.value`, when specifying the index to reference.\n\n###\n\n","completion":" Fallback text: END"}
{"prompt":"Fallback text:\n\n###\n\n","completion":" Label: END"}
{"prompt":"Label:\n\n###\n\n","completion":" Caption: END"}
{"prompt":"Caption:\n\n###\n\n","completion":" Indexes are zero-based. Since the Pagination component starting value is `1`, `pagination1.value - 1` accounts for the difference. END"}
{"prompt":"Indexes are zero-based. Since the Pagination component starting value is `1`, `pagination1.value - 1` accounts for the difference.\n\n###\n\n","completion":" Finally, this number is multiplied by the number of _instances_ (rows) that the List View component is configured to display (`3`). As a result, the list displays the first three users on page 1, the next three users on page 2, and so on. END"}
{"prompt":"Finally, this number is multiplied by the number of _instances_ (rows) that the List View component is configured to display (`3`). As a result, the list displays the first three users on page 1, the next three users on page 2, and so on.\n\n###\n\n","completion":" ![Configuring the Avatar component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/navigation\/b192c865-43b6-4cb7-a020-226fb885f6a3.jpg) END"}
{"prompt":"title: \"Deployment requirements\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-concepts\"\nexcerpt: \"Learn about network and storage requirements for Self-hosted Retool.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Self-hosted Retool can be deployed to a wide range of platforms. Before deploying, you must ensure that the deployment will have sufficient resources and access. END"}
{"prompt":"Resource requirements\n\n###\n\n","completion":" Resource requirements can vary depending on your usage. END"}
{"prompt":"Self-hosted deployments with Retool Workflows\n\n###\n\n","completion":" If your deployment contains [Retool Workflows](http:\/\/retool.com\/products\/workflows), you may need additional resourcing. We recommend bumping up the cluster memory to at least `12` GiB of memory and `4` vCPUs. END"}
{"prompt":"Network requirements\n\n###\n\n","completion":" [Retool Self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) organizations must ensure that their deployments allow access to Retool's IP addresses or domains. If you make use of outbound firewall rules, include the following IP addresses or domains in its <<glossary:allowlist>>. These allow your deployment to connect to Retool's license check, user authentication, and usage reporting services. END"}
{"prompt":"Test the connection\n\n###\n\n","completion":" You can test your changes within Retool to make sure your deployment can reach the new IP addresses: END"}
{"prompt":"You can test your changes within Retool to make sure your deployment can reach the new IP addresses:\n\n###\n\n","completion":" ![Query to test the connection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e68dcac7-d250-466e-aaf5-ec44fd64c990.webp) END"}
{"prompt":"HTTP proxy connections\n\n###\n\n","completion":" Retool supports connections to the internet through a HTTP proxy. Add `HTTP_PROXY=http:\/\/example.com:8080` to your deployment's `docker.env` file with the required URL and port number. END"}
{"prompt":"License checks\n\n###\n\n","completion":" Retool uses HTTP to connect to `licensing.tryretool.com` on port `443` to verify your license. License checks are made at least once a day. END"}
{"prompt":"Inviting users\n\n###\n\n","completion":" Retool connects to `invites.tryretool.com` and `email-service.retool.com` on port `443` when inviting users. Retool verifies the users are authorized under your current billing plan, and then sends an invite to their email address. END"}
{"prompt":"Usage reporting\n\n###\n\n","completion":" Retool sends application usage information to `p.tryretool.com` on port `443`, which is used to inform product decisions. Some examples include: END"}
{"prompt":"Retool sends application usage information to `p.tryretool.com` on port `443`, which is used to inform product decisions. Some examples include:\n\n###\n\n","completion":" Events are also sent with the hostname, public IP address, browser user-agent string, and the user's email address. END"}
{"prompt":"Integrate Retool and OneSignal\n\n###\n\n","completion":" Use OneSignal for customer engagement powering mobile + web push, email, SMS & in-app messages END"}
{"prompt":"Use OneSignal for customer engagement powering mobile + web push, email, SMS & in-app messages\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c0d4cb7-unnamed.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c0d4cb7-unnamed.png)\n\n###\n\n","completion":" Connect your Retool resource to OneSignal by entering a name for the resource, your User Auth Key and\/or a REST API Key. You can fine your User Auth Key [here](https:\/\/documentation.onesignal.com\/docs\/accounts-and-keys#user-auth-key). You can find you REST API Key [here](https:\/\/documentation.onesignal.com\/docs\/accounts-and-keys#rest-api-key). Save the resource and that's it! You can now query the OneSignal API in Retool! END"}
{"prompt":"Querying the OneSignal API\n\n###\n\n","completion":" After setting up a OneSignal integration with Retool, a new option for a OneSignal query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the OneSignal api spec to send and retrieve data from OneSignal. You can learn about OneSignal use cases and best practices [here](https:\/\/documentation.onesignal.com\/docs\/use-cases-best-practices). END"}
{"prompt":"After setting up a OneSignal integration with Retool, a new option for a OneSignal query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use any of the end points in the OneSignal api spec to send and retrieve data from OneSignal. You can learn about OneSignal use cases and best practices [here](https:\/\/documentation.onesignal.com\/docs\/use-cases-best-practices).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5247890-Screen_Shot_2021-04-05_at_9.42.19_PM.png) END"}
{"prompt":"title: \"Connect to OpenAI\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect OpenAI to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [OpenAI](https:\/\/openai.com\/) and make it available as a  [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with OpenAI data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a OpenAI resource, you need: END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **OpenAI** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **OpenAI** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/afa47fd8-5e0d-4eff-9802-a9c23af4a231.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the OpenAI resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/386f8f00-1ccf-4f44-90d1-d225612db21b.png) END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/856a6171-72ac-4118-911f-43130ce7ccbc.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your OpenAI resource is now ready to use. To interact with OpenAI data, select the resource in the query editor. You can specify the API endpoint to use when writing a query. END"}
{"prompt":"Adding your OpenAPI server as a resource\n\n###\n\n","completion":" Create a new resource in Retool and select \"OpenAPI\" as the _type_. END"}
{"prompt":"Create a new resource in Retool and select \"OpenAPI\" as the _type_.\n\n###\n\n","completion":" Enter a name for the resource and the url for the api spec in the \"Specification URL\" field. Depending on how authentication is set up for your API, you may need to enter URL parameters or headers, or set the method via the \"Authentication\" dropdown. END"}
{"prompt":"Enter a name for the resource and the url for the api spec in the \"Specification URL\" field. Depending on how authentication is set up for your API, you may need to enter URL parameters or headers, or set the method via the \"Authentication\" dropdown.\n\n###\n\n","completion":" See [here](https:\/\/docs.retool.com\/docs\/apis#section-api-authentication) for more details on authentication. END"}
{"prompt":"See [here](https:\/\/docs.retool.com\/docs\/apis#section-api-authentication) for more details on authentication.\n\n###\n\n","completion":" **Resources** > **Add** > **OpenAPI** END"}
{"prompt":"**Resources** > **Add** > **OpenAPI**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9308788-Screen_Shot_2021-06-30_at_10.42.13_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9308788-Screen_Shot_2021-06-30_at_10.42.13_AM.png)\n\n###\n\n","completion":" Once you have entered your spec URL you can click \"Test Connection\" to validate that the spec can be reached and parsed by Retool's API server. The spec will also need to be reachable from your browser when used to build queries for apps. END"}
{"prompt":"Once you have entered your spec URL you can click \"Test Connection\" to validate that the spec can be reached and parsed by Retool's API server. The spec will also need to be reachable from your browser when used to build queries for apps.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5cd9728-Screen_Shot_2021-06-30_at_6.07.58_PM.png) END"}
{"prompt":"2. OpenAPI Queries\n\n###\n\n","completion":" You can now select your newly-created OpenAPI resource from the _Resource_ dropdown when creating queries in your Retool apps. END"}
{"prompt":"Endpoints\n\n###\n\n","completion":" The OpenAPI spec will define all the available endpoints. You can select the endpoint you'd like to call from the dropdown. Documentation will be pulled from the spec and displayed in the query editor. END"}
{"prompt":"The OpenAPI spec will define all the available endpoints. You can select the endpoint you'd like to call from the dropdown. Documentation will be pulled from the spec and displayed in the query editor.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f3c563c-Screen_Shot_2021-06-30_at_6.09.40_PM.png) END"}
{"prompt":"Query Parameters and Variables\n\n###\n\n","completion":" For each endpoint, Retool's query editor will parse the spec and display inputs based on the request parameters that are listed. For example, if the parameter is listed as an array of enums the query editor will display a multi-select UI. END"}
{"prompt":"For each endpoint, Retool's query editor will parse the spec and display inputs based on the request parameters that are listed. For example, if the parameter is listed as an array of enums the query editor will display a multi-select UI.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/424289b-Screen_Shot_2021-06-30_at_6.09.57_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/424289b-Screen_Shot_2021-06-30_at_6.09.57_PM.png)\n\n###\n\n","completion":" Objects in the request parameters are expanded to have the appropriate keys and arrays of objects can be built in the editor. END"}
{"prompt":"Objects in the request parameters are expanded to have the appropriate keys and arrays of objects can be built in the editor.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ca81240-Screen_Shot_2021-06-30_at_9.18.17_PM.png) END"}
{"prompt":"Dynamic parameters in an OpenAPI query\n\n###\n\n","completion":" In the cases where you want to use JavaScript in the query body and reference other inputs, you can switch from the standard input UI to a dynamic one with the \"fx\" button and return the appropriate JSON for that endpoint or object. END"}
{"prompt":"In the cases where you want to use JavaScript in the query body and reference other inputs, you can switch from the standard input UI to a dynamic one with the \"fx\" button and return the appropriate JSON for that endpoint or object.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/92da0a1-Screen_Shot_2021-06-30_at_6.15.28_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/92da0a1-Screen_Shot_2021-06-30_at_6.15.28_PM.png)\n\n###\n\n","completion":" You can display the results of OpenAPI queries as with any other query in Retool. END"}
{"prompt":"You can display the results of OpenAPI queries as with any other query in Retool.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/02cad12-Screen_Shot_2021-06-30_at_6.31.26_PM.png) END"}
{"prompt":"Templates using OpenAPI\n\n###\n\n","completion":" You can explore a number of templates that use OpenAPI in the Retool product. END"}
{"prompt":"title: \"Optimize queries with server-side pagination\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to implement server-side pagination of data.\"\nhidden: true\n\n###\n\n","completion":" When building apps using large data sets, it's important to limit how much data your queries return. Returning large sets of data at once can affect performance in your apps, especially when joining multiple tables in complex queries. END"}
{"prompt":"When building apps using large data sets, it's important to limit how much data your queries return. Returning large sets of data at once can affect performance in your apps, especially when joining multiple tables in complex queries.\n\n###\n\n","completion":" _Server-side pagination_ is a best practice to optimize queries by returning only the results necessary to populate a given view. When new data is needed to populate the view, the query is triggered again and the server retrieves the next set of results. END"}
{"prompt":"_Server-side pagination_ is a best practice to optimize queries by returning only the results necessary to populate a given view. When new data is needed to populate the view, the query is triggered again and the server retrieves the next set of results.\n\n###\n\n","completion":" The demo app shows examples of server-side pagination using [List View](https:\/\/retool.com\/components\/list-view), [Table](https:\/\/retool.com\/components\/table), and [Pagination](https:\/\/retool.com\/components\/pagination) components. END"}
{"prompt":"The demo app shows examples of server-side pagination using [List View](https:\/\/retool.com\/components\/list-view), [Table](https:\/\/retool.com\/components\/table), and [Pagination](https:\/\/retool.com\/components\/pagination) components.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdemos%2Fff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/4601378e-73af-4d58-bda7-4a943dc40ba3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Write queries that use server-side pagination\n\n###\n\n","completion":" Most databases and APIs support server-side pagination but can vary on how it is supported. Retool enables you to make use of commonly used patterns or parameters like _limits_, _offsets_, and _cursors_. Check your data source to determine how it best enables server-side pagination. END"}
{"prompt":"SQL queries\n\n###\n\n","completion":" In SQL, you can implement server-size pagination by adding a **limit** and **offset** to your query. **Limit** tells the query to only return the given number of rows, and **offset** indicates the amount of rows to skip before returning rows. END"}
{"prompt":"In SQL, you can implement server-size pagination by adding a **limit** and **offset** to your query. **Limit** tells the query to only return the given number of rows, and **offset** indicates the amount of rows to skip before returning rows.\n\n###\n\n","completion":" For example, the following uses the `table1` page size (i.e., rows currently displayed) to limit the number of rows returned and the table's built-in `paginationOffset` as the offset. END"}
{"prompt":"API requests\n\n###\n\n","completion":" API requests often accept parameters to specify a subset of data to return. The following demo app shows server-side pagination with the [Pagination](https:\/\/retool.com\/components\/pagination) and [List View](https:\/\/retool.com\/components\/list-view) components and uses **\\_limit** and **\\_page** REST API parameters. END"}
{"prompt":"API requests often accept parameters to specify a subset of data to return. The following demo app shows server-side pagination with the [Pagination](https:\/\/retool.com\/components\/pagination) and [List View](https:\/\/retool.com\/components\/list-view) components and uses **\\_limit** and **\\_page** REST API parameters.\n\n###\n\n","completion":" In the REST API in the demo, the **\\_limit** parameter determines the number of results to return—in this example, the number of rows in the List View. The **\\_page** parameter determines the page to begin returning results—in this example, the current page in view. END"}
{"prompt":"In the REST API in the demo, the **\\_limit** parameter determines the number of results to return—in this example, the number of rows in the List View. The **\\_page** parameter determines the page to begin returning results—in this example, the current page in view.\n\n###\n\n","completion":" Some APIs use _cursor-based pagination_, which uses an identifier (a cursor) in a data set to segment records before or after the cursor. In the API request, you specify a given cursor and use the result set to determine which cursor to use in the next query. END"}
{"prompt":"Query to retrieve total row counts\n\n###\n\n","completion":" With client-side pagination, the client can access an entire data set at once and use its count to determine how many pages a view requires. With server-side pagination, only a subset of data is accessible at once, so you'll need another query to retrieve the total number of rows in your data set. Depending on your app, you might use this query directly or as part of a calculation to determine how many pages your view needs. END"}
{"prompt":"With client-side pagination, the client can access an entire data set at once and use its count to determine how many pages a view requires. With server-side pagination, only a subset of data is accessible at once, so you'll need another query to retrieve the total number of rows in your data set. Depending on your app, you might use this query directly or as part of a calculation to determine how many pages your view needs.\n\n###\n\n","completion":" For example, to determine a **Pagination** component's **Page count**, divide the total row count by the number of items in a single view. END"}
{"prompt":"For example, to determine a **Pagination** component's **Page count**, divide the total row count by the number of items in a single view.\n\n###\n\n","completion":" Be sure any filters used in your pagination query are also used in the total row count query, so each returns the same number of rows. END"}
{"prompt":"Server-side pagination with the Table component\n\n###\n\n","completion":" The [Table component](https:\/\/retool.com\/components\/Table) has built-in support for server-side pagination. In the **Inspect** tab under the **Interaction** section, set the **Overflow** type to **Pagination**, then select the box next to **Enable server side pagination**. You can then choose to paginate using **Limit offset based**, **Cursor based**, or **GraphQL Relay cursor** based pagination types. END"}
{"prompt":"The [Table component](https:\/\/retool.com\/components\/Table) has built-in support for server-side pagination. In the **Inspect** tab under the **Interaction** section, set the **Overflow** type to **Pagination**, then select the box next to **Enable server side pagination**. You can then choose to paginate using **Limit offset based**, **Cursor based**, or **GraphQL Relay cursor** based pagination types.\n\n###\n\n","completion":" Each server-side pagination type requires the **Total row count** field. END"}
{"prompt":"Limit and offset\n\n###\n\n","completion":" Table includes the following properties to support limit offset-based pagination. END"}
{"prompt":"Table includes the following properties to support limit offset-based pagination.\n\n###\n\n","completion":" You can use these properties in the **limit** and **offset** clauses of your queries. END"}
{"prompt":"Cursor-based\n\n###\n\n","completion":" Table includes the following properties to support cursor-based pagination. END"}
{"prompt":"Table includes the following properties to support cursor-based pagination.\n\n###\n\n","completion":" Use these properties to dynamically update API requests with the correct cursor and limit. For example, a request to the Stripe API might use `afterCursor` and `pageSize` as parameters for the **limit** and **starting_after** fields. END"}
{"prompt":"Use these properties to dynamically update API requests with the correct cursor and limit. For example, a request to the Stripe API might use `afterCursor` and `pageSize` as parameters for the **limit** and **starting_after** fields.\n\n###\n\n","completion":" For a Table showing five rows per page, with `cus_4QFOF3xrvBT2nU` as the ID of the last customer on the current page, the request might evaluate to: END"}
{"prompt":"For a Table showing five rows per page, with `cus_4QFOF3xrvBT2nU` as the ID of the last customer on the current page, the request might evaluate to:\n\n###\n\n","completion":" Use the updated table data to specify the values for the **Previous cursor**, **Next cursor**, and **Has next page** fields in **Inspect > Pagination**. For example, using the Stripe API, **Next cursor** is the ID of the last customer in the table. END"}
{"prompt":"GraphQL Relay cursor\n\n###\n\n","completion":" Retool supports cursor-based pagination using [Relay's GraphQL server specification](https:\/\/relay.dev\/docs\/guides\/graphql-server-specification\/). For more information, see the [Relay GraphQL Cursor Connections](https:\/\/relay.dev\/graphql\/connections.htm) documentation. END"}
{"prompt":"Retool supports cursor-based pagination using [Relay's GraphQL server specification](https:\/\/relay.dev\/docs\/guides\/graphql-server-specification\/). For more information, see the [Relay GraphQL Cursor Connections](https:\/\/relay.dev\/graphql\/connections.htm) documentation.\n\n###\n\n","completion":" GraphQL queries accept the `first`, `last`, `after`, and `before` arguments to identify the data to retrieve. You can determine whether to include `first` or `last` parameters by checking the table's `afterCursor` property. END"}
{"prompt":"GraphQL queries accept the `first`, `last`, `after`, and `before` arguments to identify the data to retrieve. You can determine whether to include `first` or `last` parameters by checking the table's `afterCursor` property.\n\n###\n\n","completion":" To specify values for **Previous cursor** and **Next cursor**, use the `cursor` field from the API response. To specify a value for **Has next page**, use the `pageInfo.hasNextPage` field from the API response. END"}
{"prompt":"To specify values for **Previous cursor** and **Next cursor**, use the `cursor` field from the API response. To specify a value for **Has next page**, use the `pageInfo.hasNextPage` field from the API response.\n\n###\n\n","completion":" ![GraphQL query with cursor pagination](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/734036905b5f49e029f4e18aaf2a4f7b-1800.webp) END"}
{"prompt":"1. Get Oracle Database Details & Whitelist Retool IP Address\n\n###\n\n","completion":" You can get your database connection details from whoever set up the database. You'll also need to get them to [whitelist the Retool IP address](https:\/\/docs.retool.com\/docs\/connect-database-resource#connecting-your-database). END"}
{"prompt":"2. Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"Oracle DB\" as the _type_. END"}
{"prompt":"Create a new resource in Retool, and select \"Oracle DB\" as the _type_.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a7dce42-oracle-create-resource.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a7dce42-oracle-create-resource.png)\n\n###\n\n","completion":" Enter your database connection details. END"}
{"prompt":"Enter your database connection details.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/45654bc-oracle-edit-details.png) END"}
{"prompt":"3. Create Queries\n\n###\n\n","completion":" You can now select your newly-created Oracle DB resource from the _Select Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes). END"}
{"prompt":"You can now select your newly-created Oracle DB resource from the _Select Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/84a256a-oracle-query-editor.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/84a256a-oracle-query-editor.png)\n\n###\n\n","completion":" You can display the results of Oracle DB queries as with any other query in Retool: END"}
{"prompt":"You can display the results of Oracle DB queries as with any other query in Retool:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/700319a-oracle-display-results.png) END"}
{"prompt":"title: \"Org and user management overview\"\ncategorySlug: \"org-and-user-management\"\nexcerpt: \"Onboard users, control access, and configure sign-in options.\"\nhidden: false\n\n###\n\n","completion":" Granularly control what users can access which apps and which resources. And after they use the apps, query what they did via the audit logs. END"}
{"prompt":"Get started\n\n###\n\n","completion":" Learn how to invite a new user, then start managing your organization. END"}
{"prompt":"Learn how to invite a new user, then start managing your organization.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(66.66666666666666% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/VUkTKMABERwigcvRkVb0?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Invite users\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(66.66666666666666% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/VUkTKMABERwigcvRkVb0?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Invite users\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<style>\\n  \\nhr.landing-divider {\\nmargin: 60px 0;\\nborder-width: 0;\\n}\\n  \\n   section.get-started {\\n display: flex;\\n      margin-bottom: 25px;\\n }\\n  \\n   section.get-started div.get-started-description {\\n width: 50%;\\n flex-shrink: 0;\\n flex-direction: column;\\n }\\n  \\n   section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n }\\n\\n   section.two-column ul.ctas {\\n grid-template-columns: repeat(2,1fr);\\n }\\n\\n section.three-column ul.ctas {\\n grid-template-columns: repeat(3,1fr);\\n }\\n\\n   section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n border: 1px solid rgb(240, 241, 255);\\n background: #fbfbfb;\\n border-radius: 5px;\\n transition: background 200ms ease 0s, color 200ms ease 0s, box-shadow 200ms ease 0s, border 200ms\\n }\\n\\n section ul.ctas li a {\\n padding: 10px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transform 400ms ease 0s;\\n }\\n\\n section ul.ctas li:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n border: 1px solid rgb(209, 214, 255);\\n }\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight,600);\\n color: rgb(104, 117, 217);\\n }\\n \\n\\n section.get-started div.get-started-image {\\n width: 100%;\\n margin-left: 20px;\\n }\\n \\n section.get-started .get-started-image img {\\n border-radius: 6px;\\n }\\n\\n\\n\\n\\n @media only screen and (max-width:1029px) {\\n\\n section.two-column ul.ctas, section.three-column ul.ctas {\\n grid-template-columns: repeat(1,1fr) !important;\\n }\\n\\n section.get-started {\\n flex-direction: column-reverse;\\n }\\n\\n section.get-started div.get-started-description {\\n width: 100%;\\n }\\n\\n section.get-started div.get-started-image, div.CodeTabs {\\n margin-left: 0;\\n }\\n \\nsection.get-started div.get-started-components-image {\\n margin-right: 0;\\n margin-top: 20px;\\n }\\n\\n }\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<style>\\n  \\nhr.landing-divider {\\nmargin: 60px 0;\\nborder-width: 0;\\n}\\n  \\n   section.get-started {\\n display: flex;\\n      margin-bottom: 25px;\\n }\\n  \\n   section.get-started div.get-started-description {\\n width: 50%;\\n flex-shrink: 0;\\n flex-direction: column;\\n }\\n  \\n   section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n }\\n\\n   section.two-column ul.ctas {\\n grid-template-columns: repeat(2,1fr);\\n }\\n\\n section.three-column ul.ctas {\\n grid-template-columns: repeat(3,1fr);\\n }\\n\\n   section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n border: 1px solid rgb(240, 241, 255);\\n background: #fbfbfb;\\n border-radius: 5px;\\n transition: background 200ms ease 0s, color 200ms ease 0s, box-shadow 200ms ease 0s, border 200ms\\n }\\n\\n section ul.ctas li a {\\n padding: 10px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transform 400ms ease 0s;\\n }\\n\\n section ul.ctas li:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n border: 1px solid rgb(209, 214, 255);\\n }\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight,600);\\n color: rgb(104, 117, 217);\\n }\\n \\n\\n section.get-started div.get-started-image {\\n width: 100%;\\n margin-left: 20px;\\n }\\n \\n section.get-started .get-started-image img {\\n border-radius: 6px;\\n }\\n\\n\\n\\n\\n @media only screen and (max-width:1029px) {\\n\\n section.two-column ul.ctas, section.three-column ul.ctas {\\n grid-template-columns: repeat(1,1fr) !important;\\n }\\n\\n section.get-started {\\n flex-direction: column-reverse;\\n }\\n\\n section.get-started div.get-started-description {\\n width: 100%;\\n }\\n\\n section.get-started div.get-started-image, div.CodeTabs {\\n margin-left: 0;\\n }\\n \\nsection.get-started div.get-started-components-image {\\n margin-right: 0;\\n margin-top: 20px;\\n }\\n\\n }\\n<\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n    <li>\\n <a\\n href=\\\"inviting-users\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Add users<\/div>\\n <div class=\\\"description\\\">\\nInvite new users to your Retool organization.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"user-permissions\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Configure user permissions<\/div>\\n <div class=\\\"description\\\">\\n Control access to your apps and resources.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a\\n href=\\\"update-billing-information\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Update billing information<\/div>\\n <div class=\\\"description\\\">\\nSearch and execute commands across Retool. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"audit-logs\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">View audit logs<\/div>\\n <div class=\\\"description\\\">\\nView and query user audit logs.\\n <\/div>\\n <\/a>\\n   <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Permissions best practices\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-concepts\"\nexcerpt: \"Learn more about how to effectively manage user permissions in Retool\"\nhidden: false\n\n###\n\n","completion":" As a Retool admin, you can set [User Permissions](https:\/\/docs.retool.com\/docs\/user-permissions) to control which users have access to folders, applications, resources, and more. This document goes over the best practices to manage users effectively. END"}
{"prompt":"Default permission groups\n\n###\n\n","completion":" There are four default permission groups for every org: END"}
{"prompt":"There are four default permission groups for every org:\n\n###\n\n","completion":" The access levels for default permission groups cannot be modified. The following table shows how the **Use**, **Edit**, and **Own** access levels affect applications, resources, and folders. END"}
{"prompt":"The access levels for default permission groups cannot be modified. The following table shows how the **Use**, **Edit**, and **Own** access levels affect applications, resources, and folders.\n\n###\n\n","completion":" In addition to providing these default groups, Retool also allows you to set [Group Admins](https:\/\/docs.retool.com\/docs\/user-permissions#group-admins) for any custom permission group. The Group Admin can manage membership to their group by adding and removing users. END"}
{"prompt":"Separate development and production environments\n\n###\n\n","completion":" You might want to give Retool builders their own development sandbox while controlling end-user access to Retool applications and resources. Separating these environments gives builders the flexibility to test use cases, explore Retool, and build applications in a non-production environment.\nRead more about [using multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) to develop against staging resources. END"}
{"prompt":"Use folders and groups\n\n###\n\n","completion":" It's helpful to use a combination of app folders, resource folders, and permission groups to organize access for Retool developers and end-users. END"}
{"prompt":"Example setup and workflow\n\n###\n\n","completion":" Consider the following example user profiles: END"}
{"prompt":"Single instance setup\n\n###\n\n","completion":" This setup allows Alice to build applications, in isolation from Bob, using resources she can fully access. When she's ready to give the Support team access to an app, she can move it from the **Eng Sandbox** folder to the **Support Apps** folder. END"}
{"prompt":"1. Create public folders\n\n###\n\n","completion":" First, create an application folder and a resource folder, each named `Public`. END"}
{"prompt":"First, create an application folder and a resource folder, each named `Public`.\n\n###\n\n","completion":" Next, in the **All Users** permission group: END"}
{"prompt":"2. Create groups and folders for Support\n\n###\n\n","completion":" On the main **App** page, create an application folder named `Support Apps`. On the main **Resources** page, create a resource folder named `Support`. Bob and his Support team will use Retool applications that live in the `Support Apps` folder. END"}
{"prompt":"On the main **App** page, create an application folder named `Support Apps`. On the main **Resources** page, create a resource folder named `Support`. Bob and his Support team will use Retool applications that live in the `Support Apps` folder.\n\n###\n\n","completion":" Next, in **Settings** > **Permissions**, create a permission group named `Support`. Set the **Use** checkbox on the `Support Apps` application folder and the `Support` resource folders. When **Use** access is set on a folder, all users in the group have **Use** access to new applications and resources in the folder. END"}
{"prompt":"Next, in **Settings** > **Permissions**, create a permission group named `Support`. Set the **Use** checkbox on the `Support Apps` application folder and the `Support` resource folders. When **Use** access is set on a folder, all users in the group have **Use** access to new applications and resources in the folder.\n\n###\n\n","completion":" You can also optionally assign a [group admin](https:\/\/docs.retool.com\/docs\/user-permissions#group-admins) of the `Support` permission group to easily manage membership for the team. END"}
{"prompt":"3. Create groups and folders for Engineering team\n\n###\n\n","completion":" In **Settings** > **Permissions**, create a permission group named `Engineering`.\nRepeat steps 1-4 in the Support team setup with the following modifications: END"}
{"prompt":"Workflow\n\n###\n\n","completion":" ![Single instance setup](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/7e038b0c-53f7-4f8b-b7a1-2fd1a757ab03.png)\nAlice can develop applications in the **Eng Sandbox** using resources from the **Eng** folder, and later move them apps to **Support Apps** for Bob to use. END"}
{"prompt":"![Single instance setup](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/7e038b0c-53f7-4f8b-b7a1-2fd1a757ab03.png)\nAlice can develop applications in the **Eng Sandbox** using resources from the **Eng** folder, and later move them apps to **Support Apps** for Bob to use.\n\n###\n\n","completion":" If Alice needs to make changes to an existing app while it's in active use by the Support team, using a combination of [Releases](https:\/\/docs.retool.com\/docs\/release-management#use-source-control-to-manage-releases) and [Multiple Environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) can make the the development workflow much smoother. This way, Alice can test against staging endpoints, and when ready, publish a Release for end-users. END"}
{"prompt":"Multi-instance setup\n\n###\n\n","completion":" If you're self-hosting Retool across multiple deployments, you may have a dedicated development instance isolated from production. This permissions setup assumes the [recommended workflow](https:\/\/docs.retool.com\/docs\/recommended-workflow#multi-instance) for using Source Control for development and production instances. END"}
{"prompt":"If you're self-hosting Retool across multiple deployments, you may have a dedicated development instance isolated from production. This permissions setup assumes the [recommended workflow](https:\/\/docs.retool.com\/docs\/recommended-workflow#multi-instance) for using Source Control for development and production instances.\n\n###\n\n","completion":" This guide uses the same Alice and Bob user profile as the single-instance guide. Alice and her team want to build applications in a development instance, and Bob needs to use those applications in a production instance. END"}
{"prompt":"Permissions on the development instance\n\n###\n\n","completion":" A separate development instance lets Retool builders the ability to easily and safely create applications against non-production endpoints and resources. END"}
{"prompt":"1. Create public application and resource folders\n\n###\n\n","completion":" First, create an application folder and a resource folder, each named `Public`.\nNext, in the **All Users** permission group: END"}
{"prompt":"2. Create folders and groups for Support team\n\n###\n\n","completion":" For Alice and her team, create an application folder called `Support applications` and a resource called `Support`. END"}
{"prompt":"For Alice and her team, create an application folder called `Support applications` and a resource called `Support`.\n\n###\n\n","completion":" Next, create a permission group called `Support Eng`. Set **Own** access for both the `Support Apps` and `Support` application and resource folders. END"}
{"prompt":"Next, create a permission group called `Support Eng`. Set **Own** access for both the `Support Apps` and `Support` application and resource folders.\n\n###\n\n","completion":" When **Own** access is set on the folders, these permissions apply to all users in the group when applications and resources are added to those folders. Because only the `Support Eng` permission group has **Own** access, only engineers can build applications that live in the `Support` application folder. END"}
{"prompt":"When **Own** access is set on the folders, these permissions apply to all users in the group when applications and resources are added to those folders. Because only the `Support Eng` permission group has **Own** access, only engineers can build applications that live in the `Support` application folder.\n\n###\n\n","completion":" You can also optionally set a [group admin](https:\/\/docs.retool.com\/docs\/user-permissions#group-admins) for the \"Support\" permission group to easily manage membership for the team. END"}
{"prompt":"Permissions on the production instance\n\n###\n\n","completion":" A separate production instance gives Retool end users access to only production-ready applications which hit production endpoints and resources. END"}
{"prompt":"1. Create public application and resource folders\n\n###\n\n","completion":" Create an application and a resource folder, each named `Public`.\nNext, in the **All Users** permission group: END"}
{"prompt":"2. Create folders and groups for Support team\n\n###\n\n","completion":" For Bob and his team, create an application folder name `Support Apps` and a resource folder named `Support`. The Support team will use apps that live in the `Support Apps` folder. END"}
{"prompt":"For Bob and his team, create an application folder name `Support Apps` and a resource folder named `Support`. The Support team will use apps that live in the `Support Apps` folder.\n\n###\n\n","completion":" Next, create a permission group named `Support`. Set **Use** access to the `Support Apps` application folder and the `Support` resource folder. **Use** access is now applied for all users in the group when apps and resources are added to those folders. END"}
{"prompt":"Next, create a permission group named `Support`. Set **Use** access to the `Support Apps` application folder and the `Support` resource folder. **Use** access is now applied for all users in the group when apps and resources are added to those folders.\n\n###\n\n","completion":" You can optionally set a [group admin](https:\/\/docs.retool.com\/docs\/user-permissions#group-admins) for the `Support` permission group to easily manage membership for the team. END"}
{"prompt":"3. (Optional) Create a group for Engineering team\n\n###\n\n","completion":" For Alice and her team, create a permission group for the Engineering team. Give the group **Own** permission for the Support and Public folders. When using [Releases](https:\/\/docs.retool.com\/docs\/release-management#use-source-control-to-manage-releases), this will allow engineers to create new releases per application. END"}
{"prompt":"Workflow\n\n###\n\n","completion":" ![Multi-instance setup](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/03e721e4-af40-453b-905f-b2abd0e4a722.png) END"}
{"prompt":"![Multi-instance setup](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/03e721e4-af40-453b-905f-b2abd0e4a722.png)\n\n###\n\n","completion":" This workflow assumes use of the [recommended workflow](https:\/\/docs.retool.com\/docs\/recommended-workflow#multi-instance) of Source Control. END"}
{"prompt":"This workflow assumes use of the [recommended workflow](https:\/\/docs.retool.com\/docs\/recommended-workflow#multi-instance) of Source Control.\n\n###\n\n","completion":" Alice can now build apps against resources which she has full access to in the developer instance, in isolation from Bob. When she is ready to give the Support team access to an application she protected using Source Control, she can open a Pull Request and merge her changes. Once her changes propagate to the production instance, end-users will see the latest changes reflected in the app in production. END"}
{"prompt":"Alice can now build apps against resources which she has full access to in the developer instance, in isolation from Bob. When she is ready to give the Support team access to an application she protected using Source Control, she can open a Pull Request and merge her changes. Once her changes propagate to the production instance, end-users will see the latest changes reflected in the app in production.\n\n###\n\n","completion":" If Alice needs to make changes to an app while it’s in use by the Support team, she can use [Releases](https:\/\/docs.retool.com\/docs\/release-management#use-source-control-to-manage-releases) to test her changes in staging before publishing a Release to production. END"}
{"prompt":"title: \"Connect to PostgreSQL\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your PostgreSQL database to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to your PostgreSQL database and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with PostgreSQL data. END"}
{"prompt":"You can connect to your PostgreSQL database and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with PostgreSQL data.\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/OuNB3_ZElFk%3Ffeature%3Doembed&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DOuNB3_ZElFk&image=https%3A\/\/i.ytimg.com\/vi\/OuNB3_ZElFk\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?v=OuNB3_ZElFk&feature=youtu.be\",\n\"title\": \"Connecting a Postgres Database to Retool\",\n\"favicon\": \"https:\/\/s.ytimg.com\/yts\/img\/favicon-vfl8qSV2F.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/OuNB3_ZElFk\/hqdefault.jpg\"\n}\n[\/block] END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a PostgreSQL resource, you need: END"}
{"prompt":"PostgreSQL authentication\n\n###\n\n","completion":" Retool authenticates with PostgreSQL databases using either a [username and password](#username-and-password), or with [AWS IAM](#aws-iam) credentials. The authentication method you use determines the configuration settings required. END"}
{"prompt":"Username and password\n\n###\n\n","completion":" You can provide a username and password for Retool to authenticate with your PostgreSQL host. It is strongly recommended that you create a username and password for this purpose and not reuse an existing user. This provides more granular control over PostgreSQL users and allows you to control the scope of permissions. END"}
{"prompt":"AWS IAM\n\n###\n\n","completion":" For AWS-hosted PostgreSQL databases, Retool supports [IAM authentication](https:\/\/docs.aws.amazon.com\/IAM\/latest\/UserGuide\/introduction.html) that enables authentication using [access keys](https:\/\/docs.aws.amazon.com\/IAM\/latest\/UserGuide\/id_credentials_access-keys.html). Use the [AWS IAM console](https:\/\/console.aws.amazon.com\/iam) to [create and manage AWS IAM keys](https:\/\/docs.aws.amazon.com\/IAM\/latest\/UserGuide\/id_credentials_access-keys.html#Using_CreateAccessKey). END"}
{"prompt":"Allow Retool to access the PostgreSQL database\n\n###\n\n","completion":" If your PostgreSQL database is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **PostgreSQL** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **PostgreSQL** resource type.\n\n###\n\n","completion":" ![Select the resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/db5f985e-eb43-43e9-a770-55d50b271fc4.webp) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the PostgreSQL resource. Retool displays the resource name and type in query editors to help users identify them. END"}
{"prompt":"General\n\n###\n\n","completion":" You can also click **Import from connection string** and enter a database connection string to automatically populate these settings. END"}
{"prompt":"You can also click **Import from connection string** and enter a database connection string to automatically populate these settings.\n\n###\n\n","completion":" ![Import from a connection string](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/dca14901-08a0-4c86-b21f-332aad526233.webp) END"}
{"prompt":"Authentication\n\n###\n\n","completion":" Retool can connect to a PostgreSQL database using either [user and password](#service-account-authentication), or [AWS IAM](#oauth-authentication) authentication. END"}
{"prompt":"Provide the following information to configure SSL:\n\n###\n\n","completion":" ![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/1b324400-5f7a-41ae-8536-62784e19d25f.webp) END"}
{"prompt":"![Configure the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/1b324400-5f7a-41ae-8536-62784e19d25f.webp)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to PostgreSQL. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Create resource** to complete the setup. You can then click either **Create app** to immediately start building a Retool app or **Back to resources** to return to the list of resources.\n\n###\n\n","completion":" ![Save the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/74d72d99-c903-4fbd-b00a-0260b682c142.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your PostgreSQL resource is now ready to use. To interact with PostgreSQL data, select the resource in the query editor. You can read data using [SQL queries](https:\/\/docs.retool.com\/docs\/sql-queries), write data using [GUI queries](https:\/\/docs.retool.com\/docs\/sql-writes) (if enabled), and use the [schema browser](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel) to search tables or columns. END"}
{"prompt":"title: \"Preview and share web apps\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to preview and share Retool web apps with users.\"\nhidden: false\n\n###\n\n","completion":" You can preview web apps in view-only mode within the App editor. Once you've completed your app, you can then share it with other users. END"}
{"prompt":"You can preview web apps in view-only mode within the App editor. Once you've completed your app, you can then share it with other users.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(57.31021555763823% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/r8GGc3frCIpnsCFUhEDV?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Preview and share web apps\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Preview a web app\n\n###\n\n","completion":" Click the **Preview** button in the App editor navbar to switch to a view-only version of the app.  If you use [release management](https:\/\/docs.retool.com\/docs\/release-management), you can also preview specific versions of apps. END"}
{"prompt":"Click the **Preview** button in the App editor navbar to switch to a view-only version of the app.  If you use [release management](https:\/\/docs.retool.com\/docs\/release-management), you can also preview specific versions of apps.\n\n###\n\n","completion":" You can also press <span class=\"sck key_Ctrl\">Ctrl<\/span> <span class=\"sck key_Alt\">Alt<\/span> <span class=\"sck key\">Enter<\/span> to toggle between **Preview** and **Editor** mode. END"}
{"prompt":"Share web apps with users\n\n###\n\n","completion":" Click **Share** in the top right to access available sharing options. You can share apps with other editors in your organization or invite new members to join. END"}
{"prompt":"Click **Share** in the top right to access available sharing options. You can share apps with other editors in your organization or invite new members to join.\n\n###\n\n","completion":" You can also share a _viewer link_ that launches your app in user mode, or use the provided `IFRAME` snippet to embed your Retool app in another page. END"}
{"prompt":"title: \"Build a customer management dashboard\"\ncategorySlug: \"legacy\"\nexcerpt: \"Build your first Retool app in minutes.\"\nhidden: true\nmetadata: \n\n###\n\n","completion":" Retool lets you quickly build internal tools with rich GUIs around any sort of database or API. This guide walks you through building a customer and order management application. END"}
{"prompt":"Retool lets you quickly build internal tools with rich GUIs around any sort of database or API. This guide walks you through building a customer and order management application.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/85294160-ebb9-404c-bfea-468a272337eb\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"1. Get user data\n\n###\n\n","completion":" Log in to Retool, then click **Create new > App**. If you don't have an account yet, [sign up](https:\/\/login.retool.com\/auth\/signup) for free. END"}
{"prompt":"Log in to Retool, then click **Create new > App**. If you don't have an account yet, [sign up](https:\/\/login.retool.com\/auth\/signup) for free.\n\n###\n\n","completion":" Retool can interact with almost any API or database, and includes [native integrations](https:\/\/retool.com\/integrations) for many different data sources. Once you configure a [<<glossary:resource>>](https:\/\/docs.retool.com\/docs\/resources) you can start building apps using your data. END"}
{"prompt":"Retool can interact with almost any API or database, and includes [native integrations](https:\/\/retool.com\/integrations) for many different data sources. Once you configure a [<<glossary:resource>>](https:\/\/docs.retool.com\/docs\/resources) you can start building apps using your data.\n\n###\n\n","completion":" [<<glossary:Queries>>](https:\/\/docs.retool.com\/docs\/queries) allow your apps to read and write data. Retool adds a sample query to your app, `query1`, for you to get started. Select the query and change the **Resource** for this query to `onboarding_db`. This is a sample PostgreSQL database that we provide for you to test with. In the query editor, type `select * from users;` and then save and run the query. END"}
{"prompt":"[<<glossary:Queries>>](https:\/\/docs.retool.com\/docs\/queries) allow your apps to read and write data. Retool adds a sample query to your app, `query1`, for you to get started. Select the query and change the **Resource** for this query to `onboarding_db`. This is a sample PostgreSQL database that we provide for you to test with. In the query editor, type `select * from users;` and then save and run the query.\n\n###\n\n","completion":" ![Query to retrieve user data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/704a045f-22c1-440e-a8ca-eff25d763010.png) END"}
{"prompt":"2. Display data in a table\n\n###\n\n","completion":" You assemble apps using [<<glossary:components>>](https:\/\/retool.com\/components). More than 80 components are available in the **Create** tab of the [right panel](https:\/\/docs.retool.com\/docs\/app-editor#right-panel) of the <<glossary:App editor>>. To start, drag a [Table](https:\/\/retool.com\/components\/table) component onto the [<<glossary:canvas>>](https:\/\/docs.retool.com\/docs\/app-editor#canvas). END"}
{"prompt":"You assemble apps using [<<glossary:components>>](https:\/\/retool.com\/components). More than 80 components are available in the **Create** tab of the [right panel](https:\/\/docs.retool.com\/docs\/app-editor#right-panel) of the <<glossary:App editor>>. To start, drag a [Table](https:\/\/retool.com\/components\/table) component onto the [<<glossary:canvas>>](https:\/\/docs.retool.com\/docs\/app-editor#canvas).\n\n###\n\n","completion":" ![Table component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/025df916-654a-4d96-9d95-58bb4d7d8d71.png) END"}
{"prompt":"3. Add search to the app\n\n###\n\n","completion":" You can add a search box to quickly filter the results of a table, making it easier to find what you're looking for. Drag a [Text Input](https:\/\/retool.com\/components\/text-input) component onto the canvas and change its **Label** to `Search users`. Then, update `query1` with the code below, then save and run the query again. END"}
{"prompt":"You can add a search box to quickly filter the results of a table, making it easier to find what you're looking for. Drag a [Text Input](https:\/\/retool.com\/components\/text-input) component onto the canvas and change its **Label** to `Search users`. Then, update `query1` with the code below, then save and run the query again.\n\n###\n\n","completion":" ![Search box](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/bc790e66-2155-4ef5-bcae-165b7ca0fbe3.png) END"}
{"prompt":"![Search box](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/bc790e66-2155-4ef5-bcae-165b7ca0fbe3.png)\n\n###\n\n","completion":" This uses the same base query but adds some filtering based on the text in the search bar and can support wildcards. When you type something in the search bar, the table updates automatically. END"}
{"prompt":"4. Update user data\n\n###\n\n","completion":" User management apps commonly have functionality to control user access. For this example, the app will have buttons to activate or deactivate a selected user. Each button is configured with an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to trigger a query when clicked. END"}
{"prompt":"User management apps commonly have functionality to control user access. For this example, the app will have buttons to activate or deactivate a selected user. Each button is configured with an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to trigger a query when clicked.\n\n###\n\n","completion":" Add two [Button](https:\/\/retool.com\/components\/button) components to the app. For each button, update its **Text** to `Activate user` and `Deactivate user`. You can optionally change their style and colors. END"}
{"prompt":"Add two [Button](https:\/\/retool.com\/components\/button) components to the app. For each button, update its **Text** to `Activate user` and `Deactivate user`. You can optionally change their style and colors.\n\n###\n\n","completion":" With the buttons added, you can now make them functional. Select the **Activate user** button and then: END"}
{"prompt":"With the buttons added, you can now make them functional. Select the **Activate user** button and then:\n\n###\n\n","completion":" ![Adding an event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/96717746-b786-41fd-943b-14aaa61da92a.png) END"}
{"prompt":"![Adding an event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/96717746-b786-41fd-943b-14aaa61da92a.png)\n\n###\n\n","completion":" This creates a query named `button1ClickHandler`. Follow these steps to update the query. END"}
{"prompt":"This creates a query named `button1ClickHandler`. Follow these steps to update the query.\n\n###\n\n","completion":" ![Query that activates the selected user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06761774-2a0b-4126-8746-46d03535d729.png) END"}
{"prompt":"![Query that activates the selected user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06761774-2a0b-4126-8746-46d03535d729.png)\n\n###\n\n","completion":" Repeat these steps for the **Deactivate button** but set `true` to `false` in the key-value pair. You can test these buttons out by selecting a row in the table and clicking the button. After the queries run, the table automatically updates. END"}
{"prompt":"5. View order data\n\n###\n\n","completion":" The table contains a lot of information but it'd be nice to also display order information. You can configure the app so that as you click on rows in the table, order data for that user is displayed. END"}
{"prompt":"The table contains a lot of information but it'd be nice to also display order information. You can configure the app so that as you click on rows in the table, order data for that user is displayed.\n\n###\n\n","completion":" Create a new **Resource query** (named `query4` in this example). Make sure the **Resource** is set to `onboarding_db`, add the following code to the query editor, and then save and run the query. END"}
{"prompt":"Create a new **Resource query** (named `query4` in this example). Make sure the **Resource** is set to `onboarding_db`, add the following code to the query editor, and then save and run the query.\n\n###\n\n","completion":" Order data is contained in a different table within `onboarding_db`. You can use a SQL [JOIN](https:\/\/en.wikipedia.org\/wiki\/Join_(SQL)) clause to combine data from both tables. END"}
{"prompt":"Order data is contained in a different table within `onboarding_db`. You can use a SQL [JOIN](https:\/\/en.wikipedia.org\/wiki\/Join_(SQL)) clause to combine data from both tables.\n\n###\n\n","completion":" Many components present a list of options, such as the dropdown in a [Select](https:\/\/retool.com\/components\/select) component. Retool can automatically generate this [options list](https:\/\/docs.retool.com\/docs\/define-option-lists) by mapping data from a query. Add a [Listbox](https:\/\/retool.com\/components\/listbox) component to the app. Select the **Mapped** option and then select `query4` as the **Data source**. END"}
{"prompt":"Many components present a list of options, such as the dropdown in a [Select](https:\/\/retool.com\/components\/select) component. Retool can automatically generate this [options list](https:\/\/docs.retool.com\/docs\/define-option-lists) by mapping data from a query. Add a [Listbox](https:\/\/retool.com\/components\/listbox) component to the app. Select the **Mapped** option and then select `query4` as the **Data source**.\n\n###\n\n","completion":" Update the mapped options **Label** to `Order #{{ item.id }}`. This will show a readable order number for the item's label. Next, update the mapped options **Caption** to `{{ moment(item.created_at).format('LL') }}`. This will show a formatted date as the item's caption. END"}
{"prompt":"Update the mapped options **Label** to `Order #{{ item.id }}`. This will show a readable order number for the item's label. Next, update the mapped options **Caption** to `{{ moment(item.created_at).format('LL') }}`. This will show a formatted date as the item's caption.\n\n###\n\n","completion":" ![Listbox component with mapped options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/6d0d403f-250f-40ff-a009-476b961c10dd.png) END"}
{"prompt":"![Listbox component with mapped options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/6d0d403f-250f-40ff-a009-476b961c10dd.png)\n\n###\n\n","completion":" Now when you click a row in the table, the list of orders for that user is automatically displayed. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" At this point, you've built an app that uses SQL, API requests, and some JavaScript to manage users. You can preview the app in a production setting by clicking the toggle in the top-right corner next to the **Share** button. END"}
{"prompt":"At this point, you've built an app that uses SQL, API requests, and some JavaScript to manage users. You can preview the app in a production setting by clicking the toggle in the top-right corner next to the **Share** button.\n\n###\n\n","completion":" A lot of Retool's value comes in the combination of low and no-code solutions with writing custom queries and JavaScript. Components can do a lot out of the box and they save you from writing frontend code, but you can also write custom logic to fit your needs. END"}
{"prompt":"title: \"Queries\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-concepts\"\nexcerpt: \"Learn more about how queries access data and how to use them queries with components.\"\nhidden: false\n\n###\n\n","completion":" **Queries let your components read or write data from various datasources.** Retool supports querying most databases, as well as any API. END"}
{"prompt":"**Queries let your components read or write data from various datasources.** Retool supports querying most databases, as well as any API.\n\n###\n\n","completion":" Your components then connect to queries via their props - for example, you could set your `Table`'s data to be `{{query1.data}}`, and the table would then show data from `query1`. Similarly, you could change the `onClick` of a `Button` to trigger a `{{resetPassword}}` function for example, which could fire an API request. END"}
{"prompt":"Overview\n\n###\n\n","completion":" Queries that don't <<glossary:mutate data>> (eg. read-only SQL statements, or `GET` API requests) are automatically run on page load. Then they populate their `.data` field, which you can access via `queryName.data`. Afterwards, when their parameters change (eg. `select * from users where id = {{textinput1.value}}`), read-only queries are automatically re-run. END"}
{"prompt":"Queries that don't <<glossary:mutate data>> (eg. read-only SQL statements, or `GET` API requests) are automatically run on page load. Then they populate their `.data` field, which you can access via `queryName.data`. Afterwards, when their parameters change (eg. `select * from users where id = {{textinput1.value}}`), read-only queries are automatically re-run.\n\n###\n\n","completion":" Queries that mutate data are only run when you explicitly tell them to. For example, if you have a table of users, and you have a `POST` request that resets the selected user's password, the `POST` query won't automatically run when you change rows. Instead, `POST` and other write requests must be run explicitly, generally via a `Button`. That way, we won't write data back accidentally. END"}
{"prompt":"When do queries run and refresh?\n\n###\n\n","completion":" Queries that read data (SQL statements + `GET` API queries) will automatically refresh when their parameters change. For example, the following query will auto-update every time `textinput.value` changes: END"}
{"prompt":"Trigger queries on success or failure\n\n###\n\n","completion":" You'll often want to trigger more queries when a query finishes. For example, after you change something in a database table, you probably want to refresh the `users` query that pulls in all your users. So `updateUsername` should cause your `users` query to refresh. END"}
{"prompt":"You'll often want to trigger more queries when a query finishes. For example, after you change something in a database table, you probably want to refresh the `users` query that pulls in all your users. So `updateUsername` should cause your `users` query to refresh.\n\n###\n\n","completion":" To do that, add an event handler to run the `users` query after the `updateUsername` query runs successfully. END"}
{"prompt":"To do that, add an event handler to run the `users` query after the `updateUsername` query runs successfully.\n\n###\n\n","completion":" ![Refreshing users after updateEmail succeeds.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d5f7a58-highlight_success_trigger_red.png) END"}
{"prompt":"Response options\n\n###\n\n","completion":" By default, queries show notifications in the center of the app screen on any failures. JavaScript queries also show notification messages on success. You can modify the messages, adjust the notification duration, and disable these success or failure notifications from the **Response** tab of the query editor. END"}
{"prompt":"Advanced options\n\n###\n\n","completion":" The following options are available in the query editor's **Advanced** tab. END"}
{"prompt":"Require confirmation before running\n\n###\n\n","completion":" If you don't want a query to run automatically (whether because parameters change or because you triggered it), you can require confirmation before running. Before the query is run, a modal will pop up (the message can be dynamic), asking whether you're sure you want to run the query. END"}
{"prompt":"If you don't want a query to run automatically (whether because parameters change or because you triggered it), you can require confirmation before running. Before the query is run, a modal will pop up (the message can be dynamic), asking whether you're sure you want to run the query.\n\n###\n\n","completion":" ![Requiring a confirmation message before running the delete user query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a1986fc-Screenshot_2018-03-03_17.24.26.png) END"}
{"prompt":"Run queries periodically\n\n###\n\n","completion":" Retool also provides the mechanism to periodically run a query in a user specified period. You can find this under the _Advanced_ tab. Here is an example of this. END"}
{"prompt":"Retool also provides the mechanism to periodically run a query in a user specified period. You can find this under the _Advanced_ tab. Here is an example of this.\n\n###\n\n","completion":" ![Example of a query refreshing every 5 seconds (5000 milliseconds)](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ab989b2-highlight_success_trigger_edited.png) END"}
{"prompt":"Disabling queries dynamically\n\n###\n\n","completion":" On more complex pages with many queries, it is sometimes useful to stop queries from running if they are not immediately needed. For example, if you are using a tabbed container, you might only want a query to run when the user switches the active tab to the second tab. To do this, you could write the following. END"}
{"prompt":"On more complex pages with many queries, it is sometimes useful to stop queries from running if they are not immediately needed. For example, if you are using a tabbed container, you might only want a query to run when the user switches the active tab to the second tab. To do this, you could write the following.\n\n###\n\n","completion":" ![Only run a query when the second tab is active.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6f47550-highlight_disable_query.png) END"}
{"prompt":"Hide parameters from audit logs\n\n###\n\n","completion":" Run queries and their parameters are logged in the [audit logs](https:\/\/docs.retool.com\/docs\/audit-logs). You should hide sensitive parameters, such as API keys, from your audit logs. Add sensitive parameters to the **Disable logging for** field on the **Advanced** tab in the query editor. In the audit logs, these parameter values display as `--blacklisted-by-developer--`. END"}
{"prompt":"Run queries and their parameters are logged in the [audit logs](https:\/\/docs.retool.com\/docs\/audit-logs). You should hide sensitive parameters, such as API keys, from your audit logs. Add sensitive parameters to the **Disable logging for** field on the **Advanced** tab in the query editor. In the audit logs, these parameter values display as `--blacklisted-by-developer--`.\n\n###\n\n","completion":" ![Disable tagging for query parameter](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/app-editor\/4fa83112-5be8-423e-8b0e-c990cbf888d6.png) END"}
{"prompt":"Query throttling\n\n###\n\n","completion":" If you find that Retool performance is slow, it might be because your queries are refreshing too frequently (eg. on every keystroke). To solve that, you can throttle query such that it runs less frequently. The default is `750ms`. END"}
{"prompt":"Watch inputs\n\n###\n\n","completion":" If the query uses a dynamic input--for example, using a text input component to supply an ID parameter--and is triggered manually, you can set the query to watch and update in reaction to these inputs. In the **Advanced** tab under **Advanced options**, add any inputs to watch to the **Watched inputs** dropdown. END"}
{"prompt":"Timing options\n\n###\n\n","completion":" You can control when queries run using options in the **Timing** section of the **Advanced** tab in the query editor. END"}
{"prompt":"Query timeout\n\n###\n\n","completion":" Retool automatically times out queries that run for longer than 10 seconds (`10000ms`). You can adjust the **Timeout after** duration for queries on an individual basis in the **Advanced** tab of the query editor. For Retool-hosted users, the maximum duration before a query times out is 120 seconds (`120000ms`). Self-hosted users can set the `DBCONNECTOR_QUERY_TIMEOUT_MS` [environment variable](\/reference\/environment-variables-reference#dbconnector_query_timeout_ms) to change the maximum timeout value. END"}
{"prompt":"Delay between query runs\n\n###\n\n","completion":" To update the amount of time to wait between query runs, in the **Advanced** tab, update the **Delay between runs** field. This field specifies the number of milliseconds to wait in between runs of the same query and defaults to 750 milliseconds. END"}
{"prompt":"Delay page load\n\n###\n\n","completion":" If the query runs on page load, you can set a delay by updating the **Page load delay (ms)** field in the **Advanced** tab. END"}
{"prompt":"title: \"Query Anatomy\"\ncategorySlug: \"legacy\"\nexcerpt: \"Running queries to power your Retool apps\"\nhidden: true\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b40577d-05_Query_No_Logo.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b40577d-05_Query_No_Logo.png)\n\n###\n\n","completion":" Queries are the bridge between your data and your Retool apps. Here’s an overview in our docs that walks through reading and writing data. In this unit, we’re going to take a deep dive into the anatomy of the query to learn about all Retool queries have to offer. END"}
{"prompt":"Queries are the bridge between your data and your Retool apps. Here’s an overview in our docs that walks through reading and writing data. In this unit, we’re going to take a deep dive into the anatomy of the query to learn about all Retool queries have to offer.\n\n###\n\n","completion":" NOTE: This guide excludes JS queries. They have different anatomy and functionality than all other Retool queries, so go ahead and read the Reschool section on JS queries. END"}
{"prompt":"NOTE: This guide excludes JS queries. They have different anatomy and functionality than all other Retool queries, so go ahead and read the Reschool section on JS queries.\n\n###\n\n","completion":" These are the 3 tabs in a query, let’s learn about them! END"}
{"prompt":"General Tab\n\n###\n\n","completion":" Here is where you’ll spend most of your time. You can choose your resource, write the body of the query and tell it what to do if it fails. Let’s examine each section of the General tab! END"}
{"prompt":"Here is where you’ll spend most of your time. You can choose your resource, write the body of the query and tell it what to do if it fails. Let’s examine each section of the General tab!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7c7cbc7-Queries-General_tab.png) END"}
{"prompt":"A—Resource\n\n###\n\n","completion":" Select the resource you’d like to query. [Resources](https:\/\/docs.retool.com\/docs\/resources) are set up from your Retool org’s home page and are the first step in connecting Retool to your data. END"}
{"prompt":"B—Run query…\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5471a8c-Queries-Run_query.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5471a8c-Queries-Run_query.png)\n\n###\n\n","completion":" Queries can either be run automatically when inputs change or when manually triggered. END"}
{"prompt":"Queries can either be run automatically when inputs change or when manually triggered.\n\n###\n\n","completion":" An automatically running query will run if an input changes or recalculates. An “input” is a value inside of a `{{ }}` tag anywhere inside the query panel, such as a new toggle value, new selectedRow of a table or any Retool value that the query is using. END"}
{"prompt":"An automatically running query will run if an input changes or recalculates. An “input” is a value inside of a `{{ }}` tag anywhere inside the query panel, such as a new toggle value, new selectedRow of a table or any Retool value that the query is using.\n\n###\n\n","completion":" A manually triggered query will run when manually triggered, via a button press, toggle action or something similar, which is separate from a watched value changing. END"}
{"prompt":"A manually triggered query will run when manually triggered, via a button press, toggle action or something similar, which is separate from a watched value changing.\n\n###\n\n","completion":" \\*\\* 💡 As a general rule of thumb, limit queries that run on page load. Retool allows you to run queries on page load, and add an optional delay. While this can be helpful to make sure your dashboards are always carrying fresh data, it can overload your app when it starts up. Limit the number and size of queries you run on page load, and consider having them run manually or when specified inputs change. END"}
{"prompt":"C—Query Body\n\n###\n\n","completion":" Depending on the resource type and action (reading from Postgres vs writing to Google Sheets), the fields you see here will vary and so will the ways in which you’ll interact with your data. The doc linked [here](https:\/\/docs.retool.com\/docs\/queries) and in the intro is a good starting point, but in general, your query type will fall into 2 main query modes: END"}
{"prompt":"D—Transformers\n\n###\n\n","completion":" Often transformers are used to change the results of a query into a different format. If you find yourself doing this, you can attach a transformer directly to the query. This changes the value of the query everywhere, so that when you use `query1.data`, you will get the results of the query after the transformer has been applied. END"}
{"prompt":"Often transformers are used to change the results of a query into a different format. If you find yourself doing this, you can attach a transformer directly to the query. This changes the value of the query everywhere, so that when you use `query1.data`, you will get the results of the query after the transformer has been applied.\n\n###\n\n","completion":" Docs on query transformers [here](https:\/\/docs.retool.com\/docs\/transformers#query-transformers), and some examples below. END"}
{"prompt":"Docs on query transformers [here](https:\/\/docs.retool.com\/docs\/transformers#query-transformers), and some examples below.\n\n###\n\n","completion":" ![Narrow down your results to only include products with high ratings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/45d0a2c-Queries-Transformers.png) END"}
{"prompt":"![Narrow down your results to only include products with high ratings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/45d0a2c-Queries-Transformers.png)\n\n###\n\n","completion":" ![Capitalize all the names in your data before displaying them in a table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c54d9b6-Queries-Transformer_2.png) END"}
{"prompt":"E—After this query runs…\n\n###\n\n","completion":" You'll often want to trigger more queries when a query finishes\/succeeds. END"}
{"prompt":"You'll often want to trigger more queries when a query finishes\/succeeds.\n\n###\n\n","completion":" For example, after you change something in a database table, you probably want to refresh the `getUsers` query that pulls in all your users. So `updateUsername` should cause your `users` query to refresh. END"}
{"prompt":"For example, after you change something in a database table, you probably want to refresh the `getUsers` query that pulls in all your users. So `updateUsername` should cause your `users` query to refresh.\n\n###\n\n","completion":" 💡 Beware of long, convoluted query chains here! If `getUsers` runs on input change\/on page load, then the queries that run on success of `getUsers` will also run. END"}
{"prompt":"💡 Beware of long, convoluted query chains here! If `getUsers` runs on input change\/on page load, then the queries that run on success of `getUsers` will also run.\n\n###\n\n","completion":" You can also trigger a query if a query fails. END"}
{"prompt":"F—Preview vs Run\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5a4928d-Queries-Preview_vs_Run.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5a4928d-Queries-Preview_vs_Run.png)\n\n###\n\n","completion":" Clicking the \"preview\" button doesn't actually run the query and update the `query.data` value. It just shows up in the preview pane as a sample of what values it would return, with one small exception! END"}
{"prompt":"Clicking the \"preview\" button doesn't actually run the query and update the `query.data` value. It just shows up in the preview pane as a sample of what values it would return, with one small exception!\n\n###\n\n","completion":" Previewing a REST API query will run the query and hit your API endpoint, so there’s no difference between Preview and Run. END"}
{"prompt":"G—Schema Browser\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/346845f-Queries-Schema_browser.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/346845f-Queries-Schema_browser.png)\n\n###\n\n","completion":" You can toggle the schema browser on to view the tables, columns and column types of your selected resource! You can also collapse it for more room to type in your query. END"}
{"prompt":"Response Tab\n\n###\n\n","completion":" You can use “failure conditions” in queries to mark your queries as failing. Docs on Failure conditions [here](https:\/\/docs.retool.com\/docs\/transformers#failure-conditions). END"}
{"prompt":"You can use “failure conditions” in queries to mark your queries as failing. Docs on Failure conditions [here](https:\/\/docs.retool.com\/docs\/transformers#failure-conditions).\n\n###\n\n","completion":" The keys (first input field) are the conditions. If any of these conditions are evaluated as a <<glossary:truthy value>>, Retool marks the query as failing and displays the error message specified in the value. END"}
{"prompt":"The keys (first input field) are the conditions. If any of these conditions are evaluated as a <<glossary:truthy value>>, Retool marks the query as failing and displays the error message specified in the value.\n\n###\n\n","completion":" Failure conditions are especially useful to set when your resource always returns a success. For example, most GraphQL APIs always return a 200 success code even when there are errors contained in the response. END"}
{"prompt":"Failure conditions are especially useful to set when your resource always returns a success. For example, most GraphQL APIs always return a 200 success code even when there are errors contained in the response.\n\n###\n\n","completion":" Let’s walk through a concrete use case. If you want to throw an error if your API returns fewer results than you want, you can set a failure condition specifying `{{ data.results.length < # of ideal results }}`. END"}
{"prompt":"Let’s walk through a concrete use case. If you want to throw an error if your API returns fewer results than you want, you can set a failure condition specifying `{{ data.results.length < # of ideal results }}`.\n\n###\n\n","completion":" ![This query will fail when the number of countries returned is fewer than 251](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cdd40c2-Queries-Fail_graphQL.png) END"}
{"prompt":"Advanced Tab\n\n###\n\n","completion":" The settings available in the advanced tab will vary depending on how you’re running your query: automatically or manually. END"}
{"prompt":"The settings available in the advanced tab will vary depending on how you’re running your query: automatically or manually.\n\n###\n\n","completion":" ![Settings for “Run query automatically when inputs change”](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ead4668-Queries-Advanced_tab.png) END"}
{"prompt":"![Settings for “Run query automatically when inputs change”](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ead4668-Queries-Advanced_tab.png)\n\n###\n\n","completion":" ![Additional settings available for queries set to “Run query only when manually triggered”](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8bae518-Queries-Advanced_tab_manually_triggered.png) END"}
{"prompt":"H—Timeout after (ms)\n\n###\n\n","completion":" Specify the number of milliseconds to wait before timing the query out. Queries that take longer than 120 seconds are automatically timed out. END"}
{"prompt":"I–Run triggered queries after (ms)\n\n###\n\n","completion":" Specify the number of milliseconds to wait before running the query once triggered. END"}
{"prompt":"J—Delay between runs (ms)\n\n###\n\n","completion":" Specify the number of milliseconds to wait in between query runs. END"}
{"prompt":"K—Page load delay (ms)\n\n###\n\n","completion":" Specify the number of milliseconds to wait before running on page load. END"}
{"prompt":"L—Run this query periodically?\n\n###\n\n","completion":" If yes, you can specify the frequency at which to refresh this query in milliseconds. END"}
{"prompt":"M—Disable logging for\n\n###\n\n","completion":" Specify parameters to remove from audit logs. END"}
{"prompt":"N—Disable query\n\n###\n\n","completion":" Disable the query when an expression passed in (between `{{ }}`) evaluates as `true`. If you use a dynamic value that changes from `true` to `false`, the query is immediately run. END"}
{"prompt":"Disable the query when an expression passed in (between `{{ }}`) evaluates as `true`. If you use a dynamic value that changes from `true` to `false`, the query is immediately run.\n\n###\n\n","completion":" For example, you can use a [Switch](https:\/\/retool.com\/components\/switch) component to disable a query by setting **Disable query** to `{{ !switch1.value }}`. This evaluates to `true` when the switch is toggled off. When the switch is toggled on, `{{ !switch1.value }}` evaluates to `false`, which enables the query and runs it. END"}
{"prompt":"O—Watched inputs\n\n###\n\n","completion":" Choose which parameters should be watched by the query and update in reaction to. For manually triggered queries, you can specify inputs to watch and trigger based on. This allows you to “selectively-automatically” trigger queries. END"}
{"prompt":"P—Cache the results of this query\n\n###\n\n","completion":" Check this box and then provide the number of seconds you would like this query's results to be cached for. END"}
{"prompt":"Check this box and then provide the number of seconds you would like this query's results to be cached for.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/27f3645-Queries-Cache.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/27f3645-Queries-Cache.png)\n\n###\n\n","completion":" To invalidate or remove the cache, simply click the Invalidate cache text shown above. At this time, there is no way to programmatically invalidate the cache. END"}
{"prompt":"To invalidate or remove the cache, simply click the Invalidate cache text shown above. At this time, there is no way to programmatically invalidate the cache.\n\n###\n\n","completion":" 💡 Use query caching to your advantage. Retool allows you to cache query results. Just click on the “advanced” tab in your query editor for a given query and select the checkbox. You can also cache queries across users in your organization’s advanced settings page (`\/settings\/advanced`). If you’re running large analytical queries, or in general don’t need constantly up to date figures, consider using caching to help improve performance. END"}
{"prompt":"💡 Use query caching to your advantage. Retool allows you to cache query results. Just click on the “advanced” tab in your query editor for a given query and select the checkbox. You can also cache queries across users in your organization’s advanced settings page (`\/settings\/advanced`). If you’re running large analytical queries, or in general don’t need constantly up to date figures, consider using caching to help improve performance.\n\n###\n\n","completion":" See the [Caching in Retool](https:\/\/docs.retool.com\/docs\/caching-in-retool) page for more information. END"}
{"prompt":"Q—Show a confirmation modal before running [Manually triggered only]\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ba4c318-Queries-Confirmation_modal.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ba4c318-Queries-Confirmation_modal.png)\n\n###\n\n","completion":" R—Fire confetti when the query finishes 🎉 [Manually triggered only] END"}
{"prompt":"R—Fire confetti when the query finishes 🎉 [Manually triggered only]\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/95a9e6a-Queries-Confetti.gif) END"}
{"prompt":"title: \"Query JSON with SQL\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to use SQL syntax to query data from non-SQL data sources.\"\nhidden: false\n\n###\n\n","completion":" You can query data from non-SQL sources as SQL using the built-in **Query JSON with SQL** resource. This resource requires you write in AlaSQL, and its syntax differs from SQL—for example, AlaSQL uses square brackets or backquotes to enclose column names containing whitespace, rather than double quotes. Check the [AlaSQL docs](https:\/\/github.com\/agershun\/alasql\/wiki\/Sql) for more details. END"}
{"prompt":"You can query data from non-SQL sources as SQL using the built-in **Query JSON with SQL** resource. This resource requires you write in AlaSQL, and its syntax differs from SQL—for example, AlaSQL uses square brackets or backquotes to enclose column names containing whitespace, rather than double quotes. Check the [AlaSQL docs](https:\/\/github.com\/agershun\/alasql\/wiki\/Sql) for more details.\n\n###\n\n","completion":" Select **Query JSON with SQL** in the query editor to begin. The **Query JSON with SQL** resource accepts an array of JSON objects in its `FROM` clause. END"}
{"prompt":"Select **Query JSON with SQL** in the query editor to begin. The **Query JSON with SQL** resource accepts an array of JSON objects in its `FROM` clause.\n\n###\n\n","completion":" ![Example of using Query JSON with SQL resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e3b9292-aldshfglkjasdhgfla.png) END"}
{"prompt":"Query raw JSON\n\n###\n\n","completion":" You can query raw JSON in your `FROM` clause: END"}
{"prompt":"Join multiple JSON arrays\n\n###\n\n","completion":" Querying JSON with SQL supports traditional SQL joins. END"}
{"prompt":"Query data in an array\n\n###\n\n","completion":" To access an array using AlaSQL, prefix the array with `@`. END"}
{"prompt":"title: \"Query Library\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-concepts\"\nexcerpt: \"Learn more about creating and sharing queries with the Query Library.\"\nhidden: false\n\n###\n\n","completion":" The Query Library lets you create, run, and share queries across your organization and between Retool apps. Queries in the library are similar to functions in JavaScript—you can define variables in them and they return a result. You can then “call” this query inside across multiple Retool apps, so that you’re not copy pasting the same query everywhere. END"}
{"prompt":"Features and use cases\n\n###\n\n","completion":" Query Library supports: END"}
{"prompt":"Query Library supports:\n\n###\n\n","completion":" Example use cases: END"}
{"prompt":"Permissions\n\n###\n\n","completion":" Retool admins can configure who has access to the Query Library via user groups. Note that currently, anyone given access to the Query Library will have both read and write access. END"}
{"prompt":"Retool admins can configure who has access to the Query Library via user groups. Note that currently, anyone given access to the Query Library will have both read and write access.\n\n###\n\n","completion":" All queries are private when created. While private, they can only be read and updated by the creator. Users can choose to Share a query, which makes it accessible to the entire organization. Note that only private queries can be deleted. As of now, once shared, a query cannot be unshared. END"}
{"prompt":"Version Control\n\n###\n\n","completion":" Every time you save a query, Retool stores a snapshot, similar to a commit. You can click the **Saved on** text in the bottom right corner to view the history, see the differences between saves, and revert to a specific version. Both SQL based resources and non-SQL resources have version history, but only SQL resources show a line by line diff of the changes. END"}
{"prompt":"Reusable Queries\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video controls width=\\\"100%\\\" type=\\\"video\/mp4\\\" src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ql_variables.mp4\\\">\\n Your browser does not support the video tag.\\n<\/video>\"\n}\n[\/block]\nYou can import shared queries from the Query Library into your Retool apps. This lets you avoid repetition and maintains a single source of truth for your organization. For example, instead of copy pasting the same query on monthly revenue into each app, you can just maintain one in the Library. END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video controls width=\\\"100%\\\" type=\\\"video\/mp4\\\" src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ql_variables.mp4\\\">\\n Your browser does not support the video tag.\\n<\/video>\"\n}\n[\/block]\nYou can import shared queries from the Query Library into your Retool apps. This lets you avoid repetition and maintains a single source of truth for your organization. For example, instead of copy pasting the same query on monthly revenue into each app, you can just maintain one in the Library.\n\n###\n\n","completion":" By default, when you import a shared query into an app, it will be in sync with the latest version. You also have the option to choose a specific version instead. END"}
{"prompt":"By default, when you import a shared query into an app, it will be in sync with the latest version. You also have the option to choose a specific version instead.\n\n###\n\n","completion":" For more details on reusing queries, [check out this guide](https:\/\/docs.retool.com\/docs\/reusable-queries). END"}
{"prompt":"Variables\n\n###\n\n","completion":" Variables let you avoid hardcoding pieces of your queries, the same way you can inside a Retool app. In your app you might use `select * from users where id = {{ textinput1.value }}`, but in the Library, there are no other objects to reference. So, the Query library extracts unknown words inside `{{ }}`. In this case, you might write `select * from users where id = {{ user_id }}`, and the Library would pick out `user_id` and display it on the right. END"}
{"prompt":"Variables let you avoid hardcoding pieces of your queries, the same way you can inside a Retool app. In your app you might use `select * from users where id = {{ textinput1.value }}`, but in the Library, there are no other objects to reference. So, the Query library extracts unknown words inside `{{ }}`. In this case, you might write `select * from users where id = {{ user_id }}`, and the Library would pick out `user_id` and display it on the right.\n\n###\n\n","completion":" Note that like in the regular Retool app, you can use JavaScript inside `{{ }}`.\nFor example, you can: END"}
{"prompt":"Note that like in the regular Retool app, you can use JavaScript inside `{{ }}`.\nFor example, you can:\n\n###\n\n","completion":" For details on how variables work with Reusable queries, check out this guide on [reusing queries](https:\/\/docs.retool.com\/docs\/reusable-queries). END"}
{"prompt":"title: \"Retool apps quickstart\"\ncategorySlug: \"web-apps\"\nexcerpt: \"Learn how to build your first Retool app in minutes.\"\nhidden: false\n\n###\n\n","completion":" Retool lets you quickly build internal tools with rich GUIs around any sort of database or API. This guide walks you through building a user management application like the one below. You can also create a copy of this app by [downloading its JSON file](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2939847a-d423-4997-bf6b-feb3ae3b89ef.json) and importing it using the **From JSON** option. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Try out the demo to see a Retool app in action (buttons are disabled). END"}
{"prompt":"Try out the demo to see a Retool app in action (buttons are disabled).\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/df79d58c-bf53-4c1b-a229-2bcb11f6c38d\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Create a new **Resource query** (named `query4` in this example). Make sure the **Resource** is set to `onboarding_db`, add the following code to the query editor, and then save and run the query.\n\n###\n\n","completion":" Order data is contained in a different table within `onboarding_db`. You can use a SQL [JOIN](<https:\/\/en.wikipedia.org\/wiki\/Join_(SQL)>) clause to combine data from both tables. END"}
{"prompt":"Order data is contained in a different table within `onboarding_db`. You can use a SQL [JOIN](<https:\/\/en.wikipedia.org\/wiki\/Join_(SQL)>) clause to combine data from both tables.\n\n###\n\n","completion":" Many components present a list of options, such as the dropdown in a [Select](https:\/\/retool.com\/components\/select) component. Retool can automatically generate this [options list](https:\/\/docs.retool.com\/docs\/define-option-lists) by mapping data from a query. Add a [Listbox](https:\/\/retool.com\/components\/listbox) component to the app. Select the **Mapped** option and then select `query4` as the **Data source**. END"}
{"prompt":"title: \"Source Control recommended workflow\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-concepts\"\nexcerpt: \"Learn about the recommended workflow to use with Source Control.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" First, follow our [getting started](https:\/\/docs.retool.com\/docs\/source-control-getting-started) setup instructions to create and protect an app. Once protected, this app will be created in all instances connected to the `retool_source` repository, and changes can only be made through pull requests on your remote source control management provider (GitHub, GitLab, etc.). END"}
{"prompt":"First, follow our [getting started](https:\/\/docs.retool.com\/docs\/source-control-getting-started) setup instructions to create and protect an app. Once protected, this app will be created in all instances connected to the `retool_source` repository, and changes can only be made through pull requests on your remote source control management provider (GitHub, GitLab, etc.).\n\n###\n\n","completion":" Next, open a branch. You can now commit & push changes to your app at meaningful checkpoints without the worry of overwriting developers or rolling back a complex change. If you need, you can always go back in your history to restore or undo changes. END"}
{"prompt":"Next, open a branch. You can now commit & push changes to your app at meaningful checkpoints without the worry of overwriting developers or rolling back a complex change. If you need, you can always go back in your history to restore or undo changes.\n\n###\n\n","completion":" Once you are happy with the new functionality in your branch, you can open a pull request and get a review from fellow developers on your team. Once approved, merge the pull request into your default branch (typically `main`). Within seconds, the default or `main` branch within Retool will reflect these changes and your end users will be able to see them! END"}
{"prompt":"Once you are happy with the new functionality in your branch, you can open a pull request and get a review from fellow developers on your team. Once approved, merge the pull request into your default branch (typically `main`). Within seconds, the default or `main` branch within Retool will reflect these changes and your end users will be able to see them!\n\n###\n\n","completion":" For mission-critical apps, you can also pin a release for end users. This allows you to preview or test changes before releasing them to end users. Using the [Releases feature](https:\/\/docs.retool.com\/docs\/releases) allows you to deploy apps at the cadence of your choosing, which gives you the ability to batch changes and\/or manually test for regressions. END"}
{"prompt":"For mission-critical apps, you can also pin a release for end users. This allows you to preview or test changes before releasing them to end users. Using the [Releases feature](https:\/\/docs.retool.com\/docs\/releases) allows you to deploy apps at the cadence of your choosing, which gives you the ability to batch changes and\/or manually test for regressions.\n\n###\n\n","completion":" Releases can be accessed by clicking on the version number in the header in Preview mode of the configured default branch (typically `main`). For more information, explore our [Release Management](https:\/\/docs.retool.com\/docs\/releases) options. END"}
{"prompt":"Releases can be accessed by clicking on the version number in the header in Preview mode of the configured default branch (typically `main`). For more information, explore our [Release Management](https:\/\/docs.retool.com\/docs\/releases) options.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/05e1b0c-Protected_Apps__Git_Sync.png) END"}
{"prompt":"title: \"Connect to Redis\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your Redis data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [Redis](https:\/\/redis.io\/) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Redis data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Redis resource, you need: END"}
{"prompt":"Allow Retool to access Redis\n\n###\n\n","completion":" If Redis is behind a firewall, you must [allow access from Retool's IP addresses](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses). Add the IP addresses to your firewall's Allowlist before you create the resource. END"}
{"prompt":"1. Create a new resource\n\n###\n\n","completion":" Sign in to your Retool organization and click the **Resources** tab. Click **Create new > Resource** to start configuring your Redis resource. END"}
{"prompt":"Sign in to your Retool organization and click the **Resources** tab. Click **Create new > Resource** to start configuring your Redis resource.\n\n###\n\n","completion":" ![Create a new resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/5f4c5f17-b674-473a-a508-2179863f90ef.webp) END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in integrations for popular data sources. Select the Redis resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in integrations for popular data sources. Select the Redis resource type.\n\n###\n\n","completion":" ![Select the Redis resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/b2283004-8595-465b-8379-73f29339e2f1.png) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Redis resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"Specify a name and location for the Redis resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings.\n\n###\n\n","completion":" ![Configure Redis](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c23962d1-87fc-43f6-94d8-f76389b3046d.png) END"}
{"prompt":"![Configure Redis](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c23962d1-87fc-43f6-94d8-f76389b3046d.png)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Redis. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"4. Wrap up\n\n###\n\n","completion":" You can now select your newly-created Redis resource from the **Resource** dropdown in the query editor. END"}
{"prompt":"You can now select your newly-created Redis resource from the **Resource** dropdown in the query editor.\n\n###\n\n","completion":" ![Created Redis resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/919ed6fa-9461-4045-9470-7ab95a503dd2.png) END"}
{"prompt":"title: \"Connect to Amazon Redshift\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your AWS Redshift data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect Redshift as a data source and make it available to your Retool apps. END"}
{"prompt":"1. Obtain Redshift details\n\n###\n\n","completion":" You can find your Redshift cluster details via the AWS console. The _Endpoint_ section gives you the hostname and port all in one. You'll need to get the database name and a username\/password from whoever set up the Redshift cluster. END"}
{"prompt":"You can find your Redshift cluster details via the AWS console. The _Endpoint_ section gives you the hostname and port all in one. You'll need to get the database name and a username\/password from whoever set up the Redshift cluster.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0e2a251-Screen_Shot_2018-10-02_at_6.04.17_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0e2a251-Screen_Shot_2018-10-02_at_6.04.17_PM.png)\n\n###\n\n","completion":" Retool requires access to the PUBLIC schema to: END"}
{"prompt":"2. Allow access to Redshift\n\n###\n\n","completion":" Retool must be able to connect to your Redshift data source. Ensure that you [include Retool's IP addresses to your allowlist](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses) so your Redshift data is available to query. END"}
{"prompt":"3. Create a Redshift resource\n\n###\n\n","completion":" Create a new resource in Retool, and select \"Amazon Redshift\" as the _type_. END"}
{"prompt":"Create a new resource in Retool, and select \"Amazon Redshift\" as the _type_.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cf277a8-redshift-create-resource.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cf277a8-redshift-create-resource.png)\n\n###\n\n","completion":" Enter your cluster's hostname and port, the database's name, and a username\/password combination and press \"Save\". END"}
{"prompt":"Enter your cluster's hostname and port, the database's name, and a username\/password combination and press \"Save\".\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1ea5243-redshift-edit-details.png) END"}
{"prompt":"4. Create queries\n\n###\n\n","completion":" You can now select your newly-created Redshift resource from the _Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes). END"}
{"prompt":"You can now select your newly-created Redshift resource from the _Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3a2c400-redshift-query-editor.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3a2c400-redshift-query-editor.png)\n\n###\n\n","completion":" You can display the results of Redshift queries as with any other query in Retool: END"}
{"prompt":"You can display the results of Redshift queries as with any other query in Retool:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5af21f9-redshift-display-results.png) END"}
{"prompt":"title: \"Introduction\"\ncategorySlug: \"get-started-reference\"\nhidden: false\n\n###\n\n","completion":" This reference documentation describes the available parameters, values, events, and methods in Retool. END"}
{"prompt":"This reference documentation describes the available parameters, values, events, and methods in Retool.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n    <li>\\n <a\\n href=\\\"components-web\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Web components<\/div>\\n <div class=\\\"description\\\">\\nReference documentation for Retool web app UI components.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"components-mobile\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Mobile components<\/div>\\n <div class=\\\"description\\\">\\n Reference documentation for Retool Mobile UI components.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a\\n href=\\\"javascript-api\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">JavaScript API<\/div>\\n <div class=\\\"description\\\">\\nReference documentation for Retool's built-in JavaScript library. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"environment-variables-reference\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Self-hosted<\/div>\\n <div class=\\\"description\\\">\\nReference documentation for Self-hosted Retool.\\n <\/div>\\n <\/a>\\n   <\/li>\\n    <li>\\n <a href=\\\"environment-variables-reference\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">SCIM<\/div>\\n <div class=\\\"description\\\">\\nReference documentation for SCIM 2.0 API.\\n <\/div>\\n <\/a>\\n   <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Manage versions and releases\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-guides\"\nexcerpt: \"Learn how to version apps or revert changes to a previous state.\"\nhidden: false\n\n###\n\n","completion":" Any edits you make to a Retool app are automatically saved to the current working version. This version is live to all users by default and immediately reflects your changes. END"}
{"prompt":"Any edits you make to a Retool app are automatically saved to the current working version. This version is live to all users by default and immediately reflects your changes.\n\n###\n\n","completion":" You can use the [Releases](#releases) feature to version and release app changes. Each release version has its own version number and reflects the app at a specific state. Once you publish a release, it becomes the live version with which all users interact. This allows you to safely test, build, and release changes without disruption. END"}
{"prompt":"You can use the [Releases](#releases) feature to version and release app changes. Each release version has its own version number and reflects the app at a specific state. Once you publish a release, it becomes the live version with which all users interact. This allows you to safely test, build, and release changes without disruption.\n\n###\n\n","completion":" Retool also maintains a complete [history](#history) of changes. You can browse through the list of changes or versions, and revert an app to a previous state. END"}
{"prompt":"Working and live versions\n\n###\n\n","completion":" The _current working version_ reflects the latest changes to your app. This version isn't numbered and is referred to as `latest`. END"}
{"prompt":"The _current working version_ reflects the latest changes to your app. This version isn't numbered and is referred to as `latest`.\n\n###\n\n","completion":" The _live version_ of an app is the version that users interact with in user mode. The current working version, `latest`, is used as the live version by default. Any changes you make to an app are saved to this current working version and immediately live. If you use releases to version an app, the live version is the currently published release version. END"}
{"prompt":"The _live version_ of an app is the version that users interact with in user mode. The current working version, `latest`, is used as the live version by default. Any changes you make to an app are saved to this current working version and immediately live. If you use releases to version an app, the live version is the currently published release version.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/0d8f0fe2-9b62-455e-98cd-b62fcb83a519.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/ec7828e4-cbc0-4530-a9a3-e40caadeb8f9.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Releases\n\n###\n\n","completion":" You can version the current state of Retool apps and release them to users. Whenever you publish a release, it becomes the live version for all users. You can change the published release at any time, create draft releases, and revert the current working version to changes from an earlier version. END"}
{"prompt":"You can version the current state of Retool apps and release them to users. Whenever you publish a release, it becomes the live version for all users. You can change the published release at any time, create draft releases, and revert the current working version to changes from an earlier version.\n\n###\n\n","completion":" You can access the **Releases** settings in two ways: END"}
{"prompt":"You can access the **Releases** settings in two ways:\n\n###\n\n","completion":" The **Releases** tab contains information about release versions. The published release includes a **Live** tag. END"}
{"prompt":"Create a new release\n\n###\n\n","completion":" Click **Create new** to create a version for release. Retool uses [Semantic Versioning](https:\/\/semver.org\/) and automatically increments the version number based on your selection of **Major**, **Minor**, or **Patch** versioning. END"}
{"prompt":"Click **Create new** to create a version for release. Retool uses [Semantic Versioning](https:\/\/semver.org\/) and automatically increments the version number based on your selection of **Major**, **Minor**, or **Patch** versioning.\n\n###\n\n","completion":" Once you provide a description and selecting the version number to increment, you can create a draft release or create and publish a release immediately. END"}
{"prompt":"Once you provide a description and selecting the version number to increment, you can create a draft release or create and publish a release immediately.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/dafbdb16-e0bd-4d38-928e-6c008447abc8.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/29c4c50c-c617-4a0e-abef-d1d32311e523.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Create a new draft release\n\n###\n\n","completion":" To create a draft release, click **Create draft release**. END"}
{"prompt":"To create a draft release, click **Create draft release**.\n\n###\n\n","completion":" A draft release is not initially published as the live version. This is useful if need to wait (e.g., conduct further testing) or are working on significant changes and may create subsequent releases before publication. END"}
{"prompt":"A draft release is not initially published as the live version. This is useful if need to wait (e.g., conduct further testing) or are working on significant changes and may create subsequent releases before publication.\n\n###\n\n","completion":" If you create a draft release and make further changes, you must create another release. END"}
{"prompt":"Create and publish a new release\n\n###\n\n","completion":" To create and publish a new release, click the dropdown button and select **Create and publish**. The release is immediately published as the live version for all users. END"}
{"prompt":"Preview a release\n\n###\n\n","completion":" You can preview a specific version of an app in user mode. There are a number of ways to do this, such as: END"}
{"prompt":"You can preview a specific version of an app in user mode. There are a number of ways to do this, such as:\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/e6716422-4cec-4ee7-98c7-312626669b3b.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/62d1c455-5098-4983-9b07-845cae3afedf.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Publish a release\n\n###\n\n","completion":" You can create a release and publish it immediately, or publish an existing release at any time. Click `•••` next to the release version in the **Releases** tab and select **Publish release**. END"}
{"prompt":"You can create a release and publish it immediately, or publish an existing release at any time. Click `•••` next to the release version in the **Releases** tab and select **Publish release**.\n\n###\n\n","completion":" ![Publish an existing release](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/24b5673f-6538-4677-ab0c-b68d69363738.webp) END"}
{"prompt":"![Publish an existing release](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/24b5673f-6538-4677-ab0c-b68d69363738.webp)\n\n###\n\n","completion":" The release is immediately published as the live version for all users. Once published, the release displays the **Live** label. END"}
{"prompt":"Unpublish or delete releases\n\n###\n\n","completion":" If necessary, you can unpublish a release by selecting **Unpublish release**. This action does not publish a previous release and restores the current working version, `latest`, as the live version for all users. END"}
{"prompt":"If necessary, you can unpublish a release by selecting **Unpublish release**. This action does not publish a previous release and restores the current working version, `latest`, as the live version for all users.\n\n###\n\n","completion":" ![Unpublish a release](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/1af661b9-b997-4e8f-a07b-1a9325e4d9e1.webp) END"}
{"prompt":"![Unpublish a release](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/1af661b9-b997-4e8f-a07b-1a9325e4d9e1.webp)\n\n###\n\n","completion":" If your want to remove any releases and are certain they are no longer needed, you can also delete them permanently. END"}
{"prompt":"Open a previous version of an app\n\n###\n\n","completion":" Use the `_releaseVersion` URL parameter to launch a specific release version of an app (e.g., `_releaseVersion=1.0.2`). Refer to the [URL query parameters](https:\/\/docs.retool.com\/docs\/url-query-parameters) documentation to learn more. END"}
{"prompt":"Revert to a previous version\n\n###\n\n","completion":" You can revert the current working version of your app to the state from a previous version. All changes since this version are discarded but still remain in the history. This does not affect any other releases and doesn't change the published release. END"}
{"prompt":"You can revert the current working version of your app to the state from a previous version. All changes since this version are discarded but still remain in the history. This does not affect any other releases and doesn't change the published release.\n\n###\n\n","completion":" This is useful if you've made a series of changes in the current working version but want to revert the app to an earlier point. END"}
{"prompt":"This is useful if you've made a series of changes in the current working version but want to revert the app to an earlier point.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/6003ab53-6a53-4afa-b325-23f836177438.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/1f23a144-a48c-4413-b5bd-e6709823ee9a.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Compare releases\n\n###\n\n","completion":" You can compare changes between two different versions of your Retool app as a JSON diff. Click **Compare changes**, then select the **Base** and **Compare** versions to show for comparison. You can also switch between **Unified** or **Split** view modes. END"}
{"prompt":"You can compare changes between two different versions of your Retool app as a JSON diff. Click **Compare changes**, then select the **Base** and **Compare** versions to show for comparison. You can also switch between **Unified** or **Split** view modes.\n\n###\n\n","completion":" ![Compare changes for releases](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/0b94040c-098b-48a0-a751-0261e9c05c2c.webp) END"}
{"prompt":"History\n\n###\n\n","completion":" Retool automatically saves changes to the current working version. You can undo or redo any changes you directly make to an app, such as moving a component or deleting a query, with `Cmd\/Ctrl+Z` and `Cmd\/Ctrl+Shift+Z`. You can also browse the app's entire history and revert to a previous state. END"}
{"prompt":"Retool automatically saves changes to the current working version. You can undo or redo any changes you directly make to an app, such as moving a component or deleting a query, with `Cmd\/Ctrl+Z` and `Cmd\/Ctrl+Shift+Z`. You can also browse the app's entire history and revert to a previous state.\n\n###\n\n","completion":" Click `•••` in the App editor toolbar to open the **App settings** menu and select **Releases and history**. The **History** tab contains a list of history points that reflect each set of changes saved to the current working version. END"}
{"prompt":"Click `•••` in the App editor toolbar to open the **App settings** menu and select **Releases and history**. The **History** tab contains a list of history points that reflect each set of changes saved to the current working version.\n\n###\n\n","completion":" The first history point represents the latest state of the current working version. You can revert to any previous history point and restore your app to a previous state. END"}
{"prompt":"Revert changes\n\n###\n\n","completion":" You can restore the current working version to an earlier state. Select a history point and click **Revert**. This discards all changes made after the selected point but does not remove them from the history. END"}
{"prompt":"You can restore the current working version to an earlier state. Select a history point and click **Revert**. This discards all changes made after the selected point but does not remove them from the history.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/8f4f213b-dd8e-4301-a155-fd93807b7674.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/070b77ee-a5ac-48d3-9369-35a434f48459.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/8f4f213b-dd8e-4301-a155-fd93807b7674.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/releases-and-history\/070b77ee-a5ac-48d3-9369-35a434f48459.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" Any time you revert changes, the reversion is also added to the history as **Reverted changes**. You can revert to a previous history point if you need to undo the reversion and restore changes back to the current working version. END"}
{"prompt":"Open an app at a previous history point\n\n###\n\n","completion":" Use the `_historyOffset` URL parameter to launch an app in user mode that only contains changes up to a previous history point. The offset is zero-indexed, with `0` representing the current working version, and ordered from newest to oldest. The greater the value, the older the history point. Refer to the [URL query parameters](https:\/\/docs.retool.com\/docs\/url-query-parameters) documentation to learn more. END"}
{"prompt":"title: \"Reserved names for Retool objects\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-concepts\"\nexcerpt: \"Learn about restrictions on Retool object names.\"\nhidden: false\n\n###\n\n","completion":" Retool reserves the following object names for internal use. These reservations apply to all Retool objects, such as [components](https:\/\/docs.retool.com\/docs\/components), [queries](https:\/\/docs.retool.com\/docs\/queries), [transformers](https:\/\/docs.retool.com\/docs\/transformers), [Workflows blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks), and [temporary state](https:\/\/docs.retool.com\/docs\/temporary-state). END"}
{"prompt":"title: \"Resolve Source Control merge conflicts\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to resolve merge conflicts when using Source Control.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In some cases, while developing you may run into merge conflicts against the `main` or configured default branch. These may come up when another developer collaborating on the same app makes a change that overlaps with your branch’s changes. Typically, your remote source control management provider (GitHub, GitLab, etc.) will make this clear from the pull request page and prevent merging. END"}
{"prompt":"In some cases, while developing you may run into merge conflicts against the `main` or configured default branch. These may come up when another developer collaborating on the same app makes a change that overlaps with your branch’s changes. Typically, your remote source control management provider (GitHub, GitLab, etc.) will make this clear from the pull request page and prevent merging.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4c0ec06-CXeX2h26.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4c0ec06-CXeX2h26.png)\n\n###\n\n","completion":" At this time, conflicts must be resolved outside of the Retool platform. To do so, you can resolve conflicts via the Web UI of your source control management provider or locally via the source management tool of your choosing. If using the command line, for example, clone the Git repo locally, check out your branch, and rebase your branch to the latest dev. Once rebased and conflicts have been resolved, force push to the origin branch. END"}
{"prompt":"At this time, conflicts must be resolved outside of the Retool platform. To do so, you can resolve conflicts via the Web UI of your source control management provider or locally via the source management tool of your choosing. If using the command line, for example, clone the Git repo locally, check out your branch, and rebase your branch to the latest dev. Once rebased and conflicts have been resolved, force push to the origin branch.\n\n###\n\n","completion":" After the remote branch has been updated, you may want to preview your changes again in Retool before merging to ensure your conflict resolution was completed properly. END"}
{"prompt":"After the remote branch has been updated, you may want to preview your changes again in Retool before merging to ensure your conflict resolution was completed properly.\n\n###\n\n","completion":" To do so, open your branch in Retool and use the \"Reset branch” option to then select the branch and pull the updated branch into Retool to preview. END"}
{"prompt":"To do so, open your branch in Retool and use the \"Reset branch” option to then select the branch and pull the updated branch into Retool to preview.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d79fb75-Screen_Shot_2021-06-15_at_5.58.21_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d79fb75-Screen_Shot_2021-06-15_at_5.58.21_PM.png)\n\n###\n\n","completion":" After completing your visual and interactive review, you can proceed with merging the updated branch and pull request. END"}
{"prompt":"Soft resetting changes\n\n###\n\n","completion":" Sometimes, merging doesn't work and the branch appears to be up-to-date with the remote `main`, even though regressions are still present. In order to resolve this issue, you can try soft resetting your branch to delete the regressions manually. END"}
{"prompt":"title: \"Resources\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-concepts\"\nexcerpt: \"Learn about connecting your data to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect almost any _data source_ and make it available for use in your Retool organization as a _resource_. Retool supports a wide range of data source _integrations_ that enable you to connect to almost any database or API. END"}
{"prompt":"Data sources\n\n###\n\n","completion":" A _data source_ is somewhere you store and perform operations with data. This could be a [PostgreSQL database](https:\/\/www.postgresql.org\/), the [Twilio REST API](https:\/\/www.twilio.com\/docs\/usage\/api), an [Amazon S3 bucket](https:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/userguide\/UsingBucket.html), etc. You can add as many data sources as you need to Retool and make them available for users to query. END"}
{"prompt":"A _data source_ is somewhere you store and perform operations with data. This could be a [PostgreSQL database](https:\/\/www.postgresql.org\/), the [Twilio REST API](https:\/\/www.twilio.com\/docs\/usage\/api), an [Amazon S3 bucket](https:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/userguide\/UsingBucket.html), etc. You can add as many data sources as you need to Retool and make them available for users to query.\n\n###\n\n","completion":" ![Data sources](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/cd0ec072-e674-484b-8b8f-081b2eb18f67.webp) END"}
{"prompt":"Resources\n\n###\n\n","completion":" A _resource_ is a saved set of user-configured properties that determine how Retool connects to data source. You create a resource for each data source you want to use with Retool. You can then select the resource when writing a query so you can interact with the data. END"}
{"prompt":"A _resource_ is a saved set of user-configured properties that determine how Retool connects to data source. You create a resource for each data source you want to use with Retool. You can then select the resource when writing a query so you can interact with the data.\n\n###\n\n","completion":" ![Query the new resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/a0991ccd-096c-4523-be64-8d14e903c4ec.webp) END"}
{"prompt":"![Query the new resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/a0991ccd-096c-4523-be64-8d14e903c4ec.webp)\n\n###\n\n","completion":" Each resource has its own configuration options that Retool uses when interacting with a data source. This configuration can include: END"}
{"prompt":"Each resource has its own configuration options that Retool uses when interacting with a data source. This configuration can include:\n\n###\n\n","completion":" ![Configure settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/55e64746-2df1-4658-a7f4-11ae09a155f3.webp) END"}
{"prompt":"Integrations\n\n###\n\n","completion":" _Integrations_ are the available data source types for which you can create a resource. Retool includes [built-in integrations](https:\/\/retool.com\/integrations\/) for many popular data sources that require minimal configuration, such as [SQL databases](https:\/\/docs.retool.com\/docs\/connect-database-resource), [Twilio](https:\/\/retool.com\/integrations\/twilio), and [Stripe](https:\/\/retool.com\/integrations\/stripe). If Retool doesn't have a built-in integration for a particular type of data source, you can connect to almost any API using [REST](https:\/\/docs.retool.com\/docs\/connect-api-resource), [GraphQL](https:\/\/docs.retool.com\/docs\/graphql), or [SOAP](https:\/\/docs.retool.com\/docs\/connect-api-resource#soap-apis) integrations. END"}
{"prompt":"_Integrations_ are the available data source types for which you can create a resource. Retool includes [built-in integrations](https:\/\/retool.com\/integrations\/) for many popular data sources that require minimal configuration, such as [SQL databases](https:\/\/docs.retool.com\/docs\/connect-database-resource), [Twilio](https:\/\/retool.com\/integrations\/twilio), and [Stripe](https:\/\/retool.com\/integrations\/stripe). If Retool doesn't have a built-in integration for a particular type of data source, you can connect to almost any API using [REST](https:\/\/docs.retool.com\/docs\/connect-api-resource), [GraphQL](https:\/\/docs.retool.com\/docs\/graphql), or [SOAP](https:\/\/docs.retool.com\/docs\/connect-api-resource#soap-apis) integrations.\n\n###\n\n","completion":" ![Select a resource type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/797f87a1-90a7-46a9-9f40-00a4c3dd2f8a.webp) END"}
{"prompt":"How resources work\n\n###\n\n","completion":" Resources store the required settings for Retool to connect to your data source. This simplifies how you query data sources while ensuring access is secure. END"}
{"prompt":"Resources store the required settings for Retool to connect to your data source. This simplifies how you query data sources while ensuring access is secure.\n\n###\n\n","completion":" When a query is run for a resource, Retool proxies the request to the data source, server-side, using the resource's configuration settings. This means only Retool directly connects to a data source, not your users. END"}
{"prompt":"When a query is run for a resource, Retool proxies the request to the data source, server-side, using the resource's configuration settings. This means only Retool directly connects to a data source, not your users.\n\n###\n\n","completion":" ![Resources flow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/4e419b2c-e527-4673-afde-783c07d674e1.webp) END"}
{"prompt":"![Resources flow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/4e419b2c-e527-4673-afde-783c07d674e1.webp)\n\n###\n\n","completion":" Retool abstracts away all of the complexities when connecting to a data source from your users. They only need to select the resource to use when writing a query. The type of data source is also displayed but your users only need to specify the resource. In addition, you can connect different data sources of the same type. For example, you can add multiple Amazon S3 buckets as different resources to distinguish their usage. END"}
{"prompt":"Retool abstracts away all of the complexities when connecting to a data source from your users. They only need to select the resource to use when writing a query. The type of data source is also displayed but your users only need to specify the resource. In addition, you can connect different data sources of the same type. For example, you can add multiple Amazon S3 buckets as different resources to distinguish their usage.\n\n###\n\n","completion":" With this approach, users don't interact directly with your data sources. Retool avoids any client-side connections to the data source that could expose credentials and ensures all interactions use the same conditions. Resources also make [query caching](https:\/\/docs.retool.com\/docs\/caching-in-retool#use-query-caching) possible, which allows Retool to serve cached data and reduce the number of requests to a data source—potentially reducing costs. END"}
{"prompt":"title: \"Manage resources with Retool API\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Programmatically view and create resources using the Retool REST API\"\nhidden: true\n\n###\n\n","completion":" The Retool API allows you to programmatically interact with your Retool instance. At the moment, you can use the API to perform: END"}
{"prompt":"Retool API reference\n\n###\n\n","completion":" Refer to the [Retool API reference](https:\/\/docs.retool.com\/reference) to view API documentation. The Retool API is also documented using the OpenAPI 3.0 format and available at `https:\/\/api.retool.com\/api\/v1\/spec`. END"}
{"prompt":"Authenticate requests\n\n###\n\n","completion":" The Retool API uses access tokens to authenticate requests. Administrators can manage and obtain access tokens in the **API** section of the Retool organization settings. END"}
{"prompt":"The Retool API uses access tokens to authenticate requests. Administrators can manage and obtain access tokens in the **API** section of the Retool organization settings.\n\n###\n\n","completion":" Access tokens are formatted as a randomly generated string, prefixed with `retool_`, such as `retool_01ga7bf2fz4hp1fj558a96bdjp`. END"}
{"prompt":"Access tokens are formatted as a randomly generated string, prefixed with `retool_`, such as `retool_01ga7bf2fz4hp1fj558a96bdjp`.\n\n###\n\n","completion":" To authenticate, include the access token in the `Authorization` HTTP header using the `Bearer` syntax: END"}
{"prompt":"To authenticate, include the access token in the `Authorization` HTTP header using the `Bearer` syntax:\n\n###\n\n","completion":" Access tokens are scoped and currently grant either **read** or **read and write** access to resources. END"}
{"prompt":"Use the Retool API within apps\n\n###\n\n","completion":" If you would like to interact with the Retool API using your Retool apps, create either a [REST API](https:\/\/docs.retool.com\/docs\/connect-api-resource) resource or [OpenAPI](https:\/\/docs.retool.com\/docs\/openapi-integration) resource. END"}
{"prompt":"If you would like to interact with the Retool API using your Retool apps, create either a [REST API](https:\/\/docs.retool.com\/docs\/connect-api-resource) resource or [OpenAPI](https:\/\/docs.retool.com\/docs\/openapi-integration) resource.\n\n###\n\n","completion":" Set the `specification URL` to one of the following values, depending on if you're using Retool Cloud or a [Self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) deployment: END"}
{"prompt":"Set the `specification URL` to one of the following values, depending on if you're using Retool Cloud or a [Self-hosted](https:\/\/docs.retool.com\/docs\/self-hosted) deployment:\n\n###\n\n","completion":" Include an `Authorization` header to authenticate your requests. END"}
{"prompt":"Definitions\n\n###\n\n","completion":" The Retool API allows you to interact with resources, resource configurations, and environments. END"}
{"prompt":"Resource\n\n###\n\n","completion":" A _resource_ is a collection of resource configurations that share the same high-level metadata. For the API, the relevant metadata are the resource `type` (e.g. `postgres`, `mysql`, `restapi`) and the `display name` of the resource. END"}
{"prompt":"A _resource_ is a collection of resource configurations that share the same high-level metadata. For the API, the relevant metadata are the resource `type` (e.g. `postgres`, `mysql`, `restapi`) and the `display name` of the resource.\n\n###\n\n","completion":" Every resource must have at least one configuration, and it must be for your organization's default environment. END"}
{"prompt":"Resource configuration\n\n###\n\n","completion":" A _resource configuration_ is the configuration of a resource within a specific environment. It stores the resource's connection options (e.g. `hostname`, `port`, `base URL`, and authentication credentials) for a specific environment. END"}
{"prompt":"A _resource configuration_ is the configuration of a resource within a specific environment. It stores the resource's connection options (e.g. `hostname`, `port`, `base URL`, and authentication credentials) for a specific environment.\n\n###\n\n","completion":" Resource configurations are uniquely identified by the combination of its  `resource id` and `environment id`. END"}
{"prompt":"Example\n\n###\n\n","completion":" Let's walk through an example to further clarify the differences. END"}
{"prompt":"Let's walk through an example to further clarify the differences.\n\n###\n\n","completion":" Imagine that you want to create a new `mysql` resource, and your organization has two environments: `production`, which is your default environment, and `staging`. When you create that resource in Retool, you create both the resource configuration for `production`, which contains the environment-specific connection options, and the resource. Once the resource is created, you can then configure a new `mysql` resource configuration for `staging` that will fall under the same display name. END"}
{"prompt":"List resources\n\n###\n\n","completion":" The Retool API allows you to view your resources and resource configurations. END"}
{"prompt":"The Retool API allows you to view your resources and resource configurations.\n\n###\n\n","completion":" For example, let's say that you want to get all of the `restapi` resources in your organization. You can run the following command: END"}
{"prompt":"For example, let's say that you want to get all of the `restapi` resources in your organization. You can run the following command:\n\n###\n\n","completion":" Likewise, you can get all of the `restapi` resource configurations with the following command: END"}
{"prompt":"Likewise, you can get all of the `restapi` resource configurations with the following command:\n\n###\n\n","completion":" Note that the response will only contain resources in your organization that you have access to. END"}
{"prompt":"Pagination\n\n###\n\n","completion":" By default, our responses include up to 100 items. If there are more items, the `has_more` field in the response will be set to `true` and the `next` field will have a pagination token. END"}
{"prompt":"By default, our responses include up to 100 items. If there are more items, the `has_more` field in the response will be set to `true` and the `next` field will have a pagination token.\n\n###\n\n","completion":" To request the next page of results, include the token in the URL parameters of the request: END"}
{"prompt":"Create a resource\n\n###\n\n","completion":" You can also create new resources and resource configurations. END"}
{"prompt":"You can also create new resources and resource configurations.\n\n###\n\n","completion":" For example, let's say that you want to create a new postgres resource.\nYou will need to specify both the metadata for the resource and the connection options for your resource in the default environment: END"}
{"prompt":"For example, let's say that you want to create a new postgres resource.\nYou will need to specify both the metadata for the resource and the connection options for your resource in the default environment:\n\n###\n\n","completion":" This creates both a resource and a resource configuration in the default environment.\nYou can then create resource configurations in other environments as follows: END"}
{"prompt":"Update a resource\n\n###\n\n","completion":" Another feature of the Retool API is updating resources and resource configurations. END"}
{"prompt":"Another feature of the Retool API is updating resources and resource configurations.\n\n###\n\n","completion":" Let's say that you want to change the display name of the postgres resource you just created. When you create the resource, you should receive its resource id as part of the response. You can run END"}
{"prompt":"Let's say that you want to change the display name of the postgres resource you just created. When you create the resource, you should receive its resource id as part of the response. You can run\n\n###\n\n","completion":" If you want to update the connection options, you must update the resource configuration, not the resource. In this case, you have to pass the resource configuration id, which you can also get from the response. You can run a command like this: END"}
{"prompt":"If you want to update the connection options, you must update the resource configuration, not the resource. In this case, you have to pass the resource configuration id, which you can also get from the response. You can run a command like this:\n\n###\n\n","completion":" Note that if you want to update the resource configuration in the default environment, you still use this endpoint. If you did not save the resource id or resource configuration id, you can re-query it as detailed in the [Listing Resources](#listing-resources) section. END"}
{"prompt":"Delete a resource\n\n###\n\n","completion":" Lastly, you can use delete resources and resource configurations. Deleting a resource deletes not only the resource, but also all of its configurations. END"}
{"prompt":"Lastly, you can use delete resources and resource configurations. Deleting a resource deletes not only the resource, but also all of its configurations.\n\n###\n\n","completion":" Here is an example command deleting the postgres resource we created: END"}
{"prompt":"Here is an example command deleting the postgres resource we created:\n\n###\n\n","completion":" If you want to only delete a resource configuration for a specific environment, you can use the DELETE resource configurations endpoint. For example, END"}
{"prompt":"If you want to only delete a resource configuration for a specific environment, you can use the DELETE resource configurations endpoint. For example,\n\n###\n\n","completion":" Note that you will never be able to delete the resource configuration in the default environment. You must delete the whole resource in order to do that. END"}
{"prompt":"Errors\n\n###\n\n","completion":" Responses with a non-200 status code will always return a JSON object with at least two fields. The `success` field will be `false` and the `message` field will include a description of the error. END"}
{"prompt":"Identifiers\n\n###\n\n","completion":" Unless otherwise noted, resources and resource configurations in the API will have an `id` field with a `UUIDV4` UUID. This corresponds to the resource id and the resource configuration id respectively. END"}
{"prompt":"Timestamps\n\n###\n\n","completion":" All timestamps are returned in [ISO 8601](https:\/\/www.iso.org\/iso-8601-date-and-time-format.html) format: END"}
{"prompt":"title: \"Retool Database storage for Retool Cloud\"\ncategorySlug: \"retool-database\"\nparentDocSlug: \"retool-database-concepts\"\nexcerpt: \"Learn more about data storage in Retool Database for Retool Cloud.\"\nhidden: false\n\n###\n\n","completion":" Retool enforces some limits on the type and amount of data you can store in Retool Database for Retool Cloud. END"}
{"prompt":"Data redundancy\n\n###\n\n","completion":" Retool Database stores and continually backs up your data in a PostgreSQL cluster managed by our cloud provider. Retool uses multiple levels of redundancy, which include daily backups of all data. If you have any questions or would like to know more, [contact Retool Support](mailto:support@retool.com). END"}
{"prompt":"Staging data\n\n###\n\n","completion":" Any changes you make with data in Retool Database cannot be reverted. Retool recommends using [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) with staging data to avoid accidental loss of data. END"}
{"prompt":"Data to omit from Retool Database\n\n###\n\n","completion":" To guard against risk, Retool asks that you do not store protected health information (PHI), financial data, and nonpublic personal information. Although Retool does not have a legal obligation to enforce this, storing these kinds of information may not comply with your own legal or compliance obligations. END"}
{"prompt":"To guard against risk, Retool asks that you do not store protected health information (PHI), financial data, and nonpublic personal information. Although Retool does not have a legal obligation to enforce this, storing these kinds of information may not comply with your own legal or compliance obligations.\n\n###\n\n","completion":" Examples of data you should not store include: END"}
{"prompt":"Examples of data you should not store include:\n\n###\n\n","completion":" Please refer to our [terms of service](https:\/\/retool.com\/tos.pdf) for detailed information. END"}
{"prompt":"Record and size limits\n\n###\n\n","completion":" On Retool Cloud, you can store up to 1GB of storage for one year for free. To check your current storage usage, refer to the gauge in the Database editor UI. This is displayed as a dropdown to the right of the toolbar. END"}
{"prompt":"On Retool Cloud, you can store up to 1GB of storage for one year for free. To check your current storage usage, refer to the gauge in the Database editor UI. This is displayed as a dropdown to the right of the toolbar.\n\n###\n\n","completion":" ![Check RetoolDB usage](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/eaddf36f-1972-4258-b66f-e27ec8248b64.png) END"}
{"prompt":"![Check RetoolDB usage](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/eaddf36f-1972-4258-b66f-e27ec8248b64.png)\n\n###\n\n","completion":" The amount of storage space your data uses is dependent on how many records, fields, and tables you use, and the size of values. If you exceed your storage limits, reach out to Retool to request a limit increase. END"}
{"prompt":"Data security\n\n###\n\n","completion":" Retool's [security guide](https:\/\/docs.retool.com\/page\/security) provides detailed information about data storage and security for provisioned databases hosted by Retool. Within your Retool organization, you can control who has access by configuring [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions). END"}
{"prompt":"title: \"Retool Database quickstart\"\ncategorySlug: \"retool-database\"\nexcerpt: \"Learn how to store data in a Retool-hosted database with a spreadsheet-like interface.\"\nhidden: false\n\n###\n\n","completion":" [Retool Database](https:\/\/retool.com\/products\/database) is a fast, secure solution for saving and editing data to use in Retool apps. It combines a PostgreSQL database with a spreadsheet-like interface to manage your data. On Retool Cloud, the underlying database is managed by Retool. On [Self-hosted deployments](https:\/\/docs.retool.com\/docs\/retool-database-self-hosted), you host your own PostgreSQL database. END"}
{"prompt":"[Retool Database](https:\/\/retool.com\/products\/database) is a fast, secure solution for saving and editing data to use in Retool apps. It combines a PostgreSQL database with a spreadsheet-like interface to manage your data. On Retool Cloud, the underlying database is managed by Retool. On [Self-hosted deployments](https:\/\/docs.retool.com\/docs\/retool-database-self-hosted), you host your own PostgreSQL database.\n\n###\n\n","completion":" ![Retool Database editor overview](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/1dec46a6-3b1b-400c-ad16-ff92ee27d754.png) END"}
{"prompt":"Features\n\n###\n\n","completion":" With Retool Database, you can: END"}
{"prompt":"Get started\n\n###\n\n","completion":" On Retool Cloud, Retool Database is available automatically for all users. Log in to Retool and navigate to the **Resources tab**. If you don't have an account yet, [sign up](https:\/\/login.retool.com\/auth\/signup) for free. END"}
{"prompt":"On Retool Cloud, Retool Database is available automatically for all users. Log in to Retool and navigate to the **Resources tab**. If you don't have an account yet, [sign up](https:\/\/login.retool.com\/auth\/signup) for free.\n\n###\n\n","completion":" On Self-hosted Retool, follow the [configuration guide](https:\/\/docs.retool.com\/docs\/retool-database-self-hosted) to configure Retool Database, backed by your own PostgreSQL database. END"}
{"prompt":"On Self-hosted Retool, follow the [configuration guide](https:\/\/docs.retool.com\/docs\/retool-database-self-hosted) to configure Retool Database, backed by your own PostgreSQL database.\n\n###\n\n","completion":" The **Retool Database** resource, available in the **Retool Hosted** section, represents your Retool-managed PostgreSQL database <<glossary:resource>>. You can view and manage your database and the data it contains using the Database editor UI, or configure resource settings, such as environments. END"}
{"prompt":"The **Retool Database** resource, available in the **Retool Hosted** section, represents your Retool-managed PostgreSQL database <<glossary:resource>>. You can view and manage your database and the data it contains using the Database editor UI, or configure resource settings, such as environments.\n\n###\n\n","completion":" ![Retool Database resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/45316cb9-cc4b-4e69-b621-bbd6a7bd295a.jpg) END"}
{"prompt":"Interact with data using the Database editor UI\n\n###\n\n","completion":" You can visually interact with your database much like a spreadsheet. To access it, hover the cursor over the resource and click **View**. END"}
{"prompt":"You can visually interact with your database much like a spreadsheet. To access it, hover the cursor over the resource and click **View**.\n\n###\n\n","completion":" Databases organize data into _tables_ that can have different structures (e.g., separate tables for product and customer data). Each tab along the top of the interface corresponds to a table—click on a tab to view its data. END"}
{"prompt":"Databases organize data into _tables_ that can have different structures (e.g., separate tables for product and customer data). Each tab along the top of the interface corresponds to a table—click on a tab to view its data.\n\n###\n\n","completion":" You can open the **Table options** menu by clicking the arrow next to the name. END"}
{"prompt":"You can open the **Table options** menu by clicking the arrow next to the name.\n\n###\n\n","completion":" ![Database tables](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/cafdb22c-a01b-48a1-9154-5b1ebb36a79d.jpg) END"}
{"prompt":"![Database tables](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/cafdb22c-a01b-48a1-9154-5b1ebb36a79d.jpg)\n\n###\n\n","completion":" Click on a field's name in the header to open the **Field options** menu that provides access to various options. END"}
{"prompt":"Click on a field's name in the header to open the **Field options** menu that provides access to various options.\n\n###\n\n","completion":" ![Field options menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/ec4153de-f82c-4128-b772-36c7e8bb75b8.jpg) END"}
{"prompt":"![Field options menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/ec4153de-f82c-4128-b772-36c7e8bb75b8.jpg)\n\n###\n\n","completion":" To quickly edit existing table data, double-click on a cell and update its value, then click **Save**. You can also interact with certain fields using checkboxes or select options. END"}
{"prompt":"To quickly edit existing table data, double-click on a cell and update its value, then click **Save**. You can also interact with certain fields using checkboxes or select options.\n\n###\n\n","completion":" ![Update text in a cell](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/ad3f4069-1f24-4ce3-8a5d-5e8dcf7edcad.jpg) END"}
{"prompt":"Create tables\n\n###\n\n","completion":" Retool Database prompts you to create a new table automatically if one doesn't already exist. You can create an empty table or import existing data in CSV format. END"}
{"prompt":"Import CSV\n\n###\n\n","completion":" To import existing CSV-formatted data, drag a file onto the drop zone. Once you upload a file, Retool attempts to identify the type for each field of CSV-formatted data and map it to an appropriate field type to create a table schema. END"}
{"prompt":"To import existing CSV-formatted data, drag a file onto the drop zone. Once you upload a file, Retool attempts to identify the type for each field of CSV-formatted data and map it to an appropriate field type to create a table schema.\n\n###\n\n","completion":" ![New CSV import](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/99412f59-2301-4f52-a962-43e922d55b49.jpg) END"}
{"prompt":"![New CSV import](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/99412f59-2301-4f52-a962-43e922d55b49.jpg)\n\n###\n\n","completion":" You have the opportunity to review and make changes to the new table schema in the **Schema mapping** section before importing data. You can change field names and types, drag fields to change their order, or remove certain fields from being imported by clicking the **X** button. END"}
{"prompt":"You have the opportunity to review and make changes to the new table schema in the **Schema mapping** section before importing data. You can change field names and types, drag fields to change their order, or remove certain fields from being imported by clicking the **X** button.\n\n###\n\n","completion":" You can also configure how imports are processed using the **Import settings** section. END"}
{"prompt":"Set the primary key\n\n###\n\n","completion":" A _primary key_ is a field that uniquely identifies each table record. Retool automatically includes an `id` field for the primary key when you create a new table and it's the default option during a CSV import. END"}
{"prompt":"A _primary key_ is a field that uniquely identifies each table record. Retool automatically includes an `id` field for the primary key when you create a new table and it's the default option during a CSV import.\n\n###\n\n","completion":" You can configure a table's primary key at any time. Click the table's tab and select **Edit Primary Key**, then select a field in the **New Primary Key** dropdown menu. END"}
{"prompt":"You can configure a table's primary key at any time. Click the table's tab and select **Edit Primary Key**, then select a field in the **New Primary Key** dropdown menu.\n\n###\n\n","completion":" ![Edit primary key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/c87cce3c-f1b5-4784-9c96-289c3edb65da.jpg) END"}
{"prompt":"![Edit primary key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/c87cce3c-f1b5-4784-9c96-289c3edb65da.jpg)\n\n###\n\n","completion":" If your data doesn't contain a single field that can uniquely identify records, you can use a _composite key_. When enabled, you can select multiple fields and use their combined values as a primary key. END"}
{"prompt":"If your data doesn't contain a single field that can uniquely identify records, you can use a _composite key_. When enabled, you can select multiple fields and use their combined values as a primary key.\n\n###\n\n","completion":" ![Use a composite key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/af7f9b82-b5af-4c71-9e2f-9ec90000fe0b.jpg) END"}
{"prompt":"![Use a composite key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/af7f9b82-b5af-4c71-9e2f-9ec90000fe0b.jpg)\n\n###\n\n","completion":" If necessary, you can delete a table's primary key. Tables without a primary key are read-only and you cannot make changes to data unless there is a primary key set. END"}
{"prompt":"Copy table schema\n\n###\n\n","completion":" You can create a new, empty table based on an existing table's schema. Open the **Table options** menu for an existing table and select **Copy schema**. Retool creates a new table and configures it with the same fields. END"}
{"prompt":"You can create a new, empty table based on an existing table's schema. Open the **Table options** menu for an existing table and select **Copy schema**. Retool creates a new table and configures it with the same fields.\n\n###\n\n","completion":" ![Copy schema](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/f9b51a07-dcb6-40aa-889a-9fb7827cc37e.jpg) END"}
{"prompt":"![Copy schema](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/f9b51a07-dcb6-40aa-889a-9fb7827cc37e.jpg)\n\n###\n\n","completion":" Tables created using an existing schema do not have a primary key set and are initially read-only. You must configure a primary key before you can edit table data. END"}
{"prompt":"Add or edit records\n\n###\n\n","completion":" Click **Add record** to save new data to the current table. This opens the **Add record** modal that contains input fields generated from the current table's schema. Each input reflects the field's type, whether the field is nullable, and any default value. END"}
{"prompt":"Click **Add record** to save new data to the current table. This opens the **Add record** modal that contains input fields generated from the current table's schema. Each input reflects the field's type, whether the field is nullable, and any default value.\n\n###\n\n","completion":" After completing the form, click **Create** to save the record to the table. END"}
{"prompt":"After completing the form, click **Create** to save the record to the table.\n\n###\n\n","completion":" ![Add record](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/30115963-e3c9-4ba0-b34d-5d3d6a7acef7.jpg) END"}
{"prompt":"![Add record](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/30115963-e3c9-4ba0-b34d-5d3d6a7acef7.jpg)\n\n###\n\n","completion":" You can also edit existing records using the same modal by clicking the **Expand** button that appears when hovering the cursor over a record. END"}
{"prompt":"You can also edit existing records using the same modal by clicking the **Expand** button that appears when hovering the cursor over a record.\n\n###\n\n","completion":" ![Edit record](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/bdfa2e4d-e28c-420f-8ca7-6ee9b2b57285.jpg) END"}
{"prompt":"![Edit record](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/bdfa2e4d-e28c-420f-8ca7-6ee9b2b57285.jpg)\n\n###\n\n","completion":" To delete records, select them using the checkbox and click the red **Delete** button at the bottom of the window. END"}
{"prompt":"Manage fields\n\n###\n\n","completion":" To add a new field, click the **+** button to the right of the last field. Specify the name and type, then click **Save**. You can also add a new field to the left or right of existing fields. Click the field name to open the **Field options** menu and select either **Insert field left** or **Insert field right**. END"}
{"prompt":"Set field types\n\n###\n\n","completion":" You can set a field's _type_, which reflects the data it contains. Click the field name to open the **Field options** menu and select **Settings**, or configure it when adding a new field. Each type includes additional options for configuration. END"}
{"prompt":"You can set a field's _type_, which reflects the data it contains. Click the field name to open the **Field options** menu and select **Settings**, or configure it when adding a new field. Each type includes additional options for configuration.\n\n###\n\n","completion":" Setting the correct field type helps ensure that only valid data is entered. It also configures additional methods of input and determines how best to filter data. Some examples include: END"}
{"prompt":"Setting the correct field type helps ensure that only valid data is entered. It also configures additional methods of input and determines how best to filter data. Some examples include:\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d4965042-22c0-48e9-8a21-db348205478f.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/6e159924-b252-4d52-b636-5ee8771c98fb.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Configure fields\n\n###\n\n","completion":" If you need more control over the field, click **Advanced** to configure advanced options like PostgreSQL type, default field value, and whether a field should allow null (nullable) or require unique values. Refer to [PostgreSQL's official documentation](https:\/\/www.postgresql.org\/docs\/9.5\/datatype.html) to learn more about about PostgreSQL schemas and data types. END"}
{"prompt":"Search records\n\n###\n\n","completion":" Click **Quick find** and enter a search term to search through all records in the current table. Any results are highlighted and you can move between results using the search box. END"}
{"prompt":"Filter records\n\n###\n\n","completion":" Click **Filter** to define filter conditions and show only records that match all of them. For example, you can show only records with a `quantity` field value less than `9000` and contain `the` in the `name` field value. END"}
{"prompt":"Click **Filter** to define filter conditions and show only records that match all of them. For example, you can show only records with a `quantity` field value less than `9000` and contain `the` in the `name` field value.\n\n###\n\n","completion":" You can add field filters from the **Field options** menu. Click the field name in the header and select **Filter by this field**. END"}
{"prompt":"You can add field filters from the **Field options** menu. Click the field name in the header and select **Filter by this field**.\n\n###\n\n","completion":" Click **Apply filter** to filter records. The **Filter** button remains active while filters are applied and displays the number of filter conditions in use. To disable the filter, remove all filters and click **Apply filter** again. END"}
{"prompt":"Click **Apply filter** to filter records. The **Filter** button remains active while filters are applied and displays the number of filter conditions in use. To disable the filter, remove all filters and click **Apply filter** again.\n\n###\n\n","completion":" ![Filter records](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/4d9947c5-140e-43e0-aae1-7a750e4043da.jpg) END"}
{"prompt":"Sort records\n\n###\n\n","completion":" You can sort records by multiple fields in ascending or descending order. Click the **Sort** button to select fields and specify sort order. You can configure sorting to use multiple fields. In the event that multiple records have the same field values, the next field sorting option is applied. END"}
{"prompt":"You can sort records by multiple fields in ascending or descending order. Click the **Sort** button to select fields and specify sort order. You can configure sorting to use multiple fields. In the event that multiple records have the same field values, the next field sorting option is applied.\n\n###\n\n","completion":" ![Sort by field](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/f1ec31fa-660f-4482-8e63-1bcdb5db35b2.jpg) END"}
{"prompt":"![Sort by field](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/f1ec31fa-660f-4482-8e63-1bcdb5db35b2.jpg)\n\n###\n\n","completion":" You can quickly add fields for sorting from the **Field options** menu. Click the field name in the header and select either **Sort ascending** or **Sort descending**. END"}
{"prompt":"You can quickly add fields for sorting from the **Field options** menu. Click the field name in the header and select either **Sort ascending** or **Sort descending**.\n\n###\n\n","completion":" Click **Apply** to sort records. The **Sort** button remains active while sorting is applied and displays the number of sorting options in use. To disable sorting, remove all sorting options and click **Apply** again. END"}
{"prompt":"Customize view options for fields\n\n###\n\n","completion":" Click the **Fields** button in the toolbar to customize how fields appear in the Database editor UI. You can change the order of fields, pin a single field to the left, and toggle visibility. END"}
{"prompt":"Click the **Fields** button in the toolbar to customize how fields appear in the Database editor UI. You can change the order of fields, pin a single field to the left, and toggle visibility.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d247bb1b-e313-4dea-b774-c978cdff74be.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d433caf4-8800-451e-ae08-8b58ed736a68.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Pin a field\n\n###\n\n","completion":" A pinned field is fixed to the left of the Database editor UI and is always visible when scrolling horizontally. Click and drag a field to the **Pinned** section to pin it. END"}
{"prompt":"A pinned field is fixed to the left of the Database editor UI and is always visible when scrolling horizontally. Click and drag a field to the **Pinned** section to pin it.\n\n###\n\n","completion":" You can also pin a field from its **Field options** menu by clicking **Pin this field**. END"}
{"prompt":"Reorder fields\n\n###\n\n","completion":" You can drag-and-drop fields to reorder them in the Database editor UI. Click and drag fields into different positions to change their order. END"}
{"prompt":"Hidden fields\n\n###\n\n","completion":" If you need to work with large tables with many fields, you can hide fields that you don't need to use. Toggle the switch to the right of a field's name to show or hide fields. When there are hidden fields, the **Fields** button remains active and displays the number of hidden fields. END"}
{"prompt":"If you need to work with large tables with many fields, you can hide fields that you don't need to use. Toggle the switch to the right of a field's name to show or hide fields. When there are hidden fields, the **Fields** button remains active and displays the number of hidden fields.\n\n###\n\n","completion":" You can also hide a field from its **Field options** menu by clicking **Hide this field**. END"}
{"prompt":"Link records across tables\n\n###\n\n","completion":" You can link records between tables in the Database editor UI to see relevant data in one place. For example, you could link a table with order information to another table with user details. The **foreign keys** field references a field from another table that contains unique values, such as the primary key. Once a value is set, you can view the relevant linked record. END"}
{"prompt":"You can link records between tables in the Database editor UI to see relevant data in one place. For example, you could link a table with order information to another table with user details. The **foreign keys** field references a field from another table that contains unique values, such as the primary key. Once a value is set, you can view the relevant linked record.\n\n###\n\n","completion":" Once linked, you can click the **Link** icon to jump to the related record. END"}
{"prompt":"Once linked, you can click the **Link** icon to jump to the related record.\n\n###\n\n","completion":" The values you specify for a **Foreign key** field do not need to be unique. You can link to the same unique record on the linked table multiple times (e.g., multiple orders for the same customer). END"}
{"prompt":"The values you specify for a **Foreign key** field do not need to be unique. You can link to the same unique record on the linked table multiple times (e.g., multiple orders for the same customer).\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/f3dad194-1b05-4697-a478-0502175ea4ae.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d3eb634e-d965-4eb9-8220-290f70a98e2b.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Use multiple environments\n\n###\n\n","completion":" You can use Retool Database with [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments#configure-environment-resources) to build and test apps using staging data without impacting critical data. END"}
{"prompt":"You can use Retool Database with [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments#configure-environment-resources) to build and test apps using staging data without impacting critical data.\n\n###\n\n","completion":" The Retool Database resource is automatically configured for any additional environments in use by your organization. Each environment contains an isolated set of tables—any changes you make in one environment do not affect others. Use [schema migrations](https:\/\/docs.retool.com\/docs\/retool-database-schema-migrations) to sync changes between environments. END"}
{"prompt":"The Retool Database resource is automatically configured for any additional environments in use by your organization. Each environment contains an isolated set of tables—any changes you make in one environment do not affect others. Use [schema migrations](https:\/\/docs.retool.com\/docs\/retool-database-schema-migrations) to sync changes between environments.\n\n###\n\n","completion":" The Database editor UI loads tables for the currently selected environment, which is _production_ by default. Use the **Environment** menu in the upper-right to select which environment tables to use. END"}
{"prompt":"The Database editor UI loads tables for the currently selected environment, which is _production_ by default. Use the **Environment** menu in the upper-right to select which environment tables to use.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/9feea881-8cdc-47d2-9f05-d66cd0ee2e49.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/00f102b5-df06-44c2-8f23-7ffed80fca35.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Query your data\n\n###\n\n","completion":" You [write queries](https:\/\/docs.retool.com\/docs\/queries) to interact with Retool Database data in the same way as any other SQL database resource connected to Retool. END"}
{"prompt":"You [write queries](https:\/\/docs.retool.com\/docs\/queries) to interact with Retool Database data in the same way as any other SQL database resource connected to Retool.\n\n###\n\n","completion":" Select the **Retool Database** resource in the query editor, then specify whether you want to write raw SQL queries in **SQL mode** or construct queries with an interface using **GUI mode**. As with other SQL databases, you can explore tables in the database. END"}
{"prompt":"Select the **Retool Database** resource in the query editor, then specify whether you want to write raw SQL queries in **SQL mode** or construct queries with an interface using **GUI mode**. As with other SQL databases, you can explore tables in the database.\n\n###\n\n","completion":" ![Use Retool Database in your apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d002e904-d4de-4abb-841a-660bcdff30e5.jpg) END"}
{"prompt":"![Use Retool Database in your apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d002e904-d4de-4abb-841a-660bcdff30e5.jpg)\n\n###\n\n","completion":" You can switch between multiple environments from your apps which automatically refreshes any queries you've written. Provided you use the same table names, your app will reload data from the selected environment automatically. END"}
{"prompt":"You can switch between multiple environments from your apps which automatically refreshes any queries you've written. Provided you use the same table names, your app will reload data from the selected environment automatically.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/0e609953-8e1a-4ad3-a1a2-fd239efc8d7f.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d3eb634e-d965-4eb9-8220-290f70a98e2b.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/0e609953-8e1a-4ad3-a1a2-fd239efc8d7f.jpg\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/d3eb634e-d965-4eb9-8220-290f70a98e2b.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" You can also use and query Retool Database in the [Query Library](https:\/\/docs.retool.com\/docs\/query-library) by selecting the **retool_db** resource. END"}
{"prompt":"You can also use and query Retool Database in the [Query Library](https:\/\/docs.retool.com\/docs\/query-library) by selecting the **retool_db** resource.\n\n###\n\n","completion":" ![Use Retool Database within the Query Library](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/6e4830a2-1074-4675-8ffa-8d3ba47bec16.png) END"}
{"prompt":"Access data externally\n\n###\n\n","completion":" To access Retool Database data outside of your apps, you can: END"}
{"prompt":"Export data as a CSV\n\n###\n\n","completion":" You can export a copy of table data at any time in CSV format. Open the **Table options** menu for an existing table and select **Export CSV**. END"}
{"prompt":"You can export a copy of table data at any time in CSV format. Open the **Table options** menu for an existing table and select **Export CSV**.\n\n###\n\n","completion":" ![Alt text](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/661305fa-0278-4d4f-bc64-cff284a126c4.jpg) END"}
{"prompt":"![Alt text](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/661305fa-0278-4d4f-bc64-cff284a126c4.jpg)\n\n###\n\n","completion":" In the [Query Library](https:\/\/docs.retool.com\/docs\/query-library), you can also export CSVs after running SQL commands. Click the **Download csv** button next to the query results to download a CSV of your data. END"}
{"prompt":"Use Retool Workflows with Retool Database\n\n###\n\n","completion":" With [Retool Workflows](https:\/\/docs.retool.com\/docs\/retool-workflows), you can schedule ETL tasks to push and pull data between Retool Database and third-party endpoints and integrations. In a Workflows [Query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks), select **retool_db** as the resource to access Retool Database data. END"}
{"prompt":"With [Retool Workflows](https:\/\/docs.retool.com\/docs\/retool-workflows), you can schedule ETL tasks to push and pull data between Retool Database and third-party endpoints and integrations. In a Workflows [Query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks), select **retool_db** as the resource to access Retool Database data.\n\n###\n\n","completion":" ![Using Retool DB in Workflows blocks](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/68a86c27-090b-4262-aac0-eb1fd3ef19ec.png) END"}
{"prompt":"Connection strings\n\n###\n\n","completion":" Admins can view connection strings on the **Connection** tab in the **Settings** modal, accessed from the dropdown on the Retool Database title. Retool provides connection strings as [PSQL commands](https:\/\/www.postgresql.org\/docs\/current\/app-psql.html) and [PostgreSQL connection URLs](https:\/\/www.postgresql.org\/docs\/current\/libpq-connect.html#LIBPQ-CONNSTRING). END"}
{"prompt":"Admins can view connection strings on the **Connection** tab in the **Settings** modal, accessed from the dropdown on the Retool Database title. Retool provides connection strings as [PSQL commands](https:\/\/www.postgresql.org\/docs\/current\/app-psql.html) and [PostgreSQL connection URLs](https:\/\/www.postgresql.org\/docs\/current\/libpq-connect.html#LIBPQ-CONNSTRING).\n\n###\n\n","completion":" ![Retool DB connection strings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/c50462a2-307a-4261-994a-c1ed38687214.png) END"}
{"prompt":"![Retool DB connection strings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/c50462a2-307a-4261-994a-c1ed38687214.png)\n\n###\n\n","completion":" You can copy the PSQL command directly to the command line, or use the PostgreSQL connection URL in external applications. For example, use the connection URL in PostgreSQL clients such as [PgAdmin](https:\/\/www.pgadmin.org\/), platforms such as Zapier, or any ORM which connects to PostgreSQL. END"}
{"prompt":"title: \"Sync schema changes across environments\"\ncategorySlug: \"retool-database\"\nparentDocSlug: \"retool-database-guides\"\nexcerpt: \"Learn how to sync Retool Database schema changes across environments using schema migrations.\"\nhidden: false\n\n###\n\n","completion":" The Retool Database resource is automatically configured for all environments your organization uses. Using schema migrations, you can update Retool Database schemas in one environment and copy these changes to another environment. This allows you to iterate on your database schema on testing environments and deploy updates to users on production apps only when changes are ready. END"}
{"prompt":"Create a schema migration\n\n###\n\n","completion":" You can create a schema migration after creating, updating, or removing any tables or fields in any environment. Select the **Environment** menu in the upper-right and click **Schema migration**. END"}
{"prompt":"You can create a schema migration after creating, updating, or removing any tables or fields in any environment. Select the **Environment** menu in the upper-right and click **Schema migration**.\n\n###\n\n","completion":" ![Schema migration modal from environment dropdown](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/6e03c82c-a3ae-4339-937c-5c6a3bc829a2.png) END"}
{"prompt":"![Schema migration modal from environment dropdown](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/6e03c82c-a3ae-4339-937c-5c6a3bc829a2.png)\n\n###\n\n","completion":" The **History** view shows past migrations, including the executed SQL and whether the migration completed successfully. Click **New migration** to start creating a migration. END"}
{"prompt":"The **History** view shows past migrations, including the executed SQL and whether the migration completed successfully. Click **New migration** to start creating a migration.\n\n###\n\n","completion":" On the new migration modal, you can choose the source and destination environments using the dropdowns and view the schema differences between the two environments. For example, the following shows the addition of two fields: an integer field named `age` and a text field named `avatar_url`. Each are present in the staging environment and not in production. END"}
{"prompt":"On the new migration modal, you can choose the source and destination environments using the dropdowns and view the schema differences between the two environments. For example, the following shows the addition of two fields: an integer field named `age` and a text field named `avatar_url`. Each are present in the staging environment and not in production.\n\n###\n\n","completion":" ![Schema migration with age and URL fields](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/913874c6-776c-4114-850c-b9ef34df17ce.png) END"}
{"prompt":"![Schema migration with age and URL fields](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/913874c6-776c-4114-850c-b9ef34df17ce.png)\n\n###\n\n","completion":" You can click the checkboxes next to the modified tables or fields to exclude changes from the migration. END"}
{"prompt":"Preview and edit SQL\n\n###\n\n","completion":" In the GUI view, the SQL a migration executes is generated automatically. To preview this SQL, click the **SQL** tab. You can edit this SQL to execute custom migrations, but you cannot return to the GUI view after making changes to the SQL. To return to the GUI view, click the **Undo SQL edits** button to reset the SQL changes. END"}
{"prompt":"In the GUI view, the SQL a migration executes is generated automatically. To preview this SQL, click the **SQL** tab. You can edit this SQL to execute custom migrations, but you cannot return to the GUI view after making changes to the SQL. To return to the GUI view, click the **Undo SQL edits** button to reset the SQL changes.\n\n###\n\n","completion":" ![Schema migration SQL editor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/3711031f-4f52-4a5e-9964-c359b36a7fad.png) END"}
{"prompt":"Execute migrations\n\n###\n\n","completion":" To run schema migrations, select the confirmation checkbox and click **Migrate**. On the **History** modal, your migration will display as **Running** and marked as **Completed** when it's finished. You can then navigate back to your destination environment to see the changes reflected on that database. END"}
{"prompt":"Failed migrations\n\n###\n\n","completion":" Migrations with errors show as **Failed** in the **History** modal. When a migration fails, none of its changes apply to your database, so after fixing any errors you can run a migration containing the same changes. The detail view for these failed migrations contains the related PostgreSQL error message. END"}
{"prompt":"Migrations with errors show as **Failed** in the **History** modal. When a migration fails, none of its changes apply to your database, so after fixing any errors you can run a migration containing the same changes. The detail view for these failed migrations contains the related PostgreSQL error message.\n\n###\n\n","completion":" ![Failed migration example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/8e6c7959-8880-4a44-a1cd-60a9db8ce72a.png) END"}
{"prompt":"title: \"Deploy Retool Database on Self-hosted\"\ncategorySlug: \"retool-database\"\nparentDocSlug: \"retool-database-guides\"\nexcerpt: \"Learn how to configure Retool Database on Self-hosted Retool deployments.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Retool Database for Self-hosted Retool enables you to use your own PostgreSQL database to store data instead of hosting it with Retool. Your database automatically connects to the main Retool backend service for your deployment. Using Retool Database, you can easily create tables, visually interact with your data, and connect your data to Retool apps. END"}
{"prompt":"Retool Database for Self-hosted Retool enables you to use your own PostgreSQL database to store data instead of hosting it with Retool. Your database automatically connects to the main Retool backend service for your deployment. Using Retool Database, you can easily create tables, visually interact with your data, and connect your data to Retool apps.\n\n###\n\n","completion":" Retool Database is included in all pricing plans. Because you control your own PostgreSQL database on self-hosted deployments, there are no data limits or overages for Retool Database on self-hosted deployments. END"}
{"prompt":"Use Docker Compose PostgreSQL container\n\n###\n\n","completion":" Retool Database runs as a separate PostgreSQL service in your Docker deployment, using PostgreSQL version 14.3 by default. Retool Database is automatically created and provisioned on new deployments which use [Docker Compose](https:\/\/github.com\/tryretool\/retool-onpremise#single-deployments). END"}
{"prompt":"Existing Docker Compose deployments\n\n###\n\n","completion":" To generate credentials for Retool Database, follow these steps. END"}
{"prompt":"To generate credentials for Retool Database, follow these steps.\n\n###\n\n","completion":" After running `retooldb_upgrade.sh`, follow the usual process to [update your Retool instance](https:\/\/github.com\/tryretool\/retool-onpremise#updating-retool). Retool Database will then be configured as a resource and ready to use. You do not need to run `retooldb_upgrade.sh` on any future version updates. END"}
{"prompt":"Specify an external PostgreSQL database\n\n###\n\n","completion":" Organizations with managed deployments using [Kubernetes](https:\/\/github.com\/tryretool\/retool-onpremise#deploying-on-kubernetes), [Helm](https:\/\/github.com\/tryretool\/retool-helm), [ECS](https:\/\/github.com\/tryretool\/retool-onpremise#deploying-on-ecs), or [Google Cloud Platform](https:\/\/github.com\/tryretool\/retool-onpremise) must specify a PostgreSQL database to use for the backend. Organizations using Docker Compose can use the [built-in PostgreSQL container](\/docs\/retool-database-self-hosted#use-docker-compose-postgresql-container), or specify an external database. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" To use Retool Database on managed deployments, you need: END"}
{"prompt":"Import existing data\n\n###\n\n","completion":" Your supplied PostgreSQL database can be empty or populated with data, but Retool always creates a new database for each of your environments. To import existing data to Retool Database, use [pg_dump and psql](https:\/\/www.postgresql.org\/docs\/14\/backup-dump.html) commands. You can use the [connection strings](https:\/\/docs.retool.com\/docs\/retool-database-quickstart#connection-strings) dropdown to find the database host, name, user, password, and port for the current environment. END"}
{"prompt":"Your supplied PostgreSQL database can be empty or populated with data, but Retool always creates a new database for each of your environments. To import existing data to Retool Database, use [pg_dump and psql](https:\/\/www.postgresql.org\/docs\/14\/backup-dump.html) commands. You can use the [connection strings](https:\/\/docs.retool.com\/docs\/retool-database-quickstart#connection-strings) dropdown to find the database host, name, user, password, and port for the current environment.\n\n###\n\n","completion":" Your `pg_dump` and `psql` commands might use the following structure. END"}
{"prompt":"1. Add database configuration\n\n###\n\n","completion":" Navigate to `{your-domain}\/resources?setupRetoolDB=1` on Retool and fill out the form with the following fields. END"}
{"prompt":"Navigate to `{your-domain}\/resources?setupRetoolDB=1` on Retool and fill out the form with the following fields.\n\n###\n\n","completion":" Select **Test your connection** to confirm you can connect to Retool Database.  \n![Deployment configuration settings for Retool Database](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-database\/18b762b0-8090-4126-ab13-4edb95d9b5c8.png) END"}
{"prompt":"2. Save your resource\n\n###\n\n","completion":" Click **Save and initialize** to save your Retool Database settings. You can now use with the [Database editor UI](https:\/\/docs.retool.com\/docs\/retool-database-quickstart#interact-with-data-using-the-database-editor-ui) to configure and interact with your Retool Database tables. END"}
{"prompt":"title: \"Retool Database overview\"\ncategorySlug: \"retool-database\"\nhidden: false\n\n###\n\n","completion":" [Retool Database](https:\/\/retool.com\/products\/database) is a fast, secure solution for saving and editing data to use in Retool apps. It combines a PostgreSQL database with a spreadsheet-like interface to manage your data. END"}
{"prompt":"Get started\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\n Watch a video, follow the quickstart to create your first database table, or use Retool Database in your own Retool deployment.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\" style=\\\"--aspect-ratio: 16\/9;\\\">\\n<video\\n width=\\\"100%\\\"\\n controls\\n preload=\\\"metadata\\\"\\n >\\n <source\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/database\/retool-db-launch.mp4#t=0.001\\\"\\n type=\\\"video\/mp4\\\"\\n \/>\\n <\/video>\\n   <\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n    <li>\\n <a\\n href=\\\"retool-database-quickstart\\\"\\n >\\n <div class=\\\"name\\\">Quickstart<\/div>\\n <div class=\\\"description\\\">\\nCreate your first database table in just a few minutes.\\n <\/div>\\n <\/a>\\n <\/li>\\n       <li>\\n <a\\n href=\\\"retool-database-self-hosted\\\">\\n <div class=\\\"name\\\">Self-hosted deployments<\/div>\\n <div class=\\\"description\\\">\\nUse Retool Database on-premise with your own PostgreSQL database.\\n <\/div>\\n <\/a>\\n <\/li>\\n\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\"\n}\n[\/block] END"}
{"prompt":"Interact with data\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n  <div class=\\\"get-started-description\\\">\\n    <p>\\n      Write queries that interact with Retool Database data.\\n    <\/p>\\n  <\/div>\\n  <div class=\\\"get-started-image\\\">\\n    <img\\n      src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/53379089-67f5-4850-b3a8-1ce473b233a3.webp\\\"\\n    \/>\\n  <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a\\n        href=\\\"\/docs\/queries\\\">\\n        <div class=\\\"name\\\">Data queries<\/div>\\n        <div class=\\\"description\\\">\\n          Perform CRUD operations with your data sources.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/sql-queries\\\">\\n        <div class=\\\"name\\\">Write SQL queries<\/div>\\n        <div class=\\\"description\\\">Query data with SQL.<\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"title: \"Enable Retool embed for cloud-hosted Retool\"\nexcerpt: \"Learn how to use custom domains to enable Retool embed for cloud-hosted Retool.\"\ncategorySlug: \"retool-embed\"\nhidden: true\n\n###\n\n","completion":" Currently, custom domains on cloud only support Retool Embed. Additional functionality, such as logins and direct use of apps with custom domains, are not supported. END"}
{"prompt":"Currently, custom domains on cloud only support Retool Embed. Additional functionality, such as logins and direct use of apps with custom domains, are not supported.\n\n###\n\n","completion":" Both apex `example.com` and subdomains `retool.example.com` are supported. END"}
{"prompt":"1. Configure DNS\n\n###\n\n","completion":" DNS configuration needs to be completed with the tooling you use to manage your top level domain name. This is often the registrar where you registered the domain, or a DNS provider such as Cloudflare or AWS. END"}
{"prompt":"DNS configuration needs to be completed with the tooling you use to manage your top level domain name. This is often the registrar where you registered the domain, or a DNS provider such as Cloudflare or AWS.\n\n###\n\n","completion":" Create an `A` record mapping either the top level domain or subdomain to Retool’s IP addresses: END"}
{"prompt":"Create an `A` record mapping either the top level domain or subdomain to Retool’s IP addresses:\n\n###\n\n","completion":" Retool recommends against using wildcard `*` DNS entries for your configuration as these can expose you to domain takeovers. END"}
{"prompt":"Retool recommends against using wildcard `*` DNS entries for your configuration as these can expose you to domain takeovers.\n\n###\n\n","completion":" DNS changes can take up to 24 hours to propagate in some cases. To validate that your DNS is configured and propagated, you can use the `dig` command on the command line: END"}
{"prompt":"2. Configure Retool\n\n###\n\n","completion":" Navigate to `\/settings\/branding` in your organizations Retool settings. Under **Add a custom domain**, enter the domain name in the text box. END"}
{"prompt":"Navigate to `\/settings\/branding` in your organizations Retool settings. Under **Add a custom domain**, enter the domain name in the text box.\n\n###\n\n","completion":" ![A screenshot of the retool branding settings page showing custom domains](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b4f27f70-5700-4937-bd05-b4e15ad97088.png) END"}
{"prompt":"![A screenshot of the retool branding settings page showing custom domains](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b4f27f70-5700-4937-bd05-b4e15ad97088.png)\n\n###\n\n","completion":" The domain briefly enters a pending state while Retool provisions HTTPS certificates and updates internal infrastructure to support the new domain. An error state likely indicates that the DNS wasn't updated to point to Retool. If this occurs, verify that your DNS is updated and that `dig` shows the correct IP addresses, and then retry verification. END"}
{"prompt":"The domain briefly enters a pending state while Retool provisions HTTPS certificates and updates internal infrastructure to support the new domain. An error state likely indicates that the DNS wasn't updated to point to Retool. If this occurs, verify that your DNS is updated and that `dig` shows the correct IP addresses, and then retry verification.\n\n###\n\n","completion":" After a few minutes, the domain should be configured, and embed should work as described in the [Retool Embed quickstart](https:\/\/docs.retool.com\/docs\/retool-embed-quickstart). END"}
{"prompt":"title: \"Retool Embed quickstart\"\ncategorySlug: \"retool-embed\"\nexcerpt: \"Learn how to use Retool Embed to share apps with external users.\"\n\n###\n\n","completion":" Retool Embed allows you to embed apps for external users in a secure, managed way. Not much changes in how you build your apps, but you need to complete a few steps to embed your apps for external use: END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" To use Retool Embed, you need to: END"}
{"prompt":"To use Retool Embed, you need to:\n\n###\n\n","completion":" If you haven't reviewed the [Retool Embed](https:\/\/docs.retool.com\/docs\/retool-embed) overview yet, you might want to read through it before continuing. It provides some additional context about Retool Embed and its uses. END"}
{"prompt":"1. Generate an access token\n\n###\n\n","completion":" To embed apps, you need to create an access token with the **Embed** scope. This token allows you to create sessions for embedding Retool apps. END"}
{"prompt":"To embed apps, you need to create an access token with the **Embed** scope. This token allows you to create sessions for embedding Retool apps.\n\n###\n\n","completion":" To generate the token: END"}
{"prompt":"To generate the token:\n\n###\n\n","completion":" ![Creating a token with the Embed scope](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e4f05f85-e1a8-4c62-8623-8592c9af8942.png) END"}
{"prompt":"![Creating a token with the Embed scope](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e4f05f85-e1a8-4c62-8623-8592c9af8942.png)\n\n###\n\n","completion":" Save this token securely in your backend. It's used later to generate embed URLs. END"}
{"prompt":"2. Create permission groups for your users\n\n###\n\n","completion":" Permission groups determine the apps users can access. Depending on your use case, you might need to create more than one permission group. END"}
{"prompt":"Permission groups determine the apps users can access. Depending on your use case, you might need to create more than one permission group.\n\n###\n\n","completion":" To create a permission group: END"}
{"prompt":"To create a permission group:\n\n###\n\n","completion":" ![Giving users access to apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/62e338dc-39f0-4145-850d-de6868b48621.png) END"}
{"prompt":"![Giving users access to apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/62e338dc-39f0-4145-850d-de6868b48621.png)\n\n###\n\n","completion":" Make sure to note down the group IDs you want to give access to. You can find a group's ID by hovering over the group, clicking the **•••** menu, and then selecting **Copy group ID**. END"}
{"prompt":"Make sure to note down the group IDs you want to give access to. You can find a group's ID by hovering over the group, clicking the **•••** menu, and then selecting **Copy group ID**.\n\n###\n\n","completion":" ![Copying the group ID](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/accab16f-e7b1-4683-92fc-0cc12425674c.gif) END"}
{"prompt":"3. Create an embed URL\n\n###\n\n","completion":" The embed URL is a single-use link to a Retool app for an authenticated user. Your backend sends a POST request to `\/api\/embed-url\/external-user` with a few parameters, and Retool returns the URL. This URL is then used by your frontend to display the app. END"}
{"prompt":"POST request parameters\n\n###\n\n","completion":" The table below outlines the parameters you can send, and whether they're required. END"}
{"prompt":"POST request code example\n\n###\n\n","completion":" Below is sample code that accepts a request from the client, builds and sends the POST request to `\/api\/embed-url\/external-user`, receives the embed URL, and then returns the URL to the client. END"}
{"prompt":"4. Use the embed URL to display the app\n\n###\n\n","completion":" On your frontend, use the [Retool React component](https:\/\/www.npmjs.com\/package\/react-retool) to render the embed URL. Below is a sample request your frontend would make to your backend. END"}
{"prompt":"Control data access and app behavior\n\n###\n\n","completion":" There are a few ways to manage data access and control app behavior beyond permission groups. If permission groups don't provide the customization you need, try using [metadata](https:\/\/docs.retool.com\/docs\/retool-embed-quickstart#control-access-and-app-behavior-with-metadata) or React to [interact with the parent application](https:\/\/docs.retool.com\/docs\/retool-embed-quickstart#interact-with-the-parent-application). END"}
{"prompt":"Control access and app behavior with metadata\n\n###\n\n","completion":" You can pass information in the `metadata` object to dynamically control the data users see and behavior within an application. These variables are added to the `current_user.metadata` object when the embed URL is generated. END"}
{"prompt":"You can pass information in the `metadata` object to dynamically control the data users see and behavior within an application. These variables are added to the `current_user.metadata` object when the embed URL is generated.\n\n###\n\n","completion":" For example, with the set of `metadata` below, you could use the `storeId` to filter sales metrics for a specific store, or show a download button to users with `canExportData` enabled. END"}
{"prompt":"For example, with the set of `metadata` below, you could use the `storeId` to filter sales metrics for a specific store, or show a download button to users with `canExportData` enabled.\n\n###\n\n","completion":" Because `current_user.metadata` values are populated only when the embed URL is generated, you don't have access to them while you build your app. However, you can create a [transformer](https:\/\/docs.retool.com\/docs\/transformers) that returns mock values that you can use while working on your app. After building your app, you can then replace each reference to the transformer with the values passed in the `metadata` object. These values are injected into the `current_user.metadata` object when the URL is generated. END"}
{"prompt":"Interact with the parent application\n\n###\n\n","completion":" You can interact with the parent application using React. Depending on your use case, you can listen for updates from Retool, or post information directly to the parent application. END"}
{"prompt":"Listen for updates from Retool\n\n###\n\n","completion":" With the [react-retool](https:\/\/www.npmjs.com\/package\/react-retool) library, you can set up hooks that listen to state updates within the parent application. To do so, pass in a `data` object as a prop into the `<Retool>` component. END"}
{"prompt":"With the [react-retool](https:\/\/www.npmjs.com\/package\/react-retool) library, you can set up hooks that listen to state updates within the parent application. To do so, pass in a `data` object as a prop into the `<Retool>` component.\n\n###\n\n","completion":" Within the embedded Retool application, you can set up a Parent Window Query whose selector is a key within the `data` object: END"}
{"prompt":"Within the embedded Retool application, you can set up a Parent Window Query whose selector is a key within the `data` object:\n\n###\n\n","completion":" ![Using a Parent Window Query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/embed\/3cb153bb-3e2d-477f-9764-226241b87a97.png) END"}
{"prompt":"![Using a Parent Window Query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/embed\/3cb153bb-3e2d-477f-9764-226241b87a97.png)\n\n###\n\n","completion":" This application allows the user to export the report if `isAdmin` is true on the parent application. When the parent application changes, the Parent Window Query reruns and updates its value. END"}
{"prompt":"This application allows the user to export the report if `isAdmin` is true on the parent application. When the parent application changes, the Parent Window Query reruns and updates its value.\n\n###\n\n","completion":" ![Export to S3 button is disabled when isAdmin is false](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/embed\/6f6b71d2-2120-45ac-aebf-c322e6ef7426.png) END"}
{"prompt":"Post information to the parent application\n\n###\n\n","completion":" You can write JavaScript queries within Retool that use the `postMessage` browser API to pass data to the parent application or invoke callback functions. END"}
{"prompt":"You can write JavaScript queries within Retool that use the `postMessage` browser API to pass data to the parent application or invoke callback functions.\n\n###\n\n","completion":" For example, the code below triggers a navigation change in the parent application from the embedded Retool app. END"}
{"prompt":"For example, the code below triggers a navigation change in the parent application from the embedded Retool app.\n\n###\n\n","completion":" You can also use the [react-retool](https:\/\/www.npmjs.com\/package\/react-retool) library to pass a function into the `onData` property. This function accepts data passed in from the JavaScript query called within the Retool app. For example, React code that sets the active tab in the app might look like this: END"}
{"prompt":"View usage\n\n###\n\n","completion":" Activity is logged for users that have access to your embedded apps. These users have the `External` user type, and you can view them on the Users page. Select a user to view which apps they've accessed and session metadata associated with them. END"}
{"prompt":"title: \"Retool Embed overview\"\ncategorySlug: \"retool-embed\"\nexcerpt: \"Learn how to get started with Retool Embed.\"\nhidden: false\n\n###\n\n","completion":" Retool Embed is a way to let external users––partners, vendors, customers––securely access embedded Retool apps within your product. You can use any authentication solution to give users access, and then control app behavior, data access, and audit usage on a per-user basis. END"}
{"prompt":"Get started\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\n Follow the quickstart to embed your first app or learn more about Retool Embed before getting started.\\n <\/p>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a href=\\\"retool-embed-quickstart\\\">\\n <div class=\\\"name\\\">Quickstart<\/div>\\n <div class=\\\"description\\\">\\n Embed your first Retool app in just a few minutes.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"how-retool-embed-works\\\">\\n <div class=\\\"name\\\">How Retool Embed works<\/div>\\n <div class=\\\"description\\\">\\n Learn about how Retool Embed works at a conceptual level.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Retool apps tutorial: Write custom logic\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-tutorial\"\nexcerpt: \"Learn how to extend your app's functionality with JavaScript queries and transformers.\"\nhidden: false\n\n###\n\n","completion":" As you've learned, anything between curly brackets `{{ }}` is processed as JavaScript in Retool. This is great for smaller pieces of code, but sometimes apps require more complex logic. This is where [transformers](https:\/\/docs.retool.com\/docs\/transformers) and [writing custom JavaScript code](https:\/\/docs.retool.com\/docs\/scripting-retool) come in. END"}
{"prompt":"As you've learned, anything between curly brackets `{{ }}` is processed as JavaScript in Retool. This is great for smaller pieces of code, but sometimes apps require more complex logic. This is where [transformers](https:\/\/docs.retool.com\/docs\/transformers) and [writing custom JavaScript code](https:\/\/docs.retool.com\/docs\/scripting-retool) come in.\n\n###\n\n","completion":" Transformers allow you to write reusable pieces of code. They're often used to manipulate data, and you can access the transformer throughout your app using `{{ transformer.value }}`. Transformers execute their code automatically, and aren't explicitly triggered with event handlers or components. END"}
{"prompt":"Transformers allow you to write reusable pieces of code. They're often used to manipulate data, and you can access the transformer throughout your app using `{{ transformer.value }}`. Transformers execute their code automatically, and aren't explicitly triggered with event handlers or components.\n\n###\n\n","completion":" You can write more complex logic using JavaScript. This allows you to trigger queries and configure components, which gives you more control over how your app works. If you create an app with small pieces of code spread throughout it, you might want to write JavaScript queries to centralize that logic instead. END"}
{"prompt":"1. Dynamically display user names\n\n###\n\n","completion":" When blocking and unblocking a user, it'd be useful to see their name displayed on the button before clicking it. JavaScript transformers update automatically when the object they reference changes, which means you can write a transformer that reads the user's name from the currently selected row. END"}
{"prompt":"When blocking and unblocking a user, it'd be useful to see their name displayed on the button before clicking it. JavaScript transformers update automatically when the object they reference changes, which means you can write a transformer that reads the user's name from the currently selected row.\n\n###\n\n","completion":" Click the **+** button in the Query Editor and select **JavaScript transformer**. Name it `userFirstName` and paste `return {{ table1.selectedRow.data.name.split(' ')[0] }}` into the editor. This code reads the user's name from the selected row, and then splits out the first name. END"}
{"prompt":"Click the **+** button in the Query Editor and select **JavaScript transformer**. Name it `userFirstName` and paste `return {{ table1.selectedRow.data.name.split(' ')[0] }}` into the editor. This code reads the user's name from the selected row, and then splits out the first name.\n\n###\n\n","completion":" ![Adding a JavaScript transformer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4037ba9b-e6e5-4a9a-a42b-756a745e21c0.png) END"}
{"prompt":"![Adding a JavaScript transformer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4037ba9b-e6e5-4a9a-a42b-756a745e21c0.png)\n\n###\n\n","completion":" Make sure to save the transformer, then select your Split Button component. Click on the block action and update the label to `Block {{userFirstName.value}}`. Do the same for the unblock action. END"}
{"prompt":"Make sure to save the transformer, then select your Split Button component. Click on the block action and update the label to `Block {{userFirstName.value}}`. Do the same for the unblock action.\n\n###\n\n","completion":" ![Using the transformer's value to display the user's name](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0d994e52-87ef-4717-bf3d-9fd6959acf4c.png) END"}
{"prompt":"![Using the transformer's value to display the user's name](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0d994e52-87ef-4717-bf3d-9fd6959acf4c.png)\n\n###\n\n","completion":" The button now automatically shows the user's first name when you select a row in the table. END"}
{"prompt":"2. Add functionality to block and unblock all users\n\n###\n\n","completion":" Blocking and unblocking all users uses custom JavaScript to interact with the REST API resource. The JavaScript query identifies which users to block or unblock and then triggers the appropriate query. END"}
{"prompt":"Create a JavaScript query\n\n###\n\n","completion":" Start by clicking the **+** button in the Query Editor and selecting **JavaScript query**. Name it `blockAll` and then paste this code into the editor. END"}
{"prompt":"Start by clicking the **+** button in the Query Editor and selecting **JavaScript query**. Name it `blockAll` and then paste this code into the editor.\n\n###\n\n","completion":" This code finds unblocked users, blocks them with the `blockAllUsers` API query (which you'll create in a moment), and then displays a notification with the number of users unblocked. There are a few more things to note: END"}
{"prompt":"This code finds unblocked users, blocks them with the `blockAllUsers` API query (which you'll create in a moment), and then displays a notification with the number of users unblocked. There are a few more things to note:\n\n###\n\n","completion":" ![Adding a JavaScript query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/4fb5151f-e989-4e86-8b10-376740c92a0c.png) END"}
{"prompt":"Create a query to block all users\n\n###\n\n","completion":" Next, create another PATCH query and name it `blockAllUsers`. Set the endpoint slug to `{{ table1.data[i].id }}`, and set `blocked` to `true` in the JSON body. Make sure to save the query. END"}
{"prompt":"Next, create another PATCH query and name it `blockAllUsers`. Set the endpoint slug to `{{ table1.data[i].id }}`, and set `blocked` to `true` in the JSON body. Make sure to save the query.\n\n###\n\n","completion":" ![Adding a block query that's triggered by a JavaScript query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ac32d097-2eb8-4ea8-9144-a76e1a36876d.png) END"}
{"prompt":"![Adding a block query that's triggered by a JavaScript query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ac32d097-2eb8-4ea8-9144-a76e1a36876d.png)\n\n###\n\n","completion":" This query uses the `i` value passed from the JavaScript query to unblock the appropriate user ID. END"}
{"prompt":"This query uses the `i` value passed from the JavaScript query to unblock the appropriate user ID.\n\n###\n\n","completion":" By default, queries show notifications after they run. If you're running several queries in succession, you might want to turn these notifications off. To do this, make sure the `blockAllUsers` query is selected and open the **Response** tab. Scroll down to **Query success** and uncheck the **Show notification on success** box. END"}
{"prompt":"By default, queries show notifications after they run. If you're running several queries in succession, you might want to turn these notifications off. To do this, make sure the `blockAllUsers` query is selected and open the **Response** tab. Scroll down to **Query success** and uncheck the **Show notification on success** box.\n\n###\n\n","completion":" ![Turning off success notifications](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2f3d4259-80ad-496d-b36f-32a1d15bcff7.png) END"}
{"prompt":"![Turning off success notifications](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2f3d4259-80ad-496d-b36f-32a1d15bcff7.png)\n\n###\n\n","completion":" With all the code written, select the Split Button component and open the **Block all users** action. Add an event handler that runs the `blockAll` JavaScript query when the button is clicked. END"}
{"prompt":"With all the code written, select the Split Button component and open the **Block all users** action. Add an event handler that runs the `blockAll` JavaScript query when the button is clicked.\n\n###\n\n","completion":" ![Adding an event handler to the block all users action](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/deeec031-f38b-4e36-9bf1-803a20835840.png) END"}
{"prompt":"Add unblocking functionality\n\n###\n\n","completion":" You can add functionality to unblock all users by duplicating what you just created and swapping the blocked logic to unblock users. Copy the code below to create the JavaScript query to unblock all users. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" You've now finished your app and completed the tutorial. END"}
{"prompt":"You've now finished your app and completed the tutorial.\n\n###\n\n","completion":" You can test your knowledge below or see the wrap up page for additional resources. END"}
{"prompt":"You can test your knowledge below or see the wrap up page for additional resources.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/e026d623-9cfd-4739-88b1-4d2079decb54?category=5\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Retool apps tutorial: Configure events\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-tutorial\"\nexcerpt: \"Learn how to connect queries and components.\"\nhidden: false\n\n###\n\n","completion":" There are various ways for queries and components to interact with each other. Event handlers are a common method, but you can also configure components to update other components. END"}
{"prompt":"There are various ways for queries and components to interact with each other. Event handlers are a common method, but you can also configure components to update other components.\n\n###\n\n","completion":" Event handlers allow you to perform actions based on user interactions. They can be found on many components, but they can also be set on queries. Here are a few examples of how to use event handlers. END"}
{"prompt":"Event handlers allow you to perform actions based on user interactions. They can be found on many components, but they can also be set on queries. Here are a few examples of how to use event handlers.\n\n###\n\n","completion":" This lesson covers event handlers in some detail but you can read more about them in the [Event handlers](https:\/\/docs.retool.com\/docs\/event-handlers) documentation. END"}
{"prompt":"1. Save changes and update user data\n\n###\n\n","completion":" Select your table to display its settings in the **Inspect** tab of the right panel.  In the **Interaction** section, click **+ Add** to add an event handler. Select the **Save changes** event and set the **Query** to `patchUser`. END"}
{"prompt":"Select your table to display its settings in the **Inspect** tab of the right panel.  In the **Interaction** section, click **+ Add** to add an event handler. Select the **Save changes** event and set the **Query** to `patchUser`.\n\n###\n\n","completion":" ![Adding an event handler to save table changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/38605fa1-6ba6-402a-be7e-2e243bb3cb53.png) END"}
{"prompt":"![Adding an event handler to save table changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/38605fa1-6ba6-402a-be7e-2e243bb3cb53.png)\n\n###\n\n","completion":" Now test this out by double clicking a user's email address and editing it. Click the **Save changes** button and `patchUser` will run automatically. This writes the change back to your API but it doesn't update the table. END"}
{"prompt":"Now test this out by double clicking a user's email address and editing it. Click the **Save changes** button and `patchUser` will run automatically. This writes the change back to your API but it doesn't update the table.\n\n###\n\n","completion":" To automatically update the table, open the `patchUser` query and scroll to the **Event Handlers** section. Click **+ Add** to add a new success handler, set the **Action** to **Control query**, and select the `getUsers` query. Once complete, save the query. END"}
{"prompt":"To automatically update the table, open the `patchUser` query and scroll to the **Event Handlers** section. Click **+ Add** to add a new success handler, set the **Action** to **Control query**, and select the `getUsers` query. Once complete, save the query.\n\n###\n\n","completion":" ![Adding an event handler that refreshes the table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7a63551e-c244-45b9-bb27-b17193610571.png) END"}
{"prompt":"![Adding an event handler that refreshes the table](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7a63551e-c244-45b9-bb27-b17193610571.png)\n\n###\n\n","completion":" Now when you save a change in the table, `patchUser` runs and then triggers `getUsers` to refresh the table. END"}
{"prompt":"2. Configure options to block and unblock users\n\n###\n\n","completion":" Click on your Split Button component and select the block action. At the bottom of the modal, create an event handler to run the block query. As a small design improvement, set **Disabled** to `{{table1.selectedRow.data.blocked}}`. This disables the button if the user is already blocked. END"}
{"prompt":"Click on your Split Button component and select the block action. At the bottom of the modal, create an event handler to run the block query. As a small design improvement, set **Disabled** to `{{table1.selectedRow.data.blocked}}`. This disables the button if the user is already blocked.\n\n###\n\n","completion":" ![Adding an event handler to block a user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/79752f75-0002-456a-a2b2-299d8d1e1733.png) END"}
{"prompt":"![Adding an event handler to block a user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/79752f75-0002-456a-a2b2-299d8d1e1733.png)\n\n###\n\n","completion":" Similar to the PATCH query that updates a user, add a success event handler to the block query that runs `getUsers` to refresh the table. END"}
{"prompt":"Similar to the PATCH query that updates a user, add a success event handler to the block query that runs `getUsers` to refresh the table.\n\n###\n\n","completion":" Repeat this process for the unblock option, but set **Disabled** to `{{ !table1.selectedRow.data.blocked }}` so that the button is disabled for users that already have access. END"}
{"prompt":"Repeat this process for the unblock option, but set **Disabled** to `{{ !table1.selectedRow.data.blocked }}` so that the button is disabled for users that already have access.\n\n###\n\n","completion":" You can test these actions out by selecting a row and clicking the button. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" With these queries and components connected, your app is nearly complete. The next lesson covers using custom JavaScript to further enhance your app, and to add functionality for blocking and unblocking all users. END"}
{"prompt":"With these queries and components connected, your app is nearly complete. The next lesson covers using custom JavaScript to further enhance your app, and to add functionality for blocking and unblocking all users.\n\n###\n\n","completion":" You can test your knowledge below or move on to the next lesson. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/e026d623-9cfd-4739-88b1-4d2079decb54?category=4\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Retool apps tutorial: Connect a data source\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-tutorial\"\nexcerpt: \"Learn how to connect your data source by creating a resource.\"\nhidden: false\n\n###\n\n","completion":" The first step in building a Retool app is connecting your data source. Retool supports most databases and APIs, and you can use built-in [integrations](https:\/\/docs.retool.com\/docs\/integrations) to connect to popular data sources with minimal configuration. You connect a data source by creating a <<glossary:resource>> in Retool. This guide uses a REST API as the resource. END"}
{"prompt":"1. Generate an API and sample data for your app\n\n###\n\n","completion":" To work through the tutorial, you'll use Retool's API generator to create a test REST API with some sample data. When building your own apps, you'll often use an existing data source. END"}
{"prompt":"To work through the tutorial, you'll use Retool's API generator to create a test REST API with some sample data. When building your own apps, you'll often use an existing data source.\n\n###\n\n","completion":" For this app, you'll generate a data set that includes the user's ID, name, email address, and whether the user's access is blocked. When you're ready, click the **Generate API** button and save the **Endpoint URL**. END"}
{"prompt":"For this app, you'll generate a data set that includes the user's ID, name, email address, and whether the user's access is blocked. When you're ready, click the **Generate API** button and save the **Endpoint URL**.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"700px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/samples.tryretool.com\/embedded\/public\/4f6e4c49-a4b1-47ed-a8b0-455c11e5be7d?column_names=%5B%22name%22,%22email%22,%22blocked%22%5D&column_data=%5B%5B%22People%22,%22Full%20Name%22%5D,%5B%22People%22,%22Email%20Address%22%5D,%5B%22Boolean%22%5D%5D\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"2. Create a resource to connect your data source\n\n###\n\n","completion":" Navigate to the **Resources** tab from the Retool homepage and click **Create new > Resource**. Select **REST API** and name the resource. In the **Base URL** field, paste the endpoint URL from the previous step and create the resource. END"}
{"prompt":"Navigate to the **Resources** tab from the Retool homepage and click **Create new > Resource**. Select **REST API** and name the resource. In the **Base URL** field, paste the endpoint URL from the previous step and create the resource.\n\n###\n\n","completion":" ![Creating a resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/d7453df1-d4d9-4ead-9975-c51e4cb26250.png) END"}
{"prompt":"![Creating a resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/d7453df1-d4d9-4ead-9975-c51e4cb26250.png)\n\n###\n\n","completion":" If this is your first time using Retool, you'll see a prompt for creating an app after saving the resource. Go ahead and create an app and name it `User management`. If you don't see a prompt, navigate to the **Apps** tab in Retool and create an app named `User management`. END"}
{"prompt":"3. Write a test query\n\n###\n\n","completion":" <<glossary:Queries>> are covered in more detail later, but it's a good idea to run one now to verify the connection to your resource. When you created the app, Retool automatically added `query1` to it. You can find this query in the lower left corner of the [bottom panel](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel). Click on the `query1` text and rename the query to `getUsers`. END"}
{"prompt":"<<glossary:Queries>> are covered in more detail later, but it's a good idea to run one now to verify the connection to your resource. When you created the app, Retool automatically added `query1` to it. You can find this query in the lower left corner of the [bottom panel](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel). Click on the `query1` text and rename the query to `getUsers`.\n\n###\n\n","completion":" ![Renaming query1](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2c73264c-b6c4-408c-83f4-695d2ab61aad.png) END"}
{"prompt":"![Renaming query1](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2c73264c-b6c4-408c-83f4-695d2ab61aad.png)\n\n###\n\n","completion":" You can see that the resource you just added is selected, and that the query sends a GET request to your API. Click **Run** to verify the query works. You'll see a success message and a JSON response with your data. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Now that you have a resource you can access, it's time to start building your UI. END"}
{"prompt":"Now that you have a resource you can access, it's time to start building your UI.\n\n###\n\n","completion":" You can test your knowledge below or move on to the next lesson. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<iframe height=\\\"450px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/e026d623-9cfd-4739-88b1-4d2079decb54?category=1\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Retool apps tutorial: Interact with data\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-tutorial\"\nexcerpt: \"Learn how to use queries to read and write data.\"\nhidden: false\n\n###\n\n","completion":" Queries are how apps interact with data and they're often triggered by components. Your app already has a query that pulls in data from your API, but you need to create a few more queries so you can fully interact with your data. END"}
{"prompt":"1. Create a query that updates names and email addresses\n\n###\n\n","completion":" In the previous lesson, you made the **name** and **email** columns editable. This lets you double-click on a cell and edit it, but it doesn't save the changes back to your API. It does, however, temporarily save changes to the `recordUpdates` property of the table. You can use this property to dynamically populate a PATCH query to update the user. END"}
{"prompt":"In the previous lesson, you made the **name** and **email** columns editable. This lets you double-click on a cell and edit it, but it doesn't save the changes back to your API. It does, however, temporarily save changes to the `recordUpdates` property of the table. You can use this property to dynamically populate a PATCH query to update the user.\n\n###\n\n","completion":" Create a new resource query and name it `patchUser`. Set the **Action type** to **PATCH**, and fill out the rest of the endpoint URL and JSON body like this. END"}
{"prompt":"Create a new resource query and name it `patchUser`. Set the **Action type** to **PATCH**, and fill out the rest of the endpoint URL and JSON body like this.\n\n###\n\n","completion":" ![Creating a patch query to update names and email addresses](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/44940a28-7efe-4b8e-a5be-6eb7607290d2.png) END"}
{"prompt":"![Creating a patch query to update names and email addresses](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/44940a28-7efe-4b8e-a5be-6eb7607290d2.png)\n\n###\n\n","completion":" You can also copy the values below and paste them into your query. Make sure to click **Save** after filling out the query. END"}
{"prompt":"You can also copy the values below and paste them into your query. Make sure to click **Save** after filling out the query.\n\n###\n\n","completion":" You might notice that these three values are currently `null`. This is expected because there haven't been any changes to the table yet, so there aren't any entries in `recordUpdates`. END"}
{"prompt":"2. Create queries that block and unblock users\n\n###\n\n","completion":" In the previous lesson, you added a Split Button component that'll allow you to block and unblock users. This requires adding a few queries that the button can trigger when clicked. END"}
{"prompt":"In the previous lesson, you added a Split Button component that'll allow you to block and unblock users. This requires adding a few queries that the button can trigger when clicked.\n\n###\n\n","completion":" To block individual users, create another PATCH query or duplicate the existing one. Rename the query to `blockUser`, and use `{{ table1.selectedRow.data.id }}` at the end of the endpoint URL to pass in the user ID. Then edit the JSON body to set `blocked` to `true`. END"}
{"prompt":"To block individual users, create another PATCH query or duplicate the existing one. Rename the query to `blockUser`, and use `{{ table1.selectedRow.data.id }}` at the end of the endpoint URL to pass in the user ID. Then edit the JSON body to set `blocked` to `true`.\n\n###\n\n","completion":" ![Creating a query that blocks a user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8c2b9712-ea95-4cc2-8266-c5b78a096fe3.png) END"}
{"prompt":"![Creating a query that blocks a user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8c2b9712-ea95-4cc2-8266-c5b78a096fe3.png)\n\n###\n\n","completion":" Don't forget to click **Save** after filling out the query. Repeat this process for the unblock action, but make sure to: END"}
{"prompt":"Don't forget to click **Save** after filling out the query. Repeat this process for the unblock action, but make sure to:\n\n###\n\n","completion":" You'll add functionality for blocking and unblocking all users in a subsequent lesson. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Now that you have queries that edit data, it's time to connect them to components. This way when you make changes with the UI, the updates are automatically written to your API and the table is refreshed. END"}
{"prompt":"Now that you have queries that edit data, it's time to connect them to components. This way when you make changes with the UI, the updates are automatically written to your API and the table is refreshed.\n\n###\n\n","completion":" You can test your knowledge below or move on to the next lesson. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/e026d623-9cfd-4739-88b1-4d2079decb54?category=3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Retool apps tutorial: Assemble the UI\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-tutorial\"\nexcerpt: \"Learn how to use components to assemble your app's user interface.\"\nhidden: false\n\n###\n\n","completion":" Components are prebuilt UI elements that your users interact with (e.g., buttons, tables, forms). Only a few components are used in this example, but you can find information on more components in the [Component Library](https:\/\/retool.com\/components). END"}
{"prompt":"Components are prebuilt UI elements that your users interact with (e.g., buttons, tables, forms). Only a few components are used in this example, but you can find information on more components in the [Component Library](https:\/\/retool.com\/components).\n\n###\n\n","completion":" The app you're going to build will allow you to edit user data. To enable this functionality, you'll add text, table, and button components to the Main frame of the <<glossary:Canvas>>. You can read more about frames and the Canvas in the [App editor](https:\/\/docs.retool.com\/docs\/app-editor) documentation, but for now, just know that the Main frame is the core section of your app. END"}
{"prompt":"1. Display the app's name with a Text component\n\n###\n\n","completion":" From the [right panel](https:\/\/docs.retool.com\/docs\/app-editor#right-panel), drag a Text component to the Main frame. The right panel updates automatically to show the component's properties. Components have numerous properties that you can set, and they're accessible from other components and queries. END"}
{"prompt":"From the [right panel](https:\/\/docs.retool.com\/docs\/app-editor#right-panel), drag a Text component to the Main frame. The right panel updates automatically to show the component's properties. Components have numerous properties that you can set, and they're accessible from other components and queries.\n\n###\n\n","completion":" Edit the Text component's value by selecting the **Value** field and entering `## {{ retoolContext.appName }}`. In Retool, anything between curly brackets is JavaScript. This means you can write custom JavaScript in addition to using prebuilt component functionality. END"}
{"prompt":"Edit the Text component's value by selecting the **Value** field and entering `## {{ retoolContext.appName }}`. In Retool, anything between curly brackets is JavaScript. This means you can write custom JavaScript in addition to using prebuilt component functionality.\n\n###\n\n","completion":" For this text component, dot notation is used to access the `retoolContext` object and the app's name. The `retoolContext` object is unique to each app, and stores information like the app name and UUID. END"}
{"prompt":"For this text component, dot notation is used to access the `retoolContext` object and the app's name. The `retoolContext` object is unique to each app, and stores information like the app name and UUID.\n\n###\n\n","completion":" ![Adding a text component to the Main frame](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/00e13038-d905-4437-b797-533adec2b385.png) END"}
{"prompt":"2. Display user data with a Table component\n\n###\n\n","completion":" From the right panel, drag a Table component onto the Main frame. The table should automatically be populated with the data returned in `getUsers`. Verify this by making sure the **Data** field for the table is set to `{{ getUsers.data }}`. END"}
{"prompt":"From the right panel, drag a Table component onto the Main frame. The table should automatically be populated with the data returned in `getUsers`. Verify this by making sure the **Data** field for the table is set to `{{ getUsers.data }}`.\n\n###\n\n","completion":" There are a few more settings to enable to allow users to edit data in the table. With the table selected, toggle the **Editable** boxes on for the **name** and **email** columns. END"}
{"prompt":"There are a few more settings to enable to allow users to edit data in the table. With the table selected, toggle the **Editable** boxes on for the **name** and **email** columns.\n\n###\n\n","completion":" ![Making name and email columns editable](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/785d73d3-a2ad-4681-ae02-3a26588b3da1.png) END"}
{"prompt":"3. Add user management options with a Split Button component\n\n###\n\n","completion":" The final component to add is a Split Button component. This button will allow you to: END"}
{"prompt":"The final component to add is a Split Button component. This button will allow you to:\n\n###\n\n","completion":" Drag a Split Button component to the Main frame, and update the label for each action. Split Button components come with three actions by default, but you can add the fourth by clicking **+ Add**. END"}
{"prompt":"Drag a Split Button component to the Main frame, and update the label for each action. Split Button components come with three actions by default, but you can add the fourth by clicking **+ Add**.\n\n###\n\n","completion":" ![Adding a Split Button component and editing labels](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0ce4fef8-0887-4b56-9173-aee3e8526329.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" You've now assembled the core UI elements but you'll notice that interactions like button clicks don't do anything. It's time to create some more queries so you can start editing and saving data. END"}
{"prompt":"You've now assembled the core UI elements but you'll notice that interactions like button clicks don't do anything. It's time to create some more queries so you can start editing and saving data.\n\n###\n\n","completion":" You can test your knowledge below or move on to the next lesson. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/e026d623-9cfd-4739-88b1-4d2079decb54?category=2\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Retool apps tutorial: Wrap up\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-tutorial\"\nexcerpt: \"Learn about additional resources and what to explore next.\"\nhidden: false\n\n###\n\n","completion":" To recap, you've built your first app by: END"}
{"prompt":"To recap, you've built your first app by:\n\n###\n\n","completion":" Now that you've built your first app, you might want to: END"}
{"prompt":"Now that you've built your first app, you might want to:\n\n###\n\n","completion":" Our [Retool Community forums](https:\/\/community.retool.com\/) and [YouTube channel](https:\/\/www.youtube.com\/c\/Retool) are also great sources of information. END"}
{"prompt":"title: \"Retool apps tutorial: Introduction\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-tutorial\"\nexcerpt: \"An interactive course that teaches you to build your first app.\"\nhidden: false\n\n###\n\n","completion":" This tutorial is an interactive course to learn about Retool. Each lesson covers the core concepts of Retool and guides you through the steps to build a simple user management app. END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" Familiarity with common technologies like APIs, SQL, and JavaScript is expected to complete this course. If you need to learn more about these technologies, we recommend using online learning resources, such as: END"}
{"prompt":"Familiarity with common technologies like APIs, SQL, and JavaScript is expected to complete this course. If you need to learn more about these technologies, we recommend using online learning resources, such as:\n\n###\n\n","completion":" If you're already familiar with Retool, you might want to see the [quickstart guide](https:\/\/docs.retool.com\/docs\/quickstart) instead. END"}
{"prompt":"What you'll learn\n\n###\n\n","completion":" After completing this tutorial, you'll gain the necessary knowledge to: END"}
{"prompt":"After completing this tutorial, you'll gain the necessary knowledge to:\n\n###\n\n","completion":" These terms and concepts may not be familiar but you'll learn about them as you work through the tutorial. As you complete each lesson, you can track your progress and test your knowledge using the widget at the bottom of the page. END"}
{"prompt":"What you'll build\n\n###\n\n","completion":" You will build a web app that allows you to perform common user management actions. These actions include editing user information, like name and email addresses, and blocking and unblocking users. END"}
{"prompt":"You will build a web app that allows you to perform common user management actions. These actions include editing user information, like name and email addresses, and blocking and unblocking users.\n\n###\n\n","completion":" Try out the demo to see a Retool app in action. END"}
{"prompt":"Try out the demo to see a Retool app in action.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"510px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/283d6a98-2f03-4fc9-891c-d11bbadea55e\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"Get started\n\n###\n\n","completion":" To get started, [log in or sign up to Retool](https:\/\/login.retool.com\/auth\/login). END"}
{"prompt":"To get started, [log in or sign up to Retool](https:\/\/login.retool.com\/auth\/login).\n\n###\n\n","completion":" If you're signing up to Retool for the first time, you also create an _organization_. Every Retool user account is bound to an organization. When you sign up and create a new organization, you immediately become its administrator. END"}
{"prompt":"title: \"Markdown and HTML\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-concepts\"\nexcerpt: \"Learn about Markdown support within Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool supports [GitHub Flavored Markdown](https:\/\/docs.github.com\/en\/get-started\/writing-on-github\/getting-started-with-writing-and-formatting-on-github\/basic-writing-and-formatting-syntax) and HTML. You can use most presentational attributes and tags except for `<style>`, `<script>`, and JavaScript attributes like `onclick`. For more complex HTML use cases, use the [HTML](https:\/\/retool.com\/components\/html), [Custom](https:\/\/retool.com\/components\/custom-component), or [IFrame](https:\/\/retool.com\/components\/iframe) components. END"}
{"prompt":"Retool supports [GitHub Flavored Markdown](https:\/\/docs.github.com\/en\/get-started\/writing-on-github\/getting-started-with-writing-and-formatting-on-github\/basic-writing-and-formatting-syntax) and HTML. You can use most presentational attributes and tags except for `<style>`, `<script>`, and JavaScript attributes like `onclick`. For more complex HTML use cases, use the [HTML](https:\/\/retool.com\/components\/html), [Custom](https:\/\/retool.com\/components\/custom-component), or [IFrame](https:\/\/retool.com\/components\/iframe) components.\n\n###\n\n","completion":" You can use Markdown in: END"}
{"prompt":"You can use Markdown in:\n\n###\n\n","completion":" In the demo app below, use the sidebar to view syntax information and rendered examples. In the **Component examples** section, you can edit the Markdown and see what it looks like when it's rendered in a component. END"}
{"prompt":"In the demo app below, use the sidebar to view syntax information and rendered examples. In the **Component examples** section, you can edit the Markdown and see what it looks like when it's rendered in a component.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/92d7def6-2cc9-4744-94dd-86a1f5e4c06e\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Deploy mobile apps\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Learn how to deploy Retool Mobile apps.\"\nhidden: false\n\n###\n\n","completion":" The Retool Mobile app is available on the [App Store](https:\/\/apps.apple.com\/us\/app\/retool-mobile\/id1586183808) or [Google Play](https:\/\/play.google.com\/store\/apps\/details?id=com.retool.retool). Once installed, you can log in to Retool and run mobile apps natively. END"}
{"prompt":"Sign in to your Retool organization\n\n###\n\n","completion":" Use **Host settings** to select whether your Retool organization is on Retool Cloud or [Self-hosted](\/docs\/self-hosted) (e.g., an on-premise deployment). Both [Self-hosted Retool](\/docs\/self-hosted) and [Retool Cloud](https:\/\/retool.com\/pricing\/) organizations use the Retool Mobile app for iOS and Android to launch mobile apps natively. END"}
{"prompt":"Use **Host settings** to select whether your Retool organization is on Retool Cloud or [Self-hosted](\/docs\/self-hosted) (e.g., an on-premise deployment). Both [Self-hosted Retool](\/docs\/self-hosted) and [Retool Cloud](https:\/\/retool.com\/pricing\/) organizations use the Retool Mobile app for iOS and Android to launch mobile apps natively.\n\n###\n\n","completion":" ![Retool Mobile for iOS](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/24ba6de9-eb5b-43ec-8261-0174b926922e.jpg) END"}
{"prompt":"Browse and launch Retool Mobile apps\n\n###\n\n","completion":" Retool Mobile for iOS and Android provides access to your Retool organization's mobile apps. You can browse through the list of apps or search to find a particular mobile app. You can return to this list at any time by pressing the **Home** button in the title bar area of the mobile app. END"}
{"prompt":"Retool Mobile for iOS and Android provides access to your Retool organization's mobile apps. You can browse through the list of apps or search to find a particular mobile app. You can return to this list at any time by pressing the **Home** button in the title bar area of the mobile app.\n\n###\n\n","completion":" ![Browse and launch apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/360a65af-aa2d-4553-af13-e0890c27a86e.jpg) END"}
{"prompt":"Switch environments\n\n###\n\n","completion":" If your mobile app queries resources configured with [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) (e.g., Production and Staging), you can switch between them in the sidebar of the Retool Mobile app. END"}
{"prompt":"If your mobile app queries resources configured with [multiple environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments) (e.g., Production and Staging), you can switch between them in the sidebar of the Retool Mobile app.\n\n###\n\n","completion":" ![Switch environments](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/c815c9b7-5774-41b2-9b06-788df7fbfc95.webp) END"}
{"prompt":"Retool Mobile on the web\n\n###\n\n","completion":" You can launch Retool Mobile apps as progressive web apps (PWA). This enables the use of Retool Mobile apps on a wide range of devices that cannot run them natively using Retool Mobile for iOS and Android (e.g., Amazon Fire tablets). END"}
{"prompt":"You can launch Retool Mobile apps as progressive web apps (PWA). This enables the use of Retool Mobile apps on a wide range of devices that cannot run them natively using Retool Mobile for iOS and Android (e.g., Amazon Fire tablets).\n\n###\n\n","completion":" Open an app link in a browser to launch a Retool Mobile app on the web. On a desktop device, the Retool Mobile app is displayed in a device frame and includes a QR code that links to the app. Scan the QR code from your mobile device to launch the app from the device. END"}
{"prompt":"Open an app link in a browser to launch a Retool Mobile app on the web. On a desktop device, the Retool Mobile app is displayed in a device frame and includes a QR code that links to the app. Scan the QR code from your mobile device to launch the app from the device.\n\n###\n\n","completion":" ![Viewer link](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b1bdf9b0-74fe-462e-af61-871daf34ab78.jpg) END"}
{"prompt":"Share apps and invite users\n\n###\n\n","completion":" You can [invite new users](\/docs\/inviting-users) or send a link to existing users via email. Click the **Share** button in the upper-right of the App editor to display sharing options. You can enter individual email addresses or click **Add many at once** to use a comma-separated list. You can also copy the link to an app to use elsewhere. END"}
{"prompt":"You can [invite new users](\/docs\/inviting-users) or send a link to existing users via email. Click the **Share** button in the upper-right of the App editor to display sharing options. You can enter individual email addresses or click **Add many at once** to use a comma-separated list. You can also copy the link to an app to use elsewhere.\n\n###\n\n","completion":" All Retool apps have a unique URL. Direct links open in the Retool Mobile iOS or Android app automatically. If the app is not currently installed, the user is routed to their device-specific app store listing for download. END"}
{"prompt":"All Retool apps have a unique URL. Direct links open in the Retool Mobile iOS or Android app automatically. If the app is not currently installed, the user is routed to their device-specific app store listing for download.\n\n###\n\n","completion":" Invited users can create an account in Retool Mobile for iOS and Android before the mobile app launches. END"}
{"prompt":"Invited users can create an account in Retool Mobile for iOS and Android before the mobile app launches.\n\n###\n\n","completion":" ![Share app links](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2467b2e0-698d-4452-90ed-0754e5053635.webp) END"}
{"prompt":"Passwordless login\n\n###\n\n","completion":" Retool Mobile includes a _passwordless login flow_ for existing users. Any existing user who opens a mobile app link is automatically logged into the Retool Mobile app. This enables you to distribute apps to your workforce without existing users needing to log in first, resulting in fewer steps. END"}
{"prompt":"Retool Mobile includes a _passwordless login flow_ for existing users. Any existing user who opens a mobile app link is automatically logged into the Retool Mobile app. This enables you to distribute apps to your workforce without existing users needing to log in first, resulting in fewer steps.\n\n###\n\n","completion":" You can also perform passwordless login if you first need to install the Retool Mobile iOS or Android app. Retool copies the app link to the clipboard when redirecting you to the device-specific app store listing. Once installed, the Retool Mobile app uses the clipboard link to complete passwordless login. This requires access to the clipboard contents. When prompted, click **Allow**. END"}
{"prompt":"You can also perform passwordless login if you first need to install the Retool Mobile iOS or Android app. Retool copies the app link to the clipboard when redirecting you to the device-specific app store listing. Once installed, the Retool Mobile app uses the clipboard link to complete passwordless login. This requires access to the clipboard contents. When prompted, click **Allow**.\n\n###\n\n","completion":" The passwordless login flow for users who just installed Retool Mobile can automatically sign in using [passwordless login](#passwordless-login). END"}
{"prompt":"Restrict user access\n\n###\n\n","completion":" Your users can browse and launch any of your mobile apps by default. If your Retool organization is on either the [Business or Enterprise](https:\/\/retool.com\/pricing\/) plan, you can use _granular access controls_ to [configure permissions](\/docs\/user-permissions) and restrict mobile app access only to certain users or groups. END"}
{"prompt":"title: \"Assemble mobile components\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Learn how to assemble Retool Mobile app interfaces.\"\nhidden: false\n\n###\n\n","completion":" Retool Mobile provides you with a library of [mobile-specific components](\/reference\/components-mobile) that work natively on iOS and Android. Mobile components function in the same way as Retool's [web components](https:\/\/retool.com\/components) for web apps. END"}
{"prompt":"Manage mobile components\n\n###\n\n","completion":" When editing a Retool Mobile app, the [App editor](\/docs\/app-editor) includes an additional _mobile panel_ on the left. Use the **Components** section of the mobile panel to select, add, or delete mobile components from your mobile app. END"}
{"prompt":"When editing a Retool Mobile app, the [App editor](\/docs\/app-editor) includes an additional _mobile panel_ on the left. Use the **Components** section of the mobile panel to select, add, or delete mobile components from your mobile app.\n\n###\n\n","completion":" Retool Mobile groups mobile components into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens) that serve specific purposes. To add a mobile component to a screen: END"}
{"prompt":"Retool Mobile groups mobile components into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens) that serve specific purposes. To add a mobile component to a screen:\n\n###\n\n","completion":" ![Manage components in Retool Mobile](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/66651314-6bb4-4bc0-8104-59f1fb0b927b.webp) END"}
{"prompt":"Arrange mobile components\n\n###\n\n","completion":" Retool Mobile organizes mobile components in a vertical (column) layout. Additional mobile components first appear at the bottom of the **Component** section. You can drag mobile components to change the order in which they appear. END"}
{"prompt":"Retool Mobile organizes mobile components in a vertical (column) layout. Additional mobile components first appear at the bottom of the **Component** section. You can drag mobile components to change the order in which they appear.\n\n###\n\n","completion":" ![Reorder mobile components](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/950c672d-f4f6-446a-a8c6-74f0ad96578c.webp) END"}
{"prompt":"![Reorder mobile components](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/950c672d-f4f6-446a-a8c6-74f0ad96578c.webp)\n\n###\n\n","completion":" You can [customize the layout](\/docs\/retool-mobile-design-layout) of mobile components to arrange them horizontally, adjust their width, and increase padding. END"}
{"prompt":"Configure mobile components\n\n###\n\n","completion":" You configure mobile components in the same way as Retool's web components. You can [write JavaScript](\/docs\/javascript-overview) almost anywhere, edit [option lists](\/docs\/define-option-lists), and more. END"}
{"prompt":"You configure mobile components in the same way as Retool's web components. You can [write JavaScript](\/docs\/javascript-overview) almost anywhere, edit [option lists](\/docs\/define-option-lists), and more.\n\n###\n\n","completion":" Use the [Inspector](\/docs\/app-editor#inspect) in the right panel of the App editor to configure the settings for a selected mobile component. END"}
{"prompt":"Use the [Inspector](\/docs\/app-editor#inspect) in the right panel of the App editor to configure the settings for a selected mobile component.\n\n###\n\n","completion":" ![Configure a component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/4d40fe31-f58a-4cfb-ab23-06b3e6c855a9.webp) END"}
{"prompt":"Trigger actions with event handlers\n\n###\n\n","completion":" Retool uses [event handlers](\/docs\/event-handlers) to trigger queries or other actions in response to user events, such as pressing a button, navigating to another screen, or running a query. Use the **Interaction** settings in the Inspector to configure event handlers for the selected mobile component. END"}
{"prompt":"Retool uses [event handlers](\/docs\/event-handlers) to trigger queries or other actions in response to user events, such as pressing a button, navigating to another screen, or running a query. Use the **Interaction** settings in the Inspector to configure event handlers for the selected mobile component.\n\n###\n\n","completion":" ![Open a screen as a modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0742e6e0-5054-49ef-bee4-76d3813a5a42.webp) END"}
{"prompt":"![Open a screen as a modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0742e6e0-5054-49ef-bee4-76d3813a5a42.webp)\n\n###\n\n","completion":" You can also configure event handlers to [perform conditional actions](\/docs\/event-handlers#conditional-runs) only when a the condition results in a <<glossary:truthy value>>. END"}
{"prompt":"You can also configure event handlers to [perform conditional actions](\/docs\/event-handlers#conditional-runs) only when a the condition results in a <<glossary:truthy value>>.\n\n###\n\n","completion":" Multiple event handlers trigger actions simultaneously, not in a sequential order. If you need to trigger multiple actions in a specific order, consider [writing a JavaScript query](\/docs\/javascript-overview) instead. END"}
{"prompt":"Upload captured signatures or images\n\n###\n\n","completion":" [Signature](https:\/\/docs.retool.com\/reference\/component-mobile-signature) and [Image Input](https:\/\/docs.retool.com\/reference\/component-mobile-image-input) components temporarily save captured data as [blobs](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Blob) with `blob:` or `file:\/\/` URI strings. You can reference this blob elsewhere in your app (e.g., to preview in an [Image](https:\/\/docs.retool.com\/reference\/component-mobile-image) component) or upload captured images to a data store. You can also use [utils.getDataByObjectURL()](https:\/\/docs.retool.com\/reference\/javascript-api-methods-utility#utilsgetdatabyobjecturl) to convert blobs into a Base64-encoded string for other uses. END"}
{"prompt":"[Signature](https:\/\/docs.retool.com\/reference\/component-mobile-signature) and [Image Input](https:\/\/docs.retool.com\/reference\/component-mobile-image-input) components temporarily save captured data as [blobs](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Blob) with `blob:` or `file:\/\/` URI strings. You can reference this blob elsewhere in your app (e.g., to preview in an [Image](https:\/\/docs.retool.com\/reference\/component-mobile-image) component) or upload captured images to a data store. You can also use [utils.getDataByObjectURL()](https:\/\/docs.retool.com\/reference\/javascript-api-methods-utility#utilsgetdatabyobjecturl) to convert blobs into a Base64-encoded string for other uses.\n\n###\n\n","completion":" Queries that upload to data stores such as Google Cloud Store and Amazon S3 require the correct **Content-Type** and **Upload data**. You must also provide **Upload file name** if required. END"}
{"prompt":"Signature\n\n###\n\n","completion":" Captured signatures are in PNG format. The Signature component's `value` contains a `blob:` or `file:\/\/` URI for the signature image. Click **Use custom value** for **Content-Type**, then set it to `image\/png`. Set **Upload data** to `{{ signature1.value }}`. END"}
{"prompt":"Captured signatures are in PNG format. The Signature component's `value` contains a `blob:` or `file:\/\/` URI for the signature image. Click **Use custom value** for **Content-Type**, then set it to `image\/png`. Set **Upload data** to `{{ signature1.value }}`.\n\n###\n\n","completion":" ![Query to upload a signature](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/9adad4cd-3f86-4cd6-b4b3-09055220807f.webp) END"}
{"prompt":"Image Input\n\n###\n\n","completion":" Images taken with the camera or selected from a photo library can be in different formats. The Image Input component's `value` contains an array of `blob:` or `file:\/\/` values, as the component supports multiple selections. The component's `files` property contains an array with details for each image, such as `type`. END"}
{"prompt":"Images taken with the camera or selected from a photo library can be in different formats. The Image Input component's `value` contains an array of `blob:` or `file:\/\/` values, as the component supports multiple selections. The component's `files` property contains an array with details for each image, such as `type`.\n\n###\n\n","completion":" The index of an image in `value` corresponds to the index in `files`. For example, if you capture a single image or only want to upload the first one, click **Use custom value** for **Content-Type**, then set it to `{{ fileInput1.files[0].type }}`. Set **Upload data** to `{{ fileInput1.value[0] }}`. If you need to set custom file names for each upload, you can use `type` to get the file extension with `{{ imageInput1.files[0].type.split(\"\/\").pop() }}`. END"}
{"prompt":"The index of an image in `value` corresponds to the index in `files`. For example, if you capture a single image or only want to upload the first one, click **Use custom value** for **Content-Type**, then set it to `{{ fileInput1.files[0].type }}`. Set **Upload data** to `{{ fileInput1.value[0] }}`. If you need to set custom file names for each upload, you can use `type` to get the file extension with `{{ imageInput1.files[0].type.split(\"\/\").pop() }}`.\n\n###\n\n","completion":" ![Query to upload an image](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/25ee0b8e-8f29-4520-8652-d04451a19b8a.webp) END"}
{"prompt":"title: \"Customize mobile app style\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Learn how to customize the design and layout of Retool Mobile apps.\"\nhidden: false\n\n###\n\n","completion":" You can customize the appearance and layout of mobile apps in a number of ways. Use Collections to display data using prebuilt card and list layouts, or create your own with mobile components. Configure your app's layout and tailor the design to meet your needs, and include additional UI elements to further extend functionality. END"}
{"prompt":"Customize the layout with containers\n\n###\n\n","completion":" Retool Mobile apps arrange [mobile components](\/docs\/retool-mobile-components) in _column_ (vertical) and _row_ (horizontal) layouts. [Container](\/reference\/component-mobile-container) components include additional layout settings to control the layout of nested components. END"}
{"prompt":"Horizontal layouts\n\n###\n\n","completion":" You can arrange nested components horizontally: END"}
{"prompt":"You can arrange nested components horizontally:\n\n###\n\n","completion":" ![Horizontal row layout](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/9881a0d7-bd83-4cfc-9529-0114b7f81e09.webp) END"}
{"prompt":"Gap and padding\n\n###\n\n","completion":" You can use **Gap** and **Padding** settings to fine-tune their layout. END"}
{"prompt":"You can use **Gap** and **Padding** settings to fine-tune their layout.\n\n###\n\n","completion":" ![Adjust gap and padding](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/bf73f571-81bd-4312-a51d-90cdfdfd063a.jpg) END"}
{"prompt":"![Adjust gap and padding](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/bf73f571-81bd-4312-a51d-90cdfdfd063a.jpg)\n\n###\n\n","completion":" You may need to adjust these settings whenever you make significant changes to your app's layout. END"}
{"prompt":"You may need to adjust these settings whenever you make significant changes to your app's layout.\n\n###\n\n","completion":" If you use nested mobile components extensively, you can use **Gap** and **Padding** settings to fine-tune their layout. END"}
{"prompt":"If you use nested mobile components extensively, you can use **Gap** and **Padding** settings to fine-tune their layout.\n\n###\n\n","completion":" ![Adjust gap and padding](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/53e88b2e-59ea-47c3-ab6e-8c33250ff21c.webp) END"}
{"prompt":"![Adjust gap and padding](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/53e88b2e-59ea-47c3-ab6e-8c33250ff21c.webp)\n\n###\n\n","completion":" You may need to adjust these settings whenever you make significant changes to your app's layout. END"}
{"prompt":"Spacing\n\n###\n\n","completion":" Use the [Divider](\/reference\/component-mobile-divider) and [Spacer](\/reference\/component-mobile-spacer) mobile components to visually separate vertical areas of your mobile app with dividing lines or empty blocks of space. END"}
{"prompt":"Use the [Divider](\/reference\/component-mobile-divider) and [Spacer](\/reference\/component-mobile-spacer) mobile components to visually separate vertical areas of your mobile app with dividing lines or empty blocks of space.\n\n###\n\n","completion":" ![Spacer and Divider mobile components](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/954c36cd-7b63-4b48-bc85-28ca7a4b73f7.webp) END"}
{"prompt":"Use collections to present data\n\n###\n\n","completion":" You can present data using Card Collection and List Collection components that [dynamically map data](\/docs\/define-option-lists) and display it using prebuilt layouts. These components use **Mapped options** settings in the Inspector to configure item properties and how they appear. END"}
{"prompt":"You can present data using Card Collection and List Collection components that [dynamically map data](\/docs\/define-option-lists) and display it using prebuilt layouts. These components use **Mapped options** settings in the Inspector to configure item properties and how they appear.\n\n###\n\n","completion":" You can also create your layout of mobile components with [Custom Collection](\/reference\/component-mobile-custom-collection). END"}
{"prompt":"Cards\n\n###\n\n","completion":" Card Collection display items in a card layout. It combines an image or icon with text information. END"}
{"prompt":"Card Collection display items in a card layout. It combines an image or icon with text information.\n\n###\n\n","completion":" ![List Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/02aa4012-f308-421c-96fa-da3df354ba6f.jpg) END"}
{"prompt":"![List Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/02aa4012-f308-421c-96fa-da3df354ba6f.jpg)\n\n###\n\n","completion":" You can control the appearance of cards using the **Data Layout** settings in the Inspector. Options include: END"}
{"prompt":"You can control the appearance of cards using the **Data Layout** settings in the Inspector. Options include:\n\n###\n\n","completion":" You can also configure the image dimension ratio, such as **1:1** or **4:3** to display images to best fit your needs. END"}
{"prompt":"Lists\n\n###\n\n","completion":" List Collection renders each row of data using a list layout. It combines an image or icon with text information. END"}
{"prompt":"List Collection renders each row of data using a list layout. It combines an image or icon with text information.\n\n###\n\n","completion":" ![List Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b49bb85f-5022-4d38-823b-09b3a7379f5b.jpg) END"}
{"prompt":"![List Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b49bb85f-5022-4d38-823b-09b3a7379f5b.jpg)\n\n###\n\n","completion":" You can control the appearance of list items using the **Data Layout** settings in the Inspector. Options include: END"}
{"prompt":"Custom Collection\n\n###\n\n","completion":" Custom Collection allows you to build your own collection using other mobile components. This gives you control over which mobile components to include. END"}
{"prompt":"Custom Collection allows you to build your own collection using other mobile components. This gives you control over which mobile components to include.\n\n###\n\n","completion":" ![Custom Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d19090f2-325d-40fc-8e15-d121a53dc509.jpg) END"}
{"prompt":"![Custom Collection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d19090f2-325d-40fc-8e15-d121a53dc509.jpg)\n\n###\n\n","completion":" You add mobile components to a Custom Collection by clicking the **+** button or dragging them into the collection. You also use `item` and `i` to reference the current data source and set these as values for each mobile component. END"}
{"prompt":"Select collection items\n\n###\n\n","completion":" You can configure event handlers to trigger an action when a user selects a collection item, such as navigating to another screen or triggering a query. When a user selects an item, the item's data is stored in the collection's `selectedItem` property. This allows you to use details about a selected item elsewhere. END"}
{"prompt":"You can configure event handlers to trigger an action when a user selects a collection item, such as navigating to another screen or triggering a query. When a user selects an item, the item's data is stored in the collection's `selectedItem` property. This allows you to use details about a selected item elsewhere.\n\n###\n\n","completion":" For example, each item contains a URL, `item.url`, to a web page that should open when selected. To achieve this: END"}
{"prompt":"For example, each item contains a URL, `item.url`, to a web page that should open when selected. To achieve this:\n\n###\n\n","completion":" When an item is selected in a collection, the mobile app opens the web page using the `URL` of the selected item. END"}
{"prompt":"Additional UI elements\n\n###\n\n","completion":" Retool Mobile event handlers include actions to display supplemental UI elements with additional actions or information. END"}
{"prompt":"Retool Mobile event handlers include actions to display supplemental UI elements with additional actions or information.\n\n###\n\n","completion":" Action sheets and alerts are modals that provide additional information and event handler actions for users to select. These actions allow users to trigger queries, navigate to a screen, etc. Both Action sheets and alerts can also include a title and description, allowing you to provide more context to users. END"}
{"prompt":"Display an action sheet\n\n###\n\n","completion":" An _action sheet_ is an overlay modal that appears at the bottom of the screen. It contains a title and description, along with a list of actions from which a user selects. END"}
{"prompt":"An _action sheet_ is an overlay modal that appears at the bottom of the screen. It contains a title and description, along with a list of actions from which a user selects.\n\n###\n\n","completion":" ![The action sheet](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2efb37f0-5e12-4b16-97ad-f0bf26b5f92c.webp) END"}
{"prompt":"![The action sheet](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2efb37f0-5e12-4b16-97ad-f0bf26b5f92c.webp)\n\n###\n\n","completion":" To create an action sheet: END"}
{"prompt":"To create an action sheet:\n\n###\n\n","completion":" You configure event handlers for each menu item in an action sheet. END"}
{"prompt":"You configure event handlers for each menu item in an action sheet.\n\n###\n\n","completion":" ![Configure action sheet](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2a78a988-b645-47bc-8ff4-c31fca3812f2.webp) END"}
{"prompt":"Reload data with pull-to-refresh\n\n###\n\n","completion":" Retool Mobile supports the pull-to-refresh gesture on screens by configuring the **Refresh** event handler. This allows users to trigger a specific action by performing the gesture on the specified screen. END"}
{"prompt":"Retool Mobile supports the pull-to-refresh gesture on screens by configuring the **Refresh** event handler. This allows users to trigger a specific action by performing the gesture on the specified screen.\n\n###\n\n","completion":" A common use for this is to reload data in the current screen. If your screen contains components that use data from a query, you can configure the event handler to trigger the query. This reloads the query data and updates the components, refreshing the app with the latest data. END"}
{"prompt":"A common use for this is to reload data in the current screen. If your screen contains components that use data from a query, you can configure the event handler to trigger the query. This reloads the query data and updates the components, refreshing the app with the latest data.\n\n###\n\n","completion":" To enable pull-to-refresh on a selected screen: END"}
{"prompt":"To enable pull-to-refresh on a selected screen:\n\n###\n\n","completion":" ![Refresh event](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/14403cb1-e3cb-4ee8-bebc-6cb4a0a8fad5.webp) END"}
{"prompt":"Display an alert modal\n\n###\n\n","completion":" An _alert_ is a modal that appears at the center of the screen. It contains a title and description, along with a maximum of two actions. END"}
{"prompt":"An _alert_ is a modal that appears at the center of the screen. It contains a title and description, along with a maximum of two actions.\n\n###\n\n","completion":" ![Alert modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0dfad240-e0a3-4eda-9559-6560c3587595.jpg) END"}
{"prompt":"![Alert modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0dfad240-e0a3-4eda-9559-6560c3587595.jpg)\n\n###\n\n","completion":" To create an alert: END"}
{"prompt":"Display in-app notifications\n\n###\n\n","completion":" A _notification_ is an informational modal that appears at the bottom of the screen. END"}
{"prompt":"A _notification_ is an informational modal that appears at the bottom of the screen.\n\n###\n\n","completion":" ![Notification in Retool Mobile](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/dcc3af58-82de-4d42-a596-209eb737a32f.jpg) END"}
{"prompt":"![Notification in Retool Mobile](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/dcc3af58-82de-4d42-a596-209eb737a32f.jpg)\n\n###\n\n","completion":" To create a notification: END"}
{"prompt":"To create a notification:\n\n###\n\n","completion":" The notification's **Type** reflects the severity of the notification, changing the icon and color used. You can also control the duration that notifications remain on the screen. END"}
{"prompt":"Apply custom theme styles\n\n###\n\n","completion":" You can create and manage custom styling for your mobile apps with _themes_. To customize your app's theme, click the `•••` **App actions** menu and select **App theme**. END"}
{"prompt":"You can create and manage custom styling for your mobile apps with _themes_. To customize your app's theme, click the `•••` **App actions** menu and select **App theme**.\n\n###\n\n","completion":" ![Mobile app theme](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/c2735fc1-5c31-4c8f-b11c-a237acce17b7.jpg) END"}
{"prompt":"![Mobile app theme](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/c2735fc1-5c31-4c8f-b11c-a237acce17b7.jpg)\n\n###\n\n","completion":" You can create custom themes and apply them to your mobile apps. END"}
{"prompt":"title: \"Build a field sales app on Retool Mobile\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Build a mobile app for a sales team to manage opportunities while in the field.\"\nhidden: false\n\n###\n\n","completion":" [Retool Mobile](\/docs\/retool-mobile) enables you to build native mobile apps that interact with your data and deploy them to your workforce. END"}
{"prompt":"Use case\n\n###\n\n","completion":" A common use case for Retool Mobile is sales account management, enabling sales representatives in the field to manage accounts and opportunities wherever they are. This tutorial explains how to build a field sales mobile app for users to: browse, filter, and edit opportunities. END"}
{"prompt":"A common use case for Retool Mobile is sales account management, enabling sales representatives in the field to manage accounts and opportunities wherever they are. This tutorial explains how to build a field sales mobile app for users to: browse, filter, and edit opportunities.\n\n###\n\n","completion":" ![Field sales mobile app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/3bcdf1ab-c6ea-4b7f-8da9-75371f650334.jpg) END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" This tutorial demonstrates a real-world use case of Retool Mobile and uses sample data from a PostgreSQL database. Retool Cloud organizations include [Retool Database](https:\/\/docs.retool.com\/docs\/retool-database), which you can use to upload and manage sample data. END"}
{"prompt":"This tutorial demonstrates a real-world use case of Retool Mobile and uses sample data from a PostgreSQL database. Retool Cloud organizations include [Retool Database](https:\/\/docs.retool.com\/docs\/retool-database), which you can use to upload and manage sample data.\n\n###\n\n","completion":" Before you begin, download the provided sample data in CSV format. Each CSV file corresponds to a database table. END"}
{"prompt":"Before you begin, download the provided sample data in CSV format. Each CSV file corresponds to a database table.\n\n###\n\n","completion":" [Import the CSVs](https:\/\/docs.retool.com\/docs\/retool-database-quickstart#import-csv) to Retool Database using the provided names. Once complete, you can use the same queries and resource used by this tutorial. END"}
{"prompt":"[Import the CSVs](https:\/\/docs.retool.com\/docs\/retool-database-quickstart#import-csv) to Retool Database using the provided names. Once complete, you can use the same queries and resource used by this tutorial.\n\n###\n\n","completion":" ![Field sales opportunities tables in Retool Database](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/52000801-3f21-4f1d-8d0f-5f3c893edea7.png) END"}
{"prompt":"![Field sales opportunities tables in Retool Database](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/52000801-3f21-4f1d-8d0f-5f3c893edea7.png)\n\n###\n\n","completion":" Much of what this tutorial covers can apply to other resources and data types. You can also use your own SQL database that's connected to Retool. END"}
{"prompt":"Get started\n\n###\n\n","completion":" Once you're ready to begin, sign into Retool and click **Create > Mobile app**. Set the name to `Field Sales`. END"}
{"prompt":"View and filter opportunities\n\n###\n\n","completion":" The first part of the tutorial explains how to look up, filter, and display sales opportunities. END"}
{"prompt":"Configure the Opportunities screen\n\n###\n\n","completion":" Retool Mobile organizes [mobile components](\/docs\/retool-mobile-components) into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens) and creates pathways for your users to follow. Users navigate between screens using the tab bar or by interactions, such as pressing a button or selecting an item from a list. END"}
{"prompt":"Retool Mobile organizes [mobile components](\/docs\/retool-mobile-components) into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens) and creates pathways for your users to follow. Users navigate between screens using the tab bar or by interactions, such as pressing a button or selecting an item from a list.\n\n###\n\n","completion":" New Retool Mobile apps initially contain two screens. Select **Screen 1** in the **Screens** section of the mobile panel (left) to display its settings in the Inspector (right panel). END"}
{"prompt":"New Retool Mobile apps initially contain two screens. Select **Screen 1** in the **Screens** section of the mobile panel (left) to display its settings in the Inspector (right panel).\n\n###\n\n","completion":" ![Configure screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/dce3a4fb-65a3-4c9a-bb2a-94887d0d7978.jpg) END"}
{"prompt":"Retrieve opportunities data\n\n###\n\n","completion":" Sales data for this app comes from a PostgreSQL database. You [write queries](\/docs\/queries) to interact with connected data sources using SQL. END"}
{"prompt":"Sales data for this app comes from a PostgreSQL database. You [write queries](\/docs\/queries) to interact with connected data sources using SQL.\n\n###\n\n","completion":" This mobile app uses three queries to retrieve data about opportunities. Click **+ New** in the bottom panel to create a query, select the **Retool Database** resource, then write the following SQL statement: END"}
{"prompt":"This mobile app uses three queries to retrieve data about opportunities. Click **+ New** in the bottom panel to create a query, select the **Retool Database** resource, then write the following SQL statement:\n\n###\n\n","completion":" Save the query as `getOpportunities`. END"}
{"prompt":"Assemble components for the Opportunities screen\n\n###\n\n","completion":" You add mobile components to each screen of a mobile app to build the interface by clicking **+** in the **Components** section of the left panel. You then configure component properties using the Inspector. END"}
{"prompt":"You add mobile components to each screen of a mobile app to build the interface by clicking **+** in the **Components** section of the left panel. You then configure component properties using the Inspector.\n\n###\n\n","completion":" Add the following mobile components to the **Opportunities** screen, then configure their respective settings: END"}
{"prompt":"Add the following mobile components to the **Opportunities** screen, then configure their respective settings:\n\n###\n\n","completion":" The [Text Input](\/reference\/component-mobile-text-input) mobile component is used to search for opportunities. Update the **getOpportunities** query to reference this new input field's value: END"}
{"prompt":"The [Text Input](\/reference\/component-mobile-text-input) mobile component is used to search for opportunities. Update the **getOpportunities** query to reference this new input field's value:\n\n###\n\n","completion":" ![Final version of the query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/8e467440-8852-4d1b-a4a0-dab2cbb78699.jpg) END"}
{"prompt":"![Final version of the query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/8e467440-8852-4d1b-a4a0-dab2cbb78699.jpg)\n\n###\n\n","completion":" The [List Collection](\/reference\/component-mobile-list-collection) component automatically [configures list options](\/docs\/define-option-lists) by dynamically mapping values from the query data. Use the **Mapped options** settings to configure what values to use by referencing `item`. For instance, setting **Title** to `{{ item.name }}` displays each item name as the list option's title. END"}
{"prompt":"The [List Collection](\/reference\/component-mobile-list-collection) component automatically [configures list options](\/docs\/define-option-lists) by dynamically mapping values from the query data. Use the **Mapped options** settings to configure what values to use by referencing `item`. For instance, setting **Title** to `{{ item.name }}` displays each item name as the list option's title.\n\n###\n\n","completion":" The **Body** field displays a dollar amount that's formatted using [Numbro.js](https:\/\/numbrojs.com\/), a JavaScript library that's automatically available in Retool apps. END"}
{"prompt":"The **Body** field displays a dollar amount that's formatted using [Numbro.js](https:\/\/numbrojs.com\/), a JavaScript library that's automatically available in Retool apps.\n\n###\n\n","completion":" ![Configure mapped options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/bf75b569-4ec0-49e1-bef5-2a907f466f4b.jpg) END"}
{"prompt":"View selected opportunity details\n\n###\n\n","completion":" This part of the tutorial explains how to display details of a selected opportunity. This involves getting details of the selected item and populating components in a screen with the details. END"}
{"prompt":"Configure the Opportunity Details screen\n\n###\n\n","completion":" Add an `opportunityDetails` screen with a **Title** of `Opportunity Details`. END"}
{"prompt":"Add an `opportunityDetails` screen with a **Title** of `Opportunity Details`.\n\n###\n\n","completion":" ![Configure screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d237c1bf-a426-4913-a6d7-f0645be9ea38.jpg) END"}
{"prompt":"Assemble components for the Opportunity Details screen\n\n###\n\n","completion":" When an opportunity is selected in the list, its data is available at the List Collection component's `selectedItem`. The components in this details screen use this information to display relevant details. END"}
{"prompt":"When an opportunity is selected in the list, its data is available at the List Collection component's `selectedItem`. The components in this details screen use this information to display relevant details.\n\n###\n\n","completion":" First, add an Image component to the **Opportunity Details** screen with and set the **Source** value to `{{ OpportunitiesCollection.selectedItem.image_url }}`. This displays the image of the selected opportunity. END"}
{"prompt":"First, add an Image component to the **Opportunity Details** screen with and set the **Source** value to `{{ OpportunitiesCollection.selectedItem.image_url }}`. This displays the image of the selected opportunity.\n\n###\n\n","completion":" Next, add a Key Value component and set its data to `{{ opportunitesCollection.selectedItem }}`. This component displays all key-value pairs for the selected opportunity. END"}
{"prompt":"Next, add a Key Value component and set its data to `{{ opportunitesCollection.selectedItem }}`. This component displays all key-value pairs for the selected opportunity.\n\n###\n\n","completion":" As before, use the **Mapped options** settings to configure what values to use by referencing `item`. END"}
{"prompt":"Display selected opportunity details\n\n###\n\n","completion":" You configure [<<glossary:event handlers>>](\/docs\/event-handlers) to perform actions in response to certain events. In this case, selecting an opportunity in the **Opportunities** screen will open the **Opportunity Details** screen. END"}
{"prompt":"You configure [<<glossary:event handlers>>](\/docs\/event-handlers) to perform actions in response to certain events. In this case, selecting an opportunity in the **Opportunities** screen will open the **Opportunity Details** screen.\n\n###\n\n","completion":" Return to the **Opportunities** screen, select the **opportunitiesCollection** component, and add an event handler that navigates to the **opportunityDetails** screen on selection: END"}
{"prompt":"Return to the **Opportunities** screen, select the **opportunitiesCollection** component, and add an event handler that navigates to the **opportunityDetails** screen on selection:\n\n###\n\n","completion":" ![Configure event handling](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/60418401-8e3f-4da4-bd74-a2f6620ee137.jpg) END"}
{"prompt":"Include associated contact data\n\n###\n\n","completion":" Opportunity details should include any associated contact information. Add a new query to retrieve contact data for the selected opportunity: END"}
{"prompt":"Opportunity details should include any associated contact information. Add a new query to retrieve contact data for the selected opportunity:\n\n###\n\n","completion":" To display relevant contacts, add a [Card Collection](\/reference\/component-mobile-card-collection) component to the **Opportunity Details** screen, set its name to `opportunityDetailsContactsCollection`, then set the **Data source** to **getOpportunityContacts**. END"}
{"prompt":"To display relevant contacts, add a [Card Collection](\/reference\/component-mobile-card-collection) component to the **Opportunity Details** screen, set its name to `opportunityDetailsContactsCollection`, then set the **Data source** to **getOpportunityContacts**.\n\n###\n\n","completion":" Since there can be multiple contacts for an opportunity, you can configure Card Collection to scroll horizontally with smaller thumbnails and save space. In the **Data layout** section of the Inspector, set **Scroll** to **Horizontal** and **Size** to **Half**. END"}
{"prompt":"Since there can be multiple contacts for an opportunity, you can configure Card Collection to scroll horizontally with smaller thumbnails and save space. In the **Data layout** section of the Inspector, set **Scroll** to **Horizontal** and **Size** to **Half**.\n\n###\n\n","completion":" ![Configure mapped options and card layout](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/a36841e9-8508-4085-8711-a704bc084949.jpg) END"}
{"prompt":"Update an existing opportunity\n\n###\n\n","completion":" The final part of the tutorial explains how to enable users to edit a selected opportunity and save changes. This uses the same principles previously covered. END"}
{"prompt":"Configure the Edit Opportunity screen\n\n###\n\n","completion":" Add an `editOpportunity` screen with a **Title** of `Edit Opportunity`. END"}
{"prompt":"Add an `editOpportunity` screen with a **Title** of `Edit Opportunity`.\n\n###\n\n","completion":" ![Configure screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/578b49e6-a271-4b4b-8030-3bfff8836be6.jpg) END"}
{"prompt":"Assemble components for the Edit Opportunity screen\n\n###\n\n","completion":" The Edit Opportunity screen contains a set of input components that initially display values from the selected opportunity using `selectedItem`. Add the following mobile components to this screen, then configure their respective settings: END"}
{"prompt":"The Edit Opportunity screen contains a set of input components that initially display values from the selected opportunity using `selectedItem`. Add the following mobile components to this screen, then configure their respective settings:\n\n###\n\n","completion":" ![The components for this screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/bc2697d7-41af-4369-984f-845d33049cf9.jpg) END"}
{"prompt":"Update the selected opportunity\n\n###\n\n","completion":" The final step is to write a query that updates the opportunity with the information entered into this screen, saving those changes back to the database. END"}
{"prompt":"The final step is to write a query that updates the opportunity with the information entered into this screen, saving those changes back to the database.\n\n###\n\n","completion":" Click **+ New** in the bottom panel to create a new query named `updateOpportunity`, then select **GUI mode**. This mode uses an interface that makes it easier and safer to write queries that manipulate data. END"}
{"prompt":"Click **+ New** in the bottom panel to create a new query named `updateOpportunity`, then select **GUI mode**. This mode uses an interface that makes it easier and safer to write queries that manipulate data.\n\n###\n\n","completion":" Queries that make changes to data use **Filter by** fields to determine which record to update. You can specify a field that contains a unique value, such as an ID, or specify multiple fields on which to filter. This query uses `opportunitiesCollection.selectedItem.id` to reference the selected opportunity's ID. END"}
{"prompt":"Queries that make changes to data use **Filter by** fields to determine which record to update. You can specify a field that contains a unique value, such as an ID, or specify multiple fields on which to filter. This query uses `opportunitiesCollection.selectedItem.id` to reference the selected opportunity's ID.\n\n###\n\n","completion":" Next, update the **Changeset** to configure the query with each field name and the input value to use. END"}
{"prompt":"Next, update the **Changeset** to configure the query with each field name and the input value to use.\n\n###\n\n","completion":" ![Query to update existing opportunity data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/46fa02e6-cf78-4146-8f76-6bd1991a22ff.jpg) END"}
{"prompt":"![Query to update existing opportunity data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/46fa02e6-cf78-4146-8f76-6bd1991a22ff.jpg)\n\n###\n\n","completion":" Finally, add two **Success** event handlers to the query that: END"}
{"prompt":"Finally, add two **Success** event handlers to the query that:\n\n###\n\n","completion":" Click **Save** to save this query. END"}
{"prompt":"Add a button to edit opportunity details\n\n###\n\n","completion":" The final step is to include an _action button_ when viewing an opportunity so that users can make changes. END"}
{"prompt":"The final step is to include an _action button_ when viewing an opportunity so that users can make changes.\n\n###\n\n","completion":" Select the **opportunityDetailsScreen** screen, then add a **Right** action button from the **Actions** section of the Inspector: END"}
{"prompt":"Select the **opportunityDetailsScreen** screen, then add a **Right** action button from the **Actions** section of the Inspector:\n\n###\n\n","completion":" ![Configure action button](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/5050e361-d0f0-4a53-89b3-984081b8c67c.jpg) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" You have now built a field sales app that enables users in the field to read, filter, and update sales opportunities. Each opportunity also includes a list of related contacts. END"}
{"prompt":"You have now built a field sales app that enables users in the field to read, filter, and update sales opportunities. Each opportunity also includes a list of related contacts.\n\n###\n\n","completion":" By applying the lessons learned here and following the same patterns, you could extend the mobile app's functionality with features like managing accounts or performing common actions like notifying contacts. END"}
{"prompt":"title: \"Mobile tutorial: Write custom logic\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-tutorial\"\nexcerpt: \"Learn how to extend your app's functionality with JavaScript queries and transformers.\"\nhidden: false\n\n###\n\n","completion":" As you've learned, anything between curly brackets `{{ }}` is processed as JavaScript in Retool. This is great for smaller pieces of code, but sometimes apps require more complex logic. This is where [transformers](https:\/\/docs.retool.com\/docs\/transformers) and [writing custom JavaScript code](https:\/\/docs.retool.com\/docs\/scripting-retool) come in. END"}
{"prompt":"1. Add search functionality\n\n###\n\n","completion":" On the **Users** screen, it'd be useful to search for users instead of scrolling through them. JavaScript transformers update automatically when the object they reference changes, which means you can write a transformer to read the value in a Text Input component and then filter users based on the text. END"}
{"prompt":"On the **Users** screen, it'd be useful to search for users instead of scrolling through them. JavaScript transformers update automatically when the object they reference changes, which means you can write a transformer to read the value in a Text Input component and then filter users based on the text.\n\n###\n\n","completion":" First, add a Text Input component to the top of the **Users** screen. By default, the component is added to the bottom of the screen but you can drag and drop components in the left panel to reorder them. Update the **Label** to **Search users**. END"}
{"prompt":"First, add a Text Input component to the top of the **Users** screen. By default, the component is added to the bottom of the screen but you can drag and drop components in the left panel to reorder them. Update the **Label** to **Search users**.\n\n###\n\n","completion":" To add a JavaScript transformer, click the **+** button in the Query Editor and select **JavaScript transformer**. Name it `searchUsers` and paste the following code into the editor. END"}
{"prompt":"To add a JavaScript transformer, click the **+** button in the Query Editor and select **JavaScript transformer**. Name it `searchUsers` and paste the following code into the editor.\n\n###\n\n","completion":" ![Writing a JavaScript transformer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e7d1d466-1c4c-4423-958a-8fc13c9bf173.png) END"}
{"prompt":"![Writing a JavaScript transformer](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e7d1d466-1c4c-4423-958a-8fc13c9bf173.png)\n\n###\n\n","completion":" This code iterates through each user returned in the `getUsers` query, and checks to see if the value in the `textInput4` component is contained in the name. The values are converted to lowercase with `toLowerCase()` so that search terms don't have to match case exactly. END"}
{"prompt":"This code iterates through each user returned in the `getUsers` query, and checks to see if the value in the `textInput4` component is contained in the name. The values are converted to lowercase with `toLowerCase()` so that search terms don't have to match case exactly.\n\n###\n\n","completion":" Make sure to save the transformer, then select the `collectionView1` component on the **Details** screen. Update the **Data source** to `searchUsers` and the **Body** to `{{ item.blocked ? 'Blocked' : 'Allowed' }}`. You can test the search functionality by selecting the Text Input component and typing. END"}
{"prompt":"Make sure to save the transformer, then select the `collectionView1` component on the **Details** screen. Update the **Data source** to `searchUsers` and the **Body** to `{{ item.blocked ? 'Blocked' : 'Allowed' }}`. You can test the search functionality by selecting the Text Input component and typing.\n\n###\n\n","completion":" ![Using a JavaScript transformer to add search functionality](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/c4fd4812-686b-474e-ac0d-02394d3ddc05.png) END"}
{"prompt":"2. Add functionality to block and unblock all users\n\n###\n\n","completion":" In a previous step, you added an action to the **Users** screen for blocking and allowing all users. It's now time to connect that action to some custom JavaScript to perform these bulk actions. The JavaScript queries you'll write identify which users to block or allow and then trigger the appropriate query. END"}
{"prompt":"Create a JavaScript query\n\n###\n\n","completion":" Start by clicking the **+** button in the Query Editor and selecting **JavaScript query**. Name it `blockAll` and then paste this code into the editor. Make sure to save the query. END"}
{"prompt":"Start by clicking the **+** button in the Query Editor and selecting **JavaScript query**. Name it `blockAll` and then paste this code into the editor. Make sure to save the query.\n\n###\n\n","completion":" This code finds unblocked users, blocks them with the `blockAllUsers` API query (which you'll create in a moment), and then displays a notification with the number of users unblocked. There are a few more things to note: END"}
{"prompt":"This code finds unblocked users, blocks them with the `blockAllUsers` API query (which you'll create in a moment), and then displays a notification with the number of users unblocked. There are a few more things to note:\n\n###\n\n","completion":" ![Adding a JavaScript query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1d490fe1-adda-4356-9a62-17150d71a57e.png) END"}
{"prompt":"Create a query to block all users\n\n###\n\n","completion":" Next, create another PATCH query and name it `blockAllUsers`. Set the endpoint slug to `{{ getUsers.data[i].id }}`, and set `blocked` to `true` in the JSON body. Make sure to save the query. END"}
{"prompt":"Next, create another PATCH query and name it `blockAllUsers`. Set the endpoint slug to `{{ getUsers.data[i].id }}`, and set `blocked` to `true` in the JSON body. Make sure to save the query.\n\n###\n\n","completion":" ![Adding a block query that's triggered by a JavaScript query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/a68300d1-7f72-42ab-8c08-7bd73710874f.png) END"}
{"prompt":"![Adding a block query that's triggered by a JavaScript query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/a68300d1-7f72-42ab-8c08-7bd73710874f.png)\n\n###\n\n","completion":" This query uses the `i` value passed from the JavaScript query to unblock the appropriate user ID. END"}
{"prompt":"This query uses the `i` value passed from the JavaScript query to unblock the appropriate user ID.\n\n###\n\n","completion":" By default, queries show notifications after they run. If you're running several queries in succession, you might want to turn these notifications off. To do this, make sure the `blockAllUsers` query is selected and open the **Response** tab. Scroll down to **Query success** and uncheck the **Show notification on success** box. Make sure to save the query. END"}
{"prompt":"By default, queries show notifications after they run. If you're running several queries in succession, you might want to turn these notifications off. To do this, make sure the `blockAllUsers` query is selected and open the **Response** tab. Scroll down to **Query success** and uncheck the **Show notification on success** box. Make sure to save the query.\n\n###\n\n","completion":" ![Turning off success notifications](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3c04ff0b-d9b9-410b-8e3b-768ea7eaeb65.png) END"}
{"prompt":"![Turning off success notifications](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3c04ff0b-d9b9-410b-8e3b-768ea7eaeb65.png)\n\n###\n\n","completion":" With all the code written, open the **Users** screen and select the **Interface User Lock** action. Click **+ New** in the **Actions** section. This creates a default **trigger** action. Select this action then: END"}
{"prompt":"With all the code written, open the **Users** screen and select the **Interface User Lock** action. Click **+ New** in the **Actions** section. This creates a default **trigger** action. Select this action then:\n\n###\n\n","completion":" ![Configuring an action to run a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/d2a83ecf-eeab-4fe7-b202-6168cda50dc8.png) END"}
{"prompt":"Add functionality to allow all users\n\n###\n\n","completion":" You can add functionality to allow all users by duplicating what you just created and swapping the blocked logic to unblock users. Copy the code below to create the JavaScript query to unblock all users. END"}
{"prompt":"You can test your knowledge below or see the wrap up page for additional resources.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/6dc41884-6e3c-4e3c-881b-7c0599b7432f?category=5\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile tutorial: Configure events\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-tutorial\"\nexcerpt: \"Learn how to connect queries and components.\"\nhidden: false\n\n###\n\n","completion":" There are various ways for queries and components to interact with each other. [Event handlers](https:\/\/docs.retool.com\/docs\/event-handlers) are a common method, but you can also configure components to update other components. END"}
{"prompt":"There are various ways for queries and components to interact with each other. [Event handlers](https:\/\/docs.retool.com\/docs\/event-handlers) are a common method, but you can also configure components to update other components.\n\n###\n\n","completion":" Event handlers allow you to perform actions based on user interactions. They can be found on many components, but they can also be set on queries. Here are a few examples of how to use event handlers. END"}
{"prompt":"Event handlers allow you to perform actions based on user interactions. They can be found on many components, but they can also be set on queries. Here are a few examples of how to use event handlers.\n\n###\n\n","completion":" This lesson uses several types of event handlers. You can test them out as you complete each step to get a better understanding of how they work. END"}
{"prompt":"1. Configure the Fab button\n\n###\n\n","completion":" When the Fab button is pressed, it needs to open the **Details** screen so the user can be added. To do this: END"}
{"prompt":"When the Fab button is pressed, it needs to open the **Details** screen so the user can be added. To do this:\n\n###\n\n","completion":" ![Adding an event handler to a Fab](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/db7773cc-e807-4c21-ade2-bcdd15840a54.png) END"}
{"prompt":"2. Configure the save button\n\n###\n\n","completion":" In a previous lesson, you added a **Save user details** button to the **Details** screen. This button needs to save changes to existing users, and save new users. This means it needs to conditionally trigger either the `updateUser` or `createUser` query depending on the scenario. Start by configuring the button to save changes to an existing user. END"}
{"prompt":"In a previous lesson, you added a **Save user details** button to the **Details** screen. This button needs to save changes to existing users, and save new users. This means it needs to conditionally trigger either the `updateUser` or `createUser` query depending on the scenario. Start by configuring the button to save changes to an existing user.\n\n###\n\n","completion":" ![Adding an event handler to a Button component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/427e2a56-092c-4e4b-8260-f95937207199.png) END"}
{"prompt":"![Adding an event handler to a Button component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/427e2a56-092c-4e4b-8260-f95937207199.png)\n\n###\n\n","completion":" Create a second event handler using the same process, but set the query to `createUser` and **Only run when** to `{{ collectionView1.selectedItem === null }}`. END"}
{"prompt":"3. Add pull-to-refresh functionality\n\n###\n\n","completion":" Mobile apps often implement pull-to-refresh functionality to update the data on the screen. To add this functionality to the **Users** screen: END"}
{"prompt":"Mobile apps often implement pull-to-refresh functionality to update the data on the screen. To add this functionality to the **Users** screen:\n\n###\n\n","completion":" ![Add a pull-to-refresh event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e0376f42-c526-4aa6-8c74-a3d086df1d94.png) END"}
{"prompt":"![Add a pull-to-refresh event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e0376f42-c526-4aa6-8c74-a3d086df1d94.png)\n\n###\n\n","completion":" Swiping down on the screen triggers the pull-to-refresh action and reloads the list of users. END"}
{"prompt":"4. Add event handlers to queries\n\n###\n\n","completion":" So far, the event handlers you've added control components, trigger queries, and navigate through the UI. The last step is to add event handlers to queries, so that the UI is updated after you make changes. END"}
{"prompt":"So far, the event handlers you've added control components, trigger queries, and navigate through the UI. The last step is to add event handlers to queries, so that the UI is updated after you make changes.\n\n###\n\n","completion":" At the moment, you must navigate back to the **Users** screen after creating a new user and then use the pull-to-refresh functionality to update the list. You can instead add event handlers to queries to perform these actions for the user automatically. END"}
{"prompt":"At the moment, you must navigate back to the **Users** screen after creating a new user and then use the pull-to-refresh functionality to update the list. You can instead add event handlers to queries to perform these actions for the user automatically.\n\n###\n\n","completion":" Start by selecting the `createUser` query. Scroll down to the **Event handlers** section and click **+ Add** next to **Success**. Set the query to `getUsers` so that when the `createUser` runs successfully, it triggers `getUsers` which automatically updates the UI. END"}
{"prompt":"Start by selecting the `createUser` query. Scroll down to the **Event handlers** section and click **+ Add** next to **Success**. Set the query to `getUsers` so that when the `createUser` runs successfully, it triggers `getUsers` which automatically updates the UI.\n\n###\n\n","completion":" ![Creating a success event handler on a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/a6d914f8-1e9a-48c4-8926-5f84dd43a7de.png) END"}
{"prompt":"![Creating a success event handler on a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/a6d914f8-1e9a-48c4-8926-5f84dd43a7de.png)\n\n###\n\n","completion":" Click **+ Add** next to **Success** again to add a second event handler that navigates back to the root screen. Set: END"}
{"prompt":"Click **+ Add** next to **Success** again to add a second event handler that navigates back to the root screen. Set:\n\n###\n\n","completion":" Then, configure a third event handler to display a success notification by setting: END"}
{"prompt":"Then, configure a third event handler to display a success notification by setting:\n\n###\n\n","completion":" ![Creating a notification event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/da11f8b7-ff5f-4576-bbc6-75166c0d0596.png) END"}
{"prompt":"![Creating a notification event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/da11f8b7-ff5f-4576-bbc6-75166c0d0596.png)\n\n###\n\n","completion":" Make sure to save the query, then add the same three event handlers to the `updateUser` query. For the success notification, change the **Title** to `User updated` since the query updates an existing user. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/6dc41884-6e3c-4e3c-881b-7c0599b7432f?category=4\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile tutorial: Connect a data source\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-tutorial\"\nexcerpt: \"Learn how to connect your data source by creating a resource.\"\nhidden: false\n\n###\n\n","completion":" The first step in building a Retool Mobile app is connecting your data source. Retool supports most databases and APIs, and you can use built-in [integrations](https:\/\/docs.retool.com\/docs\/integrations) to connect to popular data sources with minimal configuration. You connect a data source by creating a <<glossary:resource>> in Retool. This guide uses a REST API as the resource. END"}
{"prompt":"1. Generate an API and sample data for your app\n\n###\n\n","completion":" To work through the tutorial, you'll use Retool's [API generator](https:\/\/retool.com\/api-generator\/) to create a test REST API with some sample data. When building your own apps, you'll often use an existing data source. END"}
{"prompt":"To work through the tutorial, you'll use Retool's [API generator](https:\/\/retool.com\/api-generator\/) to create a test REST API with some sample data. When building your own apps, you'll often use an existing data source.\n\n###\n\n","completion":" For this app, you'll generate a data set that includes the user's ID, name, email address, company, and whether the user's access is blocked. When you're ready, click the **Generate API** button and save the **Endpoint URL**. END"}
{"prompt":"For this app, you'll generate a data set that includes the user's ID, name, email address, company, and whether the user's access is blocked. When you're ready, click the **Generate API** button and save the **Endpoint URL**.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"700px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/samples.tryretool.com\/embedded\/public\/4f6e4c49-a4b1-47ed-a8b0-455c11e5be7d?column_names=%5B%22name%22,%22email%22,%22company%22,%22blocked%22%5D&column_data=%5B%5B%22People%22,%22Full%20Name%22%5D,%5B%22People%22,%22Email%20Address%22%5D,%5B%22People%22,%22Company%20Name%22%5D,%5B%22Boolean%22%5D%5D\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"2. Create a resource to connect your data source\n\n###\n\n","completion":" Navigate to the **Resources** tab from the Retool homepage and click **Create new > Resource**. Select **REST API** and name the resource. In the **Base URL** field, paste the endpoint URL from the previous step and create the resource. When the modal is displayed, select the option to go **Back to resources**. END"}
{"prompt":"Navigate to the **Resources** tab from the Retool homepage and click **Create new > Resource**. Select **REST API** and name the resource. In the **Base URL** field, paste the endpoint URL from the previous step and create the resource. When the modal is displayed, select the option to go **Back to resources**.\n\n###\n\n","completion":" ![Creating a resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e4992067-6291-4548-8bc4-3ba0e72f6154.png) END"}
{"prompt":"3. Create a mobile app\n\n###\n\n","completion":" Navigate to the **Apps** tab in Retool. In the top right, select **Create new -> Mobile app**. Name the app `Mobile User Management` and click **Create app**. END"}
{"prompt":"Navigate to the **Apps** tab in Retool. In the top right, select **Create new -> Mobile app**. Name the app `Mobile User Management` and click **Create app**.\n\n###\n\n","completion":" ![Creating a mobile app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/e6daf930-9355-4fbc-b168-d98226e6b34e.png) END"}
{"prompt":"4. Write a test query\n\n###\n\n","completion":" <<glossary:Queries>> are covered in more detail later, but it's a good idea to run one now to verify the connection to your resource. When you created the app, Retool automatically added `query1` to it. You can find this query in the lower left corner of the [bottom panel](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel). Click on the `query1` text and rename the query to `getUsers`. END"}
{"prompt":"<<glossary:Queries>> are covered in more detail later, but it's a good idea to run one now to verify the connection to your resource. When you created the app, Retool automatically added `query1` to it. You can find this query in the lower left corner of the [bottom panel](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel). Click on the `query1` text and rename the query to `getUsers`.\n\n###\n\n","completion":" ![Renaming query1](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0048a501-9590-4efa-9003-04152e20c3f7.png) END"}
{"prompt":"![Renaming query1](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0048a501-9590-4efa-9003-04152e20c3f7.png)\n\n###\n\n","completion":" You can see that the resource you just added is selected, and that the query sends a GET request to your API. Click **Run** to verify the query works. You'll see a success message and a JSON response with your data. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<iframe height=\\\"450px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/6dc41884-6e3c-4e3c-881b-7c0599b7432f?category=1\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile tutorial: Interact with data\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-tutorial\"\nexcerpt: \"Learn about queries and use them to read and write data.\"\nhidden: false\n\n###\n\n","completion":" Queries are how apps interact with data and they're often triggered by components. Your app already has a query that pulls data from your API, but you need to create some more queries to fully interact with your data. END"}
{"prompt":"1. Add a query to create new users\n\n###\n\n","completion":" In the [bottom panel](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel), click **+** -> **Resource query** to create a new query. END"}
{"prompt":"In the [bottom panel](https:\/\/docs.retool.com\/docs\/app-editor#bottom-panel), click **+** -> **Resource query** to create a new query.\n\n###\n\n","completion":" ![Creating a resource query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/79f06e9d-536e-4aa8-8c3b-0989d9fdc2ea.png) END"}
{"prompt":"![Creating a resource query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/79f06e9d-536e-4aa8-8c3b-0989d9fdc2ea.png)\n\n###\n\n","completion":" Name it `createUser` and set the **Action type** to **POST**. Then, fill out the JSON body like this to pull values from the components on the **Details** screen. END"}
{"prompt":"Name it `createUser` and set the **Action type** to **POST**. Then, fill out the JSON body like this to pull values from the components on the **Details** screen.\n\n###\n\n","completion":" ![Adding a post query to create users](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5cb702aa-d442-40fa-9e12-8bab32aef887.png) END"}
{"prompt":"![Adding a post query to create users](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5cb702aa-d442-40fa-9e12-8bab32aef887.png)\n\n###\n\n","completion":" You can also copy the values below and paste them into your query. Make sure to click **Save** after filling out the query. END"}
{"prompt":"2. Add a query update user data\n\n###\n\n","completion":" Create a new resource query and name it `updateUser`. Set the **Action type** to **PATCH**, and fill out the rest of the endpoint URL and JSON body like this. END"}
{"prompt":"Create a new resource query and name it `updateUser`. Set the **Action type** to **PATCH**, and fill out the rest of the endpoint URL and JSON body like this.\n\n###\n\n","completion":" ![Creating a query to update user data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3b06cc2f-5795-4aef-9d27-1f7eee335110.png) END"}
{"prompt":"![Creating a query to update user data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3b06cc2f-5795-4aef-9d27-1f7eee335110.png)\n\n###\n\n","completion":" You can also copy the values below and paste them into your query. Make sure to click **Save** after filling out the query. END"}
{"prompt":"You can also copy the values below and paste them into your query. Make sure to click **Save** after filling out the query.\n\n###\n\n","completion":" You might notice that `{{ collectionView1.selectedItem.id }}` is red and returns a null value. This is expected if you navigated to the **Details** screen using the left panel because no user was selected on the **Users** screen. If you go back to the **Users** screen and click on a user, `{{ collectionView1.selectedItem.id }}` will return the user's ID. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Now that you have queries to create and update users, it's time to connect them to components. This way when you make changes with the UI, the updates are automatically written to your API and the UI is refreshed. END"}
{"prompt":"Now that you have queries to create and update users, it's time to connect them to components. This way when you make changes with the UI, the updates are automatically written to your API and the UI is refreshed.\n\n###\n\n","completion":" You can test your knowledge below or move on to the next lesson. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/6dc41884-6e3c-4e3c-881b-7c0599b7432f?category=3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile tutorial: Assemble the UI\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-tutorial\"\nexcerpt: \"Learn about screens and components and use them to assemble your mobile app's user interface.\"\nhidden: false\n\n###\n\n","completion":" <<glossary:Screens>> separate the interface into multi-page layouts required for mobile apps. <<glossary:Components>> are interface elements, such as input fields and buttons. You position components into screens to build the interface. Only a few components are used in this example, but you can find information on more components in the [Mobile component reference](https:\/\/docs.retool.com\/reference\/components-mobile). END"}
{"prompt":"1. Update screens\n\n###\n\n","completion":" Select `screen1` and then in the [right panel](https:\/\/docs.retool.com\/docs\/app-editor#right-panel), change the **Title** to `Users`. END"}
{"prompt":"Select `screen1` and then in the [right panel](https:\/\/docs.retool.com\/docs\/app-editor#right-panel), change the **Title** to `Users`.\n\n###\n\n","completion":" ![Update the title for screen 1](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/786c7888-fcc8-485b-aa4c-450c6d92d9d4.png) END"}
{"prompt":"![Update the title for screen 1](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/786c7888-fcc8-485b-aa4c-450c6d92d9d4.png)\n\n###\n\n","completion":" Hover over **Screen 2** and select **•••** -> **Delete** to remove the screen. END"}
{"prompt":"Hover over **Screen 2** and select **•••** -> **Delete** to remove the screen.\n\n###\n\n","completion":" You now have two screens: END"}
{"prompt":"You now have two screens:\n\n###\n\n","completion":" You can navigate through the app with your mouse to see the screens and transitions in action. END"}
{"prompt":"2. Display user data\n\n###\n\n","completion":" Retool initially includes some demo data when you create a new app. To display data from the resource you created earlier, select the **collectionView1** component on the **Users** screen. In the right panel, change the **Data source** to `getUsers`. This updates the component so that it pulls data from your query instead of the demo data. END"}
{"prompt":"Retool initially includes some demo data when you create a new app. To display data from the resource you created earlier, select the **collectionView1** component on the **Users** screen. In the right panel, change the **Data source** to `getUsers`. This updates the component so that it pulls data from your query instead of the demo data.\n\n###\n\n","completion":" ![Changing the data source for the Collection View component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3645dbb4-45f4-4024-b4f1-8d32acf8ae62.png) END"}
{"prompt":"![Changing the data source for the Collection View component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3645dbb4-45f4-4024-b4f1-8d32acf8ae62.png)\n\n###\n\n","completion":" Blocked status is an important value to display, so change the **Body** to `{{ item.blocked ? 'Blocked' : 'Allowed' }}`. In Retool, anything between curly brackets is JavaScript. This means you can write custom JavaScript in addition to using prebuilt component functionality. For this [List Collection](https:\/\/docs.retool.com\/reference\/component-mobile-list-collection) component, a [ternary](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Operators\/Conditional_Operator) is used to check the user's blocked status and then display the appropriate value in the [Select component](https:\/\/docs.retool.com\/reference\/component-mobile-select). END"}
{"prompt":"Blocked status is an important value to display, so change the **Body** to `{{ item.blocked ? 'Blocked' : 'Allowed' }}`. In Retool, anything between curly brackets is JavaScript. This means you can write custom JavaScript in addition to using prebuilt component functionality. For this [List Collection](https:\/\/docs.retool.com\/reference\/component-mobile-list-collection) component, a [ternary](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Operators\/Conditional_Operator) is used to check the user's blocked status and then display the appropriate value in the [Select component](https:\/\/docs.retool.com\/reference\/component-mobile-select).\n\n###\n\n","completion":" ![Using a ternary to show blocked status](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ba1e589e-5312-4870-9d60-97c9f492497e.png) END"}
{"prompt":"![Using a ternary to show blocked status](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ba1e589e-5312-4870-9d60-97c9f492497e.png)\n\n###\n\n","completion":" Each user's name and their blocked status is now displayed, but they could also use an avatar. For the purposes of this tutorial, you can generate placeholder avatars with [DiceBear](https:\/\/dicebear.com\/introduction). With **collectionView1** still selected, paste `https:\/\/api.dicebear.com\/5.x\/thumbs\/svg?seed={{item.name}}` into the **Source** field under the **Media** section. END"}
{"prompt":"Each user's name and their blocked status is now displayed, but they could also use an avatar. For the purposes of this tutorial, you can generate placeholder avatars with [DiceBear](https:\/\/dicebear.com\/introduction). With **collectionView1** still selected, paste `https:\/\/api.dicebear.com\/5.x\/thumbs\/svg?seed={{item.name}}` into the **Source** field under the **Media** section.\n\n###\n\n","completion":" ![Adding user avatars](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/70c8af32-2ca7-4c19-a95e-73e3561bf4ac.png) END"}
{"prompt":"3. Add an action to block and allow all users\n\n###\n\n","completion":" You can optionally add **Actions** to the top of any screen. These can be icons or text, and they provide additional ways for users to interact with your app. END"}
{"prompt":"You can optionally add **Actions** to the top of any screen. These can be icons or text, and they provide additional ways for users to interact with your app.\n\n###\n\n","completion":" For this example app, you'll use an [action sheet](\/docs\/retool-mobile-design-layout#display-an-action-sheet) with options to allow or block all users at once. Make sure the **Users** screen is selected, and then in the right panel under the **Actions** section, click **+ New** next to **Right**. This adds an action to the top right of the screen. END"}
{"prompt":"For this example app, you'll use an [action sheet](\/docs\/retool-mobile-design-layout#display-an-action-sheet) with options to allow or block all users at once. Make sure the **Users** screen is selected, and then in the right panel under the **Actions** section, click **+ New** next to **Right**. This adds an action to the top right of the screen.\n\n###\n\n","completion":" ![Adding an action to a screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/d65247bb-eafb-4fb8-8e9a-b26cd3db1ce1.png) END"}
{"prompt":"![Adding an action to a screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/d65247bb-eafb-4fb8-8e9a-b26cd3db1ce1.png)\n\n###\n\n","completion":" Select the **Action** in the right panel and set: END"}
{"prompt":"Select the **Action** in the right panel and set:\n\n###\n\n","completion":" ![Adding an action sheet](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/cdfdf1fc-ac79-4d19-bf66-0166e742b25b.png) END"}
{"prompt":"4. Add a button to create new users\n\n###\n\n","completion":" A floating action button (Fab) is a small, often circular button that floats above content. They're generally used for a primary action. For this mobile app, a [Fab](https:\/\/docs.retool.com\/reference\/component-mobile-fab) component is used to add new users. END"}
{"prompt":"A floating action button (Fab) is a small, often circular button that floats above content. They're generally used for a primary action. For this mobile app, a [Fab](https:\/\/docs.retool.com\/reference\/component-mobile-fab) component is used to add new users.\n\n###\n\n","completion":" To add a Fab component, select the **Users** screen and click **+** next to **Components** in the left sidebar. Click the Fab component in the modal that's displayed to add the button. END"}
{"prompt":"To add a Fab component, select the **Users** screen and click **+** next to **Components** in the left sidebar. Click the Fab component in the modal that's displayed to add the button.\n\n###\n\n","completion":" ![Adding a Fab component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/68643d78-c48c-42d4-9cf6-674d33303614.png) END"}
{"prompt":"![Adding a Fab component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/68643d78-c48c-42d4-9cf6-674d33303614.png)\n\n###\n\n","completion":" Update the component's **Text** to **Add**. END"}
{"prompt":"5. Add components to edit user data\n\n###\n\n","completion":" The app needs to provide a way for you to edit user data like names and email addresses. To do this, you'll add: END"}
{"prompt":"The app needs to provide a way for you to edit user data like names and email addresses. To do this, you'll add:\n\n###\n\n","completion":" Start by clicking on a user to navigate to the **Details** screen. Select the `image1` component and then in the right panel, paste `https:\/\/api.dicebear.com\/5.x\/thumbs\/svg?seed={{collectionView1.selectedItem.name}}` in the **Source** field to add the same avatar image. END"}
{"prompt":"Start by clicking on a user to navigate to the **Details** screen. Select the `image1` component and then in the right panel, paste `https:\/\/api.dicebear.com\/5.x\/thumbs\/svg?seed={{collectionView1.selectedItem.name}}` in the **Source** field to add the same avatar image.\n\n###\n\n","completion":" ![Setting the Image component's source](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/c0a185fc-cb72-468b-bc0f-eb2b2e684339.png) END"}
{"prompt":"![Setting the Image component's source](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/c0a185fc-cb72-468b-bc0f-eb2b2e684339.png)\n\n###\n\n","completion":" Next, remove the `keyValue1` component by hovering over it and clicking **•••** -> **Delete**. Then, click **+** and add a Text Input component. END"}
{"prompt":"Next, remove the `keyValue1` component by hovering over it and clicking **•••** -> **Delete**. Then, click **+** and add a Text Input component.\n\n###\n\n","completion":" Set the **Default value** to `{{ collectionView1.selectedItem.name }}` and the **Label** to **Name**. END"}
{"prompt":"Set the **Default value** to `{{ collectionView1.selectedItem.name }}` and the **Label** to **Name**.\n\n###\n\n","completion":" ![Adding a Text Input component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/046f0b95-e3c4-4f8d-bc69-295aca1aa099.png) END"}
{"prompt":"![Adding a Text Input component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/046f0b95-e3c4-4f8d-bc69-295aca1aa099.png)\n\n###\n\n","completion":" Add two more Text Input components to display the user's email and company. Make sure to update the **Labels** and **Default values** accordingly. You can copy the **Default values** below. END"}
{"prompt":"Add two more Text Input components to display the user's email and company. Make sure to update the **Labels** and **Default values** accordingly. You can copy the **Default values** below.\n\n###\n\n","completion":" Next, add a Select component for blocking and allowing users. Make sure to set: END"}
{"prompt":"Next, add a Select component for blocking and allowing users. Make sure to set:\n\n###\n\n","completion":" ![Configuring the Select component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/110e3c6e-c4a9-46b8-8da4-6cc325820680.png) END"}
{"prompt":"![Configuring the Select component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/110e3c6e-c4a9-46b8-8da4-6cc325820680.png)\n\n###\n\n","completion":" Finally, add a Button component and change the **Text** field to `Save user details`. The **Details** screen should now look like this. END"}
{"prompt":"Finally, add a Button component and change the **Text** field to `Save user details`. The **Details** screen should now look like this.\n\n###\n\n","completion":" ![Details screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/841af447-08ef-4741-a117-938db15be790.png) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" You've now assembled the core UI elements but you'll notice that interactions like button clicks don't do anything. It's time to create some more queries so you can fully interact with your data. END"}
{"prompt":"You've now assembled the core UI elements but you'll notice that interactions like button clicks don't do anything. It's time to create some more queries so you can fully interact with your data.\n\n###\n\n","completion":" You can test your knowledge below or move on to the next lesson. END"}
{"prompt":"You can test your knowledge below or move on to the next lesson.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/6dc41884-6e3c-4e3c-881b-7c0599b7432f?category=2\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Mobile tutorial: Wrap up\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-tutorial\"\nexcerpt: \"Learn about additional resources and what to explore next.\"\nhidden: false\n\n###\n\n","completion":" To recap, you've built your first Retool Mobile app by: END"}
{"prompt":"To recap, you've built your first Retool Mobile app by:\n\n###\n\n","completion":" You can [preview and run Retool Mobile apps](https:\/\/docs.retool.com\/docs\/retool-mobile-overview#run-retool-mobile-apps) natively on iOS and Android, or on the web. On mobile, download the Retool Mobile app and log in. You can optionally preview the app on the web and scan a QR code to open the app with the Retool Mobile app. END"}
{"prompt":"You can [preview and run Retool Mobile apps](https:\/\/docs.retool.com\/docs\/retool-mobile-overview#run-retool-mobile-apps) natively on iOS and Android, or on the web. On mobile, download the Retool Mobile app and log in. You can optionally preview the app on the web and scan a QR code to open the app with the Retool Mobile app.\n\n###\n\n","completion":" Now that you've built your first app, you might want to: END"}
{"prompt":"title: \"Mobile tutorial: Introduction\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-tutorial\"\nexcerpt: \"An interactive course that teaches you to build your first mobile app.\"\nhidden: false\nmetadata: \n\n###\n\n","completion":" This tutorial is an interactive course to learn about [Retool Mobile](\/docs\/retool-mobile). Each lesson covers the core concepts of Retool and guides you through the steps to build a simple Retool Mobile app that runs natively on iOS and Android. END"}
{"prompt":"Familiarity with common technologies like APIs, SQL, and JavaScript is expected to complete this course. If you need to learn more about these technologies, we recommend using online learning resources, such as:\n\n###\n\n","completion":" If you're already familiar with Retool, you might want to see the [quickstart guide](https:\/\/docs.retool.com\/docs\/retool-mobile-quickstart) instead. END"}
{"prompt":"What you'll build\n\n###\n\n","completion":" You will build a mobile app that allows you to perform common user management actions. These actions include creating users, editing users, and blocking and unblocking users. END"}
{"prompt":"title: \"Build an inventory management app on Retool Mobile\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Build a mobile app for workers to browse and manage warehouse inventory.\"\nhidden: false\nmetadata: \n  image: \n    0: \"https:\/\/files.readme.io\/52b9bc7-docs_retool-mobile_136eb8fb-8110-44dd-bcaf-bd317b42fe6b.jpg\"\n    1: \"docs_retool-mobile_136eb8fb-8110-44dd-bcaf-bd317b42fe6b.jpg\"\n    2: 1600\n    3: 1221\n    4: \"#908f95\"\n\n###\n\n","completion":" [Retool Mobile](\/docs\/retool-mobile) enables you to build native mobile apps that interact with your data and deploy them to your workforce. END"}
{"prompt":"Use case\n\n###\n\n","completion":" A common use case for Retool Mobile is inventory management, enabling workers to look up product information in any warehouse, wherever they are. This tutorial explains how to build an inventory management mobile app for users to: END"}
{"prompt":"A common use case for Retool Mobile is inventory management, enabling workers to look up product information in any warehouse, wherever they are. This tutorial explains how to build an inventory management mobile app for users to:\n\n###\n\n","completion":" ![Inventory management mobile app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/136eb8fb-8110-44dd-bcaf-bd317b42fe6b.jpg) END"}
{"prompt":"[Import the CSVs](https:\/\/docs.retool.com\/docs\/retool-database-quickstart#import-csv) to Retool Database using the provided names. Once complete, you can use the same queries and resource used by this tutorial.\n\n###\n\n","completion":" ![Inventory management tables in Retool Database](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d3650391-c5f5-4285-98cb-d419a7ee6076.png) END"}
{"prompt":"![Inventory management tables in Retool Database](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d3650391-c5f5-4285-98cb-d419a7ee6076.png)\n\n###\n\n","completion":" Much of what this tutorial covers can apply to other resources and data types. You can also use your own SQL database that's connected to Retool. END"}
{"prompt":"Get started\n\n###\n\n","completion":" Sign into Retool and click **Create > Mobile app**. Set the name to `Inventory Management`. END"}
{"prompt":"View and filter products\n\n###\n\n","completion":" This part of the tutorial explains how to build functionality to display a list of products and enable workers to filter by search term, brand, and warehouse location. END"}
{"prompt":"Create a mobile app\n\n###\n\n","completion":" Sign into Retool and click **Create > Mobile app**. Set the name to `Inventory Management`. END"}
{"prompt":"Configure the Products screen\n\n###\n\n","completion":" Retool Mobile organizes [mobile components](\/docs\/retool-mobile-components) into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens) and creates pathways for your users to follow. Users navigate between screens using the tab bar or by interactions, such as pressing a button or selecting an item from a list. END"}
{"prompt":"Retool Mobile organizes [mobile components](\/docs\/retool-mobile-components) into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens) and creates pathways for your users to follow. Users navigate between screens using the tab bar or by interactions, such as pressing a button or selecting an item from a list.\n\n###\n\n","completion":" The primary screen for this mobile app is used to display a list of products. Select **Screen 1**(**screen1**) in the **Screens** section of the mobile panel (left) to display its settings in the right panel. END"}
{"prompt":"The primary screen for this mobile app is used to display a list of products. Select **Screen 1**(**screen1**) in the **Screens** section of the mobile panel (left) to display its settings in the right panel.\n\n###\n\n","completion":" ![Set the screen name and title](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/62d5225d-d172-4ef8-a19b-e08babd01387.jpg) END"}
{"prompt":"![Set the screen name and title](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/62d5225d-d172-4ef8-a19b-e08babd01387.jpg)\n\n###\n\n","completion":" You can also set the icon to use in the tab bar at the bottom of the app. Click the screen in the **Tab** section of the Inspector and select an icon. END"}
{"prompt":"Retrieve product and warehouse data\n\n###\n\n","completion":" Inventory data for this app comes from a PostgreSQL database. You [write queries](\/docs\/queries) to interact with connected data sources using SQL. END"}
{"prompt":"Inventory data for this app comes from a PostgreSQL database. You [write queries](\/docs\/queries) to interact with connected data sources using SQL.\n\n###\n\n","completion":" This mobile app uses three queries to retrieve data about inventory, warehouses, and brands. Click **+ New** in the bottom panel to create the first query, then select the **Retool Database** resource and use the following SQL statement: END"}
{"prompt":"This mobile app uses three queries to retrieve data about inventory, warehouses, and brands. Click **+ New** in the bottom panel to create the first query, then select the **Retool Database** resource and use the following SQL statement:\n\n###\n\n","completion":" Save the query as `getAllItems`. END"}
{"prompt":"Save the query as `getAllItems`.\n\n###\n\n","completion":" ![Query to get all items](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/8eb7eeba-3c3f-4809-9aba-1575f3211e7b.jpg) END"}
{"prompt":"![Query to get all items](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/8eb7eeba-3c3f-4809-9aba-1575f3211e7b.jpg)\n\n###\n\n","completion":" Repeat the process to create queries for `getWarehouse` and `getBrands`. END"}
{"prompt":"Assemble components for the Products screen\n\n###\n\n","completion":" You add mobile components to each screen of a mobile app to build the interface by clicking **+** in the **Components** section of the left panel. You then configure component properties using the Inspector. END"}
{"prompt":"You add mobile components to each screen of a mobile app to build the interface by clicking **+** in the **Components** section of the left panel. You then configure component properties using the Inspector.\n\n###\n\n","completion":" Add the following mobile components to the **Products screen**, then configure their respective names and settings: END"}
{"prompt":"Add the following mobile components to the **Products screen**, then configure their respective names and settings:\n\n###\n\n","completion":" ![Assemble components](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/dabd08ea-92c8-4d4f-8710-eacfd53b965f.jpg) END"}
{"prompt":"Configure filter options\n\n###\n\n","completion":" The app will allow workers to filter products with a search term, and select a brand and warehouse using a dedicated screen. END"}
{"prompt":"The app will allow workers to filter products with a search term, and select a brand and warehouse using a dedicated screen.\n\n###\n\n","completion":" First, add a screen. Set the **Title** to **Filters** and its name to `filters`. This screen won't be accessed using the tab bar so toggle **Add to tab bar** off. END"}
{"prompt":"First, add a screen. Set the **Title** to **Filters** and its name to `filters`. This screen won't be accessed using the tab bar so toggle **Add to tab bar** off.\n\n###\n\n","completion":" Add the following mobile components to the **Filters screen**, then configure their respective names and settings: END"}
{"prompt":"Add the following mobile components to the **Filters screen**, then configure their respective names and settings:\n\n###\n\n","completion":" ![Filter screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/adc90b49-c104-435e-b0fb-27a997eb95de.jpg) END"}
{"prompt":"![Filter screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/adc90b49-c104-435e-b0fb-27a997eb95de.jpg)\n\n###\n\n","completion":" This button uses [<<glossary:Event handlers>>](\/docs\/event-handlers) to reset the filters to their default values. Add an event handler to the button that resets **Filters_ProductSearchInput** to its default value: END"}
{"prompt":"This button uses [<<glossary:Event handlers>>](\/docs\/event-handlers) to reset the filters to their default values. Add an event handler to the button that resets **Filters_ProductSearchInput** to its default value:\n\n###\n\n","completion":" ![Configure event handlers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/f550543b-214c-4c6a-9247-4d35b1b2a8e4.jpg) END"}
{"prompt":"![Configure event handlers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/f550543b-214c-4c6a-9247-4d35b1b2a8e4.jpg)\n\n###\n\n","completion":" Repeat this to add event handlers for **Filters_BrandSelect** and **Filters_WarehouseSelect**. END"}
{"prompt":"Repeat this to add event handlers for **Filters_BrandSelect** and **Filters_WarehouseSelect**.\n\n###\n\n","completion":" Workers will access these filters from an _action button_ at the top of the **Products** screen. Select the **Products** screen, then add a **Right** action button from the **Actions** section of the Inspector: END"}
{"prompt":"Workers will access these filters from an _action button_ at the top of the **Products** screen. Select the **Products** screen, then add a **Right** action button from the **Actions** section of the Inspector:\n\n###\n\n","completion":" Return to the **Filters** screen and add an action button that navigates back to the **Products** screen. END"}
{"prompt":"Return to the **Filters** screen and add an action button that navigates back to the **Products** screen.\n\n###\n\n","completion":" ![Configure the action button](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/1b11ae58-ed63-4dbe-ab27-5e83bc39195a.jpg) END"}
{"prompt":"Retrieve inventory data\n\n###\n\n","completion":" The app now has the necessary screens, components, and queries in place to display and filter products. The next step is to connect everything together with a query. END"}
{"prompt":"The app now has the necessary screens, components, and queries in place to display and filter products. The next step is to connect everything together with a query.\n\n###\n\n","completion":" This query creates an initial dataset that combines product, warehouse, and brand data. It then returns a list of products that takes into account any specified filters. In can also return individual products with an `id` that matches a scanned barcode. END"}
{"prompt":"This query creates an initial dataset that combines product, warehouse, and brand data. It then returns a list of products that takes into account any specified filters. In can also return individual products with an `id` that matches a scanned barcode.\n\n###\n\n","completion":" This query can automatically run whenever a worker navigates to the **Products** screen. Add an event handler to the screen from the **Screen Events** section of the Inspector and configure with the following settings: END"}
{"prompt":"This query can automatically run whenever a worker navigates to the **Products** screen. Add an event handler to the screen from the **Screen Events** section of the Inspector and configure with the following settings:\n\n###\n\n","completion":" The **Only run when** condition only allows the action to trigger if has a <<glossary:truthy value>> is set. `!getItems.data.id.length` evaluates as `true` if there is no query data already available. END"}
{"prompt":"The **Only run when** condition only allows the action to trigger if has a <<glossary:truthy value>> is set. `!getItems.data.id.length` evaluates as `true` if there is no query data already available.\n\n###\n\n","completion":" ![Configure a screen event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0c6dd636-692d-4d77-aa17-69b1ffa78939.jpg) END"}
{"prompt":"Display inventory data\n\n###\n\n","completion":" Select the **Products_ProductCollection** mobile component and set the **Data source** to **getItems**. The component automatically [configures list options](\/docs\/define-option-lists) by dynamically mapping values from the query data. Use the **Mapped options** settings to configure what values to use by referencing `item`. For instance, setting **Title** to `{{ item.name }}` displays each item name as the list option's title. END"}
{"prompt":"Select the **Products_ProductCollection** mobile component and set the **Data source** to **getItems**. The component automatically [configures list options](\/docs\/define-option-lists) by dynamically mapping values from the query data. Use the **Mapped options** settings to configure what values to use by referencing `item`. For instance, setting **Title** to `{{ item.name }}` displays each item name as the list option's title.\n\n###\n\n","completion":" ![Configure the product list](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/07b41cde-f64a-4430-ab5a-0de0f0e280df.jpg) END"}
{"prompt":"![Configure the product list](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/07b41cde-f64a-4430-ab5a-0de0f0e280df.jpg)\n\n###\n\n","completion":" With this step complete, workers can now browse a list of products and filter results based on search term, brand, and warehouse location. END"}
{"prompt":"View selected product details\n\n###\n\n","completion":" When a product is selected in the list, its data is available at the List Collection component's `selectedItem`. The following screen uses the selected products details and displays them to the user. END"}
{"prompt":"Create the Product details screen\n\n###\n\n","completion":" First, add a screen and rename it `productDetail`. This screen uses multiple components to display different pieces of information about the product. END"}
{"prompt":"Assemble the components to display product information\n\n###\n\n","completion":" Add the following components and configure them with the specified values. END"}
{"prompt":"Display product metadata\n\n###\n\n","completion":" The Key Value component displays most of the product information. Not all information is required and some data should be transformed to make it more presentable. Configure the following rows Key Value component: END"}
{"prompt":"The Key Value component displays most of the product information. Not all information is required and some data should be transformed to make it more presentable. Configure the following rows Key Value component:\n\n###\n\n","completion":" All other rows should be hidden. Toggle **Show row** to off or click the visibility toggle icon. END"}
{"prompt":"All other rows should be hidden. Toggle **Show row** to off or click the visibility toggle icon.\n\n###\n\n","completion":" ![Configure the Key Value component](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/02eaee8f-08f1-479d-97b2-743af513016e.webp) END"}
{"prompt":"Display product description\n\n###\n\n","completion":" Finally, add a Text component named `productDetail_Details` to display the product description. The description is comprised of multiple values that combines the features into a single description. Set this component's value to: END"}
{"prompt":"Finally, add a Text component named `productDetail_Details` to display the product description. The description is comprised of multiple values that combines the features into a single description. Set this component's value to:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b424c0c3-1c69-457a-9553-a7b0cf44a954.webp) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b424c0c3-1c69-457a-9553-a7b0cf44a954.webp)\n\n###\n\n","completion":" The Product Details screen can now display the product image and name. It includes a button to open the product URL, displays key-value metadata, and a description. END"}
{"prompt":"Display selected product details\n\n###\n\n","completion":" Return to the **Products** screen, select **Products_ProductCollection** and add an event handler to navigate to the selected products: END"}
{"prompt":"Return to the **Products** screen, select **Products_ProductCollection** and add an event handler to navigate to the selected products:\n\n###\n\n","completion":" ![Event handler to open the Product details screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/9373890d-5cbe-4786-b029-6529da4fa266.jpg) END"}
{"prompt":"View warehouses\n\n###\n\n","completion":" The final part of the tutorial explains how to display a list of warehouses and select one to view more details. It uses the same principles previously covered. END"}
{"prompt":"Configure the warehouses screen\n\n###\n\n","completion":" Add a `warehouses` screen with a **Title** of `Warehouses`. Similar to the **Products** screen, this screen will contain a list of warehouses from which to select. END"}
{"prompt":"Assemble the warehouse list interface\n\n###\n\n","completion":" Add a [Card Collection](\/reference\/component-mobile-card-collection) mobile component to the **Warehouses** screen named `Warehouses_Collection`. Set the **Data source** to be the **getWarehouses** query, then configure **Mapped options** to display warehouse location data in the list: END"}
{"prompt":"Add a [Card Collection](\/reference\/component-mobile-card-collection) mobile component to the **Warehouses** screen named `Warehouses_Collection`. Set the **Data source** to be the **getWarehouses** query, then configure **Mapped options** to display warehouse location data in the list:\n\n###\n\n","completion":" ![Configure mapped options](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/c0a7669f-ef1d-491c-9e83-90a9d3599f82.jpg) END"}
{"prompt":"Configure the warehouse details screen\n\n###\n\n","completion":" Add a `warehouseDetails` screen with a **Title** of `Warehouse details`. This screen will present information about the selected warehouse. END"}
{"prompt":"Assemble the warehouse details interface\n\n###\n\n","completion":" The components in this screen use data from `Warehouses_Collection.selectedItem` to display information about the selected warehouse. Add the following mobile components and configure them to make use of the relevant data from the selected item. END"}
{"prompt":"The components in this screen use data from `Warehouses_Collection.selectedItem` to display information about the selected warehouse. Add the following mobile components and configure them to make use of the relevant data from the selected item.\n\n###\n\n","completion":" ![Warehouse details screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/fbd330f3-bacb-4693-be84-d0ed48abde81.jpg) END"}
{"prompt":"![Warehouse details screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/fbd330f3-bacb-4693-be84-d0ed48abde81.jpg)\n\n###\n\n","completion":" The [List Collection](\/reference\/component-mobile-list-collection) mobile component can display a list of products at the selected warehouse. This requires a query that joins item and warehouse data together, then returns products only at the selected warehouse. END"}
{"prompt":"The [List Collection](\/reference\/component-mobile-list-collection) mobile component can display a list of products at the selected warehouse. This requires a query that joins item and warehouse data together, then returns products only at the selected warehouse.\n\n###\n\n","completion":" ![Warehouse items query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/501899df-ba8a-4319-b7b6-215c98bae8dc.jpg) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" You have now built a inventory management mobile app that enables workers to browse, filter, and view details of products and warehouses. END"}
{"prompt":"You have now built a inventory management mobile app that enables workers to browse, filter, and view details of products and warehouses.\n\n###\n\n","completion":" By applying the lessons learned here and following the same patterns, you could extend the mobile app's functionality with features like editing or adding products and warehouses. END"}
{"prompt":"title: \"Configure offline mode\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Learn how to configure Retool Mobile apps for offline use.\"\nhidden: false\n\n###\n\n","completion":" *Offline mode* makes it possible for Retool Mobile apps that run natively to continue functioning without a data connection. When enabled, queries that read data can cache the most recent results to make them available offline. Queries that write data are held in a queue and run once the data connection is restored. END"}
{"prompt":"Considerations\n\n###\n\n","completion":" If you plan to use offline mode, keep in mind the following considerations. END"}
{"prompt":"Read queries only cache data when viewed by the user\n\n###\n\n","completion":" Queries configured to read data for offline mode only cache data when the user views the results. The user must navigate to screens and view the query data at least once while connected. END"}
{"prompt":"Queries configured to read data for offline mode only cache data when the user views the results. The user must navigate to screens and view the query data at least once while connected.\n\n###\n\n","completion":" If you need to download data in advance, consider using [LocalStorage](https:\/\/docs.retool.com\/reference\/javascript-api-methods-local-storage) to temporarily download data that can be accessed when offline.   END"}
{"prompt":"Write queries run sequentially\n\n###\n\n","completion":" Queries configured to write data in offline mode run sequentially when the connection is restored. If one query fails due to a conflict, the user must resolve it before any remaining queries can run. END"}
{"prompt":"Write queries cannot have dependencies\n\n###\n\n","completion":" Queries with pending changes in offline mode cannot depend on any other queries. For example, if you have a customer management app that is offline, the user could not create a new customer record and then refresh the list of customers. Similarly, the user could not create a new customer record offline and then make further changes. END"}
{"prompt":"Handle conflicts\n\n###\n\n","completion":" All pending tasks run sequentially when a device's connection is restored. If multiple users made changes to the same data, offline mode cannot merge their changes. Consider using sync delay when enabling offline mode so that users must trigger pending tasks. END"}
{"prompt":"Cached data limits\n\n###\n\n","completion":" Retool Mobile can cache up to 100MB of data. If offline mode exceeds this limit, Retool Mobile excludes the last used entries. END"}
{"prompt":"Enable offline mode\n\n###\n\n","completion":" Offline mode is available on a per-app basis and enabled in the App editor. Click `•••` to open the **App actions** menu, select **Mobile app settings**, then toggle **Mobile offline mode** on. END"}
{"prompt":"Offline mode is available on a per-app basis and enabled in the App editor. Click `•••` to open the **App actions** menu, select **Mobile app settings**, then toggle **Mobile offline mode** on.\n\n###\n\n","completion":" ![Enable offline mode](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/37e98895-74d3-470a-ba1f-c37243c6c147.webp) END"}
{"prompt":"![Enable offline mode](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/37e98895-74d3-470a-ba1f-c37243c6c147.webp)\n\n###\n\n","completion":" Retool Mobile attempts to trigger pending queries automatically. You can require users to manually trigger pending queries that write data by toggling **Mobile offline mode delay sync**. END"}
{"prompt":"Retool Mobile attempts to trigger pending queries automatically. You can require users to manually trigger pending queries that write data by toggling **Mobile offline mode delay sync**.\n\n###\n\n","completion":" When offline mode is enabled, your app displays a connection status bar at the top of each screen. END"}
{"prompt":"When offline mode is enabled, your app displays a connection status bar at the top of each screen.\n\n###\n\n","completion":" ![Offline mode status](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/cb17e5f3-2650-4dbd-8fa3-9b5214fb0a05.webp) END"}
{"prompt":"![Offline mode status](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/cb17e5f3-2650-4dbd-8fa3-9b5214fb0a05.webp)\n\n###\n\n","completion":" Retool Mobile stores cached data in the filesystem and is not lost when the app or device is restarted. Cached data is deleted if the app is uninstalled. END"}
{"prompt":"Configure offline query types\n\n###\n\n","completion":" You must configure the **Query type** for each query that should be available in offline mode: END"}
{"prompt":"You must configure the **Query type** for each query that should be available in offline mode:\n\n###\n\n","completion":" Select a query in the bottom panel, navigate to the **Advanced** tab, and specify the **Query type** in the **Offline** section. END"}
{"prompt":"Select a query in the bottom panel, navigate to the **Advanced** tab, and specify the **Query type** in the **Offline** section.\n\n###\n\n","completion":" ![Configure offline query type](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/263c770c-03d0-40d4-bf94-915b7ae87294.webp) END"}
{"prompt":"View query status\n\n###\n\n","completion":" The **Job Manager** contains a list of failed, pending, and completed queries. Tap the connection status bar at the top of the app screen to open it. Each entry contains the query name and date. Users can remove pending queries by pressing **Remove**. END"}
{"prompt":"The **Job Manager** contains a list of failed, pending, and completed queries. Tap the connection status bar at the top of the app screen to open it. Each entry contains the query name and date. Users can remove pending queries by pressing **Remove**.\n\n###\n\n","completion":" ![Job Manager with pending changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/e28d3b10-b356-4734-b444-60da5d9322a6.webp) END"}
{"prompt":"![Job Manager with pending changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/e28d3b10-b356-4734-b444-60da5d9322a6.webp)\n\n###\n\n","completion":" Offline write queries can display key-value pairs in the Job Manager. You configure these using the **Display body** fields in the **Offline** section for a query. END"}
{"prompt":"Offline write queries can display key-value pairs in the Job Manager. You configure these using the **Display body** fields in the **Offline** section for a query.\n\n###\n\n","completion":" ![Configure display body](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/10dd0581-769d-40e2-90f8-70120ba36762.webp) END"}
{"prompt":"![Configure display body](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/10dd0581-769d-40e2-90f8-70120ba36762.webp)\n\n###\n\n","completion":" Display body values can help provide context on the pending changes, such as displaying the original and modified values. END"}
{"prompt":"Display body values can help provide context on the pending changes, such as displaying the original and modified values.\n\n###\n\n","completion":" ![Display body key-value pairs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0370cffd-3d5e-49e0-862d-e09cde55f247.webp) END"}
{"prompt":"Run pending changes\n\n###\n\n","completion":" Retool Mobile automatically processes pending queries once the connection is restored. If **Mobile offline mode delay sync** is enabled, the Job Manager includes an action button to manually trigger the queries—users must press this for changes to occur. END"}
{"prompt":"Retool Mobile automatically processes pending queries once the connection is restored. If **Mobile offline mode delay sync** is enabled, the Job Manager includes an action button to manually trigger the queries—users must press this for changes to occur.\n\n###\n\n","completion":" ![Manually trigger pending queries](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/ca1683f8-eb4b-418a-af1b-9440e3cb3f2c.webp) END"}
{"prompt":"![Manually trigger pending queries](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/ca1683f8-eb4b-418a-af1b-9440e3cb3f2c.webp)\n\n###\n\n","completion":" The Job Manager processes each pending change sequentially. If a query fails for any reason, such as a conflict in data, the user must resolve this by retrying or removing the failed change. Any remaining queries will remain in a pending state until this is completed. END"}
{"prompt":"title: \"Push notifications\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-concepts\"\nexcerpt: \"Learn how push notifications work in Retool Mobile.\"\nhidden: false\n\n###\n\n","completion":" Retool Cloud and Self-hosted organizations can send push notifications to Retool Mobile users. Push notifications is a built-in feature made available using the Retool Mobile app for iOS and Android. END"}
{"prompt":"Retool Cloud and Self-hosted organizations can send push notifications to Retool Mobile users. Push notifications is a built-in feature made available using the Retool Mobile app for iOS and Android.\n\n###\n\n","completion":" Retool uses [Amazon SNS](https:\/\/aws.amazon.com\/sns\/) to provide a centralized service for push notifications in Retool Mobile. This makes it possible for Retool organizations to send push notifications without any additional configuration or dependencies. END"}
{"prompt":"Availability\n\n###\n\n","completion":" Push notifications are natively supported in the Retool Mobile app for iOS and Android. END"}
{"prompt":"The Mobile Push Notification resource\n\n###\n\n","completion":" Retool makes push notifications available as a [resource](\/docs\/resources). This enables you to write queries that send push notifications using any Retool app or workflow. For instance, you could configure a workflow to send a push notification if a PagerDuty incident is created or if the daily order volume in Stripe exceeds a particular threshold. END"}
{"prompt":"Topics\n\n###\n\n","completion":" Retool uses *topics* to represent the scope for push notification recipients. There are two scopes available: `USER` and `ALL_USERS`. Users subscribed to push notifications are automatically added to both topics. You specify the topics when writing push notification queries. END"}
{"prompt":"Action type\n\n###\n\n","completion":" The query's **Action type** determines what action to take in relation to push notifications. END"}
{"prompt":"Subscribe\n\n###\n\n","completion":" Users must first subscribe to push notification topics. You add subscribe queries to mobile apps that run automatically when launched by a user. This adds the user to the `USER` and `ALL_USERS` topics. Only Retool Mobile apps can contain Subscribe queries. You notify individual users with `USER:jenny@example.com`. END"}
{"prompt":"Send\n\n###\n\n","completion":" The **Send** action type sends push notifications. These queries use the specified topics to represent the recipients. For instance, `ALL_USERS` sends a push notification to all users. Send queries allow for multiple topics and you include user email addresses using the format `USER: jenny@example.com`. END"}
{"prompt":"title: \"Retool Mobile quickstart\"\ncategorySlug: \"retool-mobile\"\nexcerpt: \"Build your first Retool Mobile app in minutes.\"\nhidden: false\n\n###\n\n","completion":" [Retool Mobile](https:\/\/retool.com\/products\/mobile) enables you to quickly build mobile apps using a drag-and-drop interface and mobile component library. You can connect your mobile apps to almost any database and API to Retool, allowing your workforce to interact with your data using native apps for iOS and Android. END"}
{"prompt":"[Retool Mobile](https:\/\/retool.com\/products\/mobile) enables you to quickly build mobile apps using a drag-and-drop interface and mobile component library. You can connect your mobile apps to almost any database and API to Retool, allowing your workforce to interact with your data using native apps for iOS and Android.\n\n###\n\n","completion":" This guide explains how to build a product management mobile app on Retool. You can browse through a list of products, presented in a card layout, and select one to update its details. END"}
{"prompt":"Demo\n\n###\n\n","completion":" Watch the video below to see this mobile app in action. END"}
{"prompt":"Watch the video below to see this mobile app in action.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video controls controls=\\\"\\\"\\n preload=\\\"metadata\\\"\\n style=\\\"width: 100%\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2d780d6f-e54c-4218-9d7b-b8f1fa2e42ba.mp4\\\" type=\\\"video\/mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"1. Create a new mobile app\n\n###\n\n","completion":" To get started, sign in to your Retool organization and click **Create new > Mobile app**. Every new mobile app is initially configured with a demo that uses a preconfigured interface and sample data for you to try out. For the purposes of this guide, the demo content will be removed. END"}
{"prompt":"To get started, sign in to your Retool organization and click **Create new > Mobile app**. Every new mobile app is initially configured with a demo that uses a preconfigured interface and sample data for you to try out. For the purposes of this guide, the demo content will be removed.\n\n###\n\n","completion":" When editing a Retool Mobile app, the [App editor](\/docs\/app-editor) renders your mobile app on the canvas and includes an additional _mobile panel_ on the left. This panel contains the **Screens** and **Components** sections, which you use to manage your app's overall layout. END"}
{"prompt":"When editing a Retool Mobile app, the [App editor](\/docs\/app-editor) renders your mobile app on the canvas and includes an additional _mobile panel_ on the left. This panel contains the **Screens** and **Components** sections, which you use to manage your app's overall layout.\n\n###\n\n","completion":" ![The App editor for Retool Mobile](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/f5997848-797e-494c-ab75-202feaabfc90.webp) END"}
{"prompt":"![The App editor for Retool Mobile](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/f5997848-797e-494c-ab75-202feaabfc90.webp)\n\n###\n\n","completion":" The mobile panel is always present when editing apps and cannot be hidden. You can [toggle the visibility of other panels](\/docs\/app-editor#toolbar) in the App editor. END"}
{"prompt":"2. Prepare screens\n\n###\n\n","completion":" You create multi-page mobile apps by organizing mobile [<<glossary:components>>](\/docs\/retool-mobile-components) into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens). You can navigate between each screen using the tab bar or by interactions that trigger <<glossary:event handlers>>, such as pressing a button or selecting an item from a list. END"}
{"prompt":"You create multi-page mobile apps by organizing mobile [<<glossary:components>>](\/docs\/retool-mobile-components) into separate [<<glossary:screens>>](\/docs\/retool-mobile-screens). You can navigate between each screen using the tab bar or by interactions that trigger <<glossary:event handlers>>, such as pressing a button or selecting an item from a list.\n\n###\n\n","completion":" The product management app uses two screens: END"}
{"prompt":"Remove preconfigured screens\n\n###\n\n","completion":" Retool initially adds some screens and components to mobile apps with sample data. To remove these: END"}
{"prompt":"Configure new screens\n\n###\n\n","completion":" Each screen has a title to identify which screen a user is currently viewing. This is displayed at the top of the app and in the navigation bar. END"}
{"prompt":"Each screen has a title to identify which screen a user is currently viewing. This is displayed at the top of the app and in the navigation bar.\n\n###\n\n","completion":" Select **Screen 1** in the mobile panel, then change the screen's **Title** using the Inspector in the right panel to **Products**. END"}
{"prompt":"Select **Screen 1** in the mobile panel, then change the screen's **Title** using the Inspector in the right panel to **Products**.\n\n###\n\n","completion":" Next, click **+** in the **Screens** section to add a second screen, then set its title to **Edit product**. Remove **collectionView1** that is automatically added. END"}
{"prompt":"Next, click **+** in the **Screens** section to add a second screen, then set its title to **Edit product**. Remove **collectionView1** that is automatically added.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/93b544f5-88c9-4e48-b872-10c2743d9f62.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/54cfd4ea-d845-4460-8fb9-92fc785417be.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/93b544f5-88c9-4e48-b872-10c2743d9f62.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/54cfd4ea-d845-4460-8fb9-92fc785417be.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" Mobile apps initially display a tab bar at the bottom with a tab for each screen. The tab bar is only visible if multiple screens are included. This product management app won't need a tab bar. To hide it, select the **Edit products** screen and toggle **Add to tab bar** to **off**. END"}
{"prompt":"2. Get product data\n\n###\n\n","completion":" Retool can interact with almost any API or database, and includes [native integrations](https:\/\/retool.com\/integrations) for many different data sources. Once you configure a [<<glossary:resource>>](\/docs\/resources), you can write [<<glossary:queries>>](\/docs\/queries) for your app to read and write data. END"}
{"prompt":"Retool can interact with almost any API or database, and includes [native integrations](https:\/\/retool.com\/integrations) for many different data sources. Once you configure a [<<glossary:resource>>](\/docs\/resources), you can write [<<glossary:queries>>](\/docs\/queries) for your app to read and write data.\n\n###\n\n","completion":" This mobile app interacts with sample data from the `onboarding_db` PostgreSQL database resource that's included with your Retool organization. You can use this data to test Retool without connecting any production data. END"}
{"prompt":"This mobile app interacts with sample data from the `onboarding_db` PostgreSQL database resource that's included with your Retool organization. You can use this data to test Retool without connecting any production data.\n\n###\n\n","completion":" Retool automatically creates a blank query, `query1`, for you to get started. Select the query and change the **Resource** for this query to `onboarding_db`. In the query editor, write a query to retrieve product data from the `products` table. END"}
{"prompt":"Retool automatically creates a blank query, `query1`, for you to get started. Select the query and change the **Resource** for this query to `onboarding_db`. In the query editor, write a query to retrieve product data from the `products` table.\n\n###\n\n","completion":" Click **Save & Run** to save changes and run the query. Click the name of the query and update it to `getProducts`. Your app can now populate mobile components with `getProducts.data`. END"}
{"prompt":"Click **Save & Run** to save changes and run the query. Click the name of the query and update it to `getProducts`. Your app can now populate mobile components with `getProducts.data`.\n\n###\n\n","completion":" ![SQL query to get product data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/dab2f9bf-e04f-4d0f-a306-13d205b4a029.webp) END"}
{"prompt":"3. Display products for selection\n\n###\n\n","completion":" The [Card Collection](\/reference\/component-mobile-card-collection) mobile component presents data using a prebuilt card layout. You can use Card Collection to display product data without needing to build any type of layout. END"}
{"prompt":"The [Card Collection](\/reference\/component-mobile-card-collection) mobile component presents data using a prebuilt card layout. You can use Card Collection to display product data without needing to build any type of layout.\n\n###\n\n","completion":" Select the **Products** screen and click the **+** button to open the mobile component browser, then select **Card Collection**. END"}
{"prompt":"Select the **Products** screen and click the **+** button to open the mobile component browser, then select **Card Collection**.\n\n###\n\n","completion":" Retool [automatically maps your query's data](\/docs\/define-option-lists) to present as cards, and populates values based on common usage (e.g., using `item.name` for the card's title). You can change these values as needed in the **Mapped options** section of the Inspector. Set the value for **Body** to `Quantity: {{ item.quantity }}` to include quantity information. END"}
{"prompt":"Retool [automatically maps your query's data](\/docs\/define-option-lists) to present as cards, and populates values based on common usage (e.g., using `item.name` for the card's title). You can change these values as needed in the **Mapped options** section of the Inspector. Set the value for **Body** to `Quantity: {{ item.quantity }}` to include quantity information.\n\n###\n\n","completion":" You can also adjust the style and layout of cards using the **Data Layout** section of the Inspector. For instance, set **Size** to **Half** to display more cards at once. END"}
{"prompt":"You can also adjust the style and layout of cards using the **Data Layout** section of the Inspector. For instance, set **Size** to **Half** to display more cards at once.\n\n###\n\n","completion":" ![Display products](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/5ebb1a2d-b64b-465b-93f9-4e345ff104ae.webp) END"}
{"prompt":"4. Add a product search field\n\n###\n\n","completion":" You can add a search box to quickly filter the list of products, making it easier to find what you're looking for. Add a **Text Input** mobile component to the **Products** screen, then change its **Label** to **Search**. END"}
{"prompt":"You can add a search box to quickly filter the list of products, making it easier to find what you're looking for. Add a **Text Input** mobile component to the **Products** screen, then change its **Label** to **Search**.\n\n###\n\n","completion":" Retool Mobile organizes mobile components vertically in a column layout by default, with additions displayed at the bottom of the **Component** section. You can reorder mobile components in the mobile panel using drag-and-drop, which allows you to position the Text Input at the top of the screen. END"}
{"prompt":"Retool Mobile organizes mobile components vertically in a column layout by default, with additions displayed at the bottom of the **Component** section. You can reorder mobile components in the mobile panel using drag-and-drop, which allows you to position the Text Input at the top of the screen.\n\n###\n\n","completion":" You can reference values and [write JavaScript](\/docs\/javascript-overview) almost anywhere in your Retool apps. Update `getProducts` to include the input value when retrieving products: END"}
{"prompt":"You can reference values and [write JavaScript](\/docs\/javascript-overview) almost anywhere in your Retool apps. Update `getProducts` to include the input value when retrieving products:\n\n###\n\n","completion":" ![Add a search filter](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/58058f23-5b06-4861-accb-f98ce9f08706.webp) END"}
{"prompt":"5. Select a product\n\n###\n\n","completion":" This mobile app enables users to edit a product's name. When a user selects a product, the app opens the **Edit products** screen as a modal so the user can update the product's information. END"}
{"prompt":"This mobile app enables users to edit a product's name. When a user selects a product, the app opens the **Edit products** screen as a modal so the user can update the product's information.\n\n###\n\n","completion":" First, configure the app to show **Edit products** on product selection. Retool uses [<<glossary:event handlers>>](\/docs\/event-handlers) to trigger queries or other actions in response to user events, such as selecting a product. END"}
{"prompt":"First, configure the app to show **Edit products** on product selection. Retool uses [<<glossary:event handlers>>](\/docs\/event-handlers) to trigger queries or other actions in response to user events, such as selecting a product.\n\n###\n\n","completion":" Select `collectionView1` within **Screen 1** and add an event handler in the **Interaction** settings of the Inspector. END"}
{"prompt":"Select `collectionView1` within **Screen 1** and add an event handler in the **Interaction** settings of the Inspector.\n\n###\n\n","completion":" When you select a product in the collection, the app navigates to **Edit products**, which is currently empty. END"}
{"prompt":"When you select a product in the collection, the app navigates to **Edit products**, which is currently empty.\n\n###\n\n","completion":" ![Open a screen as a modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0742e6e0-5054-49ef-bee4-76d3813a5a42.webp) END"}
{"prompt":"![Open a screen as a modal](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/0742e6e0-5054-49ef-bee4-76d3813a5a42.webp)\n\n###\n\n","completion":" Next, add a [Text Input](\/reference\/component-mobile-text-input) mobile component to **Edit products** and update the following settings using the Inspector. END"}
{"prompt":"Next, add a [Text Input](\/reference\/component-mobile-text-input) mobile component to **Edit products** and update the following settings using the Inspector.\n\n###\n\n","completion":" The `selectedItem` property contains data about the currently selected product in `collectionView1`. Now when you select a product from the list, the text field displays the name of the selected product. END"}
{"prompt":"The `selectedItem` property contains data about the currently selected product in `collectionView1`. Now when you select a product from the list, the text field displays the name of the selected product.\n\n###\n\n","completion":" ![Text Input to edit the selected product's name](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2774a37b-622c-49a4-b4ca-30bca5e23f50.webp) END"}
{"prompt":"6. Edit the selected product\n\n###\n\n","completion":" Updating a product's name requires a second query to write those changes back to the database. Click **+ New** in the bottom panel to create a new query, then select **GUI mode** to construct a query that can write data. END"}
{"prompt":"Updating a product's name requires a second query to write those changes back to the database. Click **+ New** in the bottom panel to create a new query, then select **GUI mode** to construct a query that can write data.\n\n###\n\n","completion":" ![Create query to update product](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/6b6526cb-12af-41ad-964d-210a07a00c2e.webp) END"}
{"prompt":"![Create query to update product](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/6b6526cb-12af-41ad-964d-210a07a00c2e.webp)\n\n###\n\n","completion":" Queries can trigger event handlers on success or failure. Add a **Success** event handler to refresh the product list to reflect the changes: END"}
{"prompt":"Queries can trigger event handlers on success or failure. Add a **Success** event handler to refresh the product list to reflect the changes:\n\n###\n\n","completion":" ![Reload product data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/3485d51e-4350-42d1-9ff9-7d2a33eec3ab.webp) END"}
{"prompt":"![Reload product data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/3485d51e-4350-42d1-9ff9-7d2a33eec3ab.webp)\n\n###\n\n","completion":" Add a second **Success** event handler to take the user back to **Products** screen. END"}
{"prompt":"7. Confirm changes\n\n###\n\n","completion":" To update the product name, add a [Button](\/reference\/component-mobile-button) mobile component to the **Edit Products** screen and update its **Text** setting to **Save**. END"}
{"prompt":"To update the product name, add a [Button](\/reference\/component-mobile-button) mobile component to the **Edit Products** screen and update its **Text** setting to **Save**.\n\n###\n\n","completion":" Rather than update the name immediately when a user presses the button, your app can display an action sheet to present a set of options that trigger actions, such as triggering the query to update the product name. Add an event handler to the button and set the **Action** to **Action sheet**. END"}
{"prompt":"Rather than update the name immediately when a user presses the button, your app can display an action sheet to present a set of options that trigger actions, such as triggering the query to update the product name. Add an event handler to the button and set the **Action** to **Action sheet**.\n\n###\n\n","completion":" ![Action sheet to confirm changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2efb37f0-5e12-4b16-97ad-f0bf26b5f92c.webp) END"}
{"prompt":"![Action sheet to confirm changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2efb37f0-5e12-4b16-97ad-f0bf26b5f92c.webp)\n\n###\n\n","completion":" Set the action sheet's **Title** to `Update product name?` and **Description** to `Change \"{{ collectionView1.selectedItem.name }}\" to \"{{ textInput2.value}}\"?`. This displays the current name and the updated name entered into the text field. END"}
{"prompt":"Set the action sheet's **Title** to `Update product name?` and **Description** to `Change \"{{ collectionView1.selectedItem.name }}\" to \"{{ textInput2.value}}\"?`. This displays the current name and the updated name entered into the text field.\n\n###\n\n","completion":" Click **+ New** to add a menu item that confirms changes. END"}
{"prompt":"Click **+ New** to add a menu item that confirms changes.\n\n###\n\n","completion":" Add another action to revert the changes entered into the text field. END"}
{"prompt":"Add another action to revert the changes entered into the text field.\n\n###\n\n","completion":" ![Configure an action sheet](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/2a78a988-b645-47bc-8ff4-c31fca3812f2.webp) END"}
{"prompt":"Test your mobile app\n\n###\n\n","completion":" Now that your app is complete, it's time to test it on your mobile device. Click **Preview** to open the mobile app as a progressive web app (PWA). Scan the QR code with your iOS or Android device to launch it in the Retool Mobile app. You use this app to browse and launch any of the mobile apps you build. END"}
{"prompt":"Now that your app is complete, it's time to test it on your mobile device. Click **Preview** to open the mobile app as a progressive web app (PWA). Scan the QR code with your iOS or Android device to launch it in the Retool Mobile app. You use this app to browse and launch any of the mobile apps you build.\n\n###\n\n","completion":" If you don't have the app installed already, your device is automatically routed to the [iOS App Store](https:\/\/apps.apple.com\/us\/app\/retool-mobile\/id1586183808) or [Google Play](https:\/\/play.google.com\/store\/apps\/details?id=com.retool.retool). END"}
{"prompt":"If you don't have the app installed already, your device is automatically routed to the [iOS App Store](https:\/\/apps.apple.com\/us\/app\/retool-mobile\/id1586183808) or [Google Play](https:\/\/play.google.com\/store\/apps\/details?id=com.retool.retool).\n\n###\n\n","completion":" ![Open mobile apps using the QR code](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/85e1695d-6002-445a-b2f6-5045ce640190.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" You've now successfully built a mobile app that retrieves product data and presents it in a card layout, and enables you to select a product and update its name. END"}
{"prompt":"title: \"Assemble mobile screens\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Organize content to create mobile apps with multi-page layouts.\"\nhidden: false\n\n###\n\n","completion":" Retool Mobile organizes mobile components into separate <<glossary:screens>> that you create for different purposes. Users navigate between screens using the tab bar or by interactions that trigger <<glossary:event handlers>>, such as pressing a button or selecting an item from a list. END"}
{"prompt":"Manage screens\n\n###\n\n","completion":" When editing a Retool Mobile app, the [App editor](\/docs\/app-editor) includes an additional _mobile panel_ on the left. Use the **Screens** section of the mobile panel to select, add, or delete screens from your mobile app. END"}
{"prompt":"When editing a Retool Mobile app, the [App editor](\/docs\/app-editor) includes an additional _mobile panel_ on the left. Use the **Screens** section of the mobile panel to select, add, or delete screens from your mobile app.\n\n###\n\n","completion":" To add a new screen, click the **+** button. To delete an existing screen, click the `•••` icon next to the screen, then select **Delete**. END"}
{"prompt":"To add a new screen, click the **+** button. To delete an existing screen, click the `•••` icon next to the screen, then select **Delete**.\n\n###\n\n","completion":" Each screen has a _title_ and _name_ that you can update in the Inspector. END"}
{"prompt":"Each screen has a _title_ and _name_ that you can update in the Inspector.\n\n###\n\n","completion":" You configure the selected screen using the Inspector (the **Inspect** tab) in the right panel. END"}
{"prompt":"You configure the selected screen using the Inspector (the **Inspect** tab) in the right panel.\n\n###\n\n","completion":" ![Manage screens and mobile components in Retool Mobile](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/cceedf9b-d4ac-48a5-a6a7-c07dd2933452.webp) END"}
{"prompt":"Navigate between screens\n\n###\n\n","completion":" You can configure navigation between screens for your mobile app using the tab bar, configuring event handlers, or with JavaScript. END"}
{"prompt":"Navigate with the tab bar\n\n###\n\n","completion":" Mobile apps automatically include a _tab bar_ at the bottom of the app if **Add to tab bar** is enabled on at least two screens. Pressing a tab navigates to the screen associated with it. END"}
{"prompt":"Mobile apps automatically include a _tab bar_ at the bottom of the app if **Add to tab bar** is enabled on at least two screens. Pressing a tab navigates to the screen associated with it.\n\n###\n\n","completion":" You customize the tab bar in the **Tab** section of the Inspector. Click and drag to change the order of tab. The tab bar displays the screen name by default. You can click on each tab to set a custom icon and title for each tab. END"}
{"prompt":"You customize the tab bar in the **Tab** section of the Inspector. Click and drag to change the order of tab. The tab bar displays the screen name by default. You can click on each tab to set a custom icon and title for each tab.\n\n###\n\n","completion":" ![Manage how screens appear in the tab bar](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/19047681-18fe-4131-a8db-206fda86c309.webp) END"}
{"prompt":"Navigate using event handlers\n\n###\n\n","completion":" Retool uses [event handlers](\/docs\/event-handlers) to trigger queries or other actions in response to user events on mobile components. You can create **Navigation** event handlers that navigate to a screen when a specified action occurs. END"}
{"prompt":"Retool uses [event handlers](\/docs\/event-handlers) to trigger queries or other actions in response to user events on mobile components. You can create **Navigation** event handlers that navigate to a screen when a specified action occurs.\n\n###\n\n","completion":" You can trigger **Navigation** events almost anywhere in a mobile app that supports event handling, such as a button press or query failure. END"}
{"prompt":"You can trigger **Navigation** events almost anywhere in a mobile app that supports event handling, such as a button press or query failure.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/d7e5c98d-3496-4513-a1c0-f732548c502d.webp) END"}
{"prompt":"Navigate using JavaScript\n\n###\n\n","completion":" You can [write JavaScript](\/docs\/javascript-overview) to control navigation using `navigator.navigateTo()` and the name of the screen: END"}
{"prompt":"Modal screens\n\n###\n\n","completion":" Mobile app modals use the same principles as desktop apps. You can present a screen as a modal that doesn't change the user's navigation position. Modals have no navigation buttons and can be dismissed by pressing **Done**. END"}
{"prompt":"Mobile app modals use the same principles as desktop apps. You can present a screen as a modal that doesn't change the user's navigation position. Modals have no navigation buttons and can be dismissed by pressing **Done**.\n\n###\n\n","completion":" ![Modal screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/1f9ace11-b133-4eb5-b85f-d61670bf1274.webp) END"}
{"prompt":"Trigger actions with event handlers\n\n###\n\n","completion":" You can configure screens with event handlers that trigger actions based on certain interactions or using additional buttons in the title bar. END"}
{"prompt":"You can configure screens with event handlers that trigger actions based on certain interactions or using additional buttons in the title bar.\n\n###\n\n","completion":" ![Configure screen event handlers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/29db5042-6a11-47e9-9de3-1641d1552fe6.webp) END"}
{"prompt":"![Configure screen event handlers](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/29db5042-6a11-47e9-9de3-1641d1552fe6.webp)\n\n###\n\n","completion":" Use the **Screen events** section of the Inspector to configure a screen with one of the following event handlers. Click **+ Add** to add an event handler or click an existing one to edit. You can also duplicate or delete event handlers by clicking the **...** icon. END"}
{"prompt":"Load and unload events\n\n###\n\n","completion":" A **Load** event occurs when a screen is loaded into the app's navigation. This occurs when: END"}
{"prompt":"A **Load** event occurs when a screen is loaded into the app's navigation. This occurs when:\n\n###\n\n","completion":" Load events are useful if you need to perform a one-time action in a particular screen, rather than trigger the action every time. END"}
{"prompt":"Load events are useful if you need to perform a one-time action in a particular screen, rather than trigger the action every time.\n\n###\n\n","completion":" An **Unload** event occurs when a screen is unloaded from navigation. This occurs when: END"}
{"prompt":"An **Unload** event occurs when a screen is unloaded from navigation. This occurs when:\n\n###\n\n","completion":" Modal screens trigger **Load** and **Unload** events since they are loaded and unloaded into the app's navigation on-demand. END"}
{"prompt":"Visible and hidden events\n\n###\n\n","completion":" A **Visible** event occurs whenever a screen becomes visible to a user. A **Hidden** event occur when a screen is no longer visible. These events occur when users navigate the app and move from screen to screen. END"}
{"prompt":"Refresh events\n\n###\n\n","completion":" Retool Mobile supports the pull-to-refresh gesture (swipe and pull down on a screen). This triggers a **Refresh** event. A common use for this is to reload data, but you can also configure a **Refresh** event to perform any type of supported action. END"}
{"prompt":"Retool Mobile supports the pull-to-refresh gesture (swipe and pull down on a screen). This triggers a **Refresh** event. A common use for this is to reload data, but you can also configure a **Refresh** event to perform any type of supported action.\n\n###\n\n","completion":" ![Configure pull-to-refresh](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b071ed92-5b03-464d-9615-099f429d05f1.webp) END"}
{"prompt":"![Configure pull-to-refresh](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/b071ed92-5b03-464d-9615-099f429d05f1.webp)\n\n###\n\n","completion":" You can provide users with visual feedback that data is currently being refreshed. Set the **Refreshing** property in the **Interaction** section of the Inspector to a truthy value. For example, queries include the `isFetching` property that reflects whether it is actively running. END"}
{"prompt":"Action buttons\n\n###\n\n","completion":" You can configure _action buttons_ that appear in the title bar area. Use the **Actions** section of the Inspector for a selected screen to configure action buttons. END"}
{"prompt":"You can configure _action buttons_ that appear in the title bar area. Use the **Actions** section of the Inspector for a selected screen to configure action buttons.\n\n###\n\n","completion":" The title bar supports a maximum of three action buttons—one left and two right. You can set a custom icon and text for action buttons, and select the action to perform. END"}
{"prompt":"The title bar supports a maximum of three action buttons—one left and two right. You can set a custom icon and text for action buttons, and select the action to perform.\n\n###\n\n","completion":" ![Action buttons provide additional ways for users to interact with your apps](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/229b1c03-f481-4cf2-96b3-3be7a6125490.webp) END"}
{"prompt":"title: \"Send push notifications\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Learn how to send push notifications to Retool Mobile users.\"\nhidden: false\n\n###\n\n","completion":" Retool Cloud and Self-hosted organizations can send *push notifications* to Retool Mobile users. Using the built-in **Mobile Push Notifications** resource, you write queries that send notifications to specified users from any Retool app or workflow. END"}
{"prompt":"Retool Cloud and Self-hosted organizations can send *push notifications* to Retool Mobile users. Using the built-in **Mobile Push Notifications** resource, you write queries that send notifications to specified users from any Retool app or workflow.\n\n###\n\n","completion":" Configuring push notifications is a two-part process: END"}
{"prompt":"Configuring push notifications is a two-part process:\n\n###\n\n","completion":" Self-hosted deployments must also complete additional steps before using push notifications. END"}
{"prompt":"Subscribe users to push notifications\n\n###\n\n","completion":" Each user must first *subscribe* to receive push notifications. This is done by adding a query to mobile apps that runs automatically whenever users launch the app. END"}
{"prompt":"Each user must first *subscribe* to receive push notifications. This is done by adding a query to mobile apps that runs automatically whenever users launch the app.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(69.51219512195121% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/5Wa3S00wXnQUdrVNKsjq?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Subscribe to push notifications\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(69.51219512195121% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/5Wa3S00wXnQUdrVNKsjq?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Subscribe to push notifications\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" When the query runs, it subscribes the user to push notifications. The Retool Mobile app also prompts the user to allow notifications on their device if the user has not yet done so. Once subscribed, the user can receive notifications sent directly to them or when sent to all users. END"}
{"prompt":"Send push notifications\n\n###\n\n","completion":" The Mobile Push Notifications resource is available anywhere you can write queries in Retool. This enables you to send notifications from any Retool app or workflow. You can send notifications to specific users by including their email addresses or to all users. You specify the recipients and message, and then configure the query to run. END"}
{"prompt":"The Mobile Push Notifications resource is available anywhere you can write queries in Retool. This enables you to send notifications from any Retool app or workflow. You can send notifications to specific users by including their email addresses or to all users. You specify the recipients and message, and then configure the query to run.\n\n###\n\n","completion":" Queries for the Mobile Push Notifications resource only send when used in web apps and workflows. If you need to send push notifications from a mobile app, specify the **Send** action. END"}
{"prompt":"Queries for the Mobile Push Notifications resource only send when used in web apps and workflows. If you need to send push notifications from a mobile app, specify the **Send** action.\n\n###\n\n","completion":" Send queries include a **Topics** field in which you add recipients. To send a push notification to individual users, use `USER:jenny@example.com`. To send a push notification to all users, use `ALL_USERS`. You add each recipient as a separate topic. END"}
{"prompt":"Send queries include a **Topics** field in which you add recipients. To send a push notification to individual users, use `USER:jenny@example.com`. To send a push notification to all users, use `ALL_USERS`. You add each recipient as a separate topic.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(69.51219512195121% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/YJsv1B8Vp5SWokvGWxt1?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Send push notifications from a workflow\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Configure push notifications for Self-hosted deployments\n\n###\n\n","completion":" If you have a Self-hosted deployment, you must obtain a *push notification API token* from Retool and then configure additional environment variables. END"}
{"prompt":"If you have a Self-hosted deployment, you must obtain a *push notification API token* from Retool and then configure additional environment variables.\n\n###\n\n","completion":" First, <a href=\"#\" class=\"send-message\">contact our support team<\/a> to request a token. Once you receive it, configure the following environment variables: END"}
{"prompt":"title: \"Create white-label Retool Mobile apps\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Learn how to launch your own custom-branded Retool Mobile app.\"\nhidden: false\n\n###\n\n","completion":" Eligible Retool organizations can request *White-label Apps*: a custom-branded version of the Retool Mobile app. Retool can manage the distribution of White-label Apps to users in your organization through the iOS App Store and Google Play, or you can self-manage this process. END"}
{"prompt":"Eligible Retool organizations can request *White-label Apps*: a custom-branded version of the Retool Mobile app. Retool can manage the distribution of White-label Apps to users in your organization through the iOS App Store and Google Play, or you can self-manage this process.\n\n###\n\n","completion":" To create a White-label App, you provide Retool with the necessary provisioning resources. Retool then generates a custom version of the mobile app for you and uploads it to the iOS App Store or Google Play. END"}
{"prompt":"Eligibility\n\n###\n\n","completion":" White-label Apps are only available to Retool Cloud or Self-hosted Retool organizations on Enterprise plans. The requirements depend on whether you use Retool-managed or self-managed distribution, and if you will distribute apps to iOS or Android devices. END"}
{"prompt":"Distribution options\n\n###\n\n","completion":" Depending on your use case, Retool can manage the distribution of White-label Apps (Retool-managed) or you can manage them directly (self-managed). END"}
{"prompt":"Depending on your use case, Retool can manage the distribution of White-label Apps (Retool-managed) or you can manage them directly (self-managed).\n\n###\n\n","completion":" In most cases, use Retool-managed distribution unless you must handle app distribution directly. END"}
{"prompt":"Provision a White-label App from Retool\n\n###\n\n","completion":" You can request a White-label App by completing either the [Retool-managed](https:\/\/docs.google.com\/forms\/d\/e\/1FAIpQLSe5GyFwjQXpzg4H9Ry7wimFVs_FBH7QPhe1SIIfVq4wUKOjEw\/viewform) or [self-managed](https:\/\/docs.google.com\/forms\/d\/e\/1FAIpQLScIc4zPG0_Y88Xsyhh0DylZp0SXXiltQ-gVMyXc12MOKF9rzA\/viewform) provisioning form. You must provide the following provisioning resources when submitting the request. END"}
{"prompt":"You can request a White-label App by completing either the [Retool-managed](https:\/\/docs.google.com\/forms\/d\/e\/1FAIpQLSe5GyFwjQXpzg4H9Ry7wimFVs_FBH7QPhe1SIIfVq4wUKOjEw\/viewform) or [self-managed](https:\/\/docs.google.com\/forms\/d\/e\/1FAIpQLScIc4zPG0_Y88Xsyhh0DylZp0SXXiltQ-gVMyXc12MOKF9rzA\/viewform) provisioning form. You must provide the following provisioning resources when submitting the request.\n\n###\n\n","completion":" Retool will notify you when your White-label App is ready. It is not automatically published. END"}
{"prompt":"Use Retool-managed distribution\n\n###\n\n","completion":" Retool can manage the distribution of your White-label Apps if your organization: END"}
{"prompt":"Retool can manage the distribution of your White-label Apps if your organization:\n\n###\n\n","completion":" Retool publishes White-label Apps on your behalf to the iOS App Store or Google Play. These apps are visible only to users in your organization. Retool also manages updates and store reviews, and you have control over the release schedule. END"}
{"prompt":"Retool-managed distribution requirements\n\n###\n\n","completion":" You must meet the following requirements for Retool-managed distribution of your White-label Apps. END"}
{"prompt":"Distribute Retool-managed apps\n\n###\n\n","completion":" To distribute Retool-managed White-label Apps to devices, complete the following steps for either iOS or Android. END"}
{"prompt":"Android\n\n###\n\n","completion":" Enroll your devices into your EMM solution. Once enrolled, users can install the White-label App onto their managed devices. END"}
{"prompt":"Use self-managed distribution\n\n###\n\n","completion":" If your organization doesn't meet the requirements for Retool-managed distribution or has a use case that requires publishing White-label Apps directly to the iOS App Store or Google Play, use self-managed distribution. Instead of publishing White-label Apps on your behalf, Retool uploads app binaries to your Apple or Google Developer account. END"}
{"prompt":"If your organization doesn't meet the requirements for Retool-managed distribution or has a use case that requires publishing White-label Apps directly to the iOS App Store or Google Play, use self-managed distribution. Instead of publishing White-label Apps on your behalf, Retool uploads app binaries to your Apple or Google Developer account.\n\n###\n\n","completion":" Self-managed distribution requires you to set up Apple or Google developer accounts, manage updates, and handle store reviews. END"}
{"prompt":"Self-managed distribution requirements\n\n###\n\n","completion":" You must meet the following requirements for self-managed distribution of White-label Apps. END"}
{"prompt":"Distribute self-managed apps\n\n###\n\n","completion":" You are responsible for publishing self-managed White-label Apps to the iOS App Store or Google Play. Once Retool notifies you that the app binaries have been uploaded, you can submit the app for review. After publishing, your users can install the app. END"}
{"prompt":"Manage app updates\n\n###\n\n","completion":" Your White-label App functions in the same way as the Retool Mobile app. You can continue to make incremental changes to your mobile app (e.g., adding new components or editing queries) without needing to publish an update. END"}
{"prompt":"Your White-label App functions in the same way as the Retool Mobile app. You can continue to make incremental changes to your mobile app (e.g., adding new components or editing queries) without needing to publish an update.\n\n###\n\n","completion":" You must publish a new version of your White-label App to the iOS App Store or Google Play if you need to: END"}
{"prompt":"title: \"Build mobile apps for Zebra devices\"\ncategorySlug: \"retool-mobile\"\nparentDocSlug: \"mobile-guides\"\nexcerpt: \"Learn how to capture data with Zebra Android devices.\"\nhidden: false\n\n###\n\n","completion":" [Zebra Technologies](https:\/\/www.zebra.com) specializes in integrated mobile devices for large-scale industry deployments, such as warehouse and inventory management, field operations, and logistics. You can build Retool Mobile apps for [Zebra Android devices](https:\/\/www.zebra.com\/us\/en\/products\/mobile-computers.html) that receive data captured using dedicated hardware, such as scanners and sensors. Retool uses the [Zebra DataWedge APIs](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/api\/overview\/) to receive capture events using the [Zebra DataWedge Reader](\/reference\/component-mobile-zebra) component. END"}
{"prompt":"[Zebra Technologies](https:\/\/www.zebra.com) specializes in integrated mobile devices for large-scale industry deployments, such as warehouse and inventory management, field operations, and logistics. You can build Retool Mobile apps for [Zebra Android devices](https:\/\/www.zebra.com\/us\/en\/products\/mobile-computers.html) that receive data captured using dedicated hardware, such as scanners and sensors. Retool uses the [Zebra DataWedge APIs](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/api\/overview\/) to receive capture events using the [Zebra DataWedge Reader](\/reference\/component-mobile-zebra) component.\n\n###\n\n","completion":" [block:embed]\n{\n  \"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FQ_EWgE1LvvA%3Ffeature%3Doembed&display_name=YouTube&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DQ_EWgE1LvvA&image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FQ_EWgE1LvvA%2Fhqdefault.jpg&key=7788cb384c9f4d5dbbdbeffd9fe4b92f&type=text%2Fhtml&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n  \"url\": \"https:\/\/www.youtube.com\/watch?v=Q_EWgE1LvvA\",\n  \"title\": \"Retool Mobile Zebra integration demo\",\n  \"favicon\": \"https:\/\/www.google.com\/favicon.ico\",\n  \"image\": \"https:\/\/i.ytimg.com\/vi\/Q_EWgE1LvvA\/hqdefault.jpg\",\n  \"provider\": \"https:\/\/www.youtube.com\/\",\n  \"href\": \"https:\/\/www.youtube.com\/watch?v=Q_EWgE1LvvA\",\n  \"typeOfEmbed\": \"youtube\"\n}\n[\/block] END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" For security purposes, Zebra [controls access to the DataWedge Intents APIs](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/programmers-guides\/secure-intent-apis\/). Zebra administrators must first [create a Zebra DataWedge profile](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/api\/createprofile\/) with the following configuration to add the Retool Mobile app as an approved DataWedge application. END"}
{"prompt":"For security purposes, Zebra [controls access to the DataWedge Intents APIs](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/programmers-guides\/secure-intent-apis\/). Zebra administrators must first [create a Zebra DataWedge profile](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/api\/createprofile\/) with the following configuration to add the Retool Mobile app as an approved DataWedge application.\n\n###\n\n","completion":" Once configured, the Retool Mobile app is able to receive captured data and provide it to your mobile apps. Refer to the [Zebra DataWedge APIs documentation](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/api\/) for more information on approved apps and profiles. END"}
{"prompt":"Receive captured data in Retool Mobile\n\n###\n\n","completion":" The [Zebra DataWedge Reader](\/reference\/component-mobile-zebra) component allows your Retool Mobile apps to receive this data and use it elsewhere. Add this component to your mobile app to receive captured Zebra data and configure [event handlers](https:\/\/docs.retool.com\/docs\/event-handlers) to perform actions with it. END"}
{"prompt":"The [Zebra DataWedge Reader](\/reference\/component-mobile-zebra) component allows your Retool Mobile apps to receive this data and use it elsewhere. Add this component to your mobile app to receive captured Zebra data and configure [event handlers](https:\/\/docs.retool.com\/docs\/event-handlers) to perform actions with it.\n\n###\n\n","completion":" When a Zebra device captures data, it sends it as a DataWedge [Intent](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/output\/intent\/#theintentobject) object. The Zebra DataWedge Reader component functions as a listener and receives the Intent, which triggers the **Capture** event. The component's `data` property is set to the received Intent. END"}
{"prompt":"When a Zebra device captures data, it sends it as a DataWedge [Intent](https:\/\/techdocs.zebra.com\/datawedge\/11-3\/guide\/output\/intent\/#theintentobject) object. The Zebra DataWedge Reader component functions as a listener and receives the Intent, which triggers the **Capture** event. The component's `data` property is set to the received Intent.\n\n###\n\n","completion":" You configure event handlers to trigger queries or perform actions when events occur. Click **+ Add** in the **Interaction** section of the Inspector to add an event handler. END"}
{"prompt":"You configure event handlers to trigger queries or perform actions when events occur. Click **+ Add** in the **Interaction** section of the Inspector to add an event handler.\n\n###\n\n","completion":" ![Configure an event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/9cf1dc36-c404-4b54-b966-51240ceafeec.webp) END"}
{"prompt":"![Configure an event handler](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-mobile\/9cf1dc36-c404-4b54-b966-51240ceafeec.webp)\n\n###\n\n","completion":" For example, you can use the **Run script** action to set the value of a [Mobile Text](https:\/\/docs.retool.com\/reference\/component-mobile-text) component using JavaScript. This is useful when testing your apps on Zebra devices. Retool wraps the `data` property in `JSON.stringify()` to display it as a string. END"}
{"prompt":"Hide the Zebra component button\n\n###\n\n","completion":" The Zebra DataWedge Reader component initially displays a **Toggle scan** button that can trigger the embedded capture hardware, such as a scanner. If your Zebra devices already have a dedicated hardware button, you can hide the component. In the **Layout** section of the Inspector, set the component's **Hidden** setting to `true`. END"}
{"prompt":"The Zebra DataWedge Reader component initially displays a **Toggle scan** button that can trigger the embedded capture hardware, such as a scanner. If your Zebra devices already have a dedicated hardware button, you can hide the component. In the **Layout** section of the Inspector, set the component's **Hidden** setting to `true`.\n\n###\n\n","completion":" Your mobile app only needs to contain a Zebra DataWedge Reader component to receive captured data, but it doesn't need to be visible. END"}
{"prompt":"title: \"Retool Mobile overview\"\ncategorySlug: \"retool-mobile\"\nexcerpt: \"Build and deploy native mobile apps for iOS and Android.\"\nhidden: false\n\n###\n\n","completion":" [Retool Mobile](https:\/\/retool.com\/products\/mobile) is a fast, complete solution for building native iOS and Android apps for your mobile workforce. Connect to your databases and APIs, assemble polished mobile interfaces with multi-page navigation, and deploy apps instantly. END"}
{"prompt":"Get started\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n \\n <p>\\n Watch a video, learn with a tutorial, follow the quickstart, or explore use-case guides.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\" style=\\\"--aspect-ratio: 16\/9;\\\">\\n<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https:\/\/www.youtube.com\/embed\/8Gv1XkuOAlQ\\\" title=\\\"YouTube video player\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\" allowfullscreen=\\\"\\\"><\/iframe>  <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"mobile-tutorial\\\">\\n <div class=\\\"name\\\">Tutorial<\/div>\\n <div class=\\\"description\\\">\\n Learn how to build a mobile app from start to finish.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"retool-mobile-quickstart\\\">\\n <div class=\\\"name\\\">Quickstart<\/div>\\n <div class=\\\"description\\\">\\nBuild your first mobile app in just a few minutes.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a\\n href=\\\"retool-mobile-inventory-management-app-tutorial\\\">\\n <div class=\\\"name\\\">Inventory management<\/div>\\n <div class=\\\"description\\\">\\nBuild a mobile app to look up products and warehouse inventory.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a\\n href=\\\"retool-mobile-field-sales-app-tutorial\\\">\\n <div class=\\\"name\\\">Field sales<\/div>\\n <div class=\\\"description\\\">\\nBuild a mobile app to manage sales opportunities.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"Assemble the UI\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\n Assemble highly polished multi-screen interfaces with native mobile components.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image on-prem\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/caeeaa37-24ae-47ce-99b5-ff6219e77827.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing three-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"retool-mobile-screens\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Screens<\/div>\\n <div class=\\\"description\\\">\\n Create mobile experiences across multiple screens.\\n <\/div>\\n <\/a>\\n <\/li>\\n       <li>\\n <a\\n href=\\\"retool-mobile-components\\\"\\n style=\\\"--ctaColor: #f6f6f6; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Mobile components<\/div>\\n <div class=\\\"description\\\">\\n Assemble mobile components to build the UI.\\n <\/div>\\n <\/a>\\n <\/li>\\n          <li>\\n <a\\n href=\\\"retool-mobile-design-layout#apply-custom-theme-styles\\\"\\n style=\\\"--ctaColor: #f6f6f6; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Customize style and layout<\/div>\\n <div class=\\\"description\\\">\\n Configure the appearance of mobile apps.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"Script apps and respond to user events\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\nUse JavaScript anywhere, control app behavior, and respond to user actions.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/229f4bd2-6264-4617-b976-c7a6de6a91cf.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing three-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"https:\/\/docs.retool.com\/reference\/javascript-api\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Scripting and events<\/div>\\n <div class=\\\"description\\\">\\n Write JavaScript to control apps and handle user interactions.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"\/docs\/define-option-lists\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Dynamically map options<\/div>\\n <div class=\\\"description\\\">\\n Automatically map data to generate component value options.\\n <\/div>\\n <\/a>\\n <\/li>\\n       <li>\\n <a\\n href=\\\"retool-mobile-screens#trigger-actions-with-event-handlers\\\"\\n style=\\\"--ctaColor: #f6f6f6; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Handle user events<\/div>\\n <div class=\\\"description\\\">\\n Trigger actions and queries in response to user interaction.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"Deploy apps\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\nRelease and update mobile apps instantly without lengthy app review.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/3f476ed9-d32a-40e2-ac83-69ecd72bed9b.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"retool-mobile-app-deployment\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Deploy mobile apps<\/div>\\n <div class=\\\"description\\\">\\n Update, release, and deploy mobile apps to your workforce.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"retool-mobile-app-deployment\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Retool Mobile for iOS and Android<\/div>\\n <div class=\\\"description\\\">\\n Access mobile apps using Retool Mobile.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Retool University\"\ncategorySlug: \"legacy\"\nexcerpt: \"Learn how to build internal tools in Retool\"\nhidden: true\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/800e652-01_Introduction_No_Logo.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/800e652-01_Introduction_No_Logo.png)\n\n###\n\n","completion":" Retool is the fast and easy way to build and maintain internal tools. If you are not a developer but want to learn how to build in Retool, you’ve come to the right place! END"}
{"prompt":"Retool is the fast and easy way to build and maintain internal tools. If you are not a developer but want to learn how to build in Retool, you’ve come to the right place!\n\n###\n\n","completion":" Retool University is a great place to get started with Retool. Each lesson covers everything from SQL to JavaScript, as well as how to build awesome Retool apps. END"}
{"prompt":"Retool University is a great place to get started with Retool. Each lesson covers everything from SQL to JavaScript, as well as how to build awesome Retool apps.\n\n###\n\n","completion":" Before we get started, here are a few resources to keep in mind as we work through the lessons: END"}
{"prompt":"Before we get started, here are a few resources to keep in mind as we work through the lessons:\n\n###\n\n","completion":" **Once you complete Retool University, you’ll be able to:** END"}
{"prompt":"**Once you complete Retool University, you’ll be able to:**\n\n###\n\n","completion":" We recommend running through the lessons in order, but they are modular by design and can be read relatively independently. So pick any lesson that might pique your interest! END"}
{"prompt":"We recommend running through the lessons in order, but they are modular by design and can be read relatively independently. So pick any lesson that might pique your interest!\n\n###\n\n","completion":" Let’s get started with an introduction to Retool! END"}
{"prompt":"Introducing Retool\n\n###\n\n","completion":" Before we dive into SQL, JavaScript, and building apps, it’s worth getting a firm understanding of what Retool does. Retool helps you build apps—everything from apps to approve home loans to apps that automate your sales process. END"}
{"prompt":"Before we dive into SQL, JavaScript, and building apps, it’s worth getting a firm understanding of what Retool does. Retool helps you build apps—everything from apps to approve home loans to apps that automate your sales process.\n\n###\n\n","completion":" When you build an app from scratch, there are a lot of things to consider beyond how it works or what it looks like (i.e. hosting, integration, audit logs, authentication, etc). But when you build Retool apps, we take care of all of the hard stuff so you can focus on what actually needs to be custom for your business. END"}
{"prompt":"When you build an app from scratch, there are a lot of things to consider beyond how it works or what it looks like (i.e. hosting, integration, audit logs, authentication, etc). But when you build Retool apps, we take care of all of the hard stuff so you can focus on what actually needs to be custom for your business.\n\n###\n\n","completion":" **Before moving on, please read the following docs articles:** END"}
{"prompt":"**Before moving on, please read the following docs articles:**\n\n###\n\n","completion":" **Remember, Retool has the following workflow:** END"}
{"prompt":"Learn by building: Charlotte’s story\n\n###\n\n","completion":" Not sure you’re ready? Check out the video below from one our customers, Charlotte Evans at Coursera. She did not have a developer background, but she now uses Retool to build powerful apps used by dozens of teammates at a large, fast-growing company. END"}
{"prompt":"Not sure you’re ready? Check out the video below from one our customers, Charlotte Evans at Coursera. She did not have a developer background, but she now uses Retool to build powerful apps used by dozens of teammates at a large, fast-growing company.\n\n###\n\n","completion":" [block:embed]\n{\n\"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A\/\/www.youtube.com\/embed\/AtA8hhaqHFE%3Flist%3DPLqWdQFDVLADmkOrHQ-x-YPjma_Dzlvrq5&display_name=YouTube&url=https%3A\/\/www.youtube.com\/watch%3Fv%3DAtA8hhaqHFE&image=https%3A\/\/i.ytimg.com\/vi\/AtA8hhaqHFE\/hqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text\/html&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n\"url\": \"https:\/\/www.youtube.com\/watch?v=AtA8hhaqHFE&&list=PLqWdQFDVLADmkOrHQ-x-YPjma_Dzlvrq5&index=15\",\n\"title\": \"Coursera Lightning Demo: From Spreadsheets to Applications\",\n\"favicon\": \"https:\/\/www.youtube.com\/s\/desktop\/110d331e\/img\/favicon.ico\",\n\"image\": \"https:\/\/i.ytimg.com\/vi\/AtA8hhaqHFE\/hqdefault.jpg\"\n}\n[\/block] END"}
{"prompt":"Jump to the next lesson\n\n###\n\n","completion":" Here’s a quick breakdown of each lesson so you can create the path that’s right for you. END"}
{"prompt":"Additional Resources\n\n###\n\n","completion":" **Docs to read before building your first app:** END"}
{"prompt":"**Docs to read before building your first app:**\n\n###\n\n","completion":" **Step-by-step tutorials (docs):** END"}
{"prompt":"**Step-by-step tutorials (docs):**\n\n###\n\n","completion":" **Step-by-step tutorials (video):** END"}
{"prompt":"title: \"Retool web apps development\"\nparentDocSlug: \"apps-concepts\"\nexcerpt: \"Learn about Retool web app concepts and how they fit together.\"\ncategorySlug: \"web-apps\"\n\n###\n\n","completion":" Retool is a development platform for building internal tools and business software faster. You can build web apps, native mobile apps, workflows to automate tasks, and more. At a high level, these are the concepts involved in building web apps. END"}
{"prompt":"Retool web app overview\n\n###\n\n","completion":" Retool uses frontend and backend development principles for app development. You assemble UI <<glossary:components>> and configure their properties to create the app's interface. Then you write queries to interact with your data using SQL and API requests. And finally, you connect your UI and data together using JavaScript and event handlers. END"}
{"prompt":"Retool uses frontend and backend development principles for app development. You assemble UI <<glossary:components>> and configure their properties to create the app's interface. Then you write queries to interact with your data using SQL and API requests. And finally, you connect your UI and data together using JavaScript and event handlers.\n\n###\n\n","completion":" Much of Retool’s value comes from building the frontend faster, while still providing flexibility to build apps the way you want. END"}
{"prompt":"The App editor\n\n###\n\n","completion":" The App editor is the interface you use to build Retool apps. It's also where you configure interactions (button clicks, form submissions, etc.) END"}
{"prompt":"The App editor is the interface you use to build Retool apps. It's also where you configure interactions (button clicks, form submissions, etc.)\n\n###\n\n","completion":" Within the App editor is the <<glossary:canvas>>, which is where you arrange components to build your UI. There's also a bottom panel where you write queries to interact with your resources. See the [App editor](https:\/\/docs.retool.com\/docs\/app-editor) documentation for more information. END"}
{"prompt":"Within the App editor is the <<glossary:canvas>>, which is where you arrange components to build your UI. There's also a bottom panel where you write queries to interact with your resources. See the [App editor](https:\/\/docs.retool.com\/docs\/app-editor) documentation for more information.\n\n###\n\n","completion":" ![App editor with a Table component on the canvas](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/efef1877-371a-47e6-ade1-5c225031ada8.png) END"}
{"prompt":"Resource configuration\n\n###\n\n","completion":" You can connect almost any API or database to Retool and build apps on top of your data. <<glossary:Resources>> are saved configurations for connecting to your data sources. END"}
{"prompt":"You can connect almost any API or database to Retool and build apps on top of your data. <<glossary:Resources>> are saved configurations for connecting to your data sources.\n\n###\n\n","completion":" When you configure a resource, information like the name, host, port, and authentication credentials are saved so you can query the data source from your apps. Retool also supports authentication methods such as OAuth that enables users to only interact with the data to which they have access. END"}
{"prompt":"When you configure a resource, information like the name, host, port, and authentication credentials are saved so you can query the data source from your apps. Retool also supports authentication methods such as OAuth that enables users to only interact with the data to which they have access.\n\n###\n\n","completion":" You can build apps that query data across multiple resources, bringing related data from different sources together. END"}
{"prompt":"You can build apps that query data across multiple resources, bringing related data from different sources together.\n\n###\n\n","completion":" ![Settings for a MySQL resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/a82e588e-9077-4ca2-ada6-aa088669ab4f.webp) END"}
{"prompt":"![Settings for a MySQL resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/a82e588e-9077-4ca2-ada6-aa088669ab4f.webp)\n\n###\n\n","completion":" Retool supports a wide range of data sources, including most databases and APIs. For many of these data sources, there are [built-in integrations](https:\/\/retool.com\/integrations\/), but you can also connect to almost any REST, GraphQL, or SOAP API. See the [Resources](https:\/\/docs.retool.com\/docs\/resources) page for more information. END"}
{"prompt":"Assemble the UI\n\n###\n\n","completion":" You use components to assemble the UI, and you can customize their styles and layout. END"}
{"prompt":"Components\n\n###\n\n","completion":" <<glossary:Components>> are the building blocks used to create your app's UI. They're modular, reusable, and have their own internal state. The **Create** and **Inspect** tabs in the right sidebar of the App editor are used to add and configure components on the canvas. END"}
{"prompt":"<<glossary:Components>> are the building blocks used to create your app's UI. They're modular, reusable, and have their own internal state. The **Create** and **Inspect** tabs in the right sidebar of the App editor are used to add and configure components on the canvas.\n\n###\n\n","completion":" Each component has its own set of properties. Some properties are common across components—e.g., `value`, `label`, `hidden`—and some are unique to the component. Many components include methods you can use to set properties programmatically. For example, Text Input components have `setValue` and `clearValue` methods that you can use to set or clear the component's value. END"}
{"prompt":"Each component has its own set of properties. Some properties are common across components—e.g., `value`, `label`, `hidden`—and some are unique to the component. Many components include methods you can use to set properties programmatically. For example, Text Input components have `setValue` and `clearValue` methods that you can use to set or clear the component's value.\n\n###\n\n","completion":" Below is an example of setting a component's property in the **Inspect** tab. END"}
{"prompt":"Below is an example of setting a component's property in the **Inspect** tab.\n\n###\n\n","completion":" ![Setting a Text component's value](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/30897308-b857-40d6-be68-1e568389e379.png) END"}
{"prompt":"![Setting a Text component's value](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/30897308-b857-40d6-be68-1e568389e379.png)\n\n###\n\n","completion":" This is covered in more detail in subsequent sections, but know that components have events (e.g., a button click) and can read and set properties on other components. For example, you could use a [Text](https:\/\/retool.com\/components\/text) component to read and display a value from a table, or you could use a [Checkbox](https:\/\/retool.com\/components\/checkbox) component to show or hide another component. END"}
{"prompt":"Style and layout\n\n###\n\n","completion":" Each component also has settings to configure its styling and appearance. You can change background colors, text, borders, accents, etc. Some components, such as Tables, provide [additional styling options](https:\/\/docs.retool.com\/docs\/data-in-tables#set-column-background-color). After components are on the canvas, you can click and drag them to different locations, or resize them by clicking on their frames. END"}
{"prompt":"Interact with your data\n\n###\n\n","completion":" You primarily interact with your data through resource queries, but you can also use JavaScript transformers and JavaScript queries to further manipulate data. END"}
{"prompt":"You primarily interact with your data through resource queries, but you can also use JavaScript transformers and JavaScript queries to further manipulate data.\n\n###\n\n","completion":" In addition to resources, you can store data locally in the browser using temporary state and local storage store. END"}
{"prompt":"Resource queries\n\n###\n\n","completion":" Resource queries are how you read and write data from your resources. When you write a resource query, you select the resource in the dropdown menu and then configure the query. END"}
{"prompt":"Resource queries are how you read and write data from your resources. When you write a resource query, you select the resource in the dropdown menu and then configure the query.\n\n###\n\n","completion":" ![Selecting a resource for a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/672e38ed-ac1e-4ed9-9f40-5781fa3a2cef.png) END"}
{"prompt":"JavaScript queries and transformers\n\n###\n\n","completion":" When you need to write more complex logic, you can use JavaScript queries and transformers. These allow you to write custom logic in a central place that's easier to work with. END"}
{"prompt":"JavaScript queries\n\n###\n\n","completion":" You can write more complex logic using JavaScript queries. These allow you to trigger other queries and configure components, which gives you more control over how your app works. JavaScript queries are often used to centralize logic that might otherwise be spread throughout an app. For example, you might a write JavaScript query that loops over a dataset and then execute API queries based on the results. END"}
{"prompt":"JavaScript transformers\n\n###\n\n","completion":" JavaScript transformers allow you to write reusable pieces of code. They're often used to manipulate data, and you can access the transformer throughout your app using `{{ transformer_name.value }}`. END"}
{"prompt":"JavaScript transformers allow you to write reusable pieces of code. They're often used to manipulate data, and you can access the transformer throughout your app using `{{ transformer_name.value }}`.\n\n###\n\n","completion":" Transformers execute their code automatically when the object they reference changes, and aren't explicitly triggered. For example, if you were working with an API that didn't support filtering using parameters, you could write a transformer like this to filter data. END"}
{"prompt":"Transformers execute their code automatically when the object they reference changes, and aren't explicitly triggered. For example, if you were working with an API that didn't support filtering using parameters, you could write a transformer like this to filter data.\n\n###\n\n","completion":" You could then display the filtered data in a component by referencing `{{ transformer_name.value }}`. END"}
{"prompt":"Temporary state and local storage\n\n###\n\n","completion":" There are two options for storing data locally: temporary state and local storage. END"}
{"prompt":"There are two options for storing data locally: temporary state and local storage.\n\n###\n\n","completion":" Temporary state is used for short term storage and it resets every time an app loads. It's often used to track a variable that can change as a user interacts with your app, or when you want to track a value before committing it to a database. You can also use it to configure an app or component to load in a particular way. Temporary state has its own set of [JavaScript methods](https:\/\/docs.retool.com\/reference\/javascript-api-methods-temporary-state). END"}
{"prompt":"Temporary state is used for short term storage and it resets every time an app loads. It's often used to track a variable that can change as a user interacts with your app, or when you want to track a value before committing it to a database. You can also use it to configure an app or component to load in a particular way. Temporary state has its own set of [JavaScript methods](https:\/\/docs.retool.com\/reference\/javascript-api-methods-temporary-state).\n\n###\n\n","completion":" Local storage is different in that it stores information in the browser. It also has its own [JavaScript methods](https:\/\/docs.retool.com\/reference\/javascript-api-methods-local-storage) that you can use to set and clear values. All the apps in your organization have the same [origin](https:\/\/developer.mozilla.org\/en-US\/docs\/Glossary\/Origin), which means you can use local storage to share data cross apps. END"}
{"prompt":"Connect the UI and data together\n\n###\n\n","completion":" You use JavaScript and event handlers to connect your UI and data. This can take many forms, but essentially you're adding interactions between your UI and data that allows users to interact with your app. END"}
{"prompt":"JavaScript\n\n###\n\n","completion":" JavaScript transformers and queries were covered previously, but you can write JavaScript anywhere in Retool. This means a few things in practice. END"}
{"prompt":"JavaScript transformers and queries were covered previously, but you can write JavaScript anywhere in Retool. This means a few things in practice.\n\n###\n\n","completion":" The example below has a Table component and a Text component. Notice that the first row of the table is selected, and that the value of the Text component is set to `{{ table1.selectedRow.data.name }}`. If you clicked a different row, `selectedRow` updates automatically and so does the value in the Text component. END"}
{"prompt":"The example below has a Table component and a Text component. Notice that the first row of the table is selected, and that the value of the Text component is set to `{{ table1.selectedRow.data.name }}`. If you clicked a different row, `selectedRow` updates automatically and so does the value in the Text component.\n\n###\n\n","completion":" ![Using curly brackets to reference table data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ed74b7fa-1d8c-47c6-8db2-76a4dc03126d.png) END"}
{"prompt":"![Using curly brackets to reference table data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ed74b7fa-1d8c-47c6-8db2-76a4dc03126d.png)\n\n###\n\n","completion":" In Retool, anything between curly brackets `{{ }}` is JavaScript. In the previous example, JavaScript is used to access the name value in the currently selected row. END"}
{"prompt":"In Retool, anything between curly brackets `{{ }}` is JavaScript. In the previous example, JavaScript is used to access the name value in the currently selected row.\n\n###\n\n","completion":" There's a full set of [JavaScript APIs](https:\/\/docs.retool.com\/reference\/javascript-api-methods-reference) that provide additional utilities like parsing files, managing objects, etc. Retool also imports libraries like [lodash](https:\/\/lodash.com\/docs\/) and [moment](https:\/\/momentjs.com\/docs\/) that you can use. END"}
{"prompt":"Event handlers\n\n###\n\n","completion":" You can think of events as actions within your app (button clicks, selecting a table cell, etc.) When an action occurs, you use _event handlers_ to trigger other actions. Event handlers are integral to how you app functions, and how components and queries interact. END"}
{"prompt":"You can think of events as actions within your app (button clicks, selecting a table cell, etc.) When an action occurs, you use _event handlers_ to trigger other actions. Event handlers are integral to how you app functions, and how components and queries interact.\n\n###\n\n","completion":" The app below provides a simple example. When you click the button (the action), confetti is displayed (the event handler) END"}
{"prompt":"The app below provides a simple example. When you click the button (the action), confetti is displayed (the event handler)\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b3acd378-5314-4fdb-9995-5b9d6151feb5\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"400px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/b3acd378-5314-4fdb-9995-5b9d6151feb5\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Conceptually the idea is simple, but you can chain event handlers together to create robust interactions within your apps. END"}
{"prompt":"Conceptually the idea is simple, but you can chain event handlers together to create robust interactions within your apps.\n\n###\n\n","completion":" You can also configure event handlers for queries, just like components. Unique to queries though, you can choose to run event handlers when queries run successfully or when they fail. This is commonly used to add an event handler to a query that writes data to a resource. After the query runs, it triggers a second query that refreshes the UI so it reflects the recent changes. END"}
{"prompt":"Share apps with users in your organization\n\n###\n\n","completion":" When you first create a Retool account, you also create an _organization_. Every Retool user account is bound to an organization. When you sign up and create a new organization, you immediately become its administrator. END"}
{"prompt":"When you first create a Retool account, you also create an _organization_. Every Retool user account is bound to an organization. When you sign up and create a new organization, you immediately become its administrator.\n\n###\n\n","completion":" You can [invite users](https:\/\/docs.retool.com\/docs\/inviting-users) to your organization and give them different [permissions](https:\/\/docs.retool.com\/docs\/user-permissions) depending on their needs. Some users might just need viewer access so they can use apps that you build, while others might need edit access so they can edit and build apps. You can optionally add [single sign-on](https:\/\/docs.retool.com\/docs\/sso-google-and-okta) (SSO) to your Retool instance. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Now that you're familiar with common Retool concepts, you might want to build an app with [Retool Fundamentals](https:\/\/docs.retool.com\/docs\/retool-fundamentals) or the [Quickstart](https:\/\/docs.retool.com\/docs\/quickstart). You can also connect your own [Resource](https:\/\/docs.retool.com\/docs\/resources) and start working on your own app. END"}
{"prompt":"title: \"Assemble workflow blocks\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to assemble blocks and functions to build workflows.\"\nhidden: false\n\n###\n\n","completion":" Workflows are made up of _blocks_ that are chained together to perform specific actions in sequential order, known as the [control flow](#control-flow). After a block has completed its action, it triggers the next block in the chain, and so on. [Functions](#functions) are reusable blocks that operate outside of the control flow and can be called when needed. END"}
{"prompt":"Control flow\n\n###\n\n","completion":" You connect blocks together to define their _control flow_, which represents the order of operation. Each block can access data from other blocks that have already run, and some blocks can be reused or perform conditional actions. You can connect a block to multiple blocks to perform multiple actions with data, resulting in multiple control flows that run in parallel. This is useful if you want to update multiple data sources with the same data. END"}
{"prompt":"You connect blocks together to define their _control flow_, which represents the order of operation. Each block can access data from other blocks that have already run, and some blocks can be reused or perform conditional actions. You can connect a block to multiple blocks to perform multiple actions with data, resulting in multiple control flows that run in parallel. This is useful if you want to update multiple data sources with the same data.\n\n###\n\n","completion":" ![Control flow of a workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/c359e877-7f19-4c7a-b0f0-4db213553e61.webp) END"}
{"prompt":"Start block\n\n###\n\n","completion":" The _Start block_ is the first block in a workflow and cannot be removed. This block is where you configure settings to [trigger the workflow](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers) and run it automatically. END"}
{"prompt":"The _Start block_ is the first block in a workflow and cannot be removed. This block is where you configure settings to [trigger the workflow](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers) and run it automatically.\n\n###\n\n","completion":" ![The Start block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/d7f0e0a1-44b9-4bdc-99ea-e71fd173dd83.webp) END"}
{"prompt":"Add and connect blocks\n\n###\n\n","completion":" There are two methods for adding and connecting blocks: END"}
{"prompt":"There are two methods for adding and connecting blocks:\n\n###\n\n","completion":" To connect blocks together, click and drag ⦿ from one block to another. The name of a connected block appears as a label on the left. Hover the cursor over this label to preview the incoming data. To disconnect a block, click and drag its label away from the block to which it's connected. END"}
{"prompt":"To connect blocks together, click and drag ⦿ from one block to another. The name of a connected block appears as a label on the left. Hover the cursor over this label to preview the incoming data. To disconnect a block, click and drag its label away from the block to which it's connected.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.135416666666664% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/4OIn11ztSHuKVDwuntvr?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Connect workflow blocks\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.135416666666664% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/4OIn11ztSHuKVDwuntvr?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Connect workflow blocks\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Each block uses JavaScript to reference data from any block that has previously run. Use `query1.data` in JavaScript code and `{{ query1.data }}` elsewhere. END"}
{"prompt":" Each block uses JavaScript to reference data from any block that has previously run. Use `query1.data` in JavaScript code and `{{ query1.data }}` elsewhere.\n\n###\n\n","completion":" Any blocks that are not in the control flow (i.e., no connecting line) are not run automatically and display a warning if they are not connected. END"}
{"prompt":"Resource query\n\n###\n\n","completion":" Use _Resource query_ blocks to interact with resources and work with your data. You can use SQL to interact with databases and perform API requests. END"}
{"prompt":"Use _Resource query_ blocks to interact with resources and work with your data. You can use SQL to interact with databases and perform API requests.\n\n###\n\n","completion":" Database resources use SQL queries. You use **SQL mode** to [write SQL statements](https:\/\/docs.retool.com\/docs\/sql-queries), primarily used for reading data. **GUI mode** provides you with an interface to [construct queries that write or modify data](https:\/\/docs.retool.com\/docs\/sql-writes) with greater accuracy than a raw SQL statement. This can prevent unintentional changes due to erroneous SQL statements. END"}
{"prompt":"Database resources use SQL queries. You use **SQL mode** to [write SQL statements](https:\/\/docs.retool.com\/docs\/sql-queries), primarily used for reading data. **GUI mode** provides you with an interface to [construct queries that write or modify data](https:\/\/docs.retool.com\/docs\/sql-writes) with greater accuracy than a raw SQL statement. This can prevent unintentional changes due to erroneous SQL statements.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(50.83333333333333% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/I88YWlYVqIGXGBpPLuvC?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Resource queries with SQL\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(50.83333333333333% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/I88YWlYVqIGXGBpPLuvC?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Resource queries with SQL\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" API resources, such as [REST](https:\/\/docs.retool.com\/docs\/connect-api-resource), [GraphQL](https:\/\/docs.retool.com\/docs\/graphql), and [SOAP](https:\/\/docs.retool.com\/docs\/connect-api-resource) APIs, also use a GUI to construct queries. You can also use the **RESTQuery** resource to manually interact with APIs that are not configured as an existing resource. END"}
{"prompt":"API resources, such as [REST](https:\/\/docs.retool.com\/docs\/connect-api-resource), [GraphQL](https:\/\/docs.retool.com\/docs\/graphql), and [SOAP](https:\/\/docs.retool.com\/docs\/connect-api-resource) APIs, also use a GUI to construct queries. You can also use the **RESTQuery** resource to manually interact with APIs that are not configured as an existing resource.\n\n###\n\n","completion":" ![Query JSON with SQL](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b49c7cd2-3c85-4492-b033-3fce76d1b67c.webp) END"}
{"prompt":"Code\n\n###\n\n","completion":" _Code_ blocks enable you to write JavaScript or Python to transform data, perform complex logic, and extend the functionality of workflows. END"}
{"prompt":"JavaScript\n\n###\n\n","completion":" [JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) is the primary method for manipulating and transforming data in Retool. Select **JavaScript** to write JavaScript code. END"}
{"prompt":"[JavaScript](https:\/\/docs.retool.com\/docs\/javascript-overview) is the primary method for manipulating and transforming data in Retool. Select **JavaScript** to write JavaScript code.\n\n###\n\n","completion":" You can build complex logic or manipulate data using JavaScript methods like `map()`. For example, you could transform an array of account records so to combine separate first and last name values. END"}
{"prompt":"You can build complex logic or manipulate data using JavaScript methods like `map()`. For example, you could transform an array of account records so to combine separate first and last name values.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(50.83333333333333% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/6ABpkor3Sfhf8YYtws6X?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"JavaScript Code block\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(50.83333333333333% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/6ABpkor3Sfhf8YYtws6X?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"JavaScript Code block\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In general, Retool recommends you visually construct conditional statements with [Branch blocks](#branch) or filter query results using [Filter blocks](#filter). END"}
{"prompt":"In general, Retool recommends you visually construct conditional statements with [Branch blocks](#branch) or filter query results using [Filter blocks](#filter).\n\n###\n\n","completion":" JavaScript Code blocks can also call [functions](#functions)—reusable blocks that operate outside the workflow control flow. Functions allow your workflow to perform actions only when required and can receive parameters to use. END"}
{"prompt":"Python\n\n###\n\n","completion":" Select **Python** to write Python code that executes in the workflow. Python Code blocks work with input data, perform advanced actions, and then output JSON-serialized data. END"}
{"prompt":"Select **Python** to write Python code that executes in the workflow. Python Code blocks work with input data, perform advanced actions, and then output JSON-serialized data.\n\n###\n\n","completion":" The Python code editor has much of the same features as the JavaScript editor, such as autocomplete and syntax highlighting. If you're more familiar with Python, you can use it instead of JavaScript to manipulate data. For example, you can transform an array of records in a similar manner to `map()` with JavaScript: END"}
{"prompt":"The Python code editor has much of the same features as the JavaScript editor, such as autocomplete and syntax highlighting. If you're more familiar with Python, you can use it instead of JavaScript to manipulate data. For example, you can transform an array of records in a similar manner to `map()` with JavaScript:\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(50.83333333333333% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/0Ew79cubuMlHb7zWDKFD?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Python Code block\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Python workflow limitations\n\n###\n\n","completion":" To maintain interoperability with other blocks, Python does not currently support: END"}
{"prompt":"Available Python libraries\n\n###\n\n","completion":" Python queries include built-in support for many popular libraries. This enables you to extend the functionality of workflows beyond data transformation. Available libraries include: END"}
{"prompt":"Smart\n\n###\n\n","completion":" _Smart_ blocks provide built-in support for Open AI's [ChatGPT models](https:\/\/platform.openai.com\/docs\/models). You can write instructions and select the model to use, with results returned back to the workflow. You can include workflow data using `{{ }}` within the block. END"}
{"prompt":"_Smart_ blocks provide built-in support for Open AI's [ChatGPT models](https:\/\/platform.openai.com\/docs\/models). You can write instructions and select the model to use, with results returned back to the workflow. You can include workflow data using `{{ }}` within the block.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/8I4LEVhtDzv84npfUYHu?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Smart block\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/8I4LEVhtDzv84npfUYHu?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Smart block\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" This allows you to build AI-powered workflows that can perform sentiment analysis, categorization, summarization, and more. For example, ChatGPT can take a list of countries and identify which continent they are in, then return the results. END"}
{"prompt":"This allows you to build AI-powered workflows that can perform sentiment analysis, categorization, summarization, and more. For example, ChatGPT can take a list of countries and identify which continent they are in, then return the results.\n\n###\n\n","completion":" While ChatGPT can be highly effective, AI-generated results can be inaccurate at times. You should review all responses to ensure they are accurate. END"}
{"prompt":"Filter\n\n###\n\n","completion":" If you need a workflow to perform actions with only a specific subset of data, use _Filter_ blocks to return results only if they meet certain conditions. If an item evaluates as `true`, the Filter block includes it in the data it returns. END"}
{"prompt":"If you need a workflow to perform actions with only a specific subset of data, use _Filter_ blocks to return results only if they meet certain conditions. If an item evaluates as `true`, the Filter block includes it in the data it returns.\n\n###\n\n","completion":" Filter blocks function similar to [Loop blocks](#loop-blocks) and iterate through the query you select from the **Iterable** dropdown. Set the **Filter Expression** to a condition that should evaluate as `true`, using `value` and `index` to reference evaluated items and their indexes. END"}
{"prompt":"Filter blocks function similar to [Loop blocks](#loop-blocks) and iterate through the query you select from the **Iterable** dropdown. Set the **Filter Expression** to a condition that should evaluate as `true`, using `value` and `index` to reference evaluated items and their indexes.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/ivYorMSpt1LEIKcnTsmo?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Filter block\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/ivYorMSpt1LEIKcnTsmo?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Filter block\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" For example, you can use a Filter block to return a list of customers who are outside the United States with `value.country != 'USA`. END"}
{"prompt":"Branch\n\n###\n\n","completion":" Instead of writing [if...else](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/if...else) statements in JavaScript, you can use _Branch_ blocks to visually build conditional statements that control different connected blocks. This is useful for breaking out complex JavaScript logic into more manageable blocks. END"}
{"prompt":"Instead of writing [if...else](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/if...else) statements in JavaScript, you can use _Branch_ blocks to visually build conditional statements that control different connected blocks. This is useful for breaking out complex JavaScript logic into more manageable blocks.\n\n###\n\n","completion":" A Branch block evaluates the data it receives from a connected block using the defined condition. If the condition evaluates as a <<glossary:truthy value>>, the workflow follows the control flow for the **If** statement. If not, it follows the control flow for the **Else** statement. END"}
{"prompt":"A Branch block evaluates the data it receives from a connected block using the defined condition. If the condition evaluates as a <<glossary:truthy value>>, the workflow follows the control flow for the **If** statement. If not, it follows the control flow for the **Else** statement.\n\n###\n\n","completion":" For example, you could build a workflow that alerts your shipping department if the number of international customers exceeds a certain threshold, such as `query2.data.length > 90`. END"}
{"prompt":"For example, you could build a workflow that alerts your shipping department if the number of international customers exceeds a certain threshold, such as `query2.data.length > 90`.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/9WdfPAWEwOwrfc3n7PH3?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Branch blocks\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/9WdfPAWEwOwrfc3n7PH3?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Branch blocks\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" You can add multiple branches as **Else if** statements and visually build out complex conditional logic. As you test your workflow, the condition that evaluates as `true` is highlighted in green. END"}
{"prompt":"You can add multiple branches as **Else if** statements and visually build out complex conditional logic. As you test your workflow, the condition that evaluates as `true` is highlighted in green.\n\n###\n\n","completion":" Each conditional statement has its own connector so you can connect different blocks and define separate control flows for each outcome. END"}
{"prompt":"Loop\n\n###\n\n","completion":" _Loop_ blocks are useful for automating repetitive actions or performing complex logic on an array of data. A Loop block contains an embedded block that triggers for each evaluated item. This embedded block can query a resource each time or run JavaScript—select either a resource or **Run JS Code**. END"}
{"prompt":"_Loop_ blocks are useful for automating repetitive actions or performing complex logic on an array of data. A Loop block contains an embedded block that triggers for each evaluated item. This embedded block can query a resource each time or run JavaScript—select either a resource or **Run JS Code**.\n\n###\n\n","completion":" Use `value` and `index` to reference evaluated items and their indexes. For example, you can automate emails sent to a list of customers, and customize the message for each recipient, using values like `{{ value.email }}`, `{{ value.first }}`, and `{{ value.last }}`. END"}
{"prompt":"Use `value` and `index` to reference evaluated items and their indexes. For example, you can automate emails sent to a list of customers, and customize the message for each recipient, using values like `{{ value.email }}`, `{{ value.first }}`, and `{{ value.last }}`.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.135416666666664% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/uQnE3CfAKeT5oSUmin7y?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Loop blocks\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.135416666666664% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/uQnE3CfAKeT5oSUmin7y?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Loop blocks\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" The default mode for Loop blocks is **GUI**. This mode automatically configures the loop to iterate through the query data you select from the **Iterable** dropdown. If you require more complexity with your loop logic, use **Code**. This  allows you to configure the JavaScript code used by the Loop block. You must specify the query data through which to loop within the custom code. END"}
{"prompt":"The default mode for Loop blocks is **GUI**. This mode automatically configures the loop to iterate through the query data you select from the **Iterable** dropdown. If you require more complexity with your loop logic, use **Code**. This  allows you to configure the JavaScript code used by the Loop block. You must specify the query data through which to loop within the custom code.\n\n###\n\n","completion":" ![Loop through data and trigger query with custom code](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/baccc133-48b6-4f0b-9fbc-ed40dee3cb9a.webp) END"}
{"prompt":"Response\n\n###\n\n","completion":" The _Response_ block works in conjunction with the [Webhook trigger](\/docs\/retool-workflows-blocks#trigger-workflows-with-webhooks) and enables you to configure your own webhook responses. By default, webhook-triggered workflows without a Response block immediately return a standard response. When a Response block is in use, the workflow responds only when the workflow reaches the block in the control flow. END"}
{"prompt":"The _Response_ block works in conjunction with the [Webhook trigger](\/docs\/retool-workflows-blocks#trigger-workflows-with-webhooks) and enables you to configure your own webhook responses. By default, webhook-triggered workflows without a Response block immediately return a standard response. When a Response block is in use, the workflow responds only when the workflow reaches the block in the control flow.\n\n###\n\n","completion":" You can specify the HTTP **status code** and a JSON **response body** to return, which can include any data from the workflow. For example, you could use a workflow to look up a customer's mailing address based on their email, which is returned in the webhook response. END"}
{"prompt":"You can specify the HTTP **status code** and a JSON **response body** to return, which can include any data from the workflow. For example, you could use a workflow to look up a customer's mailing address based on their email, which is returned in the webhook response.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/65nf9Fzl8MA6EwKqNOrI?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Response block\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(52.09756097560976% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/65nf9Fzl8MA6EwKqNOrI?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Response block\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Retool recommends you configure Response blocks to handle both successful and failed requests. This allows the sender to know if the workflow succeeded or if there was a problem, such as incorrect data or no results. END"}
{"prompt":"Duplicate a block\n\n###\n\n","completion":" Click **⫶** and select **Duplicate** to create a copy of an existing block. END"}
{"prompt":"Click **⫶** and select **Duplicate** to create a copy of an existing block.\n\n###\n\n","completion":" ![Duplicate a block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/d7b8298f-6e75-4991-a6d7-49f957972d5d.webp) END"}
{"prompt":"Functions\n\n###\n\n","completion":" _Functions_ are reusable blocks that run queries in a headless state. They operate outside of the control flow and do not appear on the canvas. You call Function blocks from JavaScript queries and can pass data as parameters. This reduces the need for query duplication and enables you to perform certain tasks only when necessary, not for every workflow run. END"}
{"prompt":"_Functions_ are reusable blocks that run queries in a headless state. They operate outside of the control flow and do not appear on the canvas. You call Function blocks from JavaScript queries and can pass data as parameters. This reduces the need for query duplication and enables you to perform certain tasks only when necessary, not for every workflow run.\n\n###\n\n","completion":" ![Create a function](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/25160b5e-7c5b-4986-8751-c72f45f2066a.webp) END"}
{"prompt":"![Create a function](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/25160b5e-7c5b-4986-8751-c72f45f2066a.webp)\n\n###\n\n","completion":" To create a Function block, click **+** in the **Functions** section of the left panel. You can configure optional parameters for each block that you can reference within the block itself. Each parameter must have a test value so it can perform a test run without being called. END"}
{"prompt":"To create a Function block, click **+** in the **Functions** section of the left panel. You can configure optional parameters for each block that you can reference within the block itself. Each parameter must have a test value so it can perform a test run without being called.\n\n###\n\n","completion":" You can also create Function blocks directly from a block's code editor. Type `\/` on a new line and enter the name of a resource, then press **Enter**. You can also reference an existing function in the same way by entering the name of an existing function. END"}
{"prompt":"You can also create Function blocks directly from a block's code editor. Type `\/` on a new line and enter the name of a resource, then press **Enter**. You can also reference an existing function in the same way by entering the name of an existing function.\n\n###\n\n","completion":" You call a Function block using `await` and include values for each parameter, if set. For example: END"}
{"prompt":"You call a Function block using `await` and include values for each parameter, if set. For example:\n\n###\n\n","completion":" ![Call a function](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b79d9908-e214-4945-9c69-699bfc6f00d4.webp) END"}
{"prompt":"![Call a function](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b79d9908-e214-4945-9c69-699bfc6f00d4.webp)\n\n###\n\n","completion":" The Function block returns its output back to the block from which it was called, allowing it to be used in the rest of the workflow. END"}
{"prompt":"Configure block settings\n\n###\n\n","completion":" You can configure a number of settings for blocks. The settings available depend on the type of block and resource currently in use. Click **⫶** in a block to open its settings menu. END"}
{"prompt":"You can configure a number of settings for blocks. The settings available depend on the type of block and resource currently in use. Click **⫶** in a block to open its settings menu.\n\n###\n\n","completion":" Available settings include: END"}
{"prompt":"Block notes\n\n###\n\n","completion":" You can add comments to a block that can be helpful to explain its function and leave notes for other users. Click the **Notes** button in a block and write a comment. [Markdown formatting](https:\/\/docs.retool.com\/docs\/retool-markdown-html-reference) is supported. END"}
{"prompt":"You can add comments to a block that can be helpful to explain its function and leave notes for other users. Click the **Notes** button in a block and write a comment. [Markdown formatting](https:\/\/docs.retool.com\/docs\/retool-markdown-html-reference) is supported.\n\n###\n\n","completion":" ![Write block notes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/cc2af97a-c5e2-43a9-a7f0-b68c3bd9a325.webp) END"}
{"prompt":"title: \"Deploy workflows\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to deploy changes to workflows.\"\nhidden: false\n\n###\n\n","completion":" All workflows are initially disabled by default. Workflows must be deployed and then enabled to run automatically. The [Workflow editor](https:\/\/docs.retool.com\/docs\/retool-workflows-editor) automatically saves changes to your workflow but you must also deploy changes for them to take effect. This allows you to build a new workflow, or make changes to an existing one, without disruption. END"}
{"prompt":"All workflows are initially disabled by default. Workflows must be deployed and then enabled to run automatically. The [Workflow editor](https:\/\/docs.retool.com\/docs\/retool-workflows-editor) automatically saves changes to your workflow but you must also deploy changes for them to take effect. This allows you to build a new workflow, or make changes to an existing one, without disruption.\n\n###\n\n","completion":" You can disable a workflow at any time to stop it running automatically. You can also revert to the previously deployed version to roll back changes. END"}
{"prompt":"You can disable a workflow at any time to stop it running automatically. You can also revert to the previously deployed version to roll back changes.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(50.83333333333333% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/LdgnoSSF7rBl4kbAHeaW?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Deploy and enable a workflow\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Deploy a workflow\n\n###\n\n","completion":" Retool Workflows runs the most recently deployed version of a workflow when triggered. You must deploy a workflow whenever you make changes that need to take effect. The Workflow editor displays the current deployment status in the toolbar (e.g., **Changes not deployed**). Click **Deploy** to deploy your workflow. END"}
{"prompt":"Retool Workflows runs the most recently deployed version of a workflow when triggered. You must deploy a workflow whenever you make changes that need to take effect. The Workflow editor displays the current deployment status in the toolbar (e.g., **Changes not deployed**). Click **Deploy** to deploy your workflow.\n\n###\n\n","completion":" Open the **Deploy** dropdown menu to view when the workflow was last deployed. If you want to revert the workflow to its currently deployed state, select **Revert to last deployed version**. END"}
{"prompt":"Enable or disable a workflow\n\n###\n\n","completion":" You can enable or disable a workflow with the **Enable** toggle. Only enabled workflows run automatically. Disabled workflows do not run. You can always manually run a workflow from the Workflows editor, regardless of status. END"}
{"prompt":"Source Control for workflows\n\n###\n\n","completion":" [Source Control](https:\/\/docs.retool.com\/docs\/source-control) provides Retool organizations with the option to manage apps and workflows using pull requests on remote source control management (SCM) providers, such as [GitHub](https:\/\/github.com\/). Rather than deploying a workflow, you create a pull request with the changes. Once the pull request is merged, the workflow will run automatically. END"}
{"prompt":"Considerations\n\n###\n\n","completion":" Source Control for workflows operates similarly to how it does for apps, but with some key differences. Keep in mind the following considerations when using Source Control for workflows: END"}
{"prompt":"title: \"Retool Workflows editor\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"workflows-concepts\"\nexcerpt: \"Learn more about the Workflow editor and start building apps.\"\nhidden: false\n\n###\n\n","completion":" The _Workflow editor_ is the interface you use to build workflows. It is made up of five primary areas: END"}
{"prompt":"The _Workflow editor_ is the interface you use to build workflows. It is made up of five primary areas:\n\n###\n\n","completion":" ![The Workflow editor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/5cb2f014-690f-424f-a6f1-3d4db708889d.webp) END"}
{"prompt":"Canvas\n\n###\n\n","completion":" The _canvas_ is the main area of the editor and is where you build workflows. You add [blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks) to the canvas that perform specific actions. You can move blocks around using drag-and-drop to position them anywhere on the canvas. END"}
{"prompt":"The _canvas_ is the main area of the editor and is where you build workflows. You add [blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks) to the canvas that perform specific actions. You can move blocks around using drag-and-drop to position them anywhere on the canvas.\n\n###\n\n","completion":" ![The canvas](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a324c0f4-d035-4463-a31b-343d92c43d5c.webp) END"}
{"prompt":"Pan and zoom\n\n###\n\n","completion":" The canvas has no size constraints and you can add as many blocks as you need. You can pan around the canvas by holding <span class=\"sck key\">Space<\/span> or clicking the **Pan** button in the toolbar, then click-and-drag with the cursor. END"}
{"prompt":"The canvas has no size constraints and you can add as many blocks as you need. You can pan around the canvas by holding <span class=\"sck key\">Space<\/span> or clicking the **Pan** button in the toolbar, then click-and-drag with the cursor.\n\n###\n\n","completion":" You can also zoom in and out of the canvas to show more content in the visible area. Zooming out automatically collapses any existing blocks to show only their name. You can add or click on blocks at any zoom level to expand and make changes. END"}
{"prompt":"You can also zoom in and out of the canvas to show more content in the visible area. Zooming out automatically collapses any existing blocks to show only their name. You can add or click on blocks at any zoom level to expand and make changes.\n\n###\n\n","completion":" There are multiple ways to adjust the zoom: END"}
{"prompt":"There are multiple ways to adjust the zoom:\n\n###\n\n","completion":" You can quickly return the zoom level to 100% by double-clicking on any area of the canvas or selecting **100%** from the **Zoom** controls in the toolbar. You can also double-click a block to expand it and zoom to 100%. END"}
{"prompt":"You can quickly return the zoom level to 100% by double-clicking on any area of the canvas or selecting **100%** from the **Zoom** controls in the toolbar. You can also double-click a block to expand it and zoom to 100%.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/1275efa5-c01c-43de-8e28-74e9be64c61e.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/0aae687d-6158-411f-852a-f4d1c223f361.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"Toolbar\n\n###\n\n","completion":" The _toolbar_ at the top of the editor contains various options for interacting with your workflow. END"}
{"prompt":"The _toolbar_ at the top of the editor contains various options for interacting with your workflow.\n\n###\n\n","completion":" ![Toolbar](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/1d2b93e1-7029-45e9-8a0b-b438923c9584.webp) END"}
{"prompt":"Navigation controls\n\n###\n\n","completion":" The **Select** and **Pan** controls allow you to select blocks and interact with them, or pan around the canvas to navigate freely. You can also expand or collapse all blocks in your workflow by clicking the **Expand all** and **Collapse all** buttons in the toolbar, and control the level of zoom. END"}
{"prompt":"Workflow name\n\n###\n\n","completion":" The title area contains the workflow's name. You can click this to rename it. END"}
{"prompt":"Add blocks\n\n###\n\n","completion":" Click **+** to add a block to the workflow, then select the block type. Move the cursor to an area of the canvas and click to place the new block. END"}
{"prompt":"Enable and deploy controls\n\n###\n\n","completion":" Workflows are disabled by default. You must [enable and deploy a workflow](\/docs\/retool-workflows-deployment) using these controls for it to run automatically. END"}
{"prompt":"Run\n\n###\n\n","completion":" You can manually run a workflow at any time by clicking **Run**. When you run a workflow, it displays the current [run log](#run-history-and-logs). END"}
{"prompt":"Left panel\n\n###\n\n","completion":" The _left panel_ has two modes: END"}
{"prompt":"The _left panel_ has two modes:\n\n###\n\n","completion":" ![Left panel](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9d92a682-6600-4c17-960b-43f17563a4eb.webp) END"}
{"prompt":"![Left panel](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9d92a682-6600-4c17-960b-43f17563a4eb.webp)\n\n###\n\n","completion":" You can toggle between either mode using the buttons on the left of the editor, or hide the left panel entirely. END"}
{"prompt":"Outline\n\n###\n\n","completion":" The **Outline** section displays a list of all blocks in the workflow. You can click on each block to show it in the canvas. As with blocks on the canvas, blocks in the **Outline** section include an icon that reflects their function. END"}
{"prompt":"Functions\n\n###\n\n","completion":" The **Functions** section is where you configure [Function blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#functions)—reusable blocks that can be called by other blocks. Function blocks don't appear on the canvas due to their purpose and are managed in this area of the panel. END"}
{"prompt":"Run history and logs\n\n###\n\n","completion":" The **Run History** section displays [run logs](https:\/\/docs.retool.com\/docs\/retool-workflows-error-handling-and-debugging#run-logs) for a workflow and whether they ran successfully. You can click on any entry to view the run log, should you need to debug a failed workflow. END"}
{"prompt":"The **Run History** section displays [run logs](https:\/\/docs.retool.com\/docs\/retool-workflows-error-handling-and-debugging#run-logs) for a workflow and whether they ran successfully. You can click on any entry to view the run log, should you need to debug a failed workflow.\n\n###\n\n","completion":" ![Run logs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/64c4b4db-0bf5-4d93-9971-aedfd33aba92.webp) END"}
{"prompt":"Status bar\n\n###\n\n","completion":" The _status bar_ provides access to workflow logs and environment selection. END"}
{"prompt":"The _status bar_ provides access to workflow logs and environment selection.\n\n###\n\n","completion":" The run log appears automatically whenever you run a workflow manually or select a previous run log from the **Run History** section. You can also click **Logs** to show or hide the currently selected log. END"}
{"prompt":"The run log appears automatically whenever you run a workflow manually or select a previous run log from the **Run History** section. You can also click **Logs** to show or hide the currently selected log.\n\n###\n\n","completion":" Workflows can run using data sources set up in different [environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments), such as production and staging. You can select the environment in which a workflow runs from the environment select input on the right of the status bar area. END"}
{"prompt":"Workflows can run using data sources set up in different [environments](https:\/\/docs.retool.com\/docs\/using-multiple-environments), such as production and staging. You can select the environment in which a workflow runs from the environment select input on the right of the status bar area.\n\n###\n\n","completion":" Multiple environments are available to Retool organizations on [paid plans](https:\/\/retool.com\/pricing\/) and you must configure environment settings for each resource. END"}
{"prompt":"Set user permissions\n\n###\n\n","completion":" Administrators for Retool organizations on either the [Business or Enterprise](https:\/\/retool.com\/pricing\/) plan can configure [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions) to restrict workflow access or functionality. END"}
{"prompt":"Administrators for Retool organizations on either the [Business or Enterprise](https:\/\/retool.com\/pricing\/) plan can configure [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions) to restrict workflow access or functionality.\n\n###\n\n","completion":" You configure workflow permissions in the same way as app and resource permissions. END"}
{"prompt":"You configure workflow permissions in the same way as app and resource permissions.\n\n###\n\n","completion":" ![Configure workflow permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/3a392822-a1fd-40e0-a196-c9f1fc43b0b6.webp) END"}
{"prompt":"![Configure workflow permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/3a392822-a1fd-40e0-a196-c9f1fc43b0b6.webp)\n\n###\n\n","completion":" When configured, the Workflow editor displays a warning to restricted users that describes the [access level](https:\/\/docs.retool.com\/docs\/user-permissions#managing-group-access-to-apps) they have. END"}
{"prompt":"When configured, the Workflow editor displays a warning to restricted users that describes the [access level](https:\/\/docs.retool.com\/docs\/user-permissions#managing-group-access-to-apps) they have.\n\n###\n\n","completion":" Users with **Use** access can view and run workflows only, but cannot view the block contents. END"}
{"prompt":"Users with **Use** access can view and run workflows only, but cannot view the block contents.\n\n###\n\n","completion":" ![Use access to a workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b4a4f2f6-ed2c-46f7-8b1f-98946893c74b.webp) END"}
{"prompt":"![Use access to a workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b4a4f2f6-ed2c-46f7-8b1f-98946893c74b.webp)\n\n###\n\n","completion":" Users with **Edit** access can edit workflows as long as they have access to all the resources used by the workflow. Edits include changes to the workflow and resource queries. Resources to which the user lacks access include a warning. This level of access allows users to view block contents. END"}
{"prompt":"Users with **Edit** access can edit workflows as long as they have access to all the resources used by the workflow. Edits include changes to the workflow and resource queries. Resources to which the user lacks access include a warning. This level of access allows users to view block contents.\n\n###\n\n","completion":" ![Edit access to a workflow but no access to a resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/7f2a34e8-1f7a-459e-a6f8-39b488983ae2.webp) END"}
{"prompt":"![Edit access to a workflow but no access to a resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/7f2a34e8-1f7a-459e-a6f8-39b488983ae2.webp)\n\n###\n\n","completion":" Users with **Own** access have full control over workflows. END"}
{"prompt":"Set folder permissions\n\n###\n\n","completion":" You can set permissions on workflows folders to restrict how users organize workflows. END"}
{"prompt":"You can set permissions on workflows folders to restrict how users organize workflows.\n\n###\n\n","completion":" ![Workflow folder permission example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/workflows\/0c36cfa3-f94c-40ee-8b29-00592c2d194c.png) END"}
{"prompt":"![Workflow folder permission example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/workflows\/0c36cfa3-f94c-40ee-8b29-00592c2d194c.png)\n\n###\n\n","completion":" To create workflows within a folder, users must have access to **Edit all** workflows or at least **Edit** access to the folder. END"}
{"prompt":"To create workflows within a folder, users must have access to **Edit all** workflows or at least **Edit** access to the folder.\n\n###\n\n","completion":" To move a workflow to a folder, users must have at least **Edit** access to the individual workflow _and_ at least **Edit** access to the destination folder. New workflows inherit the permission settings of the folder by default. END"}
{"prompt":"title: \"Manage and debug workflow errors\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to handle workflow errors and debug unexpected behavior.\"\nhidden: false\n\n###\n\n","completion":" As you build workflows of increasing complexity that interact with more data sources, it's important to handle errors and debug unexpected behavior effectively. You can configure [Resource query blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#resource-query) as error handlers to perform an action in the event of an error. If an error occurs, you can review its run logs to investigate and resolve the problem. END"}
{"prompt":"Workflow performance best practices\n\n###\n\n","completion":" Workflow performance issues can be difficult to replicate, especially when they involve external factors. The following best practices can help avoid problems and reduce the need to debug workflows. END"}
{"prompt":"Avoid querying large datasets\n\n###\n\n","completion":" Queries that retrieve large amounts of data impact workflow performance. The more data a workflow query requests, the longer it can take for the resource to complete the operation. END"}
{"prompt":"Queries that retrieve large amounts of data impact workflow performance. The more data a workflow query requests, the longer it can take for the resource to complete the operation.\n\n###\n\n","completion":" Query blocks have a maximum timeout of two minutes. Where possible, write queries that return only the results that the workflow needs (e.g., APIs support pagination or `WHERE` SQL query clauses). END"}
{"prompt":"Build workflows to perform specific tasks\n\n###\n\n","completion":" Workflows time out after ten minutes and have 258MB of memory available. To avoid timeouts, build separate workflows to perform specific tasks instead of a single workflow that performs them together. END"}
{"prompt":"Trigger workflows only when needed\n\n###\n\n","completion":" Workflows are [rate-limited](https:\/\/docs.retool.com\/docs\/retool-workflows-limits-billing) and have a minimum interval of one minute. Each workflow must also complete a run (whether successful or not) before it can be run again. END"}
{"prompt":"Workflows are [rate-limited](https:\/\/docs.retool.com\/docs\/retool-workflows-limits-billing) and have a minimum interval of one minute. Each workflow must also complete a run (whether successful or not) before it can be run again.\n\n###\n\n","completion":" Whether you [schedule](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#schedule) a workflow to run automatically or trigger it using a [webhook](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#webhook) event, make sure that the workflow triggers only when it should run. This also helps reduce the amount of interactions a workflow has with your data source, which can reduce operational costs. END"}
{"prompt":"Error handlers\n\n###\n\n","completion":" You can configure a [Resource query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#resource-query) to run only if an error occurs when the workflow is run. Click **⫶** and select **Use as global error handler**. Query blocks configured as error handlers work independently from other blocks in your workflow and are limited to one per workflow. They're also not connected to pass data. END"}
{"prompt":"You can configure a [Resource query block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#resource-query) to run only if an error occurs when the workflow is run. Click **⫶** and select **Use as global error handler**. Query blocks configured as error handlers work independently from other blocks in your workflow and are limited to one per workflow. They're also not connected to pass data.\n\n###\n\n","completion":" This is useful if you want to receive a notification or to perform an action only if a workflow fails. END"}
{"prompt":"This is useful if you want to receive a notification or to perform an action only if a workflow fails.\n\n###\n\n","completion":" ![Error handler block](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/09468031-a099-46b8-8c67-768aed109532.webp) END"}
{"prompt":"Run logs\n\n###\n\n","completion":" Retool logs every successful and failed run of a workflow. The **Run history** tab contains a list of recent runs that include the date and time, and their status. END"}
{"prompt":"Retool logs every successful and failed run of a workflow. The **Run history** tab contains a list of recent runs that include the date and time, and their status.\n\n###\n\n","completion":" ![Run logs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/719f6932-5ef5-432d-9771-a4c84f7ecaa1.webp) END"}
{"prompt":"![Run logs](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/719f6932-5ef5-432d-9771-a4c84f7ecaa1.webp)\n\n###\n\n","completion":" Click **Logs** in the lower left of the editor to show the Logs panel. By default, the panel displays the log for the most recent run. You can click on any recent run to display its log. END"}
{"prompt":"Click **Logs** in the lower left of the editor to show the Logs panel. By default, the panel displays the log for the most recent run. You can click on any recent run to display its log.\n\n###\n\n","completion":" Each log contains detailed information about what the workflow is doing and if each Query block successfully ran. If a workflow did not run successfully, the log includes details about the error and when it occurred. END"}
{"prompt":"Each log contains detailed information about what the workflow is doing and if each Query block successfully ran. If a workflow did not run successfully, the log includes details about the error and when it occurred.\n\n###\n\n","completion":" Run logs can help troubleshoot problems with queries, such as malformed SQL statements or invalid JavaScript. Keep in mind that queries are successful if they didn't return an error. A workflow cannot determine if its actions produced the results you expected. END"}
{"prompt":"Workflow context\n\n###\n\n","completion":" You can reference `workflowContext` anywhere in your workflow to include workflow details, such as its name or when it last ran (e.g., `{{ workflowContext.name }}`). This can be useful for distinguishing between workflows that send notifications or including details about when the workflow's actions were last completed. END"}
{"prompt":"You can reference `workflowContext` anywhere in your workflow to include workflow details, such as its name or when it last ran (e.g., `{{ workflowContext.name }}`). This can be useful for distinguishing between workflows that send notifications or including details about when the workflow's actions were last completed.\n\n###\n\n","completion":" For example, you can configure a Query block as an event handler and use `{{ workflowContext.currentRun.error }}` to log errors from the current run, whether to your own database or send it as a message (e.g., Slack notification or Twilio SMS). END"}
{"prompt":"For example, you can configure a Query block as an event handler and use `{{ workflowContext.currentRun.error }}` to log errors from the current run, whether to your own database or send it as a message (e.g., Slack notification or Twilio SMS).\n\n###\n\n","completion":" ![Report errors on the current run](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/21023ac4-be6e-492f-9f21-8dbee0b9dcfc.webp) END"}
{"prompt":"title: \"Automate Hacker News Story Alerts with Retool Workflows\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to automate Hacker News Alerts with Retool Workflows.\"\nhidden: true\n\n###\n\n","completion":" We’re incredibly excited for you to join our developer preview for [Retool Workflows](https:\/\/retool.com\/products\/workflows\/)! Workflows add a critical new pillar to the Retool platform, enabling you to create scheduled tasks and complex business logic to carry out your organization’s most critical data-heavy work. In the tutorial video below, we'll walk through every major component of the new Workflows product to build a simple workflow that searches Hacker News for articles matching a given keyword. END"}
{"prompt":"We’re incredibly excited for you to join our developer preview for [Retool Workflows](https:\/\/retool.com\/products\/workflows\/)! Workflows add a critical new pillar to the Retool platform, enabling you to create scheduled tasks and complex business logic to carry out your organization’s most critical data-heavy work. In the tutorial video below, we'll walk through every major component of the new Workflows product to build a simple workflow that searches Hacker News for articles matching a given keyword.\n\n###\n\n","completion":" If you still need access to Retool Workflows on your Retool cloud account, [please fill out this form](https:\/\/retool.typeform.com\/to\/FG3RqKiZ), and we will grant you access as soon as we can so you can follow along with the video. [The JSON export file which contains the definition of this workflow can be found here](https:\/\/gist.githubusercontent.com\/kwhinnery\/2d78c44f72700e5af40b9561b85adf50\/raw\/a47ef2a3400cbc00869f580c824f0d917d123759\/hn.json). END"}
{"prompt":"If you still need access to Retool Workflows on your Retool cloud account, [please fill out this form](https:\/\/retool.typeform.com\/to\/FG3RqKiZ), and we will grant you access as soon as we can so you can follow along with the video. [The JSON export file which contains the definition of this workflow can be found here](https:\/\/gist.githubusercontent.com\/kwhinnery\/2d78c44f72700e5af40b9561b85adf50\/raw\/a47ef2a3400cbc00869f580c824f0d917d123759\/hn.json).\n\n###\n\n","completion":" Let's get started! END"}
{"prompt":"Let's get started!\n\n###\n\n","completion":" [block:embed]\n{\n  \"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"\/\/cdn.embedly.com\/widgets\/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FC7kWqcVSN50%3Ffeature%3Doembed&display_name=YouTube&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DC7kWqcVSN50&image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FC7kWqcVSN50%2Fhqdefault.jpg&key=f2aa6fc3595946d0afc3d76cbbd25dc3&type=text%2Fhtml&schema=youtube\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"><\/iframe>\",\n  \"url\": \"https:\/\/www.youtube.com\/watch?v=C7kWqcVSN50\",\n  \"title\": \"Developer Preview Walkthrough\",\n  \"favicon\": \"https:\/\/www.google.com\/favicon.ico\",\n  \"image\": \"https:\/\/i.ytimg.com\/vi\/C7kWqcVSN50\/hqdefault.jpg\",\n  \"provider\": \"youtube.com\",\n  \"href\": \"https:\/\/www.youtube.com\/watch?v=C7kWqcVSN50\"\n}\n[\/block] END"}
{"prompt":"title: \"Configure workflow JavaScript libraries\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to use JavaScript libraries in workflows.\"\nhidden: false\n\n###\n\n","completion":" Retool includes support for a selection of popular JavaScript libraries which you can use in a workflow. You can browse and add libraries, configure their imports, and use them in your workflow. END"}
{"prompt":"Retool includes support for a selection of popular JavaScript libraries which you can use in a workflow. You can browse and add libraries, configure their imports, and use them in your workflow.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: calc(50.83333333333333% + 41px); height: 0;\\\"><iframe src=\\\"https:\/\/demo.arcade.software\/f8YtQ6kg3uIfGdZCwfhn?embed\\\" frameborder=\\\"0\\\" loading=\\\"lazy\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;color-scheme: light;\\\" title=\\\"Workflow libraries\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"Manage libraries\n\n###\n\n","completion":" Navigate to the **Libraries** tab to manage JavaScript libraries. This tab lists all currently enabled libraries and their version. Select a library to view more information, configure imports, or view its documentation. END"}
{"prompt":"Add a library\n\n###\n\n","completion":" Retool enables a selection of libraries by default, such as [numbro](https:\/\/numbrojs.com\/) and [lodash](https:\/\/lodash.com\/). Click the **Add** button to browse all available libraries. You can search the list of libraries and enable them by clicking the checkbox. END"}
{"prompt":"Remove a library\n\n###\n\n","completion":" To remove a library from your workflow, click the **•••** button for the library and select **Delete**. Before removing a library, ensure it is not in use anywhere in your workflow to prevent run errors. END"}
{"prompt":"Configure library imports\n\n###\n\n","completion":" Retool automatically configures the necessary imports for JavaScript libraries. You can edit this configuration if you want to use destructured imports or change variables. END"}
{"prompt":"Use libraries in a workflow\n\n###\n\n","completion":" You can reference libraries using [JavaScript Code blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#code) or as inline JavaScript in other blocks using `{{ }}`. You can also use `require()` to include libraries directly within JavaScript Code blocks. END"}
{"prompt":"You can reference libraries using [JavaScript Code blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#code) or as inline JavaScript in other blocks using `{{ }}`. You can also use `require()` to include libraries directly within JavaScript Code blocks.\n\n###\n\n","completion":" For example, you could use [marked](https:\/\/marked.js.org\/) to convert Markdown into HTML. This can be useful to generate reports and send them as HTML-formatted rich emails. END"}
{"prompt":"For example, you could use [marked](https:\/\/marked.js.org\/) to convert Markdown into HTML. This can be useful to generate reports and send them as HTML-formatted rich emails.\n\n###\n\n","completion":" ![Use a library in a workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b5cbe3d4-5de8-4f34-aea4-b6b4bab89da0.webp) END"}
{"prompt":"title: \"Workflows usage and billing\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"workflows-concepts\"\nexcerpt: \"Learn more about workflow usage and rate limits, and how billing is calculated.\"\nhidden: false\n\n###\n\n","completion":" Retool applies some limits to workflows to ensure they remain performant and prevent runaway errors. The billable unit for workflows is _data throughput_. Retool calculates the total data throughput for your Retool organization and charges this on a monthly basis. END"}
{"prompt":"Usage limits\n\n###\n\n","completion":" Each workflow has timeout, memory, and rate limits. Any workflow that exceeds these limits can fail and result in partial completion. Avoid using a single workflow to perform unrelated actions when separate workflows would work instead. END"}
{"prompt":"Timeouts\n\n###\n\n","completion":" [Query blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks) have a maximum timeout of two minutes, and entire workflows time out after ten minutes in total. END"}
{"prompt":"Resources\n\n###\n\n","completion":" The workflows executor can hold up to 258MB in memory. The more data a workflow query requests, the longer it can take for the resource to complete the operation. Where possible, write queries that return only the results that the workflow needs (e.g., use [pagination in APIs](https:\/\/docs.retool.com\/docs\/server-side-pagination) or include `WHERE` clauses in SQL queries). END"}
{"prompt":"Rate limits\n\n###\n\n","completion":" The rate limit for workflows depends on whether a workflow is [triggered](https:\/\/docs.retool.com\/docs\/retool-workflows-error-handling-and-debugging#trigger-workflows-only-when-needed) using a schedule or in response to webhook events. To reduce the amount of interactions workflows have with your data source and reduce operational costs, make sure your workflows are triggered only when needed. END"}
{"prompt":"Schedule\n\n###\n\n","completion":" Workflows support a minimum interval of one minute. Each workflow must complete its run (whether successful or not) before another run can start. For example, a workflow that takes two minutes to complete can only be triggered every two minutes. END"}
{"prompt":"Webhooks\n\n###\n\n","completion":" Workflows support up to 200 requests every 10 seconds. If this limit is exceeded, subsequent runs may not execute. END"}
{"prompt":"Workflows support up to 200 requests every 10 seconds. If this limit is exceeded, subsequent runs may not execute.\n\n###\n\n","completion":" Webhook-triggered workflows also support concurrent execution, allowing up to 50 runs at the same time. If a workflow reaches this concurrency limit, one of the runs must complete (whether successful or not) before another can start. END"}
{"prompt":"Billing\n\n###\n\n","completion":" Data throughput is the total volume of inputs and outputs from a single workflow—how much data the workflow reads and writes. For example, if a workflow reads 50 MB from a resource and then writes 5 MB to the resource, the total throughput for that run would be 55 MB. END"}
{"prompt":"Data throughput is the total volume of inputs and outputs from a single workflow—how much data the workflow reads and writes. For example, if a workflow reads 50 MB from a resource and then writes 5 MB to the resource, the total throughput for that run would be 55 MB.\n\n###\n\n","completion":" [All Retool plans](https:\/\/retool.com\/pricing) include 1 GB per organization per month of data throughput at no additional cost. Depending on your plan, there are different limits on the amount of data you can automate in workflows beyond the included 1 GB limit. END"}
{"prompt":"Free plans\n\n###\n\n","completion":" Organizations on Free plans are limited to 1 GB of workflows data per month. Retool notifies your organization's creator when you reach 80% of your data limit, and again when you reach your full data limit. Workflows pause after reaching this limit. Workflows resume and data usage resets at the start of the next billing cycle, or if you upgrade to a paid plan. END"}
{"prompt":"Paid plans and overages\n\n###\n\n","completion":" For Team and Business plans, workflows usage beyond the included 1 GB per month is charged based on the amount of additional data used. View pricing for overages in **Settings** > **Billing**. Retool notifies your organization's creator when you reach 80% of your data limit, and again when you reach your full data limit. Usage scales automatically, and you do not need to make any manual changes to keep enabled workflows running when overages start. Usage resets at the start of your billing cycle. END"}
{"prompt":"For Team and Business plans, workflows usage beyond the included 1 GB per month is charged based on the amount of additional data used. View pricing for overages in **Settings** > **Billing**. Retool notifies your organization's creator when you reach 80% of your data limit, and again when you reach your full data limit. Usage scales automatically, and you do not need to make any manual changes to keep enabled workflows running when overages start. Usage resets at the start of your billing cycle.\n\n###\n\n","completion":" For Enterprise pricing, [reach out to our sales team](https:\/\/retool.com\/demo\/). END"}
{"prompt":"Monitoring usage\n\n###\n\n","completion":" Data throughput limits are based on your billing cycle. At the top of the **Workflows** page, you can monitor the throughput used, total workflow runs, and active workflows across your current usage period. END"}
{"prompt":"Data throughput limits are based on your billing cycle. At the top of the **Workflows** page, you can monitor the throughput used, total workflow runs, and active workflows across your current usage period.\n\n###\n\n","completion":" ![Workflows usage example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/workflows\/1a06e0f5-fcb7-4338-be1e-7f7523c8acf4.png) END"}
{"prompt":"![Workflows usage example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/workflows\/1a06e0f5-fcb7-4338-be1e-7f7523c8acf4.png)\n\n###\n\n","completion":" You can view the data consumed for a workflow in the **Run History** tab of the Workflows editor. END"}
{"prompt":"You can view the data consumed for a workflow in the **Run History** tab of the Workflows editor.\n\n###\n\n","completion":" ![Workflows Run History tab](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/workflows\/ea88eca3-e799-4879-91ce-5a911dce729d.png) END"}
{"prompt":"title: \"Retool Workflows quickstart\"\ncategorySlug: \"retool-workflows\"\nexcerpt: \"Learn how to build your first workflow in minutes.\"\nhidden: false\n\n###\n\n","completion":" [Retool Workflows](https:\/\/docs.retool.com\/docs\/retool-workflows) enables you to build, schedule, and monitor jobs, alerts, and <<glossary:ETL>> tasks. You can automate processes without the need for user interaction and take action based on conditions. END"}
{"prompt":"[Retool Workflows](https:\/\/docs.retool.com\/docs\/retool-workflows) enables you to build, schedule, and monitor jobs, alerts, and <<glossary:ETL>> tasks. You can automate processes without the need for user interaction and take action based on conditions.\n\n###\n\n","completion":" This guide explains how to automate an ETL task using Retool Workflows and sample subscription data. Once complete, this workflow sends a weekly message with the number of subscriptions due to expire. If there aren't any expiring soon, it sends a different message. END"}
{"prompt":"This guide explains how to automate an ETL task using Retool Workflows and sample subscription data. Once complete, this workflow sends a weekly message with the number of subscriptions due to expire. If there aren't any expiring soon, it sends a different message.\n\n###\n\n","completion":" ![Retool Workflows Subscription Bot](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/37403904-b8f9-4378-909b-ac0fdaa3e753.webp) END"}
{"prompt":"1. Generate a test API with sample data\n\n###\n\n","completion":" You can connect to almost any data source and make it available as a <<glossary:resource>> for your apps. Retool provides built-in [integrations](https:\/\/docs.retool.com\/docs\/integrations) for you to automatically connect different types of data sources with minimal configuration. END"}
{"prompt":"You can connect to almost any data source and make it available as a <<glossary:resource>> for your apps. Retool provides built-in [integrations](https:\/\/docs.retool.com\/docs\/integrations) for you to automatically connect different types of data sources with minimal configuration.\n\n###\n\n","completion":" Retool also includes a **RESTQuery** resource that enables you to interact with REST APIs on a per-app or per-workflow basis. This allows you to interact with APIs without needing to first create a resource for them. END"}
{"prompt":"Retool also includes a **RESTQuery** resource that enables you to interact with REST APIs on a per-app or per-workflow basis. This allows you to interact with APIs without needing to first create a resource for them.\n\n###\n\n","completion":" This guide uses a test API with sample data that was created using Retool's [REST API generator](https:\/\/retool.com\/api-generator\/) app. END"}
{"prompt":"This guide uses a test API with sample data that was created using Retool's [REST API generator](https:\/\/retool.com\/api-generator\/) app.\n\n###\n\n","completion":" Use the embedded app below to create your own test API with sample data to try out Retool Workflows without connecting any data sources of your own. Sample data is automatically populated and you only need to specify a date range for the `expire` column. Select a date range from today to a future date (e.g., 30 days). END"}
{"prompt":"Use the embedded app below to create your own test API with sample data to try out Retool Workflows without connecting any data sources of your own. Sample data is automatically populated and you only need to specify a date range for the `expire` column. Select a date range from today to a future date (e.g., 30 days).\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/samples.tryretool.com\/embedded\/public\/4f6e4c49-a4b1-47ed-a8b0-455c11e5be7d?&column_names=[%22company%22,%22plan%22,%22contact%22,%22expires%22]&column_data=[[%22People%22,%22Company%20Name%22],[%22People%22,%22Plan%22],[%22People%22,%22Email%20Address%22],[%22Dates%22]]\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/samples.tryretool.com\/embedded\/public\/4f6e4c49-a4b1-47ed-a8b0-455c11e5be7d?&column_names=[%22company%22,%22plan%22,%22contact%22,%22expires%22]&column_data=[[%22People%22,%22Company%20Name%22],[%22People%22,%22Plan%22],[%22People%22,%22Email%20Address%22],[%22Dates%22]]\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Click **Generate API** to instantly generate a test API and receive its URL. Make a note of the Endpoint URL as you will use this in the workflow. END"}
{"prompt":"2. Create a new workflow\n\n###\n\n","completion":" Sign in to your Retool organization, select the **Workflows** tab in the navigation bar, then click **Create new > Workflow**. END"}
{"prompt":"Sign in to your Retool organization, select the **Workflows** tab in the navigation bar, then click **Create new > Workflow**.\n\n###\n\n","completion":" ![Create a new workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9bffef71-4628-4016-b743-b3f18a5cc64b.webp) END"}
{"prompt":"![Create a new workflow](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/9bffef71-4628-4016-b743-b3f18a5cc64b.webp)\n\n###\n\n","completion":" Workflows are comprised of [blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks) that perform specific actions, such as interacting with data or performing custom logic. You connect blocks together to define their _control flow_, which represents the order of operation in which they run. END"}
{"prompt":"Workflows are comprised of [blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks) that perform specific actions, such as interacting with data or performing custom logic. You connect blocks together to define their _control flow_, which represents the order of operation in which they run.\n\n###\n\n","completion":" The workflow initially contains two blocks: END"}
{"prompt":"The workflow initially contains two blocks:\n\n###\n\n","completion":" A workflow's name is initially set using the name of the current user and the creation date. Click the name of this workflow in the title bar and set it to `Subscription Bot`. END"}
{"prompt":"3. Get subscriptions data\n\n###\n\n","completion":" Select the **query1** Query block and rename it to `getSubscriptions` by clicking the name in the block's title bar. Change the **Resource** to **RESTQuery**, select the **GET** action type, and provide your test API's URL. END"}
{"prompt":"Select the **query1** Query block and rename it to `getSubscriptions` by clicking the name in the block's title bar. Change the **Resource** to **RESTQuery**, select the **GET** action type, and provide your test API's URL.\n\n###\n\n","completion":" ![Get subscriptions data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/6395e286-d221-4989-baf5-742264632b15.webp) END"}
{"prompt":"![Get subscriptions data](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/6395e286-d221-4989-baf5-742264632b15.webp)\n\n###\n\n","completion":" Click **▸** to run the query and view the results. You can click the **Table** switch to view the API response in a table. END"}
{"prompt":"4. Filter expiring subscriptions\n\n###\n\n","completion":" Next, the workflow must filter the subscriptions data to exclude any that aren't due to expire in the next 24 hours. You do this with the [Filter block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#filter) and return only subscriptions that meet this condition. END"}
{"prompt":"Next, the workflow must filter the subscriptions data to exclude any that aren't due to expire in the next 24 hours. You do this with the [Filter block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#filter) and return only subscriptions that meet this condition.\n\n###\n\n","completion":" There are two methods for [adding and connecting blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#add-and-connect-blocks): END"}
{"prompt":"There are two methods for [adding and connecting blocks](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#add-and-connect-blocks):\n\n###\n\n","completion":" Whichever method you use, add a Filter block and set its name to `getExpiringSubscriptions`. A line appears to show the connection of one block to another. END"}
{"prompt":"Whichever method you use, add a Filter block and set its name to `getExpiringSubscriptions`. A line appears to show the connection of one block to another.\n\n###\n\n","completion":" Retool includes a number of [third-party JavaScript libraries](https:\/\/docs.retool.com\/docs\/scripting-retool#libraries). You can use [Moment.js](https:\/\/momentjs.com\/) to work with date values in any Retool app or workflow. Set the **Filter Expression** to the following JavaScript statement and return only subscriptions that expire within the next day. END"}
{"prompt":"Retool includes a number of [third-party JavaScript libraries](https:\/\/docs.retool.com\/docs\/scripting-retool#libraries). You can use [Moment.js](https:\/\/momentjs.com\/) to work with date values in any Retool app or workflow. Set the **Filter Expression** to the following JavaScript statement and return only subscriptions that expire within the next day.\n\n###\n\n","completion":" ![Filter expiring subscriptions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/ab4076ab-e5c5-49b2-a794-54bda35f2dc9.webp) END"}
{"prompt":"![Filter expiring subscriptions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/ab4076ab-e5c5-49b2-a794-54bda35f2dc9.webp)\n\n###\n\n","completion":" The Filter block loops through each item and evaluates the `expires` date. If this is within the next 24 hours, the condition evaluates as `true` and the item is returned by the Filter block. END"}
{"prompt":"The Filter block loops through each item and evaluates the `expires` date. If this is within the next 24 hours, the condition evaluates as `true` and the item is returned by the Filter block.\n\n###\n\n","completion":" Finally, set the block's name to `getExpiringSubscriptions`. END"}
{"prompt":"5. Perform conditional actions\n\n###\n\n","completion":" This workflow only needs to send a message if there are subscriptions nearing expiration. If there are no subscriptions expiring soon, it should perform a different action. END"}
{"prompt":"This workflow only needs to send a message if there are subscriptions nearing expiration. If there are no subscriptions expiring soon, it should perform a different action.\n\n###\n\n","completion":" Instead of writing an [if...else](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/if...else) statement in JavaScript, use the [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks\/#branch-blocks) block to define conditions. This is useful for breaking out complex JavaScript logic into more manageable blocks of code. END"}
{"prompt":"Instead of writing an [if...else](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Statements\/if...else) statement in JavaScript, use the [Branch](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks\/#branch-blocks) block to define conditions. This is useful for breaking out complex JavaScript logic into more manageable blocks of code.\n\n###\n\n","completion":" Add a Branch block that's connected from **getExpiringSubscriptions**. Each part of the statement has its own connecting point and only runs if the evaluated condition is a <<glossary:truthy value>>. END"}
{"prompt":"Add a Branch block that's connected from **getExpiringSubscriptions**. Each part of the statement has its own connecting point and only runs if the evaluated condition is a <<glossary:truthy value>>.\n\n###\n\n","completion":" Set the **If** statement's condition to `getExpiringSubscriptions.data.length > 0` so that it runs only if there are any expiring subscriptions. END"}
{"prompt":"Set the **If** statement's condition to `getExpiringSubscriptions.data.length > 0` so that it runs only if there are any expiring subscriptions.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/2ddb7043-4e1f-4ffc-a101-fe7f7af3c2b0.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/bb05d219-780f-4bba-8971-80be9d0a9194.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"6. Format the message for expiring subscriptions\n\n###\n\n","completion":" The message sent by this workflow should include the number of subscriptions expiring this week. You can write JavaScript to transform this data and count the subscriptions, then return a formatted message that is ready to send. END"}
{"prompt":"The message sent by this workflow should include the number of subscriptions expiring this week. You can write JavaScript to transform this data and count the subscriptions, then return a formatted message that is ready to send.\n\n###\n\n","completion":" Add a Query block that's connected from the **If** statement in the Branch block, then set its name to `formatExpirationsMessage`. Select **Run JS Code** in the dropdown menu of resources, and include the following JavaScript: END"}
{"prompt":"Add a Query block that's connected from the **If** statement in the Branch block, then set its name to `formatExpirationsMessage`. Select **Run JS Code** in the dropdown menu of resources, and include the following JavaScript:\n\n###\n\n","completion":" Click **▸** to run the query. This JavaScript code uses [workflowContext](https:\/\/docs.retool.com\/docs\/retool-workflows-error-handling-and-debugging#workflow-context) to include details of the current workflow. You can reference other information about a workflow using this property, such as `workflowContext.lastRun`. END"}
{"prompt":"Click **▸** to run the query. This JavaScript code uses [workflowContext](https:\/\/docs.retool.com\/docs\/retool-workflows-error-handling-and-debugging#workflow-context) to include details of the current workflow. You can reference other information about a workflow using this property, such as `workflowContext.lastRun`.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/0a8d1a42-699a-4fe1-b567-d9b90dfc714f.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/de1f6ab7-31ce-4d63-80a8-7ca1ec70a80f.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/0a8d1a42-699a-4fe1-b567-d9b90dfc714f.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/de1f6ab7-31ce-4d63-80a8-7ca1ec70a80f.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" This results in the following message: END"}
{"prompt":"7. Format the message for no expiring subscriptions\n\n###\n\n","completion":" If there are no expiring subscriptions, the workflow sends a different message. Click **Add Branch** to the Branch block to create an **Else** statement. Next, add a Query block that's connected from the **Else** statement in the Branch block, then set its name to `formatNoExpirationsMessage`. END"}
{"prompt":"If there are no expiring subscriptions, the workflow sends a different message. Click **Add Branch** to the Branch block to create an **Else** statement. Next, add a Query block that's connected from the **Else** statement in the Branch block, then set its name to `formatNoExpirationsMessage`.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/490e71c4-4694-4752-81e5-1d5abbc6e9ce.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a3115c48-a405-47d1-899c-a533aa00d70b.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/490e71c4-4694-4752-81e5-1d5abbc6e9ce.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a3115c48-a405-47d1-899c-a533aa00d70b.mp4\\\">\\n<\/video>\"\n}\n[\/block]\n\n###\n\n","completion":" Select **Run JS Code** in the dropdown menu of resources, and include the following JavaScript: END"}
{"prompt":"Select **Run JS Code** in the dropdown menu of resources, and include the following JavaScript:\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<video width=\\\"100%\\\" poster=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/e5c78217-4270-465d-87ad-e0ba22f395d0.webp\\\" controls=\\\"\\\" preload=\\\"metadata\\\">\\n <source src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/7a8f00dd-57f6-4654-8da3-5c45f0c5fecc.mp4\\\">\\n<\/video>\"\n}\n[\/block] END"}
{"prompt":"8. Send the message\n\n###\n\n","completion":" Both `formatExpirationsMessage` and `formatNoExpirationsMessage` blocks output a formatted message. You can send the message using resources like [SMTP](https:\/\/docs.retool.com\/docs\/smtp-integration) or [SendGrid](https:\/\/docs.retool.com\/docs\/sendgrid-integration) for email, [Twilio](https:\/\/docs.retool.com\/docs\/twilio-integration) for SMS, or [Slack](https:\/\/docs.retool.com\/docs\/slack-integration) for team messaging. END"}
{"prompt":"Both `formatExpirationsMessage` and `formatNoExpirationsMessage` blocks output a formatted message. You can send the message using resources like [SMTP](https:\/\/docs.retool.com\/docs\/smtp-integration) or [SendGrid](https:\/\/docs.retool.com\/docs\/sendgrid-integration) for email, [Twilio](https:\/\/docs.retool.com\/docs\/twilio-integration) for SMS, or [Slack](https:\/\/docs.retool.com\/docs\/slack-integration) for team messaging.\n\n###\n\n","completion":" This workflow sends either message using [Slack](https:\/\/docs.retool.com\/docs\/slack-integration). Instead of configuring multiple Query blocks or writing conditional JavaScript, you can create [Functions](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#functions) that operate as reusable blocks which can be called within other blocks. END"}
{"prompt":"This workflow sends either message using [Slack](https:\/\/docs.retool.com\/docs\/slack-integration). Instead of configuring multiple Query blocks or writing conditional JavaScript, you can create [Functions](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#functions) that operate as reusable blocks which can be called within other blocks.\n\n###\n\n","completion":" Functions use parameters to pass data when called from a block. Both of the Query blocks that format a message can pass the formatted message to the function. END"}
{"prompt":"Functions use parameters to pass data when called from a block. Both of the Query blocks that format a message can pass the formatted message to the function.\n\n###\n\n","completion":" ![Create a function](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/d9930f1b-7ff3-4a5a-9d38-497e6d67be70.webp) END"}
{"prompt":"![Create a function](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/d9930f1b-7ff3-4a5a-9d38-497e6d67be70.webp)\n\n###\n\n","completion":" Functions use the [await](https:\/\/developer.mozilla.org\/en-US\/docs\/web\/javascript\/reference\/operators\/await) operator and there is no data that the query needs to return. After creating a function, replace `return message;` in both **formatExpirationsMessage** and **formatNoExpirationsMessage** blocks with `await sendMessage(message);`. END"}
{"prompt":"Functions use the [await](https:\/\/developer.mozilla.org\/en-US\/docs\/web\/javascript\/reference\/operators\/await) operator and there is no data that the query needs to return. After creating a function, replace `return message;` in both **formatExpirationsMessage** and **formatNoExpirationsMessage** blocks with `await sendMessage(message);`.\n\n###\n\n","completion":" ![Update queries to call the function](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/b79d9908-e214-4945-9c69-699bfc6f00d4.webp) END"}
{"prompt":"9. Configure a schedule\n\n###\n\n","completion":" With the workflow set up, configure a weekly [schedule](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#schedule) that triggers it automatically: END"}
{"prompt":"With the workflow set up, configure a weekly [schedule](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#schedule) that triggers it automatically:\n\n###\n\n","completion":" ![Configure the schedule](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a467e89d-380e-48f9-a0ea-09446fdef36b.webp) END"}
{"prompt":"10. Test and enable the workflow\n\n###\n\n","completion":" You can manually run the workflow to check it performs as expected by clicking the **Run** button in the toolbar. Workflows run manually display the current [run log](https:\/\/docs.retool.com\/docs\/retool-workflows-error-handling-and-debugging#run-logs) at the bottom of the screen that updates in real time. END"}
{"prompt":"You can manually run the workflow to check it performs as expected by clicking the **Run** button in the toolbar. Workflows run manually display the current [run log](https:\/\/docs.retool.com\/docs\/retool-workflows-error-handling-and-debugging#run-logs) at the bottom of the screen that updates in real time.\n\n###\n\n","completion":" Workflows do not run automatically until you [deploy and enable](https:\/\/docs.retool.com\/docs\/retool-workflows-triggers#deploy-workflows) them. Click **Deploy** in the toolbar to deploy the latest changes to your workflow, then click **Run** to test it out. If the workflow performs as expected, toggle the **Enable** setting in the toolbar so it can run automatically on a schedule. END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" At this point, you've built a workflow that automatically retrieves a list of subscriptions and notifies you each week of any that are due to expire. END"}
{"prompt":"At this point, you've built a workflow that automatically retrieves a list of subscriptions and notifies you each week of any that are due to expire.\n\n###\n\n","completion":" A lot of Retool's value comes in the combination of low and no-code solutions with writing custom queries and JavaScript. Workflows can automate many tasks that involve your data sources without the need for user interaction. END"}
{"prompt":"title: \"Configure workflow triggers\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to configure workflows to run automatically.\"\nhidden: false\n\n###\n\n","completion":" You can automate workflows using a custom [schedule](#schedule) or in response to [webhook events](#webhook). This enables you to build workflows that automatically perform actions on a regular basis or whenever a certain event occurs with an external service that supports webhooks. END"}
{"prompt":"You can automate workflows using a custom [schedule](#schedule) or in response to [webhook events](#webhook). This enables you to build workflows that automatically perform actions on a regular basis or whenever a certain event occurs with an external service that supports webhooks.\n\n###\n\n","completion":" Every workflow contains a [Start block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#start-block) that contains **Trigger** settings for you to configure. Whenever these trigger conditions are met, the Start block triggers the workflow to run automatically. END"}
{"prompt":"Every workflow contains a [Start block](https:\/\/docs.retool.com\/docs\/retool-workflows-blocks#start-block) that contains **Trigger** settings for you to configure. Whenever these trigger conditions are met, the Start block triggers the workflow to run automatically.\n\n###\n\n","completion":" Workflows are not triggered automatically by default. After verifying that a workflow runs as expected, toggle **Enable**. END"}
{"prompt":"Trigger workflows using a schedule\n\n###\n\n","completion":" Select the **Schedule** trigger to configure a workflow to run periodically. You can use **Interval** mode to specify the frequency using a set of options or **Cron** mode to set a schedule with more granularity using [cron syntax](https:\/\/en.wikipedia.org\/wiki\/Cron). END"}
{"prompt":"Select the **Schedule** trigger to configure a workflow to run periodically. You can use **Interval** mode to specify the frequency using a set of options or **Cron** mode to set a schedule with more granularity using [cron syntax](https:\/\/en.wikipedia.org\/wiki\/Cron).\n\n###\n\n","completion":" For either mode, you also specify a timezone so that the workflow schedule runs based on local time. END"}
{"prompt":"Interval\n\n###\n\n","completion":" You can configure a schedule that triggers every `n` minutes, hours, days, weeks, or months. END"}
{"prompt":"You can configure a schedule that triggers every `n` minutes, hours, days, weeks, or months.\n\n###\n\n","completion":" ![Interval schedule](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/a467e89d-380e-48f9-a0ea-09446fdef36b.webp) END"}
{"prompt":"Cron\n\n###\n\n","completion":" Retool Workflows supports [cron syntax](https:\/\/en.wikipedia.org\/wiki\/Cron) when configuring a schedule. The block displays a human-readable version of the values you provide. You can also hover the cursor over the label for each input to display a tooltip with syntax reference. END"}
{"prompt":"Retool Workflows supports [cron syntax](https:\/\/en.wikipedia.org\/wiki\/Cron) when configuring a schedule. The block displays a human-readable version of the values you provide. You can also hover the cursor over the label for each input to display a tooltip with syntax reference.\n\n###\n\n","completion":" Cron syntax enables you to define a schedule with more granularity. For example, you can schedule a workflow to trigger at 9.30am every Monday, Wednesday, and Friday, but only between January and September: END"}
{"prompt":"Cron syntax enables you to define a schedule with more granularity. For example, you can schedule a workflow to trigger at 9.30am every Monday, Wednesday, and Friday, but only between January and September:\n\n###\n\n","completion":" ![Cron schedule](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/924d6a41-934d-4be5-a639-5ce1c74486fe.webp) END"}
{"prompt":"![Cron schedule](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/924d6a41-934d-4be5-a639-5ce1c74486fe.webp)\n\n###\n\n","completion":" If you aren't sure how to define the schedule you want, you can [review more examples](https:\/\/crontab.guru\/examples.html) to get a better idea. END"}
{"prompt":"Trigger workflows with webhooks\n\n###\n\n","completion":" Select the **Webhook** trigger to configure a workflow to run when it receives a webhook event. This trigger is useful if you need a workflow to run in response to a specific webhook event, such as a service monitoring alert or when a payment is received. END"}
{"prompt":"Workflow endpoint\n\n###\n\n","completion":" Every workflow has a unique webhook endpoint URL for receiving events. Use this URL when configuring webhook notifications from other services (e.g., [Datadog](https:\/\/docs.datadoghq.com\/integrations\/webhooks\/) or [Stripe](https:\/\/stripe.com\/docs\/webhooks)). Workflows can read data from a webhook event's JSON payload (e.g., error message or confirmation number) and make it available to your workflow. You can then use these parameters anywhere in your workflows with the `startTrigger` object. END"}
{"prompt":"Every workflow has a unique webhook endpoint URL for receiving events. Use this URL when configuring webhook notifications from other services (e.g., [Datadog](https:\/\/docs.datadoghq.com\/integrations\/webhooks\/) or [Stripe](https:\/\/stripe.com\/docs\/webhooks)). Workflows can read data from a webhook event's JSON payload (e.g., error message or confirmation number) and make it available to your workflow. You can then use these parameters anywhere in your workflows with the `startTrigger` object.\n\n###\n\n","completion":" Copy the **Example cURL** to manually invoke the webhook trigger as you build and test your workflow. This includes the endpoint URL to use. You can optionally provide an example JSON payload to use as you build your workflow. END"}
{"prompt":"Copy the **Example cURL** to manually invoke the webhook trigger as you build and test your workflow. This includes the endpoint URL to use. You can optionally provide an example JSON payload to use as you build your workflow.\n\n###\n\n","completion":" ![Webhook trigger](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/retool-workflows\/fb8e918b-b356-45bf-86f0-9d7d7a138f9a.webp) END"}
{"prompt":"Webhook responses\n\n###\n\n","completion":" You can use a [Response block](\/docs\/retool-workflows-blocks#response) to configure custom responses to webhooks. This is useful if you're programmatically triggering webhooks and enables you to receive data processed by workflows. END"}
{"prompt":"Trigger workflows in Retool apps\n\n###\n\n","completion":" You can trigger workflows from a Retool app using a query configured with the **RESTQuery** resource. The Response block makes it possible for Retool apps to also receive data back. END"}
{"prompt":"You can trigger workflows from a Retool app using a query configured with the **RESTQuery** resource. The Response block makes it possible for Retool apps to also receive data back.\n\n###\n\n","completion":" To trigger a workflow using a Retool app: END"}
{"prompt":"To trigger a workflow using a Retool app:\n\n###\n\n","completion":" You can pass data to the workflow by setting the query body to **JSON** and including relevant values. The Response block returns data that is available at `{{ query.data }}`. END"}
{"prompt":"title: \"Retool Workflows overview\"\ncategorySlug: \"retool-workflows\"\nexcerpt: \"Build, schedule, and monitor your jobs, alerts, and ETL tasks.\"\nhidden: false\n\n###\n\n","completion":" [Retool Workflows](https:\/\/retool.com\/products\/workflows) enables you to build complex automations that interact with your data sources. A workflow chains together pre-built blocks of SQL and JavaScript that can query and transform data, perform API requests, and run additional logic. END"}
{"prompt":"Get started\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n \\n <p>\\n Watch a video, follow the quickstart to build your first\\n workflow, or explore use-case guides.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\" style=\\\"--aspect-ratio: 16\/9;\\\">\\n<iframe width=\\\"560\\\" height=\\\"315\\\" src=\\\"https:\/\/www.youtube.com\/embed\/kjJOo_236jQ\\\" title=\\\"YouTube video player\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\" allowfullscreen=\\\"\\\"><\/iframe>  <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n    <li>\\n <a\\n href=\\\"retool-workflows-quickstart\\\"\\n >\\n <div class=\\\"name\\\">Quickstart<\/div>\\n <div class=\\\"description\\\">\\nBuild your first workflow in just a few minutes.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"automate-etl-tasks-with-retool-workflows\\\"\\n >\\n <div class=\\\"name\\\">ETL tasks<\/div>\\n <div class=\\\"description\\\">Retrieve account and event data from Salesforce and Google Sheets, transform the results using JavaScript, and save to a PostgreSQL database.\\n <\/div>\\n <\/a>\\n <\/li>\\n   <li>\\n <a\\n href=\\\"automate-metrics-reporting-with-retool-workflows\\\"\\n >\\n <div class=\\\"name\\\">Metrics reporting<\/div>\\n <div class=\\\"description\\\">\\n Retrieve sales goal and target data from Salesforce and PostgreSQL, transform the data into a report using JavaScript, and send as an email report.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"automate-incident-notifications-with-retool-workflows\\\"\\n style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Incident alert<\/div>\\n <div class=\\\"description\\\">\\nLog incidents in Linear and PagerDuty, assign them to on-call engineers, and notify account managers on Slack.<\/div>\\n <\/a>\\n <\/li>\\n\\n <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"Assemble logic blocks\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\n Chain together pre-built blocks to interact with data sources or perform conditional logic. \\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/9d2408ae-efa7-4ff8-a1d9-5f838294d3c3.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing three-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"retool-workflows-editor\\\"\\n >\\n <div class=\\\"name\\\">Workflow editor<\/div>\\n <div class=\\\"description\\\">\\n Visually build workflows using a drag-and-drop interface.\\n <\/div>\\n <\/a>\\n <\/li>\\n       <li>\\n <a\\n href=\\\"retool-workflows-blocks\\\"\\n >\\n <div class=\\\"name\\\">Blocks<\/div>\\n <div class=\\\"description\\\">\\n Query data, execute JavaScript and Python code, interact with ChatGPT, and more.\\n <\/div>\\n <\/a>\\n <\/li>\\n          <li>\\n <a\\n href=\\\"retool-workflows-libraries\\\"\\n >\\n <div class=\\\"name\\\">Libraries<\/div>\\n <div class=\\\"description\\\">\\n Use popular JavaScript libraries to extend workflow functionality.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"Interact with data\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n  <div class=\\\"get-started-description\\\">\\n    <p>\\n      Write SQL queries and make API requests to interact with data sources. Execute custom JavaScript and Python code to transform data or extend functionality further.\\n    <\/p>\\n  <\/div>\\n  <div class=\\\"get-started-image\\\">\\n    <img\\n      src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/53379089-67f5-4850-b3a8-1ce473b233a3.webp\\\"\\n    \/>\\n  <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n  <ul class=\\\"ctas\\\">\\n    <li>\\n      <a\\n        href=\\\"\/docs\/data-queries\\\">\\n        <div class=\\\"name\\\">Data queries<\/div>\\n        <div class=\\\"description\\\">\\n          Perform CRUD operations with your data sources.\\n        <\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a href=\\\"\/docs\/sql-queries\\\">\\n        <div class=\\\"name\\\">Write SQL queries<\/div>\\n        <div class=\\\"description\\\">Query data with SQL.<\/div>\\n      <\/a>\\n    <\/li>\\n    <li>\\n      <a\\n        href=\\\"api-requests\\\">\\n        <div class=\\\"name\\\">Write API queries<\/div>\\n        <div class=\\\"description\\\">Perform API requests.<\/div>\\n      <\/a>\\n    <\/li>\\n        <li>\\n      <a\\n        href=\\\"retool-workflows-blocks#python\\\">\\n        <div class=\\\"name\\\">Python<\/div>\\n        <div class=\\\"description\\\">Write and execute Python code with support for popular libraries.<\/div>\\n      <\/a>\\n    <\/li>\\n  <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"Run workflows automatically\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\nDeploy workflows that run at a regular schedule or trigger them with webhooks to keep up with changes in real time.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/83facff9-42e7-4009-b2c7-4d830ea6e764.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"retool-workflows-triggers#schedule\\\"\\n >\\n <div class=\\\"name\\\">Schedule<\/div>\\n <div class=\\\"description\\\">\\nSchedule workflows to run periodically using an interval or cron syntax.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"retool-workflows-triggers#webhook\\\">\\n <div class=\\\"name\\\">Webhook<\/div>\\n <div class=\\\"description\\\">\\nRun workflows automatically in response to webhook events.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"Manage workflows\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\nExplore run history and log, control access, configure error handling to prevent failures, and debug each step with built-in tools.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/6f8c7098-db94-456e-9d58-cc151b0fc144.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"retool-workflows-error-handling-and-debugging\\\"\\n >\\n <div class=\\\"name\\\">Error handling and debugging<\/div>\\n <div class=\\\"description\\\">\\n Debug workflows and handle errors.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"retool-workflows-limits-billing\\\">\\n <div class=\\\"name\\\">Usage and billing<\/div>\\n <div class=\\\"description\\\">\\n Monitor usage and billing of workflows.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Share queries\"\ncategorySlug: \"data-queries\"\nexcerpt: \"Learn how to reuse queries with the Query Library.\"\nhidden: false\n\n###\n\n","completion":" You can use the same query across multiple apps with Reusable Queries. Often, you want the same functionality across apps, but don’t want to copy paste the same query over and over again. Reusable queries help you avoid code duplication, version control queries, and share queries with your team. END"}
{"prompt":"Write your query\n\n###\n\n","completion":" Reusable queries are written in the Query Library. To set up a reusable query, you would: END"}
{"prompt":"Reusable queries are written in the Query Library. To set up a reusable query, you would:\n\n###\n\n","completion":" You can define Variables for this query by using the curly braces `{{ }}`. Variables are dynamic inputs to your query. You can define defaults in the Variable section of the right hand panel. When you import a query in a Retool app you can pass inputs to the variables you define here. END"}
{"prompt":"You can define Variables for this query by using the curly braces `{{ }}`. Variables are dynamic inputs to your query. You can define defaults in the Variable section of the right hand panel. When you import a query in a Retool app you can pass inputs to the variables you define here.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div>\\n <!--\\n<embed src=\\\"https:\/\/www.youtube.com\/embed\/F9Bo89m2f6g\\\" allowfullscreen=\\\"true\\\" width=\\\"425\\\" height=\\\"344\\\">\\n\\n  -->\\n <embed src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ql_variables.mp4\\\" allowfullscreen=\\\"true\\\" width=\\\"100%\\\" height=\\\"371\\\" \/>\\n<\/div>\\n\\n<style><\/style>\"\n}\n[\/block] END"}
{"prompt":"Import your query\n\n###\n\n","completion":" Now that your query has been shared, you can import it inside any Retool app. To do this, create a new query in your app, click on the Resources dropdown, and select \"Import from Query Library\". END"}
{"prompt":"Now that your query has been shared, you can import it inside any Retool app. To do this, create a new query in your app, click on the Resources dropdown, and select \"Import from Query Library\".\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div>\\n <!--\\n<embed src=\\\"https:\/\/www.youtube.com\/embed\/F9Bo89m2f6g\\\" allowfullscreen=\\\"true\\\" width=\\\"425\\\" height=\\\"344\\\">\\n\\n  -->\\n <embed src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/import_query.mp4\\\" width=\\\"100%\\\" height=\\\"371\\\" \/>\\n<\/div>\\n\\n<style><\/style>\"\n}\n[\/block] END"}
{"prompt":"Using variables\n\n###\n\n","completion":" Any words inside `{{ }}` curly braces in a reusable query will be parsed as variables. For example, if you write `select * from users where age > {{ min_age }} and age < {{ max_age }}`, Retool will detect two variables, `min_age` and `max_age`. END"}
{"prompt":"Any words inside `{{ }}` curly braces in a reusable query will be parsed as variables. For example, if you write `select * from users where age > {{ min_age }} and age < {{ max_age }}`, Retool will detect two variables, `min_age` and `max_age`.\n\n###\n\n","completion":" You can also write more complicated JavaScript expressions. Consider this query: `select * from users where status = {{ age > 65 ? 'retired': 'working' }}`. In this example, you can pass in `age` as an numerical input, and we’ll evaluate it to ‘retired’ or ‘working’ based on the value. END"}
{"prompt":"You can also write more complicated JavaScript expressions. Consider this query: `select * from users where status = {{ age > 65 ? 'retired': 'working' }}`. In this example, you can pass in `age` as an numerical input, and we’ll evaluate it to ‘retired’ or ‘working’ based on the value.\n\n###\n\n","completion":" ![Figure 3. An imported query passing the value from textinput1 to the store_id parameter](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7a276ae-Screen_Shot_2020-03-20_at_1.59.13_PM.png) END"}
{"prompt":"What permissions do I need to see \/ edit \/ use library queries?\n\n###\n\n","completion":" By default all users have access to the Query Library. If you're an admin, you can configure which user groups have access to the Query library in your Permission settings. END"}
{"prompt":"title: \"Rotate SSH keys\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to rotate Retool's SSH keys.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Organizations with Self-hosted Retool deployments can regenerate SSH keys used for SSH tunneling. This allows you to follow your organization's credential rotation policy or update keys if your encryption key has changed. END"}
{"prompt":"Invalidate existing SSH keys\n\n###\n\n","completion":" If you've rotated your encryption key—for example, while upgrading from Retool Cloud to Self-hosted—you may need to invalidate existing keys. These steps require access to the [Retool PostgreSQL database](https:\/\/docs.retool.com\/docs\/configuring-retools-storage-database). END"}
{"prompt":"1. Check the `ssh_keys` table\n\n###\n\n","completion":" This SQL query should only return one record. END"}
{"prompt":"Regenerate and download the new SSH key\n\n###\n\n","completion":" When you download Retool's public key, Retool creates a new SSH key if it doesn't already exist. END"}
{"prompt":"When you download Retool's public key, Retool creates a new SSH key if it doesn't already exist.\n\n###\n\n","completion":" If your key is for SSH tunneling, use the **Download Retool's public key** link on the resource configuration page. Open the `retool.pub` file and copy the entire key to your clipboard. Clicking the link generates a new record in the `ssh_key` table and downloads the public key to your local machine. END"}
{"prompt":"title: \"Trialing Retool locally\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to test Retool locally.\"\nhidden: true\n\n###\n\n","completion":" If you're like us, you probably have a lot of data that is only accessible from your private network. That's why we built the on-prem version of Retool. This 5 minute guide will help you set up a trial of on-premise Retool locally or on a cloud service. END"}
{"prompt":"Running Retool locally on Mac or Linux\n\n###\n\n","completion":" **Running the easy install script** END"}
{"prompt":"**Running the easy install script**\n\n###\n\n","completion":" Run this script to create Retool at `~\/retool\/retool-onpremise` and run the docker containers END"}
{"prompt":"Run this script to create Retool at `~\/retool\/retool-onpremise` and run the docker containers\n\n###\n\n","completion":" Retool will now be running at [localhost:3000](http:\/\/localhost:3000\/). You can open this page in your browser then click **sign up**. END"}
{"prompt":"Retool will now be running at [localhost:3000](http:\/\/localhost:3000\/). You can open this page in your browser then click **sign up**.\n\n###\n\n","completion":" **Installing Retool without the script** END"}
{"prompt":"**Installing Retool without the script**\n\n###\n\n","completion":" Prefer to install manually rather using the script? That's cool too. Just follow the steps below: END"}
{"prompt":"Prefer to install manually rather using the script? That's cool too. Just follow the steps below:\n\n###\n\n","completion":" That's it! You're done. END"}
{"prompt":"That's it! You're done.\n\n###\n\n","completion":" **Explaining the script** END"}
{"prompt":"**Explaining the script**\n\n###\n\n","completion":" The script you ran did three main things: END"}
{"prompt":"The script you ran did three main things:\n\n###\n\n","completion":" To stop running Retool, you can end the process by running `stop-local-trial`, which is inside `~\/retool\/retool-onpremise` by default. END"}
{"prompt":"To stop running Retool, you can end the process by running `stop-local-trial`, which is inside `~\/retool\/retool-onpremise` by default.\n\n###\n\n","completion":" **Connecting to a resource (database or API)** END"}
{"prompt":"**Connecting to a resource (database or API)**\n\n###\n\n","completion":" A resource is a datasource that you can read into your Retool application and use while building an app. END"}
{"prompt":"A resource is a datasource that you can read into your Retool application and use while building an app.\n\n###\n\n","completion":" If your machine is on your company's VPN, you should be able to add your internal resources. END"}
{"prompt":"If your machine is on your company's VPN, you should be able to add your internal resources.\n\n###\n\n","completion":" If you want to add a database that you have running locally, make sure to use `host.docker.internal` as the host in the resource configuration screen to tell Retool to look outside of the Docker container that it is running in. END"}
{"prompt":"If you want to add a database that you have running locally, make sure to use `host.docker.internal` as the host in the resource configuration screen to tell Retool to look outside of the Docker container that it is running in.\n\n###\n\n","completion":" **Next steps** END"}
{"prompt":"**Next steps**\n\n###\n\n","completion":" That's it! Have fun, build a few apps, and [reach out](https:\/\/retool.com\/demo\/?utm_source=website&utm_medium=support-site&utm_campaign=chilipiper&utm_content=on-prem-setup) if you'd like help with a more permanent deployment! END"}
{"prompt":"Running Retool in a cloud service\n\n###\n\n","completion":" To run trial Retool on a cloud service like AWS, Azure, or Heroku you can just run the easy install script on the machine. If you need help creating a machine with the right resources to run Retool, You can follow [these instructions](https:\/\/docs.retool.com\/docs\/setup-instructions) to create the right kind of machine. END"}
{"prompt":"Troubleshooting and FAQs\n\n###\n\n","completion":" Retool has **support** accessible through the Intercom bubble on this page! You can contact us if the FAQs below don't answer your question. END"}
{"prompt":"Retool failed to start when I ran the script and I'm not sure why\n\n###\n\n","completion":" There are a few common reasons Retool fails: END"}
{"prompt":"I keep getting redirected to the homepage after logging in or signing up\n\n###\n\n","completion":" Make sure COOKIE_INSECURE=true is set in the docker.env file END"}
{"prompt":"Configuring S3\n\n###\n\n","completion":" Connecting to S3 requires the following to be completed in AWS. END"}
{"prompt":"Create an S3 Bucket\n\n###\n\n","completion":" Navigate to **S3 > Buckets > Create bucket**. Here you can give your bucket a name and pick a region for it to be hosted in. If this is your first time setting up the resource, skip the additional settings for now, you can update them after this initial setup. END"}
{"prompt":"Navigate to **S3 > Buckets > Create bucket**. Here you can give your bucket a name and pick a region for it to be hosted in. If this is your first time setting up the resource, skip the additional settings for now, you can update them after this initial setup.\n\n###\n\n","completion":" ![Create your S3 bucket](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/89d2bcad-fe28-48c6-b27b-ac4d390ebabf.png) END"}
{"prompt":"![Create your S3 bucket](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/89d2bcad-fe28-48c6-b27b-ac4d390ebabf.png)\n\n###\n\n","completion":" After creating your bucket, keep a note of its ARN to use later. END"}
{"prompt":"After creating your bucket, keep a note of its ARN to use later.\n\n###\n\n","completion":" ![S3 bucket ARN](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/d4b59abd-48e4-4946-b1dd-995fb782cfc8.png) END"}
{"prompt":"Set up CORS on your bucket\n\n###\n\n","completion":" Navigate to the **Permissions** tab for your bucket. There you should find a section near the bottom for **Cross-origin resource sharing (CORS)**. Edit it to allow the domain where your Retool instance is hosted. END"}
{"prompt":"Navigate to the **Permissions** tab for your bucket. There you should find a section near the bottom for **Cross-origin resource sharing (CORS)**. Edit it to allow the domain where your Retool instance is hosted.\n\n###\n\n","completion":" The following should grant access to most Cloud-hosted orgs but you can replace the wildcard `*` with your own subdomain if needed. Self-hosted users will need to enter their own domain. END"}
{"prompt":"Create an IAM User\n\n###\n\n","completion":" Navigate to **IAM**, and make a new user. Programmatic access needs to be enabled in order to generate the access key ID and secret access key Retool needs to connect to S3. END"}
{"prompt":"Navigate to **IAM**, and make a new user. Programmatic access needs to be enabled in order to generate the access key ID and secret access key Retool needs to connect to S3.\n\n###\n\n","completion":" ![Create IAM user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/4cd77b80-6dfc-4aa1-a3db-f558dff5e817.png) END"}
{"prompt":"![Create IAM user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/4cd77b80-6dfc-4aa1-a3db-f558dff5e817.png)\n\n###\n\n","completion":" You can attach policies to your user immediately if you’d like, but you can also add them later. END"}
{"prompt":"You can attach policies to your user immediately if you’d like, but you can also add them later.\n\n###\n\n","completion":" ![IAM user confirmation screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/c9a1d9a3-8d09-45e2-9b3d-10367558821b.png) END"}
{"prompt":"![IAM user confirmation screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/c9a1d9a3-8d09-45e2-9b3d-10367558821b.png)\n\n###\n\n","completion":" Keep your **Access key ID** and **Secret access key**—you'll need them on Retool's S3 resource setup page. END"}
{"prompt":"Keep your **Access key ID** and **Secret access key**—you'll need them on Retool's S3 resource setup page.\n\n###\n\n","completion":" ![Access key ID and Secret access key on IAM user success screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/689d114d-69b2-44d1-8df2-b4dbde6fab5f.png) END"}
{"prompt":"Create a new Access key ID and Secret access key for an existing user\n\n###\n\n","completion":" First, find your user in **IAM > User** END"}
{"prompt":"First, find your user in **IAM > User**\n\n###\n\n","completion":" ![Finding existing user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/0484a121-0dd8-4b6b-9d7b-cacc715f4b5f.png) END"}
{"prompt":"![Finding existing user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/0484a121-0dd8-4b6b-9d7b-cacc715f4b5f.png)\n\n###\n\n","completion":" If you no longer have your **Access key ID** and **Secret access key** for your user, you can create a new access key instead. END"}
{"prompt":"If you no longer have your **Access key ID** and **Secret access key** for your user, you can create a new access key instead.\n\n###\n\n","completion":" ![Generating new access and secret keys](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/28567009-1197-4dc5-8576-53495bf65e71.png) END"}
{"prompt":"Create a Policy that describes permissions on your S3 bucket\n\n###\n\n","completion":" To create a new policy, navigate to **IAM > Policies > Create policy**. The policy can be created using the GUI or by copying one of the JSON files shown below. END"}
{"prompt":"To create a new policy, navigate to **IAM > Policies > Create policy**. The policy can be created using the GUI or by copying one of the JSON files shown below.\n\n###\n\n","completion":" You'll need to change the `BUCKET_NAME` variable to the name of your bucket. Make sure to keep both the `BUCKET_NAME\/\\*` and `BUCKET_NAME` resources - they're both required. END"}
{"prompt":"You'll need to change the `BUCKET_NAME` variable to the name of your bucket. Make sure to keep both the `BUCKET_NAME\/\\*` and `BUCKET_NAME` resources - they're both required.\n\n###\n\n","completion":" ![S3 policy example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/d67df3cf-63c4-458e-85ee-bca42196ed6a.png)\nFor more robust permissions you can use the following: END"}
{"prompt":"![S3 policy example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/d67df3cf-63c4-458e-85ee-bca42196ed6a.png)\nFor more robust permissions you can use the following:\n\n###\n\n","completion":" ![S3 policy with more permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/a92dd606-8ddd-40fc-ab98-19905a3941c2.png) END"}
{"prompt":"![S3 policy with more permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/a92dd606-8ddd-40fc-ab98-19905a3941c2.png)\n\n###\n\n","completion":" You can always go back and edit your policy once it has been created. END"}
{"prompt":"Attach the policy to your IAM user\n\n###\n\n","completion":" You can attach the policy directly to your IAM user, to the group the user is a part of, or to a role the user can assume. END"}
{"prompt":"Directly to the IAM User\n\n###\n\n","completion":" Navigate to **Users > YOUR_USER > Permissions > Add permissions** END"}
{"prompt":"Navigate to **Users > YOUR_USER > Permissions > Add permissions**\n\n###\n\n","completion":" ![Navigating to user permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/343f26ca-5b7b-48fd-acdc-1bd40505fe40.png) END"}
{"prompt":"![Navigating to user permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/343f26ca-5b7b-48fd-acdc-1bd40505fe40.png)\n\n###\n\n","completion":" From there, you can choose to **Attach existing policies directly** and select the policy that contains permissions for your S3 bucket END"}
{"prompt":"From there, you can choose to **Attach existing policies directly** and select the policy that contains permissions for your S3 bucket\n\n###\n\n","completion":" ![Attaching permissions directly to user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/76d11ef6-295f-44d5-b8ca-210c8d9194a7.png) END"}
{"prompt":"To a group the user is a part of\n\n###\n\n","completion":" Select the group you’d like to add the policy to in **IAM > User groups**, then select **Add permissions > Attach policies** and attach the policy containing permissions for your S3 bucket. END"}
{"prompt":"Select the group you’d like to add the policy to in **IAM > User groups**, then select **Add permissions > Attach policies** and attach the policy containing permissions for your S3 bucket.\n\n###\n\n","completion":" ![Adding a policy to group permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/75afd2e5-c353-4c52-97c5-061585e5215d.png) END"}
{"prompt":"![Adding a policy to group permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/75afd2e5-c353-4c52-97c5-061585e5215d.png)\n\n###\n\n","completion":" After adding the policy, you can navigate to the settings page of your user and add them to the group. END"}
{"prompt":"After adding the policy, you can navigate to the settings page of your user and add them to the group.\n\n###\n\n","completion":" ![Adding user to group](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/6e7df4ee-ece7-4e86-9aba-73fd4323a015.png) END"}
{"prompt":"![Adding user to group](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/6e7df4ee-ece7-4e86-9aba-73fd4323a015.png)\n\n###\n\n","completion":" This automatically attaches all policies associated with the group to the user itself. END"}
{"prompt":"This automatically attaches all policies associated with the group to the user itself.\n\n###\n\n","completion":" ![Policies inherited from group](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/730c47e2-4aeb-4110-95cb-597b23777691.png) END"}
{"prompt":"To a role the user can assume\n\n###\n\n","completion":" If you want to avoid having permanent permissions for your S3 bucket granted to your IAM user, you can instead have your user assume a role that has sufficient permissions. To do so, navigate to **IAM > Roles > Create role**. END"}
{"prompt":"If you want to avoid having permanent permissions for your S3 bucket granted to your IAM user, you can instead have your user assume a role that has sufficient permissions. To do so, navigate to **IAM > Roles > Create role**.\n\n###\n\n","completion":" During setup, or after the role has been created, add a trust relationship that gives the IAM user permission to assume that role. END"}
{"prompt":"During setup, or after the role has been created, add a trust relationship that gives the IAM user permission to assume that role.\n\n###\n\n","completion":" This can be done on the role itself: END"}
{"prompt":"This can be done on the role itself:\n\n###\n\n","completion":" ![Trust policy for role](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/73288c7c-cc83-410e-82af-35a985ebec2d.png) END"}
{"prompt":"![Trust policy for role](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/73288c7c-cc83-410e-82af-35a985ebec2d.png)\n\n###\n\n","completion":" Additionally, attach the policy you’ve created that contains permissions for your S3 bucket to the role: END"}
{"prompt":"Additionally, attach the policy you’ve created that contains permissions for your S3 bucket to the role:\n\n###\n\n","completion":" ![Adding S3 policy to role](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/a7f7bbfd-345d-4ef7-9524-e8b13b6e80e2.png) END"}
{"prompt":"Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool and select **Amazon S3** as the resource type. Enter the access key and secret generated for your IAM user, as well as the S3 bucket name and a default ACL. Click **Create resource**. At minimum you need to include your **Access key ID** and **Secret access key ID**. END"}
{"prompt":"Create a new resource in Retool and select **Amazon S3** as the resource type. Enter the access key and secret generated for your IAM user, as well as the S3 bucket name and a default ACL. Click **Create resource**. At minimum you need to include your **Access key ID** and **Secret access key ID**.\n\n###\n\n","completion":" ![S3 setup in Retool](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06c020e0-aec1-4ad3-a31f-d7ed838cd0c5.png) END"}
{"prompt":"![S3 setup in Retool](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/06c020e0-aec1-4ad3-a31f-d7ed838cd0c5.png)\n\n###\n\n","completion":" If you’re granting permissions to your user using an assumed role, include the **Role to assume (ARN)** as well: END"}
{"prompt":"If you’re granting permissions to your user using an assumed role, include the **Role to assume (ARN)** as well:\n\n###\n\n","completion":" ![S3 setup in Retool with role to assume](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/s3\/dd0bd727-2bfb-4164-bf4c-7c65544c674d.png) END"}
{"prompt":"Uploading Files to S3\n\n###\n\n","completion":" See [here](https:\/\/docs.retool.com\/docs\/upload-photos-to-s3) for docs on how to upload files to S3 END"}
{"prompt":"Searching and downloading files from S3\n\n###\n\n","completion":" Besides the S3 Button, you can also use the configured S3 resource as a datasource. END"}
{"prompt":"Filtering for files in a S3 bucket\n\n###\n\n","completion":" Choose the S3 resource you configured previously in the Query Editor. By default it will fetch all files from your bucket. You can configure it to also filter files by a prefix. Below is an example of filtering files via a textinput, and then rendering the list of files in a Table. END"}
{"prompt":"Choose the S3 resource you configured previously in the Query Editor. By default it will fetch all files from your bucket. You can configure it to also filter files by a prefix. Below is an example of filtering files via a textinput, and then rendering the list of files in a Table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/342ce35-s3_filter_example.png) END"}
{"prompt":"Downloading files from S3\n\n###\n\n","completion":" Let's extend our previous example to allow users to select a file and then click a button to download the selected file. Here's how that might look: END"}
{"prompt":"Let's extend our previous example to allow users to select a file and then click a button to download the selected file. Here's how that might look:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c29520b-s3_download_example.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c29520b-s3_download_example.png)\n\n###\n\n","completion":" Now when a user clicks the \"Download S3 File\" button, it will run the `buttonTrigger` query which will fetch the file from S3 and download it. END"}
{"prompt":"Generating a Signed URL to Download Files\n\n###\n\n","completion":" What if instead of just downloading the file, you want to generate a link that let's someone download a file in your S3 Bucket, but you want the link to expire after 60 seconds. END"}
{"prompt":"What if instead of just downloading the file, you want to generate a link that let's someone download a file in your S3 Bucket, but you want the link to expire after 60 seconds.\n\n###\n\n","completion":" To do that, we'll use the **Generate a signed url** functionality that Retool offers. Try configuring the query like below. The `Expires: 60` means that the URL will expire after 60 seconds -- you can change this to be as high as you'd like! END"}
{"prompt":"To do that, we'll use the **Generate a signed url** functionality that Retool offers. Try configuring the query like below. The `Expires: 60` means that the URL will expire after 60 seconds -- you can change this to be as high as you'd like!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/eec7851-s3_signed_url.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/eec7851-s3_signed_url.png)\n\n###\n\n","completion":" Press save, and then create a new text component to display the URL we generated using the above query. END"}
{"prompt":"Press save, and then create a new text component to display the URL we generated using the above query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d831702-s3_signed_url_text.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d831702-s3_signed_url_text.png)\n\n###\n\n","completion":" Great! Now whenever we select a file in our table, our app will generate a signed url that we can use to download the file. END"}
{"prompt":"Connecting to S3 compatible endpoints (DigitalOcean Spaces, Wasabi, etc.)\n\n###\n\n","completion":" Retool's S3 integration also works for S3-compatible object storage APIs like [DigitalOcean Spaces](https:\/\/www.digitalocean.com\/products\/spaces\/). We'll talk through how to connect to a Space here, but the same concepts apply to other object storage solutions. END"}
{"prompt":"Retool's S3 integration also works for S3-compatible object storage APIs like [DigitalOcean Spaces](https:\/\/www.digitalocean.com\/products\/spaces\/). We'll talk through how to connect to a Space here, but the same concepts apply to other object storage solutions.\n\n###\n\n","completion":" To get started, create a new resource (`\/resources\/new`) and choose the \"S3\" option. END"}
{"prompt":"To get started, create a new resource (`\/resources\/new`) and choose the \"S3\" option.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3f04115-image6.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3f04115-image6.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a0e93a0-image7.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a0e93a0-image7.png)\n\n###\n\n","completion":" After all of this not-so-tedious credential wrangling, this is what your resource form in Retool should look like (give or take the red boxes): END"}
{"prompt":"After all of this not-so-tedious credential wrangling, this is what your resource form in Retool should look like (give or take the red boxes):\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d1ebed1-image3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d1ebed1-image3.png)\n\n###\n\n","completion":" Just click “create resource” at the bottom right, and you should be ready to go. END"}
{"prompt":"CORS for DigitalOcean Spaces\n\n###\n\n","completion":" If you want to write to your Spaces, you need to update your CORS configuration. In your Space's settings under **Advanced CORS Options**, add a config with the following settings to allow requests from Retool: END"}
{"prompt":"Connect to Salesforce on Retool Cloud\n\n###\n\n","completion":" To connect your resource to Salesforce on Retool Cloud, optionally select the **Connect to a sandbox organization** checkbox, and then press **Connect Salesforce**. Follow the Salesforce authorization steps and press **Allow**. END"}
{"prompt":"To connect your resource to Salesforce on Retool Cloud, optionally select the **Connect to a sandbox organization** checkbox, and then press **Connect Salesforce**. Follow the Salesforce authorization steps and press **Allow**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/08da709-Screen_Shot_2021-01-20_at_1.00.02_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/08da709-Screen_Shot_2021-01-20_at_1.00.02_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8a1711d-Screen_Shot_2021-01-20_at_1.04.51_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8a1711d-Screen_Shot_2021-01-20_at_1.04.51_PM.png)\n\n###\n\n","completion":" You can now [query the Salesforce API](https:\/\/docs.retool.com\/docs\/salesforce-integration#query-the-salesforce-api). END"}
{"prompt":"Connect to Salesforce on self-hosted Retool\n\n###\n\n","completion":" On self-hosted Retool deployments, Salesforce resources require Retool to be a [connected application](https:\/\/help.salesforce.com\/s\/articleView?id=sf.connected_app_overview.htm&type=5). END"}
{"prompt":"Create an app in Salesforce\n\n###\n\n","completion":" First, register Retool as a connected application in Salesforce. END"}
{"prompt":"First, register Retool as a connected application in Salesforce.\n\n###\n\n","completion":" ![The OAuth Callback URL to use with Salesforce.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a827162-Screen_Shot_2020-12-01_at_4.52.19_PM.png) END"}
{"prompt":"Query the Salesforce API\n\n###\n\n","completion":" After setting up a Salesforce integration with Retool, a new option for a Salesforce query will appear on the Retool page editors. After selecting that option, you will be presented with a UI that allows you to use the Salesforce Object Query Language (SOQL) to retrieve data from Salesforce. END"}
{"prompt":"Bulk operations in Salesforce\n\n###\n\n","completion":" Retool supports Salesforce Bulk Inserts, Bulk Updates, Bulk Upserts, and Bulk Delete operations. END"}
{"prompt":"Bulk Inserts example\n\n###\n\n","completion":" ![Example query using bulk inserts](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7d66ccd-Screen_Shot_2020-12-01_at_2.24.35_PM.png) END"}
{"prompt":"Bulk Updates example\n\n###\n\n","completion":" ![Example query using bulk updates](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d38dd7c-Screen_Shot_2020-12-01_at_2.27.29_PM.png) END"}
{"prompt":"Troubleshooting\n\n###\n\n","completion":" If you are unable to run any Salesforce queries due to an `expired access\/refresh token` error, it's likely that you need to change a setting within Salesforce to allow Retool to generate a valid access and refresh token. Here are a few items to check when troubleshooting: END"}
{"prompt":"If you are unable to run any Salesforce queries due to an `expired access\/refresh token` error, it's likely that you need to change a setting within Salesforce to allow Retool to generate a valid access and refresh token. Here are a few items to check when troubleshooting:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/64bfc09-Screen_Shot_2020-12-01_at_2.52.36_PM.png) END"}
{"prompt":"title: Sync SAML group memberships\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: Learn how to sync SAML group memberships.\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Retool supports syncing group memberships at the time of SAML login. This requires passing group membership for users to Retool in your SAML assertion. Retool parses these memberships and add or remove users to the groups when a user logs in to Retool. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" To use SAML group syncing, you must: END"}
{"prompt":"1. Include groups in your SAML application\n\n###\n\n","completion":" Configure your SAML application to include group attributes in the SAML response. END"}
{"prompt":"Okta\n\n###\n\n","completion":" SAML Group Syncing directly matches the user groups by name, so Retool copies the naming convention you use in Okta. END"}
{"prompt":"SAML Group Syncing directly matches the user groups by name, so Retool copies the naming convention you use in Okta.\n\n###\n\n","completion":" In your Okta SAML application, configure the response to include Group Attributes. Set the group filter as desired. For example, you might set the name to `groups` and the regex filter to `.*` to include all of a user's groups. END"}
{"prompt":"In your Okta SAML application, configure the response to include Group Attributes. Set the group filter as desired. For example, you might set the name to `groups` and the regex filter to `.*` to include all of a user's groups.\n\n###\n\n","completion":" See [Okta documentation](https:\/\/help.okta.com\/en-us\/Content\/Topics\/Apps\/define-group-attribute-statements.htm) for more details about configuring Okta group attributes. END"}
{"prompt":"Azure Active Directory\n\n###\n\n","completion":" For Azure Active Directory, use group claims to add group attributes. Set the group name to \"groups\" to use the Retool default. Set the **Source attribute** to be the display name of the group, **Cloud-only group display names (Preview)**. END"}
{"prompt":"For Azure Active Directory, use group claims to add group attributes. Set the group name to \"groups\" to use the Retool default. Set the **Source attribute** to be the display name of the group, **Cloud-only group display names (Preview)**.\n\n###\n\n","completion":" See [Azure AD documentation](https:\/\/learn.microsoft.com\/en-us\/azure\/active-directory\/hybrid\/how-to-connect-fed-group-claims#add-group-claims-to-tokens-for-saml-applications-using-sso-configuration) for more details about group claims. END"}
{"prompt":"2. Enable SAML group sync in Retool\n\n###\n\n","completion":" Configure the `SAML_SYNC_GROUP_CLAIMS` [environment variable](https:\/\/docs.retool.com\/docs\/environment-variables-reference#saml-sync-group-claims) to enable SAML group sync. END"}
{"prompt":"Configure the `SAML_SYNC_GROUP_CLAIMS` [environment variable](https:\/\/docs.retool.com\/docs\/environment-variables-reference#saml-sync-group-claims) to enable SAML group sync.\n\n###\n\n","completion":" You must restart your Retool instance whenever you make changes to environment variables. END"}
{"prompt":"3. Define Retool group SAML variables\n\n###\n\n","completion":" Set the `SAML_GROUPS_ATTRIBUTE` environment variable to the group attribute defined in your SAML assertion. `SAML_GROUPS_ATTRIBUTE` defaults to `groups` if the environment variable is not set. END"}
{"prompt":"4. Confirm group sync\n\n###\n\n","completion":" After users log in, you can confirm group syncing by reviewing the `api` container logs. The logs contain SAML group memberships for each user who has logged in. END"}
{"prompt":"1. Get SAP Hana Details & Whitelist Retool IP Address\n\n###\n\n","completion":" Your SAP Hana system administrator will likely have your database connection details. You'll need to get them to [whitelist the Retool IP address](https:\/\/docs.retool.com\/docs\/connect-database-resource#connecting-your-database). END"}
{"prompt":"2. Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"SAP Hana\" as the _type_. END"}
{"prompt":"Create a new resource in Retool, and select \"SAP Hana\" as the _type_.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3ee2eb2-Screen_Shot_2021-02-01_at_9.32.39_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3ee2eb2-Screen_Shot_2021-02-01_at_9.32.39_PM.png)\n\n###\n\n","completion":" Enter your database connection details. Your connection string will be of the format: END"}
{"prompt":"Enter your database connection details. Your connection string will be of the format:\n\n###\n\n","completion":" `jdbc:sap:\/\/host:port\/?user=DBADMIN&password=mypassword` END"}
{"prompt":"`jdbc:sap:\/\/host:port\/?user=DBADMIN&password=mypassword`\n\n###\n\n","completion":" You may also need to include a parameter for your `databaseName`, depending on your SAP Hana setup. END"}
{"prompt":"You may also need to include a parameter for your `databaseName`, depending on your SAP Hana setup.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7c506e9-Screen_Shot_2021-02-01_at_9.35.19_PM.png) END"}
{"prompt":"3. Create Queries\n\n###\n\n","completion":" You can now select your newly-created SAP Hana resource from the _Resource_ dropdown when creating queries in your Retool apps. END"}
{"prompt":"You can now select your newly-created SAP Hana resource from the _Resource_ dropdown when creating queries in your Retool apps.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fb1192a-Screen_Shot_2021-02-01_at_10.28.36_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fb1192a-Screen_Shot_2021-02-01_at_10.28.36_PM.png)\n\n###\n\n","completion":" You can display the results of SAP Hana queries as with any other query in Retool: END"}
{"prompt":"You can display the results of SAP Hana queries as with any other query in Retool:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a9d65ef-vertica-display-results.png) END"}
{"prompt":"title: \"SCIM 2.0 overview\"\ncategorySlug: \"scim\"\nhidden: false\n\n###\n\n","completion":" Retool implements a subset of the SCIM 2.0 API that is required to work with IDP vendors like Okta. If required, it's also possible to use these APIs directly to have your own custom user and role management system. END"}
{"prompt":"title: \"Provision users with SCIM\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to implement SCIM user provisioning with Okta or Azure Active Directory.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" SCIM, or System for Cross-domain Identity Management, is the industry standard for automatically provisioning user accounts. It's useful when companies use a third party SSO provider like Okta or Azure Active Directory to manage employee authentication because user accounts can automatically be created \/ updated \/ deactivated in other applications like Retool. END"}
{"prompt":"SCIM, or System for Cross-domain Identity Management, is the industry standard for automatically provisioning user accounts. It's useful when companies use a third party SSO provider like Okta or Azure Active Directory to manage employee authentication because user accounts can automatically be created \/ updated \/ deactivated in other applications like Retool.\n\n###\n\n","completion":" To be able to use this feature, Retool needs to be at least at version **2.32.1**. END"}
{"prompt":"SCIM Server Authentication\n\n###\n\n","completion":" SCIM works like this: let's say you've added Retool as an application in your SSO provider. Once you assign the application to a user then an account in Retool is automatically created. That happens because the SSO provider makes an API request to Retool and tells Retool to create a new account for John. END"}
{"prompt":"SCIM works like this: let's say you've added Retool as an application in your SSO provider. Once you assign the application to a user then an account in Retool is automatically created. That happens because the SSO provider makes an API request to Retool and tells Retool to create a new account for John.\n\n###\n\n","completion":" To make sure that accounts can't be created by anybody, Retool uses a **Bearer Token** authentication scheme. All that means is you need to define a secret that only Retool and your SSO provider knows. To do that, add this new environment variable in your Retool environment. END"}
{"prompt":"To make sure that accounts can't be created by anybody, Retool uses a **Bearer Token** authentication scheme. All that means is you need to define a secret that only Retool and your SSO provider knows. To do that, add this new environment variable in your Retool environment.\n\n###\n\n","completion":" Once you've defined that environment variable, you can test it out by opening up <https:\/\/yourRetoolAppDomain\/api\/scim\/v2\/Schemas>. There, you should see a special error that looks like this: END"}
{"prompt":"Once you've defined that environment variable, you can test it out by opening up <https:\/\/yourRetoolAppDomain\/api\/scim\/v2\/Schemas>. There, you should see a special error that looks like this:\n\n###\n\n","completion":" After that's been set, only requests to Retool's SCIM API with the header `Authorization: Bearer YOUR_SECRET_TOKEN` will be accepted. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" To enable this feature you must be able to configure the environment variables of the Retool application. Create a new environment variable like below: END"}
{"prompt":"To enable this feature you must be able to configure the environment variables of the Retool application. Create a new environment variable like below:\n\n###\n\n","completion":" The secret token must be at least **10 characters** long. After modifying the environment variables, restart the Retool container. END"}
{"prompt":"Configuration Steps\n\n###\n\n","completion":" That's it! You can now start assigning users to the Retool app and they will be automatically created in Retool. END"}
{"prompt":"Enabling Group Push\n\n###\n\n","completion":" If you're setting up Okta for the first time, you will get access to Group Push with the rest of the Okta SCIM features, and you can ignore the rest of this guide. If you've already set up Retool with Okta, you will have to re-authenticate your account to enable Group Push. To do this, follow these steps. END"}
{"prompt":"If you're setting up Okta for the first time, you will get access to Group Push with the rest of the Okta SCIM features, and you can ignore the rest of this guide. If you've already set up Retool with Okta, you will have to re-authenticate your account to enable Group Push. To do this, follow these steps.\n\n###\n\n","completion":" SCIM should now be enabled for your Retool instance. END"}
{"prompt":"Known Issues \/ Troubleshooting\n\n###\n\n","completion":" If your Retool instance is behind a firewall, you need to [add Okta's IP addresses to your allowlist](https:\/\/help.okta.com\/en-us\/Content\/Topics\/Security\/ip-address-allow-listing.htm) so that it can make the necessary API requests to Retool to provision users and sync groups. END"}
{"prompt":"If your Retool instance is behind a firewall, you need to [add Okta's IP addresses to your allowlist](https:\/\/help.okta.com\/en-us\/Content\/Topics\/Security\/ip-address-allow-listing.htm) so that it can make the necessary API requests to Retool to provision users and sync groups.\n\n###\n\n","completion":" Optionally, you can add a rule to your load balancer to only expose the needed paths: `\/api\/scim\/v2\/*`. END"}
{"prompt":"title: \"Run JavaScript\"\ncategorySlug: \"app-scripting-and-events\"\nparentDocSlug: \"app-scripting-events-guides\"\nexcerpt: \"Learn how to run JavaScript in your Retool apps.\"\nhidden: false\n\n###\n\n","completion":" You can write JavaScript to interact with components and queries, which is useful for adding custom logic to your apps. This guide covers common use cases of JavaScript in Retool. For more comprehensive references, visit the [JavaScript API reference](\/reference\/javascript-api) and the [Component reference](https:\/\/retool.com\/components). END"}
{"prompt":"You can write JavaScript to interact with components and queries, which is useful for adding custom logic to your apps. This guide covers common use cases of JavaScript in Retool. For more comprehensive references, visit the [JavaScript API reference](\/reference\/javascript-api) and the [Component reference](https:\/\/retool.com\/components).\n\n###\n\n","completion":" To get started, create a new query in the bottom pane and select the **Run JS Code (JavaScript)** resource. END"}
{"prompt":"To get started, create a new query in the bottom pane and select the **Run JS Code (JavaScript)** resource.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bc892e0-Screen_Shot_2022-04-28_at_10.12.21_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bc892e0-Screen_Shot_2022-04-28_at_10.12.21_AM.png)\n\n###\n\n","completion":" In the editor, you can write code to set component properties, trigger queries, and access useful JavaScript libraries. END"}
{"prompt":"Run an API request for each row in a table\n\n###\n\n","completion":" This examples makes an API request for each row in a table, and then shows any errors returned\nin the process. END"}
{"prompt":"1. Add a table\n\n###\n\n","completion":" Add a Table component to your app and copy this JSON into the **Data** attribute. END"}
{"prompt":"2. Create a query\n\n###\n\n","completion":" Create a query using the **RestQuery (restapi)** resource. Set the **Action type** to **Post** and use this URL: `https:\/\/approvals.tryretool.com\/api\/users\/approve?email={{table1.data[i].email}}`. The URL parameters are populated automatically. END"}
{"prompt":"Create a query using the **RestQuery (restapi)** resource. Set the **Action type** to **Post** and use this URL: `https:\/\/approvals.tryretool.com\/api\/users\/approve?email={{table1.data[i].email}}`. The URL parameters are populated automatically.\n\n###\n\n","completion":" By default, the `i` property is `0` but JavaScript in a subsequent step will increment this value so the query runs on each row. END"}
{"prompt":"By default, the `i` property is `0` but JavaScript in a subsequent step will increment this value so the query runs on each row.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/af9c2b0-Screen_Shot_2020-03-19_at_2.58.59_PM.png) END"}
{"prompt":"3. Add a Button and Text components\n\n###\n\n","completion":" Add a Button and two Text components to your app. **Status** shows the query's progress and **Errors** displays any errors while the query runs. END"}
{"prompt":"Add a Button and two Text components to your app. **Status** shows the query's progress and **Errors** displays any errors while the query runs.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ab6ab26-Screen_Shot_2022-04-29_at_7.48.12_AM.png) END"}
{"prompt":"4. Write the JavaScript query\n\n###\n\n","completion":" Create a JavaScript query named `query2` and add the following JavaScript. END"}
{"prompt":"5. Add an event handler to your button\n\n###\n\n","completion":" After saving `query2`, add an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to your button that triggers the JavaScript query. END"}
{"prompt":"After saving `query2`, add an [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) to your button that triggers the JavaScript query.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a150375-Screen_Shot_2022-04-28_at_12.13.26_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a150375-Screen_Shot_2022-04-28_at_12.13.26_PM.png)\n\n###\n\n","completion":" Now click the **Submit** button to test the app. As the query runs on each row, the status updates and errors are displayed. Since the API endpoint at `https:\/\/approvals.tryretool.com\/api\/users\/approve` doesn't exist, all the requests fail. END"}
{"prompt":"Now click the **Submit** button to test the app. As the query runs on each row, the status updates and errors are displayed. Since the API endpoint at `https:\/\/approvals.tryretool.com\/api\/users\/approve` doesn't exist, all the requests fail.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3f001d7-Screen_Shot_2022-04-29_at_7.58.48_AM.png) END"}
{"prompt":"Clear state after running a query\n\n###\n\n","completion":" You can use the following snippet to clear state after a query runs. END"}
{"prompt":"Trigger a query\n\n###\n\n","completion":" This snippet programmatically triggers a query. END"}
{"prompt":"This snippet programmatically triggers a query.\n\n###\n\n","completion":" You can also pass additional arguments to customize the behavior of a query. END"}
{"prompt":"You can also pass additional arguments to customize the behavior of a query.\n\n###\n\n","completion":" The `additionalScope` option allows you to pass more variables to the query that aren't defined on the global scope. In this example, you could now use `{{name}}` in `query1`. END"}
{"prompt":"The `additionalScope` option allows you to pass more variables to the query that aren't defined on the global scope. In this example, you could now use `{{name}}` in `query1`.\n\n###\n\n","completion":" The `onSuccess` or `onFailure` callback is called after the function completes. Here's an example of `additionalScope` being used in an app: END"}
{"prompt":"The `onSuccess` or `onFailure` callback is called after the function completes. Here's an example of `additionalScope` being used in an app:\n\n###\n\n","completion":" ![This JS query passes `additionalScope` values into `query1`. `query1` won't return any data until it gets triggered from this JS query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/15b9c76-JS_query_to_trigger_target_query.png) END"}
{"prompt":"![This JS query passes `additionalScope` values into `query1`. `query1` won't return any data until it gets triggered from this JS query.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/15b9c76-JS_query_to_trigger_target_query.png)\n\n###\n\n","completion":" ![`query1` won't properly run on its own since `first_scope` isn't defined until it's directly passed in from the JS query's `.trigger()`. Data is returned after the JS query that triggers `query1` finishes.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/60cdcfe-Target_query_waiting_for_additionalScope.png) END"}
{"prompt":"Retrieve triggering components\n\n###\n\n","completion":" The variable `triggeredById` returns the name of the component that triggered a query. You can reference this inside of `{{ }}` in any query to return the name of the component that triggered it. If the query is triggered by another query, `triggeredById` returns `undefined`. END"}
{"prompt":"Retrieve triggering component indexes\n\n###\n\n","completion":" If a query is triggered by a table action or a button in a list view, the variable `i` is defined in the query and returns the component's index in that table or list view. END"}
{"prompt":"Trigger a query for each item in an array\n\n###\n\n","completion":" This script triggers a query for each item in an array. END"}
{"prompt":"Return data\n\n###\n\n","completion":" Besides manipulating components and queries, JavaScript queries can also return data. For example, this script generates a random number. END"}
{"prompt":"Besides manipulating components and queries, JavaScript queries can also return data. For example, this script generates a random number.\n\n###\n\n","completion":" When this query is triggered, you can access the number generated using the `.data` property: `{{ generateRandomNumber.data }}`. END"}
{"prompt":"Promises and async queries\n\n###\n\n","completion":" JavaScript queries can be asynchronous. If you return a [Promise](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Reference\/Global_Objects\/Promise), Retool waits for the promise to resolve before considering the query complete. END"}
{"prompt":"Simple promise\n\n###\n\n","completion":" Passing in a query to be triggered as the first argument in a `Promise.resolve()` triggers the other query, waits for it to finish, and then returns the `.data` result from the triggered query. END"}
{"prompt":"Promising an array of query returns\n\n###\n\n","completion":" You can also pass in an array of items that are dependent on query triggers, and use `Promise.all()` to return all of their results in an array of the same length. In this case, you would trigger `query1` for each row in `table1`, and pass in the `id` value from each row. Using `{{id}}` inside `query1` evaluates as the provided row id when it's run. END"}
{"prompt":"Resolve and reject\n\n###\n\n","completion":" If you want to return a value from the query, you can pass it in as a parameter to the Promise's `resolve` function. You can also use the `reject` function from the Promise to fail the query. END"}
{"prompt":"If you want to return a value from the query, you can pass it in as a parameter to the Promise's `resolve` function. You can also use the `reject` function from the Promise to fail the query.\n\n###\n\n","completion":" In the following example, the query takes two seconds to run, and returns the value `12345` through the resolve function. END"}
{"prompt":"Libraries\n\n###\n\n","completion":" Retool automatically imports the following utility libraries. END"}
{"prompt":"title: \"Manage secrets with environment variables\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to use secrets to manage environment variables.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" You can use environment variables to manage secrets like database passwords and bearer tokens. This allows you to automatically rotate secret credentials, and it helps protect sensitive information. END"}
{"prompt":"1. Define the RETOOL_EXPOSED_DB_PASSWORD variable\n\n###\n\n","completion":" Set the `RETOOL_EXPOSED_DB_PASSWORD` variable to your database connection string. Depending on how you set up Retool, you might need to restart the Docker container. END"}
{"prompt":"2. Create a new Postgres connection\n\n###\n\n","completion":" Add a new Postgres connection and use the connection string format. Make sure to replace the database password with the `%RETOOL_EXPOSED_DB_PASSWORD%` variable. It should look something like this. END"}
{"prompt":"Add a new Postgres connection and use the connection string format. Make sure to replace the database password with the `%RETOOL_EXPOSED_DB_PASSWORD%` variable. It should look something like this.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e466e54-Screen_Shot_2018-09-06_at_11.42.16_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e466e54-Screen_Shot_2018-09-06_at_11.42.16_AM.png)\n\n###\n\n","completion":" You can use environment variables like this for any field that you define. For example, you could use environment variables to configure the headers you send in API requests. END"}
{"prompt":"3. Save and restart the container\n\n###\n\n","completion":" Click **Save** and restart the container. END"}
{"prompt":"title: \"Manage secrets with the file system\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to use the file system to manage secrets.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Some deployment systems, like Docker swarm and Docker secrets, require secret values to be read from the file system instead of being set through environment variables. For instance, instead of setting a `POSTGRES_PASSWORD` in your environment, you point `POSTGRES_PASSWORD_FILE` to a text file that contains the password. END"}
{"prompt":"1. Set the `RETOOL_LOAD_FILE_SECRETS` environment variable\n\n###\n\n","completion":" At startup, Retool looks for the configured secret files and sets them as environment variables for running the container, not the entire system. Make sure to set the `RETOOL_LOAD_FILE_SECRETS` environment variable to `true`. Without this, Retool doesn't load secrets from the file system. END"}
{"prompt":"2. Configure environment variables\n\n###\n\n","completion":" Instead of adding secrets to the environment directly, add the path to where your secrets are stored on the file system and append `_FILE` to the end of each environment variable name. For example, if you want to set the `ENCRYPTION_KEY`, you’d set `ENCRYPTION_KEY_FILE` to the path on the file system where the file exists. END"}
{"prompt":"Instead of adding secrets to the environment directly, add the path to where your secrets are stored on the file system and append `_FILE` to the end of each environment variable name. For example, if you want to set the `ENCRYPTION_KEY`, you’d set `ENCRYPTION_KEY_FILE` to the path on the file system where the file exists.\n\n###\n\n","completion":" When starting Retool, you can check the logs to verify the environment variables are set: END"}
{"prompt":"When starting Retool, you can check the logs to verify the environment variables are set:\n\n###\n\n","completion":" If you don't see messages similar to this, see the [troubleshooting](#troubleshooting) section. END"}
{"prompt":"Manage your own secrets\n\n###\n\n","completion":" Retool supports managing your own secrets using environment variables prefixed with `RETOOL_EXPOSED`. You can use the file system to manage these secrets too. END"}
{"prompt":"Retool supports managing your own secrets using environment variables prefixed with `RETOOL_EXPOSED`. You can use the file system to manage these secrets too.\n\n###\n\n","completion":" Instead of using the `RETOOL_EXPOSED` prefix, use `RETOOL_FILE_EXPOSED`. For example, if you want multiple resources to use your database password, set `RETOOL_FILE_EXPOSED_DB_PASSWORD` to the path on the file system. END"}
{"prompt":"title: \"Retrieve secrets from AWS Secrets Manager\"\nexcerpt: \"Learn how to use AWS Secrets Manager to store your Retool resource secrets.\"\ncategorySlug: \"retool-embed\"\nhidden: true\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Configuring Resources in Retool can require handling sensitive values, e.g. database passwords or API keys. Retool is [SOC 2 Type 2 compliant](https:\/\/docs.retool.com\/page\/security), and most customers store these values with Retool. However, depending on your security posture, you may want to store secret values externally, rather than encrypted in Retool’s database. END"}
{"prompt":"Configuring Resources in Retool can require handling sensitive values, e.g. database passwords or API keys. Retool is [SOC 2 Type 2 compliant](https:\/\/docs.retool.com\/page\/security), and most customers store these values with Retool. However, depending on your security posture, you may want to store secret values externally, rather than encrypted in Retool’s database.\n\n###\n\n","completion":" To support this, Retool supports retrieving secrets from AWS Secrets Manager for customers running self-hosted Retool. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" To use the AWS Secrets Manager with Retool, you must: END"}
{"prompt":"1. Create IAM policy for Retool\n\n###\n\n","completion":" In AWS, [create an IAM policy](https:\/\/docs.aws.amazon.com\/secretsmanager\/latest\/userguide\/auth-and-access_examples.html) to grant Retool access to your secrets. Retool recommends you store secrets under a `retool\/` namespace for easier access control. The following is an example policy you might use. END"}
{"prompt":"2. Attach IAM policy to your principal\n\n###\n\n","completion":" Next, attach the policy to the principal associated with your Retool workload. For example, if you deploy Retool on EC2, attach this policy to the instance profile for the EC2 instance. END"}
{"prompt":"3. Configure Secrets Manager in Retool\n\n###\n\n","completion":" For each instance, visit **Settings** > **Secrets Manager** and enter the **Region** associated with your AWS Secrets Manager instance and an optional **Namespace** (details below). Click **Test connection** to confirm Retool can connect to your AWS Secrets Manager, then click **Save**. END"}
{"prompt":"Namespace\n\n###\n\n","completion":" The **Namespace** field is a value that will be prepended to any secret names Retool looks up. For example, if all your Retool-facing secrets in AWS Secrets Manager start with `retool\/`, you might set the namespace to be `retool\/` as well. If you have multiple Retool instances, you can use this to resolve the same secret name in a Resource configuration to different secrets in your AWS account. For this reason, setting the namespace is recommended if you use [Protected Resources](https:\/\/docs.retool.com\/docs\/source-control-protected-resources). END"}
{"prompt":"The **Namespace** field is a value that will be prepended to any secret names Retool looks up. For example, if all your Retool-facing secrets in AWS Secrets Manager start with `retool\/`, you might set the namespace to be `retool\/` as well. If you have multiple Retool instances, you can use this to resolve the same secret name in a Resource configuration to different secrets in your AWS account. For this reason, setting the namespace is recommended if you use [Protected Resources](https:\/\/docs.retool.com\/docs\/source-control-protected-resources).\n\n###\n\n","completion":" For example, if you have a \"dev\" instance and a \"prod\" instance, you might use the following naming convention for secrets in your AWS account: END"}
{"prompt":"For example, if you have a \"dev\" instance and a \"prod\" instance, you might use the following naming convention for secrets in your AWS account:\n\n###\n\n","completion":" On your Retool development instance, you would then set the namespace to `retool\/dev`, and on your production instance to `retool\/prod`. You can then reference secrets on both instances using `{{ secrets.db_user }}` and `{{ secrets.db_password }}`, and Retool will fetch the appropriate secret for the instance at runtime. END"}
{"prompt":"4. Use secrets in resources\n\n###\n\n","completion":" After you save your Secrets Manager configuration in Retool, if you granted Retool the `ListSecrets` permission, available secrets appear on **Settings** > **Secrets Manager**. END"}
{"prompt":"After you save your Secrets Manager configuration in Retool, if you granted Retool the `ListSecrets` permission, available secrets appear on **Settings** > **Secrets Manager**.\n\n###\n\n","completion":" You can reference them in Resource configurations using template syntax, e.g. `{{ secrets.key_name }}` or `{{ secrets['key_name'] }}`, either by copying values from the **Reference** column, or with autocomplete on the Resource configuration page. END"}
{"prompt":"You can reference them in Resource configurations using template syntax, e.g. `{{ secrets.key_name }}` or `{{ secrets['key_name'] }}`, either by copying values from the **Reference** column, or with autocomplete on the Resource configuration page.\n\n###\n\n","completion":" When you rotate secrets in AWS, Retool automatically reads updated values from your secrets manager. This means you don't need to restart your Retool instance or update any configuration when rotating secrets. END"}
{"prompt":"Time to live (TTL) setting\n\n###\n\n","completion":" Retool caches secrets it fetches with a configurable time to live. This reduces API calls to your secrets manager, which keeps queries fast and reduces costs.\nHowever, this means secrets may become temporarily \"stale\" when they are rotated. You can customize the time to live value to minimize failed queries in the event that a secret is rotated. END"}
{"prompt":"title: \"Self-hosted Retool overview\"\ncategorySlug: \"self-hosted-retool\"\nexcerpt: \"Learn about deploying Retool on your own infrastructure.\"\nhidden: false\n\n###\n\n","completion":" Deploying [Self-hosted Retool](https:\/\/retool.com\/self-hosted\/) on your own infrastructure—such as on-premises—lets you build applications with data in your virtual private cloud (VPC) or behind your virtual private network (VPN). Businesses in the healthcare and finance industries often deploy Retool to remain compliant. END"}
{"prompt":"Deploying [Self-hosted Retool](https:\/\/retool.com\/self-hosted\/) on your own infrastructure—such as on-premises—lets you build applications with data in your virtual private cloud (VPC) or behind your virtual private network (VPN). Businesses in the healthcare and finance industries often deploy Retool to remain compliant.\n\n###\n\n","completion":" You can deploy Retool locally and on several cloud infrastructure providers such as AWS, Azure, and Kubernetes. See our [GitHub repository](https:\/\/github.com\/tryretool\/retool-onpremise) for a full list of options and installation instructions. END"}
{"prompt":"You can deploy Retool locally and on several cloud infrastructure providers such as AWS, Azure, and Kubernetes. See our [GitHub repository](https:\/\/github.com\/tryretool\/retool-onpremise) for a full list of options and installation instructions.\n\n###\n\n","completion":" If you're evaluating a large production use case or need any of our [Enterprise plan](https:\/\/retool.com\/pricing\/) features, please [book a call](https:\/\/retool.com\/demo\/?utm_source=website&utm_medium=support-site&utm_campaign=chilipiper&utm_content=on-prem-setup). END"}
{"prompt":"Get started\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\n Learn about Self-hosted Retool's requirements, sign up, browse available versions, then navigate to the GitHub repository to get started.\\n <\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\" style=\\\"--aspect-ratio: 16\/9;\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/40364299-055e-48e1-b9b2-197ca9b5e040.webp\\\"\\n \/>\\n <\/div>\\n   <\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n          <li>\\n <a\\n href=\\\"network-storage-requirements\\\">\\n <div class=\\\"name\\\">Requirements<\/div>\\n <div class=\\\"description\\\">\\nRequirements for on-premise deployments.\\n <\/div>\\n <\/a>\\n <\/li>\\n             <li>\\n <a\\n href=\\\"https:\/\/my.retool.com\\\"\\n >\\n <div class=\\\"name\\\">Self-hosted Portal<\/div>\\n <div class=\\\"description\\\">\\nSign up for Self-hosted Retool.\\n <\/div>\\n <\/a>\\n <\/li>\\n             <li>\\n <a\\n href=\\\"https:\/\/updates.retool.com\/en?category=self-hosted%20release%20notes&role=s_kemHmglJ21233\\\"\\n >\\n <div class=\\\"name\\\">Releases<\/div>\\n <div class=\\\"description\\\">\\nExplore available versions and release notes.\\n <\/div>\\n <\/a>\\n <\/li>\\n          <li>\\n <a\\n href=\\\"https:\/\/github.com\/tryretool\/retool-onpremise\\\"\\n >\\n <div class=\\\"name\\\">GitHub repository<\/div>\\n <div class=\\\"description\\\">\\n   Deploy Self-hosted Retool to a wide range of services and platforms.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"SSO\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\nSign in with Google, Auth0, Okta, and more.<\/p>\\n <\/div>\\n <div class=\\\"get-started-image\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2ce6e042-4554-48d3-aab7-ead76904a5cc.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"sso-guides\\\"\\n >\\n <div class=\\\"name\\\">SSO guides<\/div>\\n <div class=\\\"description\\\">\\nExplore and configure SSO services. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"sso-generic-openid-provider\\\">\\n <div class=\\\"name\\\">SSO with OIDC<\/div>\\n <div class=\\\"description\\\">\\n Sign in with OpenID Connect authentication.\\n <\/div>\\n <\/a>\\n <\/li>\\n    <li>\\n <a href=\\\"sso-google-and-okta\\\">\\n <div class=\\\"name\\\">SSO with SAML<\/div>\\n <div class=\\\"description\\\">\\n Sign in with SAML authentication.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\"\n}\n[\/block] END"}
{"prompt":"Manage deployment\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<section class=\\\"get-started landing\\\">\\n <div class=\\\"get-started-description\\\">\\n <p>\\nUpgrade, scale, and manage your deployment.<\/p>\\n <\/div>\\n <div class=\\\"get-started-image resources\\\">\\n <img\\n src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/d12e1762-f8a8-4261-8ec1-f0456aa24458.webp\\\"\\n \/>\\n <\/div>\\n<\/section>\\n<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"updating-self-hosted-retool\\\">\\n <div class=\\\"name\\\">Update Self-hosted Retool<\/div>\\n <div class=\\\"description\\\">\\nUpdate your deployment to a newer version. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"deploy-retool-at-scale\\\">\\n <div class=\\\"name\\\">Deploy at scale<\/div>\\n <div class=\\\"description\\\">\\n Scale deployments as needs grow.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n\"\n}\n[\/block] END"}
{"prompt":"title: \"Connect to SendGrid\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect SendGrid to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can use SendGrid's API in Retool to send transactional emails to your users, pull data on past performance, and update sender permissions (among other things). END"}
{"prompt":"1. Get your SendGrid API Key\n\n###\n\n","completion":" You can see a list of your SendGrid API keys via the \"API Keys\" section of your SendGrid account's \"Settings\" page. If you'd like to use an existing API key, you'll have to get this from whoever set up the key — SendGrid doesn't let you display API keys after they're created. If you want to create a new API key to use with Retool, you can press the \"Create API Key\" button to create a new key and view it. Store it somewhere safe because SendGrid won't show it to you again! END"}
{"prompt":"You can see a list of your SendGrid API keys via the \"API Keys\" section of your SendGrid account's \"Settings\" page. If you'd like to use an existing API key, you'll have to get this from whoever set up the key — SendGrid doesn't let you display API keys after they're created. If you want to create a new API key to use with Retool, you can press the \"Create API Key\" button to create a new key and view it. Store it somewhere safe because SendGrid won't show it to you again!\n\n###\n\n","completion":" **SendGrid** > **Settings** > **API Keys** END"}
{"prompt":"**SendGrid** > **Settings** > **API Keys**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/21cee6d-Screen_Shot_2018-10-03_at_10.50.55_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/21cee6d-Screen_Shot_2018-10-03_at_10.50.55_AM.png)\n\n###\n\n","completion":" When you select the API Key Permissions, the methods available will change depending on the access you give this key. If you'd like to send mail through this resource, you'll need to select **Full Access** here: END"}
{"prompt":"When you select the API Key Permissions, the methods available will change depending on the access you give this key. If you'd like to send mail through this resource, you'll need to select **Full Access** here:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a0db8b5-sendgridperms.png) END"}
{"prompt":"2. Connecting SendGrid to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"SendGrid\" as the type. Enter your API key in the \"Access Token\" field. Press \"Save\" when you're done. END"}
{"prompt":"Create a new resource in Retool, and select \"SendGrid\" as the type. Enter your API key in the \"Access Token\" field. Press \"Save\" when you're done.\n\n###\n\n","completion":" **Resources** > **Create New** > **SendGrid** END"}
{"prompt":"**Resources** > **Create New** > **SendGrid**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c5d7d72-Screen_Shot_2021-04-19_at_10.59.15_AM.png) END"}
{"prompt":"3. Writing API requests\n\n###\n\n","completion":" You can now select your newly-created SendGrid resource from the _Resource_ dropdown when creating queries in your Retool apps. Retool ingests SendGrid's OpenAPI v3 spec, so you can select from a list of actions and check out descriptions for each. END"}
{"prompt":"You can now select your newly-created SendGrid resource from the _Resource_ dropdown when creating queries in your Retool apps. Retool ingests SendGrid's OpenAPI v3 spec, so you can select from a list of actions and check out descriptions for each.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ef5d448-Screen_Shot_2021-04-19_at_11.01.24_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ef5d448-Screen_Shot_2021-04-19_at_11.01.24_AM.png)\n\n###\n\n","completion":" For more in depth details on each operation and their required payloads, check out [the SendGrid docs here](https:\/\/sendgrid.com\/docs\/api-reference\/). END"}
{"prompt":"For more in depth details on each operation and their required payloads, check out [the SendGrid docs here](https:\/\/sendgrid.com\/docs\/api-reference\/).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b018d9a-sender_management.png) END"}
{"prompt":"4. Sending a basic `POST` request to the `\/mail\/send` endpoint\n\n###\n\n","completion":" If you've already worked with the SendGrid `\/mail\/send` API before, then you know that working with the complex body parameters – especially the `personalizations` one – can be...confusing at the least. SendGrid's docs walk through [a few examples here](https:\/\/sendgrid.com\/docs\/for-developers\/sending-email\/personalizations\/), but we thought it might be useful to one of our own for how we send emails from Retool apps. END"}
{"prompt":"If you've already worked with the SendGrid `\/mail\/send` API before, then you know that working with the complex body parameters – especially the `personalizations` one – can be...confusing at the least. SendGrid's docs walk through [a few examples here](https:\/\/sendgrid.com\/docs\/for-developers\/sending-email\/personalizations\/), but we thought it might be useful to one of our own for how we send emails from Retool apps.\n\n###\n\n","completion":" When you're sending a request from a Retool app, you might replace the content value with something like `{{ richTextEditor.value }}`, or the email field in the personalizations array with something like `{{ emailInput.value }}`. END"}
{"prompt":"When you're sending a request from a Retool app, you might replace the content value with something like `{{ richTextEditor.value }}`, or the email field in the personalizations array with something like `{{ emailInput.value }}`.\n\n###\n\n","completion":" For a more in depth tutorial for using Retool and SendGrid, check out [our blog post here](https:\/\/retool.com\/blog\/building-an-email-sender-app-with-retool-and-sendgrid\/). We also have an [out-of-the-box template](https:\/\/retool.com\/templates\/sendgrid-email-sender) you can use in Retool for sending transactional email. END"}
{"prompt":"title: \"Implement server-side pagination\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn about different ways to use server side pagination in your apps.\"\nhidden: true\n\n###\n\n","completion":" If you're building apps that use larger data sources, it's important to limit how much data your queries return. The more data to query, the more it can affect performance—especially if you're using complex queries that joins multiple tables. It's good practice to restrict queries so that they only retrieve the minimum amount of data needed, and to be mindful of how often queries run. END"}
{"prompt":"If you're building apps that use larger data sources, it's important to limit how much data your queries return. The more data to query, the more it can affect performance—especially if you're using complex queries that joins multiple tables. It's good practice to restrict queries so that they only retrieve the minimum amount of data needed, and to be mindful of how often queries run.\n\n###\n\n","completion":" One method is to use _server side pagination_. When configured, a query can use an offset to retrieve only a certain number of records needed at any one time—not all of them. As the offset increases, the query reruns and it continues to fetch only the records needed. END"}
{"prompt":"Server side table pagination\n\n###\n\n","completion":" In many cases you only want to display one page of data at a time, but still require the ability to access the entire range of data. Retool tables support server side pagination: you can enable and configure it in the Advanced Settings section of your table component. END"}
{"prompt":"In many cases you only want to display one page of data at a time, but still require the ability to access the entire range of data. Retool tables support server side pagination: you can enable and configure it in the Advanced Settings section of your table component.\n\n###\n\n","completion":" ![Enable the 'Server side pagination' toggle and create two queries.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0855035-Screen_Shot_2021-06-13_at_3.10.56_PM.png) END"}
{"prompt":"![Enable the 'Server side pagination' toggle and create two queries.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0855035-Screen_Shot_2021-06-13_at_3.10.56_PM.png)\n\n###\n\n","completion":" The `query.data` is used to fetch the data, while the `queryCount.data.count` is a different query that retrieves the number of total results. END"}
{"prompt":"The `query.data` is used to fetch the data, while the `queryCount.data.count` is a different query that retrieves the number of total results.\n\n###\n\n","completion":" In this case, here is what the query for fetching the data might look like: END"}
{"prompt":"In this case, here is what the query for fetching the data might look like:\n\n###\n\n","completion":" The important part of this query is the last two lines - the `limit` and `offset` statements use values from the table to fetch the correct range of rows. END"}
{"prompt":"The important part of this query is the last two lines - the `limit` and `offset` statements use values from the table to fetch the correct range of rows.\n\n###\n\n","completion":" The query to count the total results would look like this: END"}
{"prompt":"The query to count the total results would look like this:\n\n###\n\n","completion":" The key here is that the filter condition in both queries are _identical_ so that the counted number of rows is accurate. Your table should now automatically fetch the correct page of data whenever a user changes the selected page. END"}
{"prompt":"Server side pagination with dynamic column sorting\n\n###\n\n","completion":" To get the table's column sorting working with a server side paginated setup, you will need to utilize the `sortedColumn` and `sortedDesc` properties of the Table. Here is an example of how you might do that: END"}
{"prompt":"To get the table's column sorting working with a server side paginated setup, you will need to utilize the `sortedColumn` and `sortedDesc` properties of the Table. Here is an example of how you might do that:\n\n###\n\n","completion":" While verbose, this is necessary because SQL queries are converted into parameterized queries safe from SQL injection. END"}
{"prompt":"Limit - Offset based pagination\n\n###\n\n","completion":" This is most suitable to be used with SQL databases and APIs that support providing a page number \/ limit to responses. END"}
{"prompt":"1. Create a query and display the data in the Table, and then enable server side pagination\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/57efec9-11f600e-Screen_Shot_2019-03-07_at_12.24.18_AM.png) END"}
{"prompt":"2. Use the `.pageSize` and `.paginationOffset` in the query that pulls the data into your table\n\n###\n\n","completion":" See below for an example. END"}
{"prompt":"3. Provide the number of results to the query separately\n\n###\n\n","completion":" You can also set the table up to allow for jumping to arbitrary pages. To do this, you need to provide the Table the total number of results in the entire dataset being paginated through. Usually, you can do this in a separate query like below: END"}
{"prompt":"Cursor based pagination\n\n###\n\n","completion":" **1. Connect a Stripe REST API resource** END"}
{"prompt":"**1. Connect a Stripe REST API resource**\n\n###\n\n","completion":" First, let's create a Stripe API REST API resource so that we can make authenticated API calls to Stripe. Use the screenshot below as a template. END"}
{"prompt":"First, let's create a Stripe API REST API resource so that we can make authenticated API calls to Stripe. Use the screenshot below as a template.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9b6ca70-c03365e-Screen_Shot_2020-03-17_at_3.22.55_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9b6ca70-c03365e-Screen_Shot_2020-03-17_at_3.22.55_PM.png)\n\n###\n\n","completion":" **2. Show Stripe customers in a Table** END"}
{"prompt":"**2. Show Stripe customers in a Table**\n\n###\n\n","completion":" After creating the resource, we can make an API call to Stripe to retrieve a list of our customers and render them in a Table. END"}
{"prompt":"After creating the resource, we can make an API call to Stripe to retrieve a list of our customers and render them in a Table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/494726e-2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/494726e-2.png)\n\n###\n\n","completion":" **3. Setting up the Table's pagination settings** END"}
{"prompt":"**3. Setting up the Table's pagination settings**\n\n###\n\n","completion":" Stripe's API only returns a maximum of 100 records at a time, so if you'd like to be able to see the full list of data you'll need to use [Stripe's Pagination API](https:\/\/stripe.com\/docs\/api\/pagination). END"}
{"prompt":"Stripe's API only returns a maximum of 100 records at a time, so if you'd like to be able to see the full list of data you'll need to use [Stripe's Pagination API](https:\/\/stripe.com\/docs\/api\/pagination).\n\n###\n\n","completion":" Scroll down in the Table's property inspector and in the _Pagination_ section, enable _Server-side pagination_ and choose _Cursor based_ in the _Pagination type_ dropdown. END"}
{"prompt":"Scroll down in the Table's property inspector and in the _Pagination_ section, enable _Server-side pagination_ and choose _Cursor based_ in the _Pagination type_ dropdown.\n\n###\n\n","completion":" Then in the _Next page cursor_ field, we need to specify to the Table what the next page's cursor should be. In this case, this is just the `id` of the last customer in the Table. END"}
{"prompt":"Then in the _Next page cursor_ field, we need to specify to the Table what the next page's cursor should be. In this case, this is just the `id` of the last customer in the Table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6ea5720-3.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6ea5720-3.png)\n\n###\n\n","completion":" **4. Connecting the query to the table's pagination settings** END"}
{"prompt":"**4. Connecting the query to the table's pagination settings**\n\n###\n\n","completion":" Next, we'll need to modify the API query to make use of the Table's pagination properties. You can use the screenshot below as a template. END"}
{"prompt":"Next, we'll need to modify the API query to make use of the Table's pagination properties. You can use the screenshot below as a template.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0660f4b-4.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0660f4b-4.png)\n\n###\n\n","completion":" **How this works** END"}
{"prompt":"**How this works**\n\n###\n\n","completion":" When you click the next page button in the Table, the Table updates it's `afterCursor` property to be the value we specified in the _Next page cursor_ property, which causes the API query to re-run. The new set of data is then **appended** to the Table's data. Since the Table stores the previously loaded results from the API, it's possible to go back to a previous page in the Table without re-running the API call. END"}
{"prompt":"GraphQL cursor based pagination\n\n###\n\n","completion":" For more information on this, you can see <https:\/\/facebook.github.io\/relay\/graphql\/connections.htm> END"}
{"prompt":"1. Create a GraphQL query with parameters that support pagination\n\n###\n\n","completion":" See below for an example how to do this with the Github GraphQL API. We've filled in the arguments with placeholder values so that the query can run without errors. END"}
{"prompt":"See below for an example how to do this with the Github GraphQL API. We've filled in the arguments with placeholder values so that the query can run without errors.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3fe2289-0597fe4-Screen_Shot_2019-03-07_at_12.31.01_AM.png) END"}
{"prompt":"2. Display the data in a Table\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/156bf79-e1182c7-Screen_Shot_2019-03-07_at_12.33.02_AM.png) END"}
{"prompt":"3. Turn on server side pagination in the Table and choose \"GraphQL Cursor based\" in the pagination type\n\n###\n\n","completion":" After choosing it, use a `{{ }}` expression to describe the cursor that would be used to pull the previous page, and another expression to describe the cursor that would be used to show the next page of data. END"}
{"prompt":"After choosing it, use a `{{ }}` expression to describe the cursor that would be used to pull the previous page, and another expression to describe the cursor that would be used to show the next page of data.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4eea94e-c7f2b00-Screen_Shot_2019-03-07_at_12.34.04_AM.png) END"}
{"prompt":"4. Replace the placeholder variables in the query with table properties\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5f87684-9a54b84-Screen_Shot_2019-03-07_at_12.35.29_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5f87684-9a54b84-Screen_Shot_2019-03-07_at_12.35.29_AM.png)\n\n###\n\n","completion":" Note how we alternate between using `first` and `last` depending on whether or not the `beforeCursor` or `afterCursor` property is defined on the table. END"}
{"prompt":"5. Testing it out and understanding how it works\n\n###\n\n","completion":" There's two scenarios: END"}
{"prompt":"There's two scenarios:\n\n###\n\n","completion":" A) The user tries to move to the next page on the table END"}
{"prompt":"A) The user tries to move to the next page on the table\n\n###\n\n","completion":" When this happens the table sets the `afterCursor` property to be whatever the current \"Next Page Cursor\" value is currently. At the same time, it sets the 'beforeCursor\" property to `null`. Doing this solves for the ambiguity when paginating forwards vs paginating backwards. END"}
{"prompt":"When this happens the table sets the `afterCursor` property to be whatever the current \"Next Page Cursor\" value is currently. At the same time, it sets the 'beforeCursor\" property to `null`. Doing this solves for the ambiguity when paginating forwards vs paginating backwards.\n\n###\n\n","completion":" B) The user tries to move to the previous page on the table END"}
{"prompt":"B) The user tries to move to the previous page on the table\n\n###\n\n","completion":" Similarly to the previous example, the table sets the `beforeCursor` property to the current `Previous Page Cursor` and then sets the `afterCursor` property to `null`. END"}
{"prompt":"title: \"Optimize queries with server-side pagination\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to implement server-side pagination of data.\"\nhidden: false\n\n###\n\n","completion":" When building apps using large data sets, it's important to limit how much data your queries return. Returning large sets of data at once can affect performance in your apps, especially when joining multiple tables in complex queries. END"}
{"prompt":"_Server-side pagination_ is a best practice to optimize queries by returning only the results necessary to populate a given view. When new data is needed to populate the view, the query is triggered again and the server retrieves the next set of results.\n\n###\n\n","completion":" The demo app shows examples of server-side pagination using [List View](https:\/\/retool.com\/components\/list-view), [Table](https:\/\/retool.com\/components\/table), and [Pagination](https:\/\/retool.com\/components\/pagination) components. You can also [download a JSON export](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/31101a7e-2df3-44a2-a90e-a300adbba8f7.json) of the app to test it yourself. END"}
{"prompt":"The demo app shows examples of server-side pagination using [List View](https:\/\/retool.com\/components\/list-view), [Table](https:\/\/retool.com\/components\/table), and [Pagination](https:\/\/retool.com\/components\/pagination) components. You can also [download a JSON export](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/31101a7e-2df3-44a2-a90e-a300adbba8f7.json) of the app to test it yourself.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fdemos%2Fff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/4601378e-73af-4d58-bda7-4a943dc40ba3\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"With client-side pagination, the client can access an entire data set at once and use its count to determine how many pages a view requires. With server-side pagination, only a subset of data is accessible at once, so you'll need another query to retrieve the total number of rows in your data set. Depending on your app, you might use this query directly or as part of a calculation to determine how many pages your view needs.\n\n###\n\n","completion":" For example, to determine a **Pagination** component's **Page count**, you can divide the total row count by the number of items in a single view. END"}
{"prompt":"For example, to determine a **Pagination** component's **Page count**, you can divide the total row count by the number of items in a single view.\n\n###\n\n","completion":" Be sure any filters used in your pagination query are also used in the total row count query, so each returns the same number of rows. END"}
{"prompt":"Server-side pagination with the Table component\n\n###\n\n","completion":" The [Table component](https:\/\/retool.com\/components\/Table) has built-in support for server-side pagination. In the **Inspect** tab next to **Interaction**, click the **Advanced settings** toggle and select the box next to **Enable server side pagination**. You can then choose to paginate using **Limit offset based**, **Cursor based**, or **GraphQL Relay cursor based** pagination types. END"}
{"prompt":"The [Table component](https:\/\/retool.com\/components\/Table) has built-in support for server-side pagination. In the **Inspect** tab next to **Interaction**, click the **Advanced settings** toggle and select the box next to **Enable server side pagination**. You can then choose to paginate using **Limit offset based**, **Cursor based**, or **GraphQL Relay cursor based** pagination types.\n\n###\n\n","completion":" Each server-side pagination type requires the **Total row count** field. END"}
{"prompt":"Limit offset-based\n\n###\n\n","completion":" Table includes the following properties to support limit offset-based pagination. END"}
{"prompt":"GraphQL Relay cursor-based\n\n###\n\n","completion":" Retool supports cursor-based pagination using [Relay's GraphQL server specification](https:\/\/relay.dev\/docs\/guides\/graphql-server-specification\/). For more information, see the [Relay GraphQL Cursor Connections](https:\/\/relay.dev\/graphql\/connections.htm) documentation. END"}
{"prompt":"Retool supports cursor-based pagination using [Relay's GraphQL server specification](https:\/\/relay.dev\/docs\/guides\/graphql-server-specification\/). For more information, see the [Relay GraphQL Cursor Connections](https:\/\/relay.dev\/graphql\/connections.htm) documentation.\n\n###\n\n","completion":" GraphQL queries accept the `first`, `last`, `after`, and `before` arguments to identify the data to retrieve. You can determine whether to include `first` or `last` parameters by checking the table's `beforeCursor` and `afterCursor` properties. END"}
{"prompt":"GraphQL queries accept the `first`, `last`, `after`, and `before` arguments to identify the data to retrieve. You can determine whether to include `first` or `last` parameters by checking the table's `beforeCursor` and `afterCursor` properties.\n\n###\n\n","completion":" To specify values for **Previous cursor** and **Next cursor**, use the `cursor` field from the API response. To specify a value for **Has next page**, use the `pageInfo.hasNextPage` field from the API response. END"}
{"prompt":"To specify values for **Previous cursor** and **Next cursor**, use the `cursor` field from the API response. To specify a value for **Has next page**, use the `pageInfo.hasNextPage` field from the API response.\n\n###\n\n","completion":" ![GraphQL query with cursor pagination](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/99ed09ff-6929-410a-8d14-0a8b3d49b861.png) END"}
{"prompt":"title: \"Share data between apps\"\ncategorySlug: \"web-apps\"\nexcerpt: \"Learn how to share data between apps and create a multi-page experience.\"\nhidden: false\n\n###\n\n","completion":" Retool apps exist as single-page applications. You can [arrange components together](https:\/\/docs.retool.com\/docs\/design-and-usability#group-components-into-containers) to organize your app's page into different areas of functionality—components like the [Tabbed Container](https:\/\/retool.com\/components\/container) reduce visual clutter by showing users only what they need. As your app evolves and becomes more complex, you can separate functions even more. END"}
{"prompt":"Retool apps exist as single-page applications. You can [arrange components together](https:\/\/docs.retool.com\/docs\/design-and-usability#group-components-into-containers) to organize your app's page into different areas of functionality—components like the [Tabbed Container](https:\/\/retool.com\/components\/container) reduce visual clutter by showing users only what they need. As your app evolves and becomes more complex, you can separate functions even more.\n\n###\n\n","completion":" A common approach for scaling apps built with JavaScript frameworks is to implement routing for additional pages. With Retool, you build separate apps and send data from one to another to create a multi-page app experience (e.g., passing a customer's email address from a CRM app to a Payments History app). This approach maximizes performance, reduces maintenance, and improves the user experience. END"}
{"prompt":"A common approach for scaling apps built with JavaScript frameworks is to implement routing for additional pages. With Retool, you build separate apps and send data from one to another to create a multi-page app experience (e.g., passing a customer's email address from a CRM app to a Payments History app). This approach maximizes performance, reduces maintenance, and improves the user experience.\n\n###\n\n","completion":" You can send data directly from one app to another using either [URL query strings](#sharing-data-using-url-query-strings) or [localStorage](#sharing-data-using-localstorage). Query strings are best suited for smaller pieces of information, while localStorage can save larger amounts of data locally to the browser. As your apps become interconnected, you can create a shared navigation menu to improve the multi-page experience further. END"}
{"prompt":"Sharing data using URL query strings\n\n###\n\n","completion":" Every app has a unique URL. You can append [query strings](https:\/\/en.wikipedia.org\/wiki\/Query_string) to this URL and retrieve them using the `urlparams` object. There are two ways to pass data from one app to another with query strings: END"}
{"prompt":"Using Event handlers\n\n###\n\n","completion":" An [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) acts in response to specified user interaction, such as a button click. The **Go to app** action opens another app and includes additional options to create query strings. END"}
{"prompt":"An [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) acts in response to specified user interaction, such as a button click. The **Go to app** action opens another app and includes additional options to create query strings.\n\n###\n\n","completion":" ![Using table data for query strings.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/303f2a5-Screen_Shot_2021-10-15_at_4.47.18_PM.f32836af14f548d88d9fbae142369614.png) END"}
{"prompt":"![Using table data for query strings.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/303f2a5-Screen_Shot_2021-10-15_at_4.47.18_PM.f32836af14f548d88d9fbae142369614.png)\n\n###\n\n","completion":" Specify a name for the query string and a reference to some data to pass. For example, a query string value of `{{table1.selectedRow.data.name}}` would include the value for the `name` column from this table’s selected row. END"}
{"prompt":"Manually constructing a link\n\n###\n\n","completion":" You can also link to an app with query strings attached to the URL. This method can be helpful if you need to link to an app differently or share data outside of Retool. END"}
{"prompt":"You can also link to an app with query strings attached to the URL. This method can be helpful if you need to link to an app differently or share data outside of Retool.\n\n###\n\n","completion":" Copy the URL of the app you want to send data to, and add your query strings: END"}
{"prompt":"Retrieving query string values\n\n###\n\n","completion":" You retrieve any query strings appended to the app’s URL from the `urlparams` object. For example, you can dynamically include the value of a particular query string or display a placeholder if the value doesn't exist: END"}
{"prompt":"You retrieve any query strings appended to the app’s URL from the `urlparams` object. For example, you can dynamically include the value of a particular query string or display a placeholder if the value doesn't exist:\n\n###\n\n","completion":" ![Using a query string value in a Text component.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/aee6175-Screen_Shot_2021-10-15_at_5.01.27_PM.1baf79136d34499b8d3d45460bc47562.png) END"}
{"prompt":"Sharing data using localStorage\n\n###\n\n","completion":" [localStorage](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Window\/localStorage) is a flexible solution for temporarily storing data locally to the browser. All apps in your Retool organization have the same [origin](https:\/\/developer.mozilla.org\/en-US\/docs\/Glossary\/Origin) and share access to its localStorage. You cannot share data outside of your Retool organization using localStorage—use query strings if you need to accomplish this. END"}
{"prompt":"Considerations\n\n###\n\n","completion":" Keep in mind the following considerations to avoid common pitfalls when implementing localStorage: END"}
{"prompt":"Saving data\n\n###\n\n","completion":" Use `localStorage.setValue(key, value)` to save data as key-value pairs to localStorage. You can also save objects to localStorage if you want to share entire data sets rather than individual values. END"}
{"prompt":"Use `localStorage.setValue(key, value)` to save data as key-value pairs to localStorage. You can also save objects to localStorage if you want to share entire data sets rather than individual values.\n\n###\n\n","completion":" ![Saving table data to localStorage.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5ee063b-Screen_Shot_2021-10-18_at_1.07.00_PM.789cf5023a254bbd8048b410ba635e44.png) END"}
{"prompt":"![Saving table data to localStorage.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5ee063b-Screen_Shot_2021-10-18_at_1.07.00_PM.789cf5023a254bbd8048b410ba635e44.png)\n\n###\n\n","completion":" You can use the [State](https:\/\/docs.retool.com\/docs\/app-editor) tab to view `localStorage` and confirm that your app data was successfully saved. Click the **Left panel** button, located above the canvas, to open the Modal Browser. Expand `localStorage` to reveal the currently stored values. END"}
{"prompt":"You can use the [State](https:\/\/docs.retool.com\/docs\/app-editor) tab to view `localStorage` and confirm that your app data was successfully saved. Click the **Left panel** button, located above the canvas, to open the Modal Browser. Expand `localStorage` to reveal the currently stored values.\n\n###\n\n","completion":" ![Viewing data stored in localStorage with the Modal Browser.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/07c2077-Screen_Shot_2021-10-18_at_1.13.39_PM.56d4ed214cde48dea45ec6ce6ddbc846.png) END"}
{"prompt":"Retrieving data\n\n###\n\n","completion":" Use `localStorage.values` to retrieve saved data from localStorage: END"}
{"prompt":"Use `localStorage.values` to retrieve saved data from localStorage:\n\n###\n\n","completion":" ![Displaying localStorage data in a Text component.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d7f2e26-Screen_Shot_2021-10-18_at_1.14.35_PM.d74b43d13e3c4ad2a79b894089b981ab.png) END"}
{"prompt":"Deleting data\n\n###\n\n","completion":" We recommend you delete data from localStorage after retrieving it if it's no longer needed. Use `localStorage.clear()` to clear all localStorage data from your apps. You can also clear specific values by setting an empty value for a specified key: END"}
{"prompt":"Navigating between apps\n\n###\n\n","completion":" If your users frequently use different apps, consider using the [Navigation](https:\/\/retool.com\/components\/navigation) component to improve the multi-page experience. Menu items can run queries, link to external URLs, and open apps—including options for query strings. END"}
{"prompt":"If your users frequently use different apps, consider using the [Navigation](https:\/\/retool.com\/components\/navigation) component to improve the multi-page experience. Menu items can run queries, link to external URLs, and open apps—including options for query strings.\n\n###\n\n","completion":" You can also create a [module](https:\/\/docs.retool.com\/docs\/modules)—a reusable group of components and queries—containing your navigation menu to save time implementing it across your apps. END"}
{"prompt":"You can also create a [module](https:\/\/docs.retool.com\/docs\/modules)—a reusable group of components and queries—containing your navigation menu to save time implementing it across your apps.\n\n###\n\n","completion":" ![Adding a module to the Header frame.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4fa908f-Screen_Shot_2021-10-20_at_11.16.10_AM.png) END"}
{"prompt":"![Adding a module to the Header frame.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4fa908f-Screen_Shot_2021-10-20_at_11.16.10_AM.png)\n\n###\n\n","completion":" You create a module in much the same way as an app, and they can be added to any app in your organization. Select the **Insert** tab in the right panel, select **Modules,** then drag the module to the canvas. END"}
{"prompt":"You create a module in much the same way as an app, and they can be added to any app in your organization. Select the **Insert** tab in the right panel, select **Modules,** then drag the module to the canvas.\n\n###\n\n","completion":" ![Creating a module that contains a Navigation component.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/257dbed-Screen_Shot_2021-10-20_at_11.15.14_AM.png) END"}
{"prompt":"title: \"Share apps outside your organization\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to share or embed apps to allow access without logging into Retool.\"\nhidden: false\n\n###\n\n","completion":" You can share Retool apps by embedding them in iframes or enabling public links. You can also add authentication to embedded apps if Retool is integrated with the same Identity Provider as the parent application. Adding authentication requires that you [self-host Retool](https:\/\/docs.retool.com\/docs\/self-hosted). END"}
{"prompt":"You can share Retool apps by embedding them in iframes or enabling public links. You can also add authentication to embedded apps if Retool is integrated with the same Identity Provider as the parent application. Adding authentication requires that you [self-host Retool](https:\/\/docs.retool.com\/docs\/self-hosted).\n\n###\n\n","completion":" If your apps don't need user authentication, you can create [Public apps](#public-apps) and embed them into your parent application using a public link. END"}
{"prompt":"Embed apps with JavaScript\n\n###\n\n","completion":" You can embed apps using Retool's JavaScript SDK. After including the JavaScript SDK library, you initialize an instance of your Retool app and embed it at the specified location using `window.retool.RetoolDashboard()`. END"}
{"prompt":"Embed apps with React\n\n###\n\n","completion":" To embed apps with React, install the `react-retool` npm module and then import it into your project. END"}
{"prompt":"To embed apps with React, install the `react-retool` npm module and then import it into your project.\n\n###\n\n","completion":" See the [React wrapper](https:\/\/www.npmjs.com\/package\/react-retool) documentation for more information. END"}
{"prompt":"See the [React wrapper](https:\/\/www.npmjs.com\/package\/react-retool) documentation for more information.\n\n###\n\n","completion":" If you need to embed a Retool app into another web app, your code might look something like this. END"}
{"prompt":"Pass data between embedded and parent apps\n\n###\n\n","completion":" Embedded Retool apps can use Parent Window Queries to read values from the parent application. They can also use [JavaScript queries](https:\/\/docs.retool.com\/docs\/scripting-retool) to pass data back to the parent app using the browser's `postMessage` API. END"}
{"prompt":"Pass data to an embedded app\n\n###\n\n","completion":" You can read data from parent apps with **Parent Window Queries**. If you embed your app with JavaScript, pass the CSS selector for the value to read. With React, pass the key in the `data` prop that you want to read. END"}
{"prompt":"You can read data from parent apps with **Parent Window Queries**. If you embed your app with JavaScript, pass the CSS selector for the value to read. With React, pass the key in the `data` prop that you want to read.\n\n###\n\n","completion":" ![Parent Window Query reading the value of the element](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/5ff2411a-51bb-4c1e-a9de-53a82d70acb5.png) END"}
{"prompt":"Pass data to the parent app\n\n###\n\n","completion":" To pass data to the parent app, create a JavaScript query and use the `postMessage` API to send the data. For example, a query that sends the email address of the `current_user` to the parent app might look like this. END"}
{"prompt":"To pass data to the parent app, create a JavaScript query and use the `postMessage` API to send the data. For example, a query that sends the email address of the `current_user` to the parent app might look like this.\n\n###\n\n","completion":" ![Posting a message to the parent application.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8f22d04-Screen_Shot_2021-08-06_at_12.38.52_PM.png) END"}
{"prompt":"![Posting a message to the parent application.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8f22d04-Screen_Shot_2021-08-06_at_12.38.52_PM.png)\n\n###\n\n","completion":" On the parent application side, the code to listen to and handle these messages might look like this. END"}
{"prompt":"On the parent application side, the code to listen to and handle these messages might look like this.\n\n###\n\n","completion":" The code to handle `postMessage` requests depends on your specific implementation. You might need to write something more complex than the above example. END"}
{"prompt":"User authentication in embedded apps\n\n###\n\n","completion":" It's common to embed Retool apps into existing portals, tools, and applications. This makes it easier to provide a consistent and efficient app experience for external users, while making sure the data they see is secure. END"}
{"prompt":"It's common to embed Retool apps into existing portals, tools, and applications. This makes it easier to provide a consistent and efficient app experience for external users, while making sure the data they see is secure.\n\n###\n\n","completion":" The following sections explain how to provide a seamless experience to external users, without requiring a double-login (logging into the parent application, and separately into the embedded Retool app). END"}
{"prompt":"Retool Embed\n\n###\n\n","completion":" [Retool Embed](https:\/\/docs.retool.com\/docs\/retool-embed) is the recommended approach for authenticating end users into embedded Retool apps. You can use your existing authentication flow to generate a one-time URL that you can then use within an iframe. END"}
{"prompt":"User authentication with an Identity Provider\n\n###\n\n","completion":" If you have SAML or OIDC SSO set up on your self-hosted Retool instance, you can also authenticate end users into embedded Retool apps. As long as your existing web application uses the same SSO Identity Provider (IDP) as Retool, you can share the user's authentication state between the parent and embedded apps. END"}
{"prompt":"Prevent double logins\n\n###\n\n","completion":" If you configure your web application and Retool to use the same IDP, a user might have to SSO into the web application, and then have to SSO again into the embedded Retool app. To avoid this, you can set up Retool to automatically sign the user in with SSO instead of displaying a login screen. This works when the user has an existing, authenticated session on the IDP. END"}
{"prompt":"If you configure your web application and Retool to use the same IDP, a user might have to SSO into the web application, and then have to SSO again into the embedded Retool app. To avoid this, you can set up Retool to automatically sign the user in with SSO instead of displaying a login screen. This works when the user has an existing, authenticated session on the IDP.\n\n###\n\n","completion":" To configure this, set one of these [environment variables](https:\/\/docs.retool.com\/reference\/environment-variables-reference#authentication) to `true` in your `docker.env` file. END"}
{"prompt":"Public apps\n\n###\n\n","completion":" You can share Retool apps publicly with a **Public access link**. You can share this link directly with users or embed the app in an iframe in other applications or web pages. These apps can be accessed by anyone on the internet and always reflect the production environment of the app. END"}
{"prompt":"You can share Retool apps publicly with a **Public access link**. You can share this link directly with users or embed the app in an iframe in other applications or web pages. These apps can be accessed by anyone on the internet and always reflect the production environment of the app.\n\n###\n\n","completion":" To create a **Public access link**, open an app in the App editor and click the **Share** button in the top right. Select the **Public** tab and click **Enable public link**. END"}
{"prompt":"To create a **Public access link**, open an app in the App editor and click the **Share** button in the top right. Select the **Public** tab and click **Enable public link**.\n\n###\n\n","completion":" ![Enabling a public access link](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2f87f741-78e7-4084-8ae7-2a01da626c2a.png) END"}
{"prompt":"![Enabling a public access link](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/2f87f741-78e7-4084-8ae7-2a01da626c2a.png)\n\n###\n\n","completion":" The following example is a demo app from our [Quickstart](https:\/\/docs.retool.com\/docs\/quickstart) guide. END"}
{"prompt":"The following example is a demo app from our [Quickstart](https:\/\/docs.retool.com\/docs\/quickstart) guide.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"demo\\\">\\n <img src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/demos\/ff75614f-cb21-444f-a0e3-cda245c0c9ba.svg\\\" \/>\\n <iframe height=\\\"500px\\\" width=\\\"100%\\\" border=\\\"none\\\" src=\\\"https:\/\/docsdemos.retool.com\/embedded\/public\/df79d58c-bf53-4c1b-a229-2bcb11f6c38d\\\" style=\\\"border: none;\\\"><\/iframe>\\n<\/div>\"\n}\n[\/block] END"}
{"prompt":"title: \"Run shell scripts on remote hosts\"\ncategorySlug: \"data-queries\"\nexcerpt: \"Learn how to connect a shell script to Retool.\"\nhidden: true\n\n###\n\n","completion":" Imagine you have python scripts that you would like to trigger from a Retool application. You could build an API that accepts requests and runs these scripts, but that is a lot of work to build, deploy, and maintain. If you had to run these scripts manually, you would likely ssh into the remote host and directly call them. The Shell Script resource allows your Retool applications to do this; connect directly to remote machines and execute arbitrary commands. END"}
{"prompt":"1. Go to `settings\/beta` and toggle Shell Scripting\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c369f2c-Screen_Shot_2021-07-23_at_4.45.38_PM.png) END"}
{"prompt":"2. Create a new resource & choose Shell Script\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e1b484a-Screen_Shot_2021-07-23_at_4.47.04_PM.png) END"}
{"prompt":"3. Enter machine information\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/22db270-Screen_Shot_2021-07-23_at_4.51.56_PM.png) END"}
{"prompt":"4. Download Retool's public key\n\n###\n\n","completion":" Your instance of Retool generates a public and private key pair. For Retool to connect with your remote host, you must add Retool's public key. This is the same process we recommend for configuring bastion hosts, and detailed steps can be found [here](https:\/\/docs.retool.com\/docs\/enabling-ssh-tunnels). END"}
{"prompt":"5. Test connection and create resource\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/40d49f3-NmmQyAyw.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/40d49f3-NmmQyAyw.png)\n\n###\n\n","completion":" Test the connection by clicking the Test Connection button right next to the Create Resource button in the bottom right. END"}
{"prompt":"Calling simple, static commands\n\n###\n\n","completion":" Any command supplied to a Shell Script query will be executed on the remote host. A simple application might allow a user to click a button to get the uptime of that machine. To do this, we need a query that calls \"uptime\", a button to trigger this query, and a place to display the result. END"}
{"prompt":"Any command supplied to a Shell Script query will be executed on the remote host. A simple application might allow a user to click a button to get the uptime of that machine. To do this, we need a query that calls \"uptime\", a button to trigger this query, and a place to display the result.\n\n###\n\n","completion":" ![Uptime query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8716af3-Screen_Shot_2021-07-23_at_5.01.31_PM.png) END"}
{"prompt":"![Uptime query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8716af3-Screen_Shot_2021-07-23_at_5.01.31_PM.png)\n\n###\n\n","completion":" The result of a Shell Script query is an object with three keys: END"}
{"prompt":"The result of a Shell Script query is an object with three keys:\n\n###\n\n","completion":" ![A text component displaying the results of \\`getUptime.data.stdOut\\`](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/53dc785-Screen_Shot_2021-07-23_at_5.05.09_PM.png) END"}
{"prompt":"Calling commands with dynamic arguments\n\n###\n\n","completion":" In real applications, we need to trigger commands with dynamic arguments. The Shell Script resource can take arguments from a Retool application via the `{{ }}`. For example, if we had a dropdown with two different commands, we could run one of them by consuming `{{ dropdown1.value }}` as Shell Script arguments. END"}
{"prompt":"In real applications, we need to trigger commands with dynamic arguments. The Shell Script resource can take arguments from a Retool application via the `{{ }}`. For example, if we had a dropdown with two different commands, we could run one of them by consuming `{{ dropdown1.value }}` as Shell Script arguments.\n\n###\n\n","completion":" ![Calling a command with dynamic arguments.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1cdb3df-Screen_Shot_2021-07-23_at_5.11.18_PM.png) END"}
{"prompt":"Authentication\n\n###\n\n","completion":" This tutorial covers Shopify’s GraphQL API. Shopify also provides a REST API you can connect to Retool, which follows the same general principles. END"}
{"prompt":"This tutorial covers Shopify’s GraphQL API. Shopify also provides a REST API you can connect to Retool, which follows the same general principles.\n\n###\n\n","completion":" _Note: Retool currently only supports connecting to the Shopify API via our REST API or GraphQL integrations._ END"}
{"prompt":"Creating a Shopify app\n\n###\n\n","completion":" To query your Shopify data via the GraphQL API, you’ll need to create a private app and retrieve your API Key. Shopify uses basic auth for private apps. END"}
{"prompt":"To query your Shopify data via the GraphQL API, you’ll need to create a private app and retrieve your API Key. Shopify uses basic auth for private apps.\n\n###\n\n","completion":" To get started, head to your Shopify storefront, and click on “apps” in the left sidebar. END"}
{"prompt":"To get started, head to your Shopify storefront, and click on “apps” in the left sidebar.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8bddad6-screencapture-retooltest-myshopify-admin-apps-2020-11-09-11_32_54.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8bddad6-screencapture-retooltest-myshopify-admin-apps-2020-11-09-11_32_54.png)\n\n###\n\n","completion":" Click on “Manage private apps” and then “Create private app” (If you’ve already created an app, you can skip this step). You may need to enable private app creation in your dashboard if you haven’t already. On the app creation screen, give your app a nice name (“Retool App”) and put in a contact email. You’ll also need to decide on the permission scopes for this app - we’ve given ours read and write permissions for customers, orders, inventory, product listings, and products. You can change all of this information after you create your app, so don’t sweat it too much. END"}
{"prompt":"Click on “Manage private apps” and then “Create private app” (If you’ve already created an app, you can skip this step). You may need to enable private app creation in your dashboard if you haven’t already. On the app creation screen, give your app a nice name (“Retool App”) and put in a contact email. You’ll also need to decide on the permission scopes for this app - we’ve given ours read and write permissions for customers, orders, inventory, product listings, and products. You can change all of this information after you create your app, so don’t sweat it too much.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9fde6f2-screencapture-retooltest-myshopify-admin-apps-private-new-2020-11-09-11_36_17.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9fde6f2-screencapture-retooltest-myshopify-admin-apps-private-new-2020-11-09-11_36_17.png)\n\n###\n\n","completion":" Click “Save”, and you should be redirected to your new app’s settings page. What we’re looking for is the example URL – it should be in the format of `https:\/\/{apikey}:{password}@{hostname}\/admin\/api\/{version}\/graphql.json`. Copy that and let’s head into Retool. END"}
{"prompt":"Click “Save”, and you should be redirected to your new app’s settings page. What we’re looking for is the example URL – it should be in the format of `https:\/\/{apikey}:{password}@{hostname}\/admin\/api\/{version}\/graphql.json`. Copy that and let’s head into Retool.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6888cce-screencapture-retooltest-myshopify-admin-apps-private-245428486280-2020-11-09-11_51_46.png) END"}
{"prompt":"Connecting to Retool\n\n###\n\n","completion":" Pop open your Retool homepage (or [create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one), and click on the “Resources” tab up top. Tap on the “Create new” button on the top right, and choose “GraphQL” as your resource type. Then, paste your URL into the “Base URL” field. Finally, click “Create resource” and you should be good to go. END"}
{"prompt":"Pop open your Retool homepage (or [create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one), and click on the “Resources” tab up top. Tap on the “Create new” button on the top right, and choose “GraphQL” as your resource type. Then, paste your URL into the “Base URL” field. Finally, click “Create resource” and you should be good to go.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7596ea1-screencapture-retoolin-tryretool-resources-new-graphql-2020-11-09-11_58_00.png) END"}
{"prompt":"Getting customers\n\n###\n\n","completion":" Let’s display our first 20 customers in a Table component. Start by creating a new query in your query editor (“+ new”) and selecting your Shopify GraphQL API resource from the “Resource” dropdown. This GraphQL query fetches some basic information for the first 20 customers in your Shopify store: END"}
{"prompt":"Let’s display our first 20 customers in a Table component. Start by creating a new query in your query editor (“+ new”) and selecting your Shopify GraphQL API resource from the “Resource” dropdown. This GraphQL query fetches some basic information for the first 20 customers in your Shopify store:\n\n###\n\n","completion":" Click “Preview” to see your results, and make sure to hit “Save and run” to save your results. You can also name the query something descriptive, like `getCustomers`. END"}
{"prompt":"Click “Preview” to see your results, and make sure to hit “Save and run” to save your results. You can also name the query something descriptive, like `getCustomers`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8b374f0-EV4lwW2s.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8b374f0-EV4lwW2s.png)\n\n###\n\n","completion":" To display this data in a table, drag a new table onto your Retool canvas from the right component sidebar (click on the canvas to bring it up). The data format is a little tricky - click on your new table, head over to the right sidebar (the inspector), and paste this into the “Data” field: END"}
{"prompt":"To display this data in a table, drag a new table onto your Retool canvas from the right component sidebar (click on the canvas to bring it up). The data format is a little tricky - click on your new table, head over to the right sidebar (the inspector), and paste this into the “Data” field:\n\n###\n\n","completion":" `{{ getCustomers.data.customers.edges.map(customer => customer.node) }}` END"}
{"prompt":"`{{ getCustomers.data.customers.edges.map(customer => customer.node) }}`\n\n###\n\n","completion":" This JavaScript references the `.data` property of the `getCustomers` query, destructures two levels deep (`.customers.edges`) and then maps through each item in the resulting array to pull out the data for each customer. END"}
{"prompt":"This JavaScript references the `.data` property of the `getCustomers` query, destructures two levels deep (`.customers.edges`) and then maps through each item in the resulting array to pull out the data for each customer.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1b995d9-iBCwbZx8.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1b995d9-iBCwbZx8.png)\n\n###\n\n","completion":" See below for how to server side paginate this data, so you can see all of your customers in the table. END"}
{"prompt":"Getting orders\n\n###\n\n","completion":" Let’s display our first 10 orders in a Table component. Start by creating a new query in your query editor (“+ new”) and selecting your Shopify GraphQL API resource from the “Resource” dropdown. This GraphQL query fetches some basic information for the first 10 orders in your Shopify store: END"}
{"prompt":"Let’s display our first 10 orders in a Table component. Start by creating a new query in your query editor (“+ new”) and selecting your Shopify GraphQL API resource from the “Resource” dropdown. This GraphQL query fetches some basic information for the first 10 orders in your Shopify store:\n\n###\n\n","completion":" Click “Preview” to see your results, and make sure to hit “Save and run” to save your results. You can also name the query something descriptive, like getOrders. END"}
{"prompt":"Click “Preview” to see your results, and make sure to hit “Save and run” to save your results. You can also name the query something descriptive, like getOrders.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a5ad73a-EG-OL-WQ.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a5ad73a-EG-OL-WQ.png)\n\n###\n\n","completion":" To display this data in a table, drag a new table onto your Retool canvas from the right component sidebar (click on the canvas to bring it up). The data format is a little tricky - click on your new table, head over to the right sidebar (the inspector), and paste this into the “Data” field: END"}
{"prompt":"To display this data in a table, drag a new table onto your Retool canvas from the right component sidebar (click on the canvas to bring it up). The data format is a little tricky - click on your new table, head over to the right sidebar (the inspector), and paste this into the “Data” field:\n\n###\n\n","completion":" `{{ getOrders.data.orders.edges.map(order => order.node) }}` END"}
{"prompt":"`{{ getOrders.data.orders.edges.map(order => order.node) }}`\n\n###\n\n","completion":" This JavaScript references the `.data` property of the `getOrders` query, destructures two levels deep (`.orders.edges`) and then maps through each item in the resulting array to pull out the data for each order. END"}
{"prompt":"This JavaScript references the `.data` property of the `getOrders` query, destructures two levels deep (`.orders.edges`) and then maps through each item in the resulting array to pull out the data for each order.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/98959c5-306Ma0-A.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/98959c5-306Ma0-A.png)\n\n###\n\n","completion":" A bunch of the data in the table is nested in objects, which aren’t displaying very nicely - we can parse it out using column mappers. In your table component’s settings, click on the column you want to parse (in our case, Price) and head to the “Mapper” field. You can reference the current column’s value with `self`, so this is as simple as `{{ self.shopMoney.amount }}`. You can also rename the column to something more human readable, like Price. END"}
{"prompt":"A bunch of the data in the table is nested in objects, which aren’t displaying very nicely - we can parse it out using column mappers. In your table component’s settings, click on the column you want to parse (in our case, Price) and head to the “Mapper” field. You can reference the current column’s value with `self`, so this is as simple as `{{ self.shopMoney.amount }}`. You can also rename the column to something more human readable, like Price.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bacbc68-PBgPpbFE.png) END"}
{"prompt":"Server side pagination with the Shopify GraphQL API\n\n###\n\n","completion":" If you’ve got more than 20 customers and 10 orders (hopefully), these above queries are a bit limiting. Retool supports paginating tables server side, so that you can traverse table pages and automatically rerun queries. You can read the full suite of docs about it here. END"}
{"prompt":"If you’ve got more than 20 customers and 10 orders (hopefully), these above queries are a bit limiting. Retool supports paginating tables server side, so that you can traverse table pages and automatically rerun queries. You can read the full suite of docs about it here.\n\n###\n\n","completion":" Shopify’s GraphQL API supports pagination via a cursor. END"}
{"prompt":"Shopify’s GraphQL API supports pagination via a cursor.\n\n###\n\n","completion":" First, you’ll need to add a new field to your GraphQL query - the cursor. The Shopify GraphQL API returns this with every edge (in our case - customers) so Retool knows where it is in the data. Then, instead of hardcoding `(first: 20)`, add a few variables. First, for your query root: END"}
{"prompt":"First, you’ll need to add a new field to your GraphQL query - the cursor. The Shopify GraphQL API returns this with every edge (in our case - customers) so Retool knows where it is in the data. Then, instead of hardcoding `(first: 20)`, add a few variables. First, for your query root:\n\n###\n\n","completion":" `($first: Int, $last: Int, $afterPage: String, $beforePage: String)` END"}
{"prompt":"`($first: Int, $last: Int, $afterPage: String, $beforePage: String)`\n\n###\n\n","completion":" And then in the customers filter: END"}
{"prompt":"And then in the customers filter:\n\n###\n\n","completion":" `(first: $first, last: $last, after: $afterPage, before: $beforePage)` END"}
{"prompt":"`(first: $first, last: $last, after: $afterPage, before: $beforePage)`\n\n###\n\n","completion":" Here’s what the final query should look like: END"}
{"prompt":"Here’s what the final query should look like:\n\n###\n\n","completion":" Once you add these variables to your GraphQL query in Retool, form fields will appear under your query where you can actually assign values to those variables. Here’s what you’ll need to fill in: END"}
{"prompt":"Once you add these variables to your GraphQL query in Retool, form fields will appear under your query where you can actually assign values to those variables. Here’s what you’ll need to fill in:\n\n###\n\n","completion":" For more information about the logic behind what’s going on here, refer to [our main docs on server side pagination](https:\/\/docs.retool.com\/docs\/tables#server-side-table-pagination). END"}
{"prompt":"For more information about the logic behind what’s going on here, refer to [our main docs on server side pagination](https:\/\/docs.retool.com\/docs\/tables#server-side-table-pagination).\n\n###\n\n","completion":" Click on your table component, scroll down to the “Pagination” section, and toggle “Server side paginated” to on. From the dropdown, select “GraphQL Relay cursor based.” We need to fill in the three input fields with information about the cursors available. END"}
{"prompt":"Click on your table component, scroll down to the “Pagination” section, and toggle “Server side paginated” to on. From the dropdown, select “GraphQL Relay cursor based.” We need to fill in the three input fields with information about the cursors available.\n\n###\n\n","completion":" These Lodash functions pull the first and last customers from our query and reference their cursors. Here’s what things should look like: END"}
{"prompt":"These Lodash functions pull the first and last customers from our query and reference their cursors. Here’s what things should look like:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/05a30e0-X4KekA5A.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/05a30e0-X4KekA5A.png)\n\n###\n\n","completion":" Voila! Now, clicking through pages in your table actually reruns your query and fetches the correct results from the server. END"}
{"prompt":"title: \"Single sign-on (SSO)\"\nexcerpt: \"Learn about using SSO for authentication to your Retool organization.\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-concepts\"\n\n###\n\n","completion":" Single sign-on (SSO) is a user authentication tool that enables users to securely access multiple applications and services using one set of credentials. Rather than require users to create additional usernames and passwords for Retool, you can centralize logins to a single identity provider (IdP). SSO is primarily used for authentication, though Retool also supports syncing groups for authorization. END"}
{"prompt":"Single sign-on (SSO) is a user authentication tool that enables users to securely access multiple applications and services using one set of credentials. Rather than require users to create additional usernames and passwords for Retool, you can centralize logins to a single identity provider (IdP). SSO is primarily used for authentication, though Retool also supports syncing groups for authorization.\n\n###\n\n","completion":" Retool supports SSO using Google Sign-in, SAML, and OpenID Connect (OIDC) providers. You can also map the roles in your IdP to Retool permission groups, or use Retool's SCIM integration to automatically provision users. END"}
{"prompt":"Sign in with Google\n\n###\n\n","completion":" [Sign in with Google](https:\/\/developers.google.com\/identity\/gsi\/web\/guides\/overview#supported_features) is a custom SDK on top of Google's Identity Platform. Retool supports Sign in with Google on Retool Cloud and Self-hosted Retool and on all pricing plans. On self-hosted deployments, follow the guide to [configure Google Sign-in](https:\/\/docs.retool.com\/docs\/configure-google-sign-in). END"}
{"prompt":"Group sync\n\n###\n\n","completion":" Retool supports [mapping LDAP Google Groups](https:\/\/docs.retool.com\/docs\/sync-google-groups-to-retool) to Retool permission groups using Google Secure LDAP service. Users are automatically included in Retool groups when they log in, so you don't need to manually assign individual users to groups in Retool. END"}
{"prompt":"SAML\n\n###\n\n","completion":" SAML is an [XML-based open standard](http:\/\/saml.xml.org\/saml-specifications) for transferring identity data between an identity provider (IdP) and a service provider (SP). Retool supports SAML SSO with [Okta](https:\/\/docs.retool.com\/docs\/sso-google-and-okta#okta), [Azure Active Directory](https:\/\/docs.retool.com\/docs\/sso-google-and-okta#azure-active-directory), and [other SAML 2.0 identity providers](https:\/\/docs.retool.com\/docs\/sso-google-and-okta#other-saml-identity-providers). END"}
{"prompt":"Group sync\n\n###\n\n","completion":" If you use Okta or Active Directory SSO, you can sync users at the time of login with [SAML group syncing](https:\/\/docs.retool.com\/docs\/saml-group-sync), or provision users with [SCIM](https:\/\/docs.retool.com\/docs\/scim-user-provisioning). Both methods allow you to automatically include users in Retool groups when they log in. With SCIM, you don't need to provision individual users in Retool. END"}
{"prompt":"OpenID Connect (OIDC)\n\n###\n\n","completion":" OpenID Connect (OIDC) is an identity layer built on top of OAuth 2.0. Retool supports OIDC SSO using [Okta](https:\/\/docs.retool.com\/docs\/configure-okta-authentication), [Auth0](https:\/\/docs.retool.com\/docs\/configure-auth0-authentication), [Google](https:\/\/docs.retool.com\/docs\/configure-google-sign-in-authentication), and other generic providers. END"}
{"prompt":"Group sync\n\n###\n\n","completion":" To sync groups with OIDC, you can use [role mapping](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#role-mapping) for your provider, usually by setting `CUSTOM_OAUTH2_SSO_JWT_ROLES_KEY` and `CUSTOM_OAUTH2_SSO_ROLE_MAPPING` environment variables. Role mapping allows you to map groups to Retool permission groups, so you don't need to manually assign users to groups in Retool. END"}
{"prompt":"To sync groups with OIDC, you can use [role mapping](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#role-mapping) for your provider, usually by setting `CUSTOM_OAUTH2_SSO_JWT_ROLES_KEY` and `CUSTOM_OAUTH2_SSO_ROLE_MAPPING` environment variables. Role mapping allows you to map groups to Retool permission groups, so you don't need to manually assign users to groups in Retool.\n\n###\n\n","completion":" You may be able to use SCIM with OIDC with some providers, but it is not officially supported by Retool. END"}
{"prompt":"1. Create Slack Webhook\n\n###\n\n","completion":" You'll first need to set up an \"Incoming Webhook\" in Slack: <https:\/\/my.slack.com\/apps\/new\/A0F7XDUAZ-incoming-webhooks>. END"}
{"prompt":"You'll first need to set up an \"Incoming Webhook\" in Slack: <https:\/\/my.slack.com\/apps\/new\/A0F7XDUAZ-incoming-webhooks>.\n\n###\n\n","completion":" Once you select a channel and create the webhook, you'll be presented with a setup screen containing details about your webhook and how to use it. Make a note of the \"Webhook URL\", which will be in the following format: END"}
{"prompt":"Once you select a channel and create the webhook, you'll be presented with a setup screen containing details about your webhook and how to use it. Make a note of the \"Webhook URL\", which will be in the following format:\n\n###\n\n","completion":" `https:\/\/hooks.slack.com\/services\/xxx\/xxx\/xxx` END"}
{"prompt":"`https:\/\/hooks.slack.com\/services\/xxx\/xxx\/xxx`\n\n###\n\n","completion":" **Slack** > **Custom Integrations** > **Incoming Webhooks** > **New Configuration** END"}
{"prompt":"**Slack** > **Custom Integrations** > **Incoming Webhooks** > **New Configuration**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/77e95f9-Screen_Shot_2018-10-03_at_10.29.51_AM.png) END"}
{"prompt":"2. Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"Slack\" as the type. Enter your webhook URL. Press \"Save\" when you're done. END"}
{"prompt":"Create a new resource in Retool, and select \"Slack\" as the type. Enter your webhook URL. Press \"Save\" when you're done.\n\n###\n\n","completion":" **Resources** > **Add** > **Slack** END"}
{"prompt":"**Resources** > **Add** > **Slack**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5970caa-Screen_Shot_2018-10-03_at_10.37.45_AM.png) END"}
{"prompt":"3. Create queries\n\n###\n\n","completion":" You can now select your newly-created Slack resource from the _Resource_ dropdown when creating queries in your Retool apps. We currently only support plaintext messages. END"}
{"prompt":"You can now select your newly-created Slack resource from the _Resource_ dropdown when creating queries in your Retool apps. We currently only support plaintext messages.\n\n###\n\n","completion":" ![When you \"Preview\" a Slack query, it will send a message to your Slack workspace.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e47194e-Screen_Shot_2018-10-03_at_10.36.18_AM.png) END"}
{"prompt":"![When you \"Preview\" a Slack query, it will send a message to your Slack workspace.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e47194e-Screen_Shot_2018-10-03_at_10.36.18_AM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4823800-Screen_Shot_2018-10-03_at_10.37.05_AM.png) END"}
{"prompt":"title: \"Connect to SMTP servers\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect an SMTP server to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect an SMTP server and make it available as a resource in Retool. Once complete, your users can write queries that interact with SMTP data. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" To add an SMTP server as a resource, you need: END"}
{"prompt":"User permissions\n\n###\n\n","completion":" All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources.\n\n###\n\n","completion":" For organizations subscribed to the Business or Enterprise plan that manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level), you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions for resources. END"}
{"prompt":"Configuration settings\n\n###\n\n","completion":" You must provide the following settings to connect an SMTP server to Retool. END"}
{"prompt":"1. Create a new resource\n\n###\n\n","completion":" Sign in to your Retool organization and select the **Resources** tab, then click **Create new > Resource**. Retool provides built-in integrations for a variety of popular data sources to get started quickly, including SMTP. Select the **SMTP** integration to start configuring the new resource. END"}
{"prompt":"Sign in to your Retool organization and select the **Resources** tab, then click **Create new > Resource**. Retool provides built-in integrations for a variety of popular data sources to get started quickly, including SMTP. Select the **SMTP** integration to start configuring the new resource.\n\n###\n\n","completion":" ![Select the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/c102ee68-6c10-46be-ae16-171f0f48f45c.webp) END"}
{"prompt":"2. Configure SMTP resource settings\n\n###\n\n","completion":" Set the name and folder for the new SMTP resource. Use a descriptive name to distinguish between other SMTP resources you may use. Retool displays the name and the resource type in query editors to help users identify them. END"}
{"prompt":"Set the name and folder for the new SMTP resource. Use a descriptive name to distinguish between other SMTP resources you may use. Retool displays the name and the resource type in query editors to help users identify them.\n\n###\n\n","completion":" Configure all required settings for the SMTP server to provide Retool with access to your data source. You may need to configure optional settings if the SMTP server requires them. END"}
{"prompt":"Configure all required settings for the SMTP server to provide Retool with access to your data source. You may need to configure optional settings if the SMTP server requires them.\n\n###\n\n","completion":" ![Configure settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1839d1d4-d41f-4562-bcda-ea600f935a59.webp) END"}
{"prompt":"![Configure settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/1839d1d4-d41f-4562-bcda-ea600f935a59.webp)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to the SMTP server with the provided credentials. If the test fails, check your credentials and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"3. Save the resource\n\n###\n\n","completion":" Once finished, click **Create resource** to complete the setup. You can click **Create app** to start building a new Retool app or **Back to resources** to return back to the **Resources** tab. END"}
{"prompt":"Once finished, click **Create resource** to complete the setup. You can click **Create app** to start building a new Retool app or **Back to resources** to return back to the **Resources** tab.\n\n###\n\n","completion":" ![Resource created](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/dd33be6a-8465-41e7-a4d2-eed75b17788f.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your SMTP resource is now ready to use. To send emails with Retool, select the newly added resource in the query editor. END"}
{"prompt":"Your SMTP resource is now ready to use. To send emails with Retool, select the newly added resource in the query editor.\n\n###\n\n","completion":" ![Send emails with SMTP](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/8d3f0504-8013-46f1-bc28-cbc2a76bdd0d.webp) END"}
{"prompt":"title: \"Connect to Snowflake\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"database-connection-guides\"\nexcerpt: \"Learn how to connect your Snowflake database to Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool's Snowflake integration provides a convenient UI for connecting to and interacting with your [Snowflake](https:\/\/www.snowflake.com\/) databases. END"}
{"prompt":"Connecting to Snowflake\n\n###\n\n","completion":" First, create a new _resource_ to connect to your Snowflake instance. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to your data source. END"}
{"prompt":"First, create a new _resource_ to connect to your Snowflake instance. Resources sit on top of our integrations and store the authentication and metadata fields required for you to connect to your data source.\n\n###\n\n","completion":" To get started, log in to Retool and select the **Resources** tab. Click **Create new** and then select **Snowflake** as your resource type. Give your resource a name, enter your account identifier and database information, then select an authentication method. END"}
{"prompt":"To get started, log in to Retool and select the **Resources** tab. Click **Create new** and then select **Snowflake** as your resource type. Give your resource a name, enter your account identifier and database information, then select an authentication method.\n\n###\n\n","completion":" Retool currently supports 3 methods of authenticating to Snowflake: END"}
{"prompt":"Retool currently supports 3 methods of authenticating to Snowflake:\n\n###\n\n","completion":" You must [add Retool IP addresses to your allow list](https:\/\/docs.retool.com\/docs\/connect-database-resource#connecting-your-database). END"}
{"prompt":"Key Pair authentication\n\n###\n\n","completion":" To use Snowflake's [Key Pair Authentication](https:\/\/docs.snowflake.com\/en\/user-guide\/key-pair-auth.html), you must first [generate a private key](https:\/\/docs.snowflake.com\/en\/user-guide\/key-pair-auth.html#configuring-key-pair-authentication) that Retool can use. END"}
{"prompt":"To use Snowflake's [Key Pair Authentication](https:\/\/docs.snowflake.com\/en\/user-guide\/key-pair-auth.html), you must first [generate a private key](https:\/\/docs.snowflake.com\/en\/user-guide\/key-pair-auth.html#configuring-key-pair-authentication) that Retool can use.\n\n###\n\n","completion":" Once you have a private key, select **Key Pair** as the authentication method for your new resource. Enter the username the public key is assigned to and the private key you created in the previous step. If you encrypted your private key, provide the encryption passcode. END"}
{"prompt":"Once you have a private key, select **Key Pair** as the authentication method for your new resource. Enter the username the public key is assigned to and the private key you created in the previous step. If you encrypted your private key, provide the encryption passcode.\n\n###\n\n","completion":" Click **Test Connection** to confirm your credentials are correct. END"}
{"prompt":"Per-user OAuth\n\n###\n\n","completion":" Connecting to Snowflake with OAuth allows database administrators to: END"}
{"prompt":"Connecting to Snowflake with OAuth allows database administrators to:\n\n###\n\n","completion":" With Snowflake connections that use OAuth, users must log in again periodically when their OAuth tokens expire. The duration of validity for Snowflake OAuth tokens is set through Snowflake itself. END"}
{"prompt":"With Snowflake connections that use OAuth, users must log in again periodically when their OAuth tokens expire. The duration of validity for Snowflake OAuth tokens is set through Snowflake itself.\n\n###\n\n","completion":" To use OAuth, you need a Client ID and Secret pair that's generated by [creating a security integration in Snowflake](https:\/\/docs.snowflake.com\/en\/user-guide\/oauth-custom.html#step-1-create-an-oauth-integration) for Retool. END"}
{"prompt":"Create a security integration in Snowflake\n\n###\n\n","completion":" First, create a [security integration](https:\/\/docs.snowflake.com\/en\/sql-reference\/sql\/create-security-integration.html) in Snowflake—this creates an interface between Snowflake and Retool using OAuth. Run the following command in the Snowflake UI, replacing `OAUTH_REDIRECT URI` with the **OAuth callback URL** value provided when setting up the resource. The value of `<your-retool-domain>` depends on whether you use Retool Cloud or deploy [Retool on-premise](https:\/\/docs.retool.com\/docs\/self-hosted): END"}
{"prompt":"First, create a [security integration](https:\/\/docs.snowflake.com\/en\/sql-reference\/sql\/create-security-integration.html) in Snowflake—this creates an interface between Snowflake and Retool using OAuth. Run the following command in the Snowflake UI, replacing `OAUTH_REDIRECT URI` with the **OAuth callback URL** value provided when setting up the resource. The value of `<your-retool-domain>` depends on whether you use Retool Cloud or deploy [Retool on-premise](https:\/\/docs.retool.com\/docs\/self-hosted):\n\n###\n\n","completion":" Next, retrieve the OAuth Client ID and Client Secret for the security integration you just created by running the following command in the Snowflake UI: END"}
{"prompt":"Next, retrieve the OAuth Client ID and Client Secret for the security integration you just created by running the following command in the Snowflake UI:\n\n###\n\n","completion":" You should see the `OAUTH_CLIENT_ID` and `OAUTH_CLIENT_SECRET` in the response of this query. END"}
{"prompt":"Configuring OAuth in Retool\n\n###\n\n","completion":" Select **OAuth** as the authentication method and input the Client ID and Client Secret for the security integration you just created. END"}
{"prompt":"Select **OAuth** as the authentication method and input the Client ID and Client Secret for the security integration you just created.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/62410dc-Screen_Shot_2021-07-15_at_4.32.02_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/62410dc-Screen_Shot_2021-07-15_at_4.32.02_PM.png)\n\n###\n\n","completion":" Click **Test OAuth integration with your own account**. You should see the browser open up a Snowflake login page. After logging in, the page should successfully redirect back to the resource. END"}
{"prompt":"Query Snowflake\n\n###\n\n","completion":" You can now select your newly-created Snowflake resource from the **Resource** dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes). END"}
{"prompt":"You can now select your newly-created Snowflake resource from the **Resource** dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e4c8a65-snowflake-query-editor.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e4c8a65-snowflake-query-editor.png)\n\n###\n\n","completion":" You can display the results of Snowflake queries as with any other query in Retool: END"}
{"prompt":"You can display the results of Snowflake queries as with any other query in Retool:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/10edd73-snowflake-display-results.png) END"}
{"prompt":"title: \"Source Control and Git syncing\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-concepts\"\nhidden: true\n\n###\n\n","completion":" Source Control and [Git Syncing](doc:git-syncing) both allow you to commit Retool application changes to Git. However, they're designed to serve different needs. END"}
{"prompt":"Source Control and [Git Syncing](doc:git-syncing) both allow you to commit Retool application changes to Git. However, they're designed to serve different needs.\n\n###\n\n","completion":" Source Control is designed to prevent unexpected changes to mission critical applications. All changes must be made on a separate branch and reviewed on GitHub. Only then can they be merged and deployed. It's unlikely that you'll turn on protection for every Retool application in your instance. Branches are managed inside Retool and commits are created by authors. END"}
{"prompt":"Source Control is designed to prevent unexpected changes to mission critical applications. All changes must be made on a separate branch and reviewed on GitHub. Only then can they be merged and deployed. It's unlikely that you'll turn on protection for every Retool application in your instance. Branches are managed inside Retool and commits are created by authors.\n\n###\n\n","completion":" On the other hand, Git syncing, as the name implies, is designed to sync changes between Retool instances. All changes in a single Retool instance are committed automatically (in the background) to a Git repository. These changes can then be read and loaded into a second read-only Retool instance.\n[block:parameters]\n{\n  \"data\": {\n    \"h-0\": \"\",\n    \"0-0\": \"Source code hosting providers\",\n    \"h-1\": \"Source Control\",\n    \"h-2\": \"Git Syncing\",\n    \"0-1\": \"Currently only works with GitHub\",\n    \"0-2\": \"Works with any Git hosting provider\",\n    \"1-0\": \"Pull requests\",\n    \"1-2\": \"Pull requests must be manually opened\",\n    \"1-1\": \"Pull requests can be opened manually or from the Retool editor\",\n    \"2-0\": \"Synced Retool data\",\n    \"2-1\": \"Only supports pushing application changes to GitHub\",\n    \"2-2\": \"Supports organization settings, CSS, and folders in addition to application changes\"\n  },\n  \"cols\": 3,\n  \"rows\": 3\n}\n[\/block] END"}
{"prompt":"Using both Source Control and Git syncing\n\n###\n\n","completion":" Source Control and Git syncing are designed to work together. If you currently use Git syncing, you can [enable Source Control](doc:setting-up-source-control) in the Retool instance that writes to your Git repository. END"}
{"prompt":"Source Control and Git syncing are designed to work together. If you currently use Git syncing, you can [enable Source Control](doc:setting-up-source-control) in the Retool instance that writes to your Git repository.\n\n###\n\n","completion":" The diagram below shows a typical configuration: END"}
{"prompt":"The diagram below shows a typical configuration:\n\n###\n\n","completion":" ![](https:\/\/files.readme.io\/69cde58-protected-apps-with-git-sync.png) END"}
{"prompt":"![](https:\/\/files.readme.io\/69cde58-protected-apps-with-git-sync.png)\n\n###\n\n","completion":" Note: the staging and production environments are locked (using the environment variable `VERSION_CONTROL_LOCKED=true`), therefore apps under Source Control can only be created on the Development instance. END"}
{"prompt":"Set up Source Control\n\n###\n\n","completion":" Follow [our guide](https:\/\/docs.retool.com\/docs\/setting-up-source-control) to create a repository and set up Source Control in your development environment. For this workflow, you should not configure Source Control in any other environment. END"}
{"prompt":"Set up Git syncing\n\n###\n\n","completion":" Follow our guide to create a separate repository and configure git syncing. The development instance should be configured to write to the `dev` branch of this repo. The staging and production instances should be configured as locked instances (using the `VERSION_CONTROL_LOCKED=true` environment variable) reading from the `staging` and `main` branches, respectively, of this repository. END"}
{"prompt":"App release workflow\n\n###\n\n","completion":" For apps that are not protected, all changes will be automatically committed to the `development` branch of the `retool_sync` repository. This is the same behavior as we typically see with Git syncing. END"}
{"prompt":"For apps that are not protected, all changes will be automatically committed to the `development` branch of the `retool_sync` repository. This is the same behavior as we typically see with Git syncing.\n\n###\n\n","completion":" In order to make changes to apps under Source Control, you will need to create a feature branch. This is the same behavior we typically see with the standard protected application workflow. However, once those changes are merged into the `main` branch of the `retool_source` GitHub repository, they will also be automatically committed to the `development` branch of the `retool_sync` repository. Changes on feature branches of Source Control is not committed to the `retool_sync` repository. END"}
{"prompt":"In order to make changes to apps under Source Control, you will need to create a feature branch. This is the same behavior we typically see with the standard protected application workflow. However, once those changes are merged into the `main` branch of the `retool_source` GitHub repository, they will also be automatically committed to the `development` branch of the `retool_sync` repository. Changes on feature branches of Source Control is not committed to the `retool_sync` repository.\n\n###\n\n","completion":" When you are ready to promote changes from the `development` environment, open a pull request in GitHub and merge into the `staging` branch. The staging Retool instance will then pull the changes down automatically. You can follow these steps again when you are ready to promote changes to production. END"}
{"prompt":"title: \"Protect apps with Source Control\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to make changes to apps protected with Source Control.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" In this guide we'll go through the entire workflow for making a change to a protected Retool application. END"}
{"prompt":"In this guide we'll go through the entire workflow for making a change to a protected Retool application.\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: 62.5%; height: 0;\\\"><iframe src=\\\"https:\/\/www.loom.com\/embed\/928d25c60bca4865809837c943b364b3\\\" frameborder=\\\"0\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div style=\\\"position: relative; padding-bottom: 62.5%; height: 0;\\\"><iframe src=\\\"https:\/\/www.loom.com\/embed\/928d25c60bca4865809837c943b364b3\\\" frameborder=\\\"0\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Our sample application is a customer dashboard. It has a title and a table view, which lists our customers. We'll be adding a detail view to the right side of the table. END"}
{"prompt":"Our sample application is a customer dashboard. It has a title and a table view, which lists our customers. We'll be adding a detail view to the right side of the table.\n\n###\n\n","completion":" ![Our customer dashboard](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8c2569b-Screen_Shot_2021-02-17_at_10.13.02_AM.png) END"}
{"prompt":"Importing the application\n\n###\n\n","completion":" If you don't have an existing Retool applications to edit, you can import the one used in this guide. First, download the [protected-applications-tutorial.json](https:\/\/gist.githubusercontent.com\/kyle-retool\/870978d09d16b6c83cb762fe0c6a866f\/raw\/a1de7c06d320ee4bd6ee50617fa98ea755d186e4\/protected-applications-tutorial.json) file. Once it's saved, import it into Retool. END"}
{"prompt":"If you don't have an existing Retool applications to edit, you can import the one used in this guide. First, download the [protected-applications-tutorial.json](https:\/\/gist.githubusercontent.com\/kyle-retool\/870978d09d16b6c83cb762fe0c6a866f\/raw\/a1de7c06d320ee4bd6ee50617fa98ea755d186e4\/protected-applications-tutorial.json) file. Once it's saved, import it into Retool.\n\n###\n\n","completion":" ![Create new > Import an app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c70f88f-Screen_Shot_2021-02-16_at_5.21.58_PM.png) END"}
{"prompt":"![Create new > Import an app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c70f88f-Screen_Shot_2021-02-16_at_5.21.58_PM.png)\n\n###\n\n","completion":" ![Create app](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c86ef1e-Screen_Shot_2021-02-16_at_5.26.19_PM.png) END"}
{"prompt":"Protecting an application\n\n###\n\n","completion":" Now that we have an application to edit, we need to enable protection. On the Apps page (<https:\/\/retool.example.com\/apps>), locate the application. In the menu, select **Protect app**. END"}
{"prompt":"Now that we have an application to edit, we need to enable protection. On the Apps page (<https:\/\/retool.example.com\/apps>), locate the application. In the menu, select **Protect app**.\n\n###\n\n","completion":" ![Protect the application](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/105d38e-listview.png) END"}
{"prompt":"![Protect the application](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/105d38e-listview.png)\n\n###\n\n","completion":" A confirmation dialog will pop up. Click **Protect application**. END"}
{"prompt":"A confirmation dialog will pop up. Click **Protect application**.\n\n###\n\n","completion":" ![Add protection dialog](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ceed022-Screen_Shot_2021-06-16_at_11.09.53_AM.png) END"}
{"prompt":"![Add protection dialog](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ceed022-Screen_Shot_2021-06-16_at_11.09.53_AM.png)\n\n###\n\n","completion":" Follow the flow to open and merge the initial PR of the app's source code into the connected Github repository. END"}
{"prompt":"Follow the flow to open and merge the initial PR of the app's source code into the connected Github repository.\n\n###\n\n","completion":" Your application should now have a blue, protected badge next to its name. If you look closely, the Edit and Preview buttons are now dropdown buttons. END"}
{"prompt":"Your application should now have a blue, protected badge next to its name. If you look closely, the Edit and Preview buttons are now dropdown buttons.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5916a20-Screen_Shot_2021-02-17_at_10.20.39_AM.png) END"}
{"prompt":"Creating a branch\n\n###\n\n","completion":" Click **Edit** and select **Create new branch**. END"}
{"prompt":"Click **Edit** and select **Create new branch**.\n\n###\n\n","completion":" ![Creating a new branch](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6dd8d2a-Screen_Shot_2021-02-17_at_10.23.27_AM.png) END"}
{"prompt":"![Creating a new branch](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6dd8d2a-Screen_Shot_2021-02-17_at_10.23.27_AM.png)\n\n###\n\n","completion":" This opens the App editor. The branch on which you're editing appears in the lower left. Changes made on branches don't affect the existing application. END"}
{"prompt":"This opens the App editor. The branch on which you're editing appears in the lower left. Changes made on branches don't affect the existing application.\n\n###\n\n","completion":" Retool automatically generates a name for the branch. To rename it, click on the branch name and select **Rename current branch**. Edit the name and then click **Rename branch**. END"}
{"prompt":"Retool automatically generates a name for the branch. To rename it, click on the branch name and select **Rename current branch**. Edit the name and then click **Rename branch**.\n\n###\n\n","completion":" ![Renaming a branch](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/81480d44-bc2c-4cbb-97b6-2cf1ef80dd51.png) END"}
{"prompt":"![Renaming a branch](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/81480d44-bc2c-4cbb-97b6-2cf1ef80dd51.png)\n\n###\n\n","completion":" Drag a key-value map next to the table and configure it to display the selected row of the table. END"}
{"prompt":"Drag a key-value map next to the table and configure it to display the selected row of the table.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a2d5af8-Screen_Shot_2021-02-17_at_10.26.33_AM.png) END"}
{"prompt":"Committing changes\n\n###\n\n","completion":" Now that you've finished making changes, we need to commit them and push them to GitHub. Click the Commit button in the top right corner. Write a description of your change. You'll also see a diff of your changes, which should include the new key-value component. If it all looks good, push them to GitHub by clicking the blue button. END"}
{"prompt":"Now that you've finished making changes, we need to commit them and push them to GitHub. Click the Commit button in the top right corner. Write a description of your change. You'll also see a diff of your changes, which should include the new key-value component. If it all looks good, push them to GitHub by clicking the blue button.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a887ece-Screen_Shot_2021-02-17_at_10.28.30_AM.png) END"}
{"prompt":"Opening a pull request\n\n###\n\n","completion":" Once you've committed your changes, you can open up a pull request to get your changes reviewed. Click the menu button to the left of the Commit button and select **Open a pull request**. You'll be redirected to GitHub to finish creating the pull request. END"}
{"prompt":"Once you've committed your changes, you can open up a pull request to get your changes reviewed. Click the menu button to the left of the Commit button and select **Open a pull request**. You'll be redirected to GitHub to finish creating the pull request.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b00287e-Screen_Shot_2021-02-17_at_10.29.49_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b00287e-Screen_Shot_2021-02-17_at_10.29.49_AM.png)\n\n###\n\n","completion":" Notice that the description has already been populated with a link to preview your changes on your branch. END"}
{"prompt":"Merging changes\n\n###\n\n","completion":" After completing your changes, use GitHub to merge them into the main branch of your repository. The merge button label may differ depending on your repository's configuration for merging (e.g., **Rebase and merge** or **Squash and merge**). END"}
{"prompt":"After completing your changes, use GitHub to merge them into the main branch of your repository. The merge button label may differ depending on your repository's configuration for merging (e.g., **Rebase and merge** or **Squash and merge**).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/907a1dd-Screen_Shot_2021-02-17_at_10.31.19_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/907a1dd-Screen_Shot_2021-02-17_at_10.31.19_AM.png)\n\n###\n\n","completion":" After a few seconds, your changes will show up in the main branch of the Retool application. Your detail view should show up right next to the table view. END"}
{"prompt":"After a few seconds, your changes will show up in the main branch of the Retool application. Your detail view should show up right next to the table view.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e10a1c5-Screen_Shot_2021-02-17_at_10.39.07_AM.png) END"}
{"prompt":"Removing application protection\n\n###\n\n","completion":" You can remove protection for an application at any time. In the application menu on the Apps page, select **Remove protection**, then confirm changes in the dialog box that appears. END"}
{"prompt":"You can remove protection for an application at any time. In the application menu on the Apps page, select **Remove protection**, then confirm changes in the dialog box that appears.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/91ca781-CleanShot_2021-02-23_at_17.09.11.png) END"}
{"prompt":"title: \"Protect resources with Source Control\"\ncategorySlug: \"source-control\"\nexcerpt: \"Learn how to protect and sync resources using Source Control.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Using protected resources in Source Control, you can safely replicate resource configurations across multiple instances of Retool, similar to protected applications. You can use protected resources with any of Retool's supported source control management (SCM) providers: END"}
{"prompt":"Using protected resources in Source Control, you can safely replicate resource configurations across multiple instances of Retool, similar to protected applications. You can use protected resources with any of Retool's supported source control management (SCM) providers:\n\n###\n\n","completion":" Each protected resource configuration is represented as a YAML file. END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" Before you configure protected resources, you must set up your [Source Control](\/docs\/source-control) provider. END"}
{"prompt":"Before you configure protected resources, you must set up your [Source Control](\/docs\/source-control) provider.\n\n###\n\n","completion":" If your resources depend on secret values, set the secrets as environment variables using the [`RETOOL_EXPOSED`](\/reference\/environment-variables-reference#retool_exposed_name) prefix. The `RETOOL_EXPOSED` value is then included in the synced resource YAML file. Values that are encrypted and hidden in the resource configuration UI are not synced unless they are added as `RETOOL_EXPOSED` variables. END"}
{"prompt":"Protect resources\n\n###\n\n","completion":" To protect a resource and start tracking its changes, you need to merge an initial commit for the resource to your remote repository. END"}
{"prompt":"1. Create a branch\n\n###\n\n","completion":" You can start protecting your resource by selecting **Protect resource** from either: END"}
{"prompt":"You can start protecting your resource by selecting **Protect resource** from either:\n\n###\n\n","completion":" ![Protect resource from overview page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/5adf0261-c289-4c89-bc83-01c0f5616061.png) END"}
{"prompt":"![Protect resource from overview page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/5adf0261-c289-4c89-bc83-01c0f5616061.png)\n\n###\n\n","completion":" When you click **Protect Resource**, Retool creates a new branch on your SCM provider. END"}
{"prompt":"When you click **Protect Resource**, Retool creates a new branch on your SCM provider.\n\n###\n\n","completion":" ![Start protecting resource overview](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/b07b0adc-c4dd-4a1b-8669-a12aa090b8a5.png) END"}
{"prompt":"2. Open a new pull request\n\n###\n\n","completion":" After you click **Open pull request**, you’ll be redirected to your SCM provider to create an initial commit for the resource. This commit contains a YAML file with configuration details for your resource. END"}
{"prompt":"After you click **Open pull request**, you’ll be redirected to your SCM provider to create an initial commit for the resource. This commit contains a YAML file with configuration details for your resource.\n\n###\n\n","completion":" ![Open initial pull request for protected resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/f895a58b-774c-41d9-90c9-371cdf8011a7.png) END"}
{"prompt":"3. Merge pull request\n\n###\n\n","completion":" Resources are not protected until your repository contains the resource YAML file from your initial commit. After you merge this commit, the resource syncs to all other instances. END"}
{"prompt":"Edit protected resources\n\n###\n\n","completion":" When you edit a protected resource, the **Resources** overview and the **Edit resource** pages display a warning that your resource has unmerged changes. This warning displays until you merge your changes to your remote repository. END"}
{"prompt":"When you edit a protected resource, the **Resources** overview and the **Edit resource** pages display a warning that your resource has unmerged changes. This warning displays until you merge your changes to your remote repository.\n\n###\n\n","completion":" ![Open PR for unmerged changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/4748ce57-b09f-4b2b-8289-40108389c166.png) END"}
{"prompt":"![Open PR for unmerged changes](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/4748ce57-b09f-4b2b-8289-40108389c166.png)\n\n###\n\n","completion":" To create a pull request, click the **Open PR** button next to the resource. Follow your source control workflow to merge the pull request. After it’s merged, you’ll see the resource in all your instances, with the resource updated as necessary. END"}
{"prompt":"To create a pull request, click the **Open PR** button next to the resource. Follow your source control workflow to merge the pull request. After it’s merged, you’ll see the resource in all your instances, with the resource updated as necessary.\n\n###\n\n","completion":" To rename a resource, from the Resources overview page, select **Rename** next to the resource. You must commit any renaming changes to your SCM provider before they take effect locally. END"}
{"prompt":"Unprotect resources\n\n###\n\n","completion":" You can unprotect a resource from either: END"}
{"prompt":"You can unprotect a resource from either:\n\n###\n\n","completion":" A resource must be unprotected before you can delete it. END"}
{"prompt":"Protected resources with multiple environments\n\n###\n\n","completion":" Only the changes on the _production_ environment of a protected resource are tracked in source control, even if you use multiple environments. This is because multi-instance Retool deployments typically only use a single environment in their downstream (non-development) instances. If your setup uses another configuration, contact Retool Support. END"}
{"prompt":"title: \"Troubleshoot Source Control issues\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to troubleshoot Source Control.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" With Source Control, your Retool instance syncs and deploys changes made to the designated main branch of your Git repository. As an administrator, you can diagnose and troubleshoot most Source Control issues. END"}
{"prompt":"Identify Source Control issues\n\n###\n\n","completion":" Issues that arise with Source Control should be resolved quickly to minimize disruption. There are a number of methods available for identifying symptoms as you investigate the root cause. END"}
{"prompt":"Deployment Dashboard\n\n###\n\n","completion":" Use [Deployment Dashboard](https:\/\/docs.retool.com\/docs\/manage-source-control-deployments#source-control-status) to check the status of deployments and the SCM connection. Each deployment has either a successful or failed state. Failed deployments can indicate a potential issue with Source Control, such as malformed repository contents or an inconsistent Git history. END"}
{"prompt":"Use [Deployment Dashboard](https:\/\/docs.retool.com\/docs\/manage-source-control-deployments#source-control-status) to check the status of deployments and the SCM connection. Each deployment has either a successful or failed state. Failed deployments can indicate a potential issue with Source Control, such as malformed repository contents or an inconsistent Git history.\n\n###\n\n","completion":" ![Deployment Dashboard](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fa977a9f3-840f-4f0f-a207-15a368ea01c9.png) END"}
{"prompt":"![Deployment Dashboard](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fa977a9f3-840f-4f0f-a207-15a368ea01c9.png)\n\n###\n\n","completion":" The SCM details area displays the current connection status. If the status is not **Connected**, this indicates that your Retool instance is not able to connect to your SCM provider. END"}
{"prompt":"Changes and environments no longer in sync\n\n###\n\n","completion":" There may be issues with Source Control if there is a mismatch between the current state of your Retool instance and the main branch of your Git repository. This can be apparent if protected apps, modules, or resources fail to update. When these issues occur, they can prevent newer changes from being deployed, resulting in the changes being overwritten. New objects cannot be protected return an error or indicate an `unmerged` status. END"}
{"prompt":"There may be issues with Source Control if there is a mismatch between the current state of your Retool instance and the main branch of your Git repository. This can be apparent if protected apps, modules, or resources fail to update. When these issues occur, they can prevent newer changes from being deployed, resulting in the changes being overwritten. New objects cannot be protected return an error or indicate an `unmerged` status.\n\n###\n\n","completion":" Similarly, if changes from one Retool instance are not in sync with others (e.g., `dev` to `prod`) then there may be an issue somewhere in the Source Control workflow. END"}
{"prompt":"jobs-runner instability\n\n###\n\n","completion":" If Source Control cannot successfully deploy changes, it may cause the [jobs-runner](https:\/\/docs.retool.com\/docs\/deploy-retool-at-scale#jobs-runner) container to continuously crash or restart. This container performs background tasks, such as Source Control syncing, and database migrations. END"}
{"prompt":"Resolve common Source Control issues\n\n###\n\n","completion":" For Source Control to operate: END"}
{"prompt":"For Source Control to operate:\n\n###\n\n","completion":" Any problems or disruptions that affect these dependencies can impact the operation of Source Control. END"}
{"prompt":"Git repository and content\n\n###\n\n","completion":" Retool instances periodically poll your Git repository for new commits and attempt to apply changes. If the integrity of the Git repository is affected, such as invalid or malformed data, your Retool instance may fail to deploy successfully. END"}
{"prompt":"Malformed data\n\n###\n\n","completion":" Source Control [breaks up applications into multiple YAML files](https:\/\/docs.retool.com\/docs\/source-control#features) to simplify code review and prevent merge conflicts. Invalid changes to YAML files can prevent successful deploys. Possible YAML issues include: END"}
{"prompt":"Source Control [breaks up applications into multiple YAML files](https:\/\/docs.retool.com\/docs\/source-control#features) to simplify code review and prevent merge conflicts. Invalid changes to YAML files can prevent successful deploys. Possible YAML issues include:\n\n###\n\n","completion":" If there appears to be malformed data or invalid files, you need to identify which commits contain the malformed files. END"}
{"prompt":"If there appears to be malformed data or invalid files, you need to identify which commits contain the malformed files.\n\n###\n\n","completion":" First, identify the commit with malformed files. You can do this by either: END"}
{"prompt":"First, identify the commit with malformed files. You can do this by either:\n\n###\n\n","completion":" Next, revert or fix-forward the offending commit. You can revert the commit and push the reversion to your Git repository to roll back the change. To preserve the changes, you can fix-forward by correcting the error as a new commit. END"}
{"prompt":"Next, revert or fix-forward the offending commit. You can revert the commit and push the reversion to your Git repository to roll back the change. To preserve the changes, you can fix-forward by correcting the error as a new commit.\n\n###\n\n","completion":" Finally, run a full deployment. You can perform this using the Deployment Dashboard by clicking **Deploy latest**. Retool instances using Self-hosted Retool earlier than v2.97 must restart the `jobs-runner` container manually. END"}
{"prompt":"Inconsistent Git history\n\n###\n\n","completion":" Retool requires a linear, append-only Git history, and tracks the latest commit SHA at all times. If the Git history is rewritten manually (e.g., `git push --force`, `git rebase -i`, or `git reset`), the commit currently tracked by Retool may no longer exist. Retool may attempt to open an invalid commit with the SCM provider, which will return an error. END"}
{"prompt":"Retool requires a linear, append-only Git history, and tracks the latest commit SHA at all times. If the Git history is rewritten manually (e.g., `git push --force`, `git rebase -i`, or `git reset`), the commit currently tracked by Retool may no longer exist. Retool may attempt to open an invalid commit with the SCM provider, which will return an error.\n\n###\n\n","completion":" If the Git history has been rewritten manually, one way to resolve this is to: END"}
{"prompt":"Unexpected files\n\n###\n\n","completion":" The file system structure in the Git repository must match the expected directory structure of your Retool instance. Any unknown files added to the repository, or moving existing files to different locations unexpectedly, can cause deploys to fail. Non-YAML files that may be autogenerated by operating systems, such as `.DS_Store`, can also impact the repository's integrity. END"}
{"prompt":"The file system structure in the Git repository must match the expected directory structure of your Retool instance. Any unknown files added to the repository, or moving existing files to different locations unexpectedly, can cause deploys to fail. Non-YAML files that may be autogenerated by operating systems, such as `.DS_Store`, can also impact the repository's integrity.\n\n###\n\n","completion":" If unexpected files have been added to the repository, remove them and commit the changes. END"}
{"prompt":"Instance configuration\n\n###\n\n","completion":" Retool uses [environment variables](\/reference\/environment-variables-reference) to configure deployments. Any misconfigured environment variables can cause issues with your Retool instance. END"}
{"prompt":"SCM and repository connection\n\n###\n\n","completion":" The Deployment Dashboard reflects the connection status to the SCM provider. If this reports a failed connection, check that the connection details are correct. END"}
{"prompt":"The Deployment Dashboard reflects the connection status to the SCM provider. If this reports a failed connection, check that the connection details are correct.\n\n###\n\n","completion":" Source Control requires the full URL for some SCM providers. If you are using one of these SCM providers, make sure to include the full `http\/https` URL. END"}
{"prompt":"Nested repositories\n\n###\n\n","completion":" Some SCM providers support nested repositories (e.g., GitLab). If the path is incorrect, the Deployment Dashboard indicates a successful connection but Source Control is not syncing from the correct repository path. If you are using nested repositories, check the repository details use the full path. END"}
{"prompt":"SCM configuration\n\n###\n\n","completion":" Retool requires read and write permissions for branches, commits, and pull requests. Incorrect permissions can prevent Retool from creating new protected objects or editing existing ones. Refer to the [Source Control](https:\/\/docs.retool.com\/docs\/source-control) documentation for your SCM provider to learn what permissions are required and how to configure them. END"}
{"prompt":"Infrastructure instability\n\n###\n\n","completion":" Infrastructure failures or instability can be caused by a misconfigured environment. There can be many reasons for this, but common root causes include: END"}
{"prompt":"title: \"Configure Source Control with AWS CodeCommit\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to set up Source Control with AWS CodeCommit for self-hosted Retool.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"Disable git syncing\n\n###\n\n","completion":" If you've enabled [Git Syncing](https:\/\/docs.retool.com\/docs\/git-syncing), disable it: END"}
{"prompt":"1. Create a new IAM Role in your AWS account\n\n###\n\n","completion":" Enter a name for the user and check the **Access key - Programmatic access** setting. END"}
{"prompt":"Enter a name for the user and check the **Access key - Programmatic access** setting.\n\n###\n\n","completion":" ![Create AWS IAM Role](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/7a014d9e-23a9-45f5-a103-c51a6e401411.png) END"}
{"prompt":"![Create AWS IAM Role](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/7a014d9e-23a9-45f5-a103-c51a6e401411.png)\n\n###\n\n","completion":" Next, select **Attach existing policies directly**, search for \"codecommit\", and select the **AWSCodeCommitFullAccess** policy name. This is the only permission required for this new user. END"}
{"prompt":"Next, select **Attach existing policies directly**, search for \"codecommit\", and select the **AWSCodeCommitFullAccess** policy name. This is the only permission required for this new user.\n\n###\n\n","completion":" ![IAM Role - Access Key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/44984993-f171-4407-86ef-111bd2524c3c.png) END"}
{"prompt":"![IAM Role - Access Key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/44984993-f171-4407-86ef-111bd2524c3c.png)\n\n###\n\n","completion":" Save the **Access key ID** and **Secret access key** in a secure location locally. You'll use these as environment variables in step 3. END"}
{"prompt":"Save the **Access key ID** and **Secret access key** in a secure location locally. You'll use these as environment variables in step 3.\n\n###\n\n","completion":" ![Save access key ID and secret access key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/7ae1bbf8-859d-4de3-9580-8fdf7c12574e.png) END"}
{"prompt":"![Save access key ID and secret access key](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/7ae1bbf8-859d-4de3-9580-8fdf7c12574e.png)\n\n###\n\n","completion":" Go to the newly created user on your IAM console. Select the **Security credentials** tab, scroll to **HTTPS Git Credentials for AWS CodeCommit**, and click **Generate Credentials**. Download and save these credentials in a secure location. You'll use these HTTPS credentials as environment variables in step 3. END"}
{"prompt":"Go to the newly created user on your IAM console. Select the **Security credentials** tab, scroll to **HTTPS Git Credentials for AWS CodeCommit**, and click **Generate Credentials**. Download and save these credentials in a secure location. You'll use these HTTPS credentials as environment variables in step 3.\n\n###\n\n","completion":" ![Generate HTTPS Git credentials](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/71b25b90-217c-4381-ada8-902c364b880d.png) END"}
{"prompt":"2. Create a new CodeCommit repository\n\n###\n\n","completion":" Go to CodeCommit on your AWS console and create a new repository for Retool syncing. You can select any region of your preference. END"}
{"prompt":"Go to CodeCommit on your AWS console and create a new repository for Retool syncing. You can select any region of your preference.\n\n###\n\n","completion":" Add a `README.md` file to this repository. The repository needs to contain at least one file to sync. END"}
{"prompt":"3. Set up environment variables on your Retool instance\n\n###\n\n","completion":" Set the following [environment variables](\/reference\/environment-variables-reference#source-control) on your Retool instance on the `api` and `jobs-runner` containers. END"}
{"prompt":"4. Verify your settings\n\n###\n\n","completion":" After you set up your environment variables, visit the **Settings** > **Source Control** on your Retool instance. END"}
{"prompt":"After you set up your environment variables, visit the **Settings** > **Source Control** on your Retool instance.\n\n###\n\n","completion":" If your environment is correctly configured, the page will show a **Deployment Dashboard**. Click **Test connection** under the **AWS CodeCommit** section to test your connection and confirm the sync works as expected. END"}
{"prompt":"If your environment is correctly configured, the page will show a **Deployment Dashboard**. Click **Test connection** under the **AWS CodeCommit** section to test your connection and confirm the sync works as expected.\n\n###\n\n","completion":" ![Deployment Dashboard](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/bda325f3-8f07-4947-94ff-688372286ef1.png) END"}
{"prompt":"![Deployment Dashboard](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/self-hosted\/bda325f3-8f07-4947-94ff-688372286ef1.png)\n\n###\n\n","completion":" If you don't see the Deployment Dashboard and your AWS CodeCommit commits, go back to step 3 and confirm your environment variables are correctly set. END"}
{"prompt":"If you don't see the Deployment Dashboard and your AWS CodeCommit commits, go back to step 3 and confirm your environment variables are correctly set.\n\n###\n\n","completion":" You are now ready to use source control with AWS CodeCommit. Read the [source control getting started guide](https:\/\/docs.retool.com\/docs\/source-control-getting-started) to learn more about source control workflows. END"}
{"prompt":"title: \"Configure Source Control with Azure Repos\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to implement Source Control with Azure Repos for self-hosted Retool.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" With Source Control with [Azure Repos](https:\/\/azure.microsoft.com\/en-us\/products\/devops\/repos), you can use pull requests on [Azure Repos](https:\/\/azure.microsoft.com\/en-us\/products\/devops\/repos#get-started) to manage changes to your Retool applications. END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" This guide requires access to an Azure DevOps account with permissions to create repos and access tokens. END"}
{"prompt":"4. Test your configuration\n\n###\n\n","completion":" After you set up your environment variables, if you’re an admin on your Retool instance, you can visit **Settings** > **Source Control**. END"}
{"prompt":"After you set up your environment variables, if you’re an admin on your Retool instance, you can visit **Settings** > **Source Control**.\n\n###\n\n","completion":" If your Azure Repos environment is correctly configured, the page will show your Azure Repos commits in the **Deployment Dashboard** section. You can also click the **Test connection** button, which sends a request to test the connection. END"}
{"prompt":"If your Azure Repos environment is correctly configured, the page will show your Azure Repos commits in the **Deployment Dashboard** section. You can also click the **Test connection** button, which sends a request to test the connection.\n\n###\n\n","completion":" If you don't see the **Deployment Dashboard** and your Azure Repos commits on **Settings** > **Source Control**, check that your environment variables are correctly configured. END"}
{"prompt":"What's next?\n\n###\n\n","completion":" You are now ready to use source control. Learn how to create branches and pull requests, merge changes, and use other source control features in the [getting started guide](https:\/\/docs.retool.com\/docs\/source-control-getting-started). END"}
{"prompt":"title: \"Configure Source Control with Bitbucket\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to set up Source Control with Bitbucket for self-hosted Retool.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" With Source Control with [Bitbucket](https:\/\/bitbucket.org), you can use pull requests on [Bitbucket cloud](https:\/\/bitbucket.org\/product\/guides\/getting-started\/overview#a-brief-overview-of-bitbucket) to manage changes to your Retool applications. END"}
{"prompt":"Prerequisites\n\n###\n\n","completion":" This guide requires access to a Bitbucket account with permissions to create workspaces and repositories. END"}
{"prompt":"2. Create a new Bitbucket workspace and repository\n\n###\n\n","completion":" ![Create a new Bitbucket repository](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/dtc\/81225353-96ab-49de-b450-9d7ecdc14383.png) END"}
{"prompt":"After you set up your environment variables, if you’re an admin on your Retool instance, you can visit **Settings** > **Source Control**.\n\n###\n\n","completion":" If your Bitbucket environment is correctly configured, the page will show your Bitbucket commits in the **Deployment Dashboard** section. You can also click the **Test connection** button, which sends a request to test the connection. END"}
{"prompt":"If your Bitbucket environment is correctly configured, the page will show your Bitbucket commits in the **Deployment Dashboard** section. You can also click the **Test connection** button, which sends a request to test the connection.\n\n###\n\n","completion":" ![Deployment dashboard and test connection example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/ad2f1be9-27c1-495c-91ca-db2d0da642c1.png) END"}
{"prompt":"![Deployment dashboard and test connection example](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/source-control\/ad2f1be9-27c1-495c-91ca-db2d0da642c1.png)\n\n###\n\n","completion":" If you don't see the **Deployment Dashboard** and your Bitbucket commits on **Settings** > **Source Control**, check that your environment variables are correctly configured. END"}
{"prompt":"What's next?\n\n###\n\n","completion":" You are now ready to use source control. Learn how to create branches, pull requests, merging changes, and use other source control features in the [getting started guide](https:\/\/docs.retool.com\/docs\/source-control-getting-started). END"}
{"prompt":"title: \"Configure Source Control with GitHub\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to set up Source Control for Self-hosted Retool with GitHub.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" You can use Source Control with GitHub to manage changes using pull requests. You create a repository for Source Control to use, then configure a GitHub App for your Retool instance that commits, pushes, and pulls changes. END"}
{"prompt":"1. Create a Git repository\n\n###\n\n","completion":" First, [create a new repository](https:\/\/docs.github.com\/en\/free-pro-team@latest\/github\/getting-started-with-github\/create-a-repo) for Source Control. Ensure it contains a **README.md** file and a `main` branch. Source Control uses this repository to store and track all changes. END"}
{"prompt":"2. Create and install a GitHub App\n\n###\n\n","completion":" [Create a GitHub App](https:\/\/github.com\/settings\/apps\/new) with the following settings. Refer to [GitHub's guide](https:\/\/docs.github.com\/en\/developers\/apps\/creating-a-github-app) for more information. END"}
{"prompt":"Install the GitHub App\n\n###\n\n","completion":" After you create your GitHub App, it should appear in the [GitHub Apps section of your Developer Settings](https:\/\/github.com\/settings\/apps). END"}
{"prompt":"After you create your GitHub App, it should appear in the [GitHub Apps section of your Developer Settings](https:\/\/github.com\/settings\/apps).\n\n###\n\n","completion":" To install your GitHub App: END"}
{"prompt":"To install your GitHub App:\n\n###\n\n","completion":" ![Installation screen](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b62d815-s_BDDC1A66C8D1142584E4EB36865564576911CF8DC51C8FE35E7F03E752AC5366_1605508941532_ScreenShot2020-11-15at10.42.18PM.png) END"}
{"prompt":"Save the app owner and app ID\n\n###\n\n","completion":" On the same page, click on **App settings** underneath the GitHub App name. Save the **Owned by** and **App ID** fields for later. END"}
{"prompt":"On the same page, click on **App settings** underneath the GitHub App name. Save the **Owned by** and **App ID** fields for later.\n\n###\n\n","completion":" ![Installation: About page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6a679fa-s_BDDC1A66C8D1142584E4EB36865564576911CF8DC51C8FE35E7F03E752AC5366_1605509150559_ScreenShot2020-11-15at10.45.48PM.png) END"}
{"prompt":"4. Configure settings in Retool\n\n###\n\n","completion":" Retool uses the information you've obtained to authenticate as your GitHub App. Set the following [environment variables](\/reference\/environment-variables-reference) and then restart your containers. END"}
{"prompt":"Retool uses the information you've obtained to authenticate as your GitHub App. Set the following [environment variables](\/reference\/environment-variables-reference) and then restart your containers.\n\n###\n\n","completion":" Deployments using self-hosted Retool v2.91 or above can optionally prevent the instance from pushing changes to GitHub. To lock version control, set the [`VERSION_CONTROL_LOCKED` environment variable](\/reference\/environment-variables-reference#version-control-locked) to `true`. This is useful for creating a \"read-only\" production instance of Retool. END"}
{"prompt":"Configure the GitHub repository\n\n###\n\n","completion":" The GitHub repository configuration location differs based on the version of Self-hosted Retool you use. END"}
{"prompt":"Retool v2.97 and later\n\n###\n\n","completion":" First, go to the **Source Control** tab in organization settings to configure the SCM provider. END"}
{"prompt":"First, go to the **Source Control** tab in organization settings to configure the SCM provider.\n\n###\n\n","completion":" ![Source control set up](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fc0cf0cf1-5bc8-4b05-97d0-9b444e1fcea2.png) END"}
{"prompt":"![Source control set up](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fc0cf0cf1-5bc8-4b05-97d0-9b444e1fcea2.png)\n\n###\n\n","completion":" Next, click **Set up GitHub** and enter the settings for the repository you created at the beginning of this guide. Refer to the [GitHub settings](https:\/\/docs.retool.com\/docs\/source-control-with-github#github-settings) section for details about these settings. END"}
{"prompt":"Next, click **Set up GitHub** and enter the settings for the repository you created at the beginning of this guide. Refer to the [GitHub settings](https:\/\/docs.retool.com\/docs\/source-control-with-github#github-settings) section for details about these settings.\n\n###\n\n","completion":" ![Set up GitHub](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2F8ddde090-3b23-46f3-9738-17ef0b2f76b3.png) END"}
{"prompt":"Retool v2.96 and earlier\n\n###\n\n","completion":" Go the **Advanced** tab in organization settings. The **Source Control Settings** section should now be editable. END"}
{"prompt":"Go the **Advanced** tab in organization settings. The **Source Control Settings** section should now be editable.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cc190ce-Screen_Shot_2022-04-04_at_3.45.34_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cc190ce-Screen_Shot_2022-04-04_at_3.45.34_PM.png)\n\n###\n\n","completion":" Enter the settings for the repository you created at the beginning of this guide. Refer to the [GitHub settings](https:\/\/docs.retool.com\/docs\/source-control-with-github#github-settings) section for details about these settings. END"}
{"prompt":"Troubleshooting\n\n###\n\n","completion":" The following errors are issues common to Source Control with GitHub. Refer to the guide to [resolve common Source Control issues](https:\/\/docs.retool.com\/docs\/source-control-resolve-issues) to learn about other common errors. END"}
{"prompt":"Internal Server Error\n\n###\n\n","completion":" If the system time on the machine that Retool is running on is out of sync or has \"drifted,\" Retool can have trouble authenticating with the GitHub API. END"}
{"prompt":"If the system time on the machine that Retool is running on is out of sync or has \"drifted,\" Retool can have trouble authenticating with the GitHub API.\n\n###\n\n","completion":" If you see `500 Internal Server Error` when making a commit on a branch, or see errors such as `'Issued at' claim ('iat') must be an Integer representing the time that the assertion was issued` in Retool API server logs, check that the system time where the Retool image is running is accurate. Restarting the system can solve this issue. END"}
{"prompt":"Cookies must be enabled to use GitHub\n\n###\n\n","completion":" This error occurs when the **GitHub Enterprise API URL** provided is not an API route. Check the URL provided and confirm that it is a GitHub API route. END"}
{"prompt":"Unable to access GitHub\n\n###\n\n","completion":" If your Retool instance is behind a firewall and cannot access the GitHub API, add `api.github.com` to your allowlist to enable outbound requests. END"}
{"prompt":"title: \"Configure Source Control with GitLab\"\ncategorySlug: \"source-control\"\nparentDocSlug: \"source-control-guides\"\nexcerpt: \"Learn how to set up Source Control with GitLab for self-hosted Retool.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Source Control with [GitLab](https:\/\/about.gitlab.com\/) requires Retool v2.87.11 or greater, and supports integrations with [GitLab SaaS](https:\/\/docs.gitlab.com\/ee\/subscriptions\/gitlab_com\/index.html) (cloud) and [GitLab Self-managed](https:\/\/docs.gitlab.com\/ee\/subscriptions\/self_managed\/). If you're using GitLab Cloud, you need to be on the [GitLab Premium](https:\/\/about.gitlab.com\/pricing\/) plan or above. Project access tokens are only supported on GitLab Premium or higher plans, and Retool uses these tokens to authenticate against the GitLab API to get read and write access to the GitLab project you set up to use with Retool. END"}
{"prompt":"Setup instructions\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/dd59054-gitlab-create-project-ss.jpg) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/dd59054-gitlab-create-project-ss.jpg)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/25f0e08-image-20220204-012851.png) END"}
{"prompt":"Configure environment variables\n\n###\n\n","completion":" Your Retool instance uses GitLab-specific environment variables to recreate the host URL for your GitLab project. You must provide values for either: END"}
{"prompt":"Your Retool instance uses GitLab-specific environment variables to recreate the host URL for your GitLab project. You must provide values for either:\n\n###\n\n","completion":" It is not necessary to provide all three. END"}
{"prompt":"Retool v2.97 or greater\n\n###\n\n","completion":" To verify your Gitlab provider is correctly set up, navigate to the “Source Control” tab in organization settings. If the page looks like this, please verify your environment variables are correctly configured and restart your Retool instance: END"}
{"prompt":"To verify your Gitlab provider is correctly set up, navigate to the “Source Control” tab in organization settings. If the page looks like this, please verify your environment variables are correctly configured and restart your Retool instance:\n\n###\n\n","completion":" ![Source control set up](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fc0cf0cf1-5bc8-4b05-97d0-9b444e1fcea2.png) END"}
{"prompt":"![Source control set up](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2Fc0cf0cf1-5bc8-4b05-97d0-9b444e1fcea2.png)\n\n###\n\n","completion":" If your environment variables are correctly configured, you should see the main status page.\nYou can verify your settings are correct by using the ‘Test config’ button here: END"}
{"prompt":"If your environment variables are correctly configured, you should see the main status page.\nYou can verify your settings are correct by using the ‘Test config’ button here:\n\n###\n\n","completion":" ![Set up GitLab](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs%2F40ca1384-a56d-40c9-a99f-6d5286d6cf26.png) END"}
{"prompt":"Retool v2.96 or earlier\n\n###\n\n","completion":" Confirm that GitLab is correctly set up by [protecting your first application](https:\/\/docs.retool.com\/docs\/source-control-getting-started#protecting-an-application). END"}
{"prompt":"title: \"Source Control overview\"\ncategorySlug: \"source-control\"\nexcerpt: \"Manage changes to Retool apps using SCM providers like GitHub and GitLab.\"\nhidden: false\n\n###\n\n","completion":" Source Control allows organizations to manage changes to their Retool apps using pull requests on remote source control management (SCM) providers, such as [GitHub](https:\/\/github.com\/), [GitLab](https:\/\/about.gitlab.com\/), [AWS CodeCommit](https:\/\/aws.amazon.com\/codecommit\/), [Bitbucket](https:\/\/bitbucket.org), and [Azure Repos](https:\/\/azure.microsoft.com\/en-us\/products\/devops\/repos). Instead of making changes directly to an app, changes are made on a separate branch. END"}
{"prompt":"Source Control allows organizations to manage changes to their Retool apps using pull requests on remote source control management (SCM) providers, such as [GitHub](https:\/\/github.com\/), [GitLab](https:\/\/about.gitlab.com\/), [AWS CodeCommit](https:\/\/aws.amazon.com\/codecommit\/), [Bitbucket](https:\/\/bitbucket.org), and [Azure Repos](https:\/\/azure.microsoft.com\/en-us\/products\/devops\/repos). Instead of making changes directly to an app, changes are made on a separate branch.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<style>\\n \\nhr.landing-divider {\\nmargin: 60px 0;\\nborder-width: 0;\\n}\\n \\n section.get-started {\\n display: flex;\\n margin-bottom: 25px;\\n }\\n \\n section.get-started div.get-started-description {\\n width: 50%;\\n flex-shrink: 0;\\n flex-direction: column;\\n }\\n \\n section ul.ctas {\\n grid-auto-rows: 1fr;\\n display: grid;\\n list-style: none;\\n gap: 30px;\\n margin: 0;\\n padding: 0;\\n }\\n\\n section.two-column ul.ctas {\\n grid-template-columns: repeat(2,1fr);\\n }\\n\\n section.three-column ul.ctas {\\n grid-template-columns: repeat(3,1fr);\\n }\\n\\n section ul.ctas li {\\n margin: 0;\\n padding: 0;\\n display: flex;\\n border: 1px solid rgb(240, 241, 255);\\n background: #fbfbfb;\\n border-radius: 5px;\\n transition: background 200ms ease 0s, color 200ms ease 0s, box-shadow 200ms ease 0s, border 200ms\\n }\\n\\n section ul.ctas li a {\\n padding: 10px;\\n text-decoration: none !important;\\n color: #3d3d3d;\\n transform 400ms ease 0s;\\n }\\n\\n section ul.ctas li:hover {\\n transform: translateY(-1px);\\n box-shadow: 0 4px 16px rgb(0 0 0 \/ 5%);\\n border: 1px solid rgb(209, 214, 255);\\n }\\n\\n section ul.ctas li a div.name {\\n font-weight: var(--markdown-title-weight,600);\\n color: rgb(104, 117, 217);\\n }\\n \\n\\n section.get-started div.get-started-image {\\n width: 100%;\\n margin-left: 20px;\\n }\\n \\n section.get-started .get-started-image img {\\n border-radius: 6px;\\n }\\n\\n\\n\\n\\n @media only screen and (max-width:1029px) {\\n\\n section.two-column ul.ctas, section.three-column ul.ctas {\\n grid-template-columns: repeat(1,1fr) !important;\\n }\\n\\n section.get-started {\\n flex-direction: column-reverse;\\n }\\n\\n section.get-started div.get-started-description {\\n width: 100%;\\n }\\n\\n section.get-started div.get-started-image, div.CodeTabs {\\n margin-left: 0;\\n }\\n \\nsection.get-started div.get-started-components-image {\\n margin-right: 0;\\n margin-top: 20px;\\n }\\n\\n }\\n<\/style>\"\n}\n[\/block] END"}
{"prompt":"Get started\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div style=\\\"position: relative; padding-bottom: 62.5%; height: 0;\\\"><iframe src=\\\"https:\/\/www.loom.com\/embed\/928d25c60bca4865809837c943b364b3\\\" frameborder=\\\"0\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\\\"><\/iframe><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div style=\\\"position: relative; padding-bottom: 62.5%; height: 0;\\\"><iframe src=\\\"https:\/\/www.loom.com\/embed\/928d25c60bca4865809837c943b364b3\\\" frameborder=\\\"0\\\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\\\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\\\"><\/iframe><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<section class=\\\"landing three-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"source-control-with-github\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">GitHub<\/div>\\n <div class=\\\"description\\\">\\nConfigure Source Control with GitHub.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"source-control-with-gitlab\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">GitLab<\/div>\\n <div class=\\\"description\\\">\\nConfigure Source Control with GitLab.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"source-control-with-bitbucket\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">BitBucket<\/div>\\n <div class=\\\"description\\\">\\nConfigure Source Control with BitBucket.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"source-control-with-aws-codecommit\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">AWS CodeCommit<\/div>\\n <div class=\\\"description\\\">\\nConfigure Source Control with AWS CodeCommit.\\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a\\n href=\\\"source-control-with-azure-repos\\\"\\n style=\\\"--ctaColor: #f2eefa; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Azure Repos<\/div>\\n <div class=\\\"description\\\">\\nConfigure Source Control with Azure Repos.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"Protect apps and resources\n\n###\n\n","completion":" Make branch-based changes to apps and resources. END"}
{"prompt":"Make branch-based changes to apps and resources.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<section class=\\\"landing two-column\\\">\\n <ul class=\\\"ctas\\\">\\n <li>\\n <a\\n href=\\\"source-control-getting-started\\\"\\n style=\\\"--ctaColor: #e4f2e7; --textColor: #3d3d3d\\\"\\n >\\n <div class=\\\"name\\\">Protect apps with Source Control<\/div>\\n <div class=\\\"description\\\">\\nProtect apps with branch-based changes. \\n <\/div>\\n <\/a>\\n <\/li>\\n <li>\\n <a href=\\\"source-control-protected-resources\\\" style=\\\"--ctaColor: #f0f2ff; --textColor: #3d3d3d\\\">\\n <div class=\\\"name\\\">Protect resources with Source Control<\/div>\\n <div class=\\\"description\\\">\\n Protect resources with branch-based changes.\\n <\/div>\\n <\/a>\\n <\/li>\\n <\/ul>\\n<\/section>\\n<hr class=\\\"landing-divider\\\" \/>\\n\"\n}\n[\/block] END"}
{"prompt":"Use arrays in queries\n\n###\n\n","completion":" Every SQL database has a slightly different way of handling arrays. Because SQL resources in Retool are set to convert queries to prepared statements by default this can have more challenging interactions with multiple values inside a single parameter. Here are best practices for some of our most common databases without having to disable prepared statements. END"}
{"prompt":"Every SQL database has a slightly different way of handling arrays. Because SQL resources in Retool are set to convert queries to prepared statements by default this can have more challenging interactions with multiple values inside a single parameter. Here are best practices for some of our most common databases without having to disable prepared statements.\n\n###\n\n","completion":" **Databases with unique array structures** END"}
{"prompt":"**Databases with unique array structures**\n\n###\n\n","completion":" As a final fallback, another clever way of getting this to work in SQL databases that support substring matching is to convert your array into a comma separated string beginning and ending with a comma. If your column to matches with a comma added before and after (using the `||` operator), that would be a unique match. END"}
{"prompt":"Show all data when a filter is not in use\n\n###\n\n","completion":" A common use case is to have a dropdown that allows a user to filter the users by status. However, if you want to show all statuses when no status is selected, you will need to use the following pattern to achieve your goal. END"}
{"prompt":"Organize WHERE clauses\n\n###\n\n","completion":" There are three approaches to keep in mind whenever you write queries with complex or specific conditional logic. END"}
{"prompt":"Combine logic often\n\n###\n\n","completion":" Avoid writing redundant logic inside a `WHERE` clause and combine conditions to make queries quicker and easier to understand. END"}
{"prompt":"Avoid writing redundant logic inside a `WHERE` clause and combine conditions to make queries quicker and easier to understand.\n\n###\n\n","completion":" This `WHERE` clause contains a redundant `AND` condition since both `Orange` and `Apple` are already part of the `Fruit` category. Removing unnecessary conditions speeds up queries and reduces complexity. END"}
{"prompt":"Organize logic\n\n###\n\n","completion":" Use parentheses `()` to organize conditions. This helps your queries perform as expected and are easier to understand. END"}
{"prompt":"Filter data with transformers\n\n###\n\n","completion":" Use [transformers](https:\/\/docs.retool.com\/docs\/transformers) to filter queries of smaller data sets. Transformers further reduce complexity and allow you to refine query data using JavaScript. END"}
{"prompt":"Use [transformers](https:\/\/docs.retool.com\/docs\/transformers) to filter queries of smaller data sets. Transformers further reduce complexity and allow you to refine query data using JavaScript.\n\n###\n\n","completion":" Transformers run client-side in the browser. For larger data sets, keep conditional logic within your queries so that your apps remain [performant](https:\/\/docs.retool.com\/docs\/app-performance-best-practices). END"}
{"prompt":"title: \"SQL in Retool\"\ncategorySlug: \"legacy\"\nexcerpt: \"A quick intro to SQL in Retool\"\nhidden: true\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a604236-02_SQL_No_Logo.png) END"}
{"prompt":"Introduction\n\n###\n\n","completion":" SQL, or Structured Query Language, is a language to interact with databases. You can use it to create, read, update and delete data. There are many different versions of the SQL language that vary based on database (i.e. MySQL vs PostgreSQL). END"}
{"prompt":"SQL, or Structured Query Language, is a language to interact with databases. You can use it to create, read, update and delete data. There are many different versions of the SQL language that vary based on database (i.e. MySQL vs PostgreSQL).\n\n###\n\n","completion":" In Retool, you’ll use SQL to write queries that exchange data between Retool and your database. We’re going to go over some basic SQL (feel free to skip if you’re already familiar!) and a few things that are unique to SQL in Retool. END"}
{"prompt":"Basic SQL\n\n###\n\n","completion":" Feel free to follow this basic SQL tutorial [here](https:\/\/www.w3schools.com\/sql\/sql_intro.asp) (external link to W3 schools) if you’d like to really dig in! It’s a fantastic resource that covers all the different SQL operators. END"}
{"prompt":"Feel free to follow this basic SQL tutorial [here](https:\/\/www.w3schools.com\/sql\/sql_intro.asp) (external link to W3 schools) if you’d like to really dig in! It’s a fantastic resource that covers all the different SQL operators.\n\n###\n\n","completion":" In the context of Retool, I recommend reading the following (short) sections: END"}
{"prompt":"In the context of Retool, I recommend reading the following (short) sections:\n\n###\n\n","completion":" [Home](https:\/\/www.w3schools.com\/sql\/default.asp) through [Order By](https:\/\/www.w3schools.com\/sql\/sql_orderby.asp) (7 sections), then [Min and Max](https:\/\/www.w3schools.com\/sql\/sql_min_max.asp) through [Joins](https:\/\/www.w3schools.com\/sql\/sql_join.asp) (8 sections). END"}
{"prompt":"[Home](https:\/\/www.w3schools.com\/sql\/default.asp) through [Order By](https:\/\/www.w3schools.com\/sql\/sql_orderby.asp) (7 sections), then [Min and Max](https:\/\/www.w3schools.com\/sql\/sql_min_max.asp) through [Joins](https:\/\/www.w3schools.com\/sql\/sql_join.asp) (8 sections).\n\n###\n\n","completion":" Joins start to get a little more complicated, but are useful if you’re using two tables in a single query (for example, matching the user’s email from the `users` table to all the orders they’ve placed in the `orders` table), so learn about joins at your own risk. END"}
{"prompt":"Table structure\n\n###\n\n","completion":" Relational databases organize data in tables with rows and columns. END"}
{"prompt":"Relational databases organize data in tables with rows and columns.\n\n###\n\n","completion":" Each row will have a primary key, which is a column that serves as a unique identifier for the row. There can be multiple “Bob”s, so we can differentiate them by their `id`s, which is the most commonly used primary key. Again, the primary key must always be unique. END"}
{"prompt":"Each row will have a primary key, which is a column that serves as a unique identifier for the row. There can be multiple “Bob”s, so we can differentiate them by their `id`s, which is the most commonly used primary key. Again, the primary key must always be unique.\n\n###\n\n","completion":" Database columns must have a specified type. Here are a few common column data types: END"}
{"prompt":"Database columns must have a specified type. Here are a few common column data types:\n\n###\n\n","completion":" For example, in the table above, the id is of type `INT` and name and email are columns of type `VARCHAR`. Any data inserted into the table must match the declared column type, or else your database will reject the query. END"}
{"prompt":"For example, in the table above, the id is of type `INT` and name and email are columns of type `VARCHAR`. Any data inserted into the table must match the declared column type, or else your database will reject the query.\n\n###\n\n","completion":" More types listed [here](https:\/\/www.w3schools.com\/sql\/sql_datatypes.asp). END"}
{"prompt":"More types listed [here](https:\/\/www.w3schools.com\/sql\/sql_datatypes.asp).\n\n###\n\n","completion":" 🔥 Hot tip! Use the built-in schema browser to easily view your column types. END"}
{"prompt":"🔥 Hot tip! Use the built-in schema browser to easily view your column types.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c44ca4b-SQL-Schema_browser.png) END"}
{"prompt":"Read vs Write\n\n###\n\n","completion":" SQL consists of a few keywords, or operations, that allow you to access the data in your database. There are 4 main data manipulation operations that SQL provides: END"}
{"prompt":"SQL consists of a few keywords, or operations, that allow you to access the data in your database. There are 4 main data manipulation operations that SQL provides:\n\n###\n\n","completion":" As you may have noticed, operations can be split into two categories: read and write. In Retool, there are 2 query UIs, one for each of the categories. Generally, read operations should be written in the SQL mode and write operations should be written in the GUI mode. END"}
{"prompt":"As you may have noticed, operations can be split into two categories: read and write. In Retool, there are 2 query UIs, one for each of the categories. Generally, read operations should be written in the SQL mode and write operations should be written in the GUI mode.\n\n###\n\n","completion":" See screenshots below for a quick preview of each of the modes! END"}
{"prompt":"See screenshots below for a quick preview of each of the modes!\n\n###\n\n","completion":" ![GUI mode is available only for resources with both read and write permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/082a56c-SQL-SQL_vs_GUI.png) END"}
{"prompt":"![GUI mode is available only for resources with both read and write permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/082a56c-SQL-SQL_vs_GUI.png)\n\n###\n\n","completion":" ![SQL mode, typically for reads, has a blank field to enter SQL statements](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5d8c7c0-SQL-Read_query.png) END"}
{"prompt":"SELECT, FROM, WHERE\n\n###\n\n","completion":" These three keywords are the most important (in my very humble opinion) keywords you’ll need. Anytime you want to get columns from a table based on a certain condition, you’ll need SELECT, FROM and WHERE. END"}
{"prompt":"These three keywords are the most important (in my very humble opinion) keywords you’ll need. Anytime you want to get columns from a table based on a certain condition, you’ll need SELECT, FROM and WHERE.\n\n###\n\n","completion":" SELECT allows you to specify the columns you want to grab\nFROM the table in your database\nWHERE a certain condition is met. END"}
{"prompt":"SELECT allows you to specify the columns you want to grab\nFROM the table in your database\nWHERE a certain condition is met.\n\n###\n\n","completion":" ![This query will grab all columns (as denoted by the *) from the user table where the id is 9. Note, since id is a primary key here, meaning there’s only one user with the id of 9, we’ll only get one row of data returned](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ced6bab-SQL-SELECT_FROM_WHERE.png) END"}
{"prompt":"Available Docs\n\n###\n\n","completion":" We have the following very important docs that we’ll be referencing a few times in the upcoming sections. They cover what you need to know to get started with SQL in Retool! END"}
{"prompt":"Dynamic Values\n\n###\n\n","completion":" You can use values from Retool components inside your SQL queries with `{{ }}`. END"}
{"prompt":"You can use values from Retool components inside your SQL queries with `{{ }}`.\n\n###\n\n","completion":" Let’s take a look at some examples. END"}
{"prompt":"Let’s take a look at some examples.\n\n###\n\n","completion":" If you want to select a status from a dropdown and show all the projects with that status, you can use the dropdown’s value (which can be accessed with `select3.value`) directly in the WHERE condition. END"}
{"prompt":"If you want to select a status from a dropdown and show all the projects with that status, you can use the dropdown’s value (which can be accessed with `select3.value`) directly in the WHERE condition.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/af89ea4-SQL-Dropdown_in_query.png) END"}
{"prompt":"Prepared Statements\n\n###\n\n","completion":" All of our SQL queries are converted to prepared statements to prevent SQL injection, meaning that table\/database names and SQL functions aren't able to be defined using a string created dynamically. END"}
{"prompt":"All of our SQL queries are converted to prepared statements to prevent SQL injection, meaning that table\/database names and SQL functions aren't able to be defined using a string created dynamically.\n\n###\n\n","completion":" Admins can disable this setting in the resource setup, but keep in mind the potential of submitting dangerous SQL through any of the variables referenced in a query. If that's something you'd like to explore, I often recommend setting up another copy of a resource with that setting enabled to help limit the surface area that you have to keep in mind SQL injection for. END"}
{"prompt":"Admins can disable this setting in the resource setup, but keep in mind the potential of submitting dangerous SQL through any of the variables referenced in a query. If that's something you'd like to explore, I often recommend setting up another copy of a resource with that setting enabled to help limit the surface area that you have to keep in mind SQL injection for.\n\n###\n\n","completion":" ![A screenshot of the disable prepared statements checkbox in a resource setup page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d33f035-SQL-Disable_prepared_statements.png) END"}
{"prompt":"![A screenshot of the disable prepared statements checkbox in a resource setup page](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d33f035-SQL-Disable_prepared_statements.png)\n\n###\n\n","completion":" This won’t work (and is an example of SQL injection): END"}
{"prompt":"This won’t work (and is an example of SQL injection):\n\n###\n\n","completion":" ![This query is attempting to use a dynamic value as a table name, which counts as SQL injection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7741b19-SQL-SQL_injection.png) END"}
{"prompt":"![This query is attempting to use a dynamic value as a table name, which counts as SQL injection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7741b19-SQL-SQL_injection.png)\n\n###\n\n","completion":" This will work: END"}
{"prompt":"This will work:\n\n###\n\n","completion":" ![This query is using a dynamic value as a column value, which is not SQL injection](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/abe52b8-SQL-Not_SQL_injection.png) END"}
{"prompt":"FAQs\n\n###\n\n","completion":" ❓How can I use an array in my query?\n✅ Depending on your database type, you’ll need to choose the correct syntax listed in the [SQL Cheatsheet](https:\/\/docs.retool.com\/docs\/sql-cheatsheet). END"}
{"prompt":"❓How can I use an array in my query?\n✅ Depending on your database type, you’ll need to choose the correct syntax listed in the [SQL Cheatsheet](https:\/\/docs.retool.com\/docs\/sql-cheatsheet).\n\n###\n\n","completion":" ❓How can I show all data if no search condition is specified?\n✅ Depending on your database type, you’ll need to choose the correct syntax listed in the [SQL Cheatsheet](https:\/\/docs.retool.com\/docs\/sql-cheatsheet). END"}
{"prompt":"❓How can I show all data if no search condition is specified?\n✅ Depending on your database type, you’ll need to choose the correct syntax listed in the [SQL Cheatsheet](https:\/\/docs.retool.com\/docs\/sql-cheatsheet).\n\n###\n\n","completion":" ❓Can I join my Postgres data with my Google Sheets data with SQL?\n✅ It's possible to join data from two different databases in a Query JSON with SQL query! Read more about this special query type [here](https:\/\/docs.retool.com\/docs\/sql-queries#query-json-with-sql). A quick note—Postgres returns data as an object of arrays, which is different than the array of objects returned from Google Sheets. In the Query JSON with SQL query, refer to the Postgres data as  \n`{{ formatDataAsArray(postgresQuery.data) }}` to get it in the right structure. END"}
{"prompt":"❓Can I join my Postgres data with my Google Sheets data with SQL?\n✅ It's possible to join data from two different databases in a Query JSON with SQL query! Read more about this special query type [here](https:\/\/docs.retool.com\/docs\/sql-queries#query-json-with-sql). A quick note—Postgres returns data as an object of arrays, which is different than the array of objects returned from Google Sheets. In the Query JSON with SQL query, refer to the Postgres data as  \n`{{ formatDataAsArray(postgresQuery.data) }}` to get it in the right structure.\n\n###\n\n","completion":" ❓Why is GUI mode disabled?\n✅ If GUI mode is disabled in the selector, it's probably because your database user does not have write permissions. Try returning to your resource settings and inputting a database user that has both read and write permissions. END"}
{"prompt":"Common Error Messages\n\n###\n\n","completion":" ❓relation “tablename” does not exist\n✅ Make sure your table exists, and is spelled and capitalized correctly. END"}
{"prompt":"❓relation “tablename” does not exist\n✅ Make sure your table exists, and is spelled and capitalized correctly.\n\n###\n\n","completion":" ![The table’s name in my database is “users” not “Users” and double quotes are case-sensitive](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/49e9145-SQL-relation_does_not_exist.png) END"}
{"prompt":"![The table’s name in my database is “users” not “Users” and double quotes are case-sensitive](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/49e9145-SQL-relation_does_not_exist.png)\n\n###\n\n","completion":" ❓This SQL is incompatible with prepared statements\n✅ Table\/database names and SQL functions aren't able to be defined using a string created dynamically. Docs with examples [here](https:\/\/docs.retool.com\/docs\/sql-queries#dynamic-table-names). END"}
{"prompt":"❓This SQL is incompatible with prepared statements\n✅ Table\/database names and SQL functions aren't able to be defined using a string created dynamically. Docs with examples [here](https:\/\/docs.retool.com\/docs\/sql-queries#dynamic-table-names).\n\n###\n\n","completion":" ![select _ from \"users\" works, but select _ from {{ \"users\" }} does not](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6b8651d-SQL-prepared_statements_error.png) END"}
{"prompt":"![select _ from \"users\" works, but select _ from {{ \"users\" }} does not](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6b8651d-SQL-prepared_statements_error.png)\n\n###\n\n","completion":" ❓ invalid input syntax for type date\/string\/integer\/bool\/etc.\n✅ Verify the column-to-be-updated’s type and make sure it matches the type you’re attempting to pass in. END"}
{"prompt":"❓ invalid input syntax for type date\/string\/integer\/bool\/etc.\n✅ Verify the column-to-be-updated’s type and make sure it matches the type you’re attempting to pass in.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a77bc3e-SQL-invalid_input_syntax.png) END"}
{"prompt":"title: \"Read data from SQL databases\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to write SQL queries in Retool to read data.\"\nhidden: false\n\n###\n\n","completion":" To read from a database, you can write SQL statements. For example, this query selects all active or inactive users, depending on whether a checkbox is checked. END"}
{"prompt":"To read from a database, you can write SQL statements. For example, this query selects all active or inactive users, depending on whether a checkbox is checked.\n\n###\n\n","completion":" Name the query `getUsers`, save it, and access its results elsewhere as `getUsers.data`. SQL queries return data in a column-based format: END"}
{"prompt":"Name the query `getUsers`, save it, and access its results elsewhere as `getUsers.data`. SQL queries return data in a column-based format:\n\n###\n\n","completion":" Data from SQL queries are **not** returned as an array of objects. To access the data as an array of objects, use the [`formatDataAsArray`](https:\/\/docs.retool.com\/reference\/javascript-api-methods-utility#utilsformatdataasarray) method. END"}
{"prompt":"Data from SQL queries are **not** returned as an array of objects. To access the data as an array of objects, use the [`formatDataAsArray`](https:\/\/docs.retool.com\/reference\/javascript-api-methods-utility#utilsformatdataasarray) method.\n\n###\n\n","completion":" For examples of more complex SQL queries in Retool, see the [SQL cheatsheet](https:\/\/docs.retool.com\/docs\/sql-cheatsheet). END"}
{"prompt":"Dynamic table names\n\n###\n\n","completion":" To prevent SQL injection, Retool converts SQL queries into prepared statements. The exact behavior of the query depends on your specific database driver. However, most databases do not support prepared statements that have dynamic column names or dynamic table names, because it's difficult to prevent SQL injection in those cases. END"}
{"prompt":"To prevent SQL injection, Retool converts SQL queries into prepared statements. The exact behavior of the query depends on your specific database driver. However, most databases do not support prepared statements that have dynamic column names or dynamic table names, because it's difficult to prevent SQL injection in those cases.\n\n###\n\n","completion":" That means the following query **does not** work in PostgreSQL, because the table name is dynamic and PostgreSQL doesn't support dynamic table names in prepared statements. END"}
{"prompt":"That means the following query **does not** work in PostgreSQL, because the table name is dynamic and PostgreSQL doesn't support dynamic table names in prepared statements.\n\n###\n\n","completion":" Instead, you should write two queries: END"}
{"prompt":"Instead, you should write two queries:\n\n###\n\n","completion":" Then, you can reference the correct SQL statement depending on the value of `textinput1`: END"}
{"prompt":"Disable prepared statements\n\n###\n\n","completion":" Admins can disable prepared statements on a resource by checking the **Disable converting queries to prepared statements** checkbox on the resource detail page. This turns off SQL injection protection and exposes the resource to SQL injection attacks, so it should be used with caution. END"}
{"prompt":"Prepared statement placeholder syntax\n\n###\n\n","completion":" If you disable prepared statements, you may need to update queries which use JavaScript within `{{ }}`, because some databases expect unquoted prepared statement placeholders or perform type conversions within prepared statements. END"}
{"prompt":"If you disable prepared statements, you may need to update queries which use JavaScript within `{{ }}`, because some databases expect unquoted prepared statement placeholders or perform type conversions within prepared statements.\n\n###\n\n","completion":" For example, when prepared statements are enabled, the following PostgreSQL query does not need to quote the prepared statement placeholder. END"}
{"prompt":"For example, when prepared statements are enabled, the following PostgreSQL query does not need to quote the prepared statement placeholder.\n\n###\n\n","completion":" When prepared statements are disabled, the placeholder needs quotes. END"}
{"prompt":"When prepared statements are disabled, the placeholder needs quotes.\n\n###\n\n","completion":" Consult your database documentation on prepared statements to confirm expected usage. END"}
{"prompt":"title: \"Write data to SQL databases\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to use GUI mode to safely write data to SQL databases.\"\nhidden: false\n\n###\n\n","completion":" **Retool supports writing to most SQL databases via a GUI mode.** This mode has two main advantages: it provides an easier-to-use interface for constructing queries if you're not super familiar with writing raw SQL, and it helps avoid accidental destructive actions, like dropping a table. The GUI mode supports most writing operations: inserting rows, updating them, deleting them, and so on (even in bulk!). END"}
{"prompt":"Getting Started\n\n###\n\n","completion":" Once you've [configured an SQL resource](https:\/\/docs.retool.com\/docs\/connect-database-resource), GUI mode will be available via a dropdown inside of the query editor: END"}
{"prompt":"Once you've [configured an SQL resource](https:\/\/docs.retool.com\/docs\/connect-database-resource), GUI mode will be available via a dropdown inside of the query editor:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e67aa14-query-editor-gui-mode-select.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e67aa14-query-editor-gui-mode-select.png)\n\n###\n\n","completion":" After selecting GUI mode, you can then use the GUI to construct the query: END"}
{"prompt":"After selecting GUI mode, you can then use the GUI to construct the query:\n\n###\n\n","completion":" ![Updating the status for a record in the orders table by looking it up by id.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9e25b96-f0ef1b4-query-editor-gui-mode-query.png) END"}
{"prompt":"![Updating the status for a record in the orders table by looking it up by id.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/9e25b96-f0ef1b4-query-editor-gui-mode-query.png)\n\n###\n\n","completion":" Now, when the query is manually triggered (e.g. when you click a button), the query will run and modify your existing database. END"}
{"prompt":"Restricting resource access to only SQL or GUI mode\n\n###\n\n","completion":" It's sometimes preferable to restrict a SQL resource to _only_ use GUI mode in the query editor. This can be particularly useful if you don't want users to run raw SQL write operations. END"}
{"prompt":"It's sometimes preferable to restrict a SQL resource to _only_ use GUI mode in the query editor. This can be particularly useful if you don't want users to run raw SQL write operations.\n\n###\n\n","completion":" To enable this, check the _“show write GUI mode only”_ option on the resource configuration page. Note that your database user credentials still need to have both read and write permissions, even if this setting is enabled. END"}
{"prompt":"To enable this, check the _“show write GUI mode only”_ option on the resource configuration page. Note that your database user credentials still need to have both read and write permissions, even if this setting is enabled.\n\n###\n\n","completion":" As a complement, you can create an entirely separate resource for the same database, but with a database user that has only _read_ permissions. Without write permissions, only the SQL mode will be enabled in the query editor. This protects the resource user from writing any destructive SQL statements, like `DROP TABLE`. END"}
{"prompt":"Bulk updates\n\n###\n\n","completion":" When evaluating a SQL `update`, `upsert`, or `delete`, you'll first want to filter out the rows the query will affect by looking at the \"filter by\" section: END"}
{"prompt":"When evaluating a SQL `update`, `upsert`, or `delete`, you'll first want to filter out the rows the query will affect by looking at the \"filter by\" section:\n\n###\n\n","completion":" ![The filter by section.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4b54cad-a7404c3-query_editor_gui_mode_filterby.png) END"}
{"prompt":"![The filter by section.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4b54cad-a7404c3-query_editor_gui_mode_filterby.png)\n\n###\n\n","completion":" If the results of the `filter by` contain more than one row, Retool will notify you and refuse to run the query. If you intended to update multiple rows, though, you can check the \"allow this query to modify multiple rows\" checkbox: END"}
{"prompt":"If the results of the `filter by` contain more than one row, Retool will notify you and refuse to run the query. If you intended to update multiple rows, though, you can check the \"allow this query to modify multiple rows\" checkbox:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8a3ac4f-query_editor_gui_mode_multiplerows.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8a3ac4f-query_editor_gui_mode_multiplerows.png)\n\n###\n\n","completion":" If it's an `update` or `upsert`, this setting will enable you to update multiple rows. If you're deleting rows, Retool only lets you delete up to 200 rows in one go. END"}
{"prompt":"Bulk updates via a primary key\n\n###\n\n","completion":" If you'd like to make a bulk update to your database, you can pass in an array of records to update. An example of this is shown below: END"}
{"prompt":"If you'd like to make a bulk update to your database, you can pass in an array of records to update. An example of this is shown below:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0807209-query_editor_gui_mode_bulkupdate.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0807209-query_editor_gui_mode_bulkupdate.png)\n\n###\n\n","completion":" In this example, Retool will first ensure that the `ProductID` column is a unique key in the database table. If it is a unique key, Retool will iterate through the array and, for each member, merge the new values with the existing database record. In this case, it will update the product with `id = 680` to have the new color of `Red` and update the product with `id` of `706` to a new color of `Green`. END"}
{"prompt":"In this example, Retool will first ensure that the `ProductID` column is a unique key in the database table. If it is a unique key, Retool will iterate through the array and, for each member, merge the new values with the existing database record. In this case, it will update the product with `id = 680` to have the new color of `Red` and update the product with `id` of `706` to a new color of `Green`.\n\n###\n\n","completion":" Notes END"}
{"prompt":"Bulk upserts via a primary key\n\n###\n\n","completion":" This works just like \"bulk updates via a primary key\" above, but allows you to insert new records at the same time by including objects with new primary keys in the \"array of records to update\" field. END"}
{"prompt":"This works just like \"bulk updates via a primary key\" above, but allows you to insert new records at the same time by including objects with new primary keys in the \"array of records to update\" field.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d3a78d7-query_editor_gui_mode_bulkupsert.png) END"}
{"prompt":"title: \"Configure SSO with OIDC authentication\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to configure SSO with OpenID Connect (OIDC).\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Retool's OpenID integration utilizes the [Authorization Code Flow](https:\/\/auth0.com\/docs\/flows\/authorization-code-flow). Retool, at minimum, expects either an ID token or access token to be a JWT that will contain the email of the user being authenticated. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" Before you get started, you'll need the following information: END"}
{"prompt":"Before you get started, you'll need the following information:\n\n###\n\n","completion":" Besides this, you'll also want to check how your SSO provider formats the ID token or access token. Retool will attempt to decode the ID token and access token as if they were JWTs. You will need to provide Retool the path in the decoded JWT that corresponds with your user's identifying information. END"}
{"prompt":"Besides this, you'll also want to check how your SSO provider formats the ID token or access token. Retool will attempt to decode the ID token and access token as if they were JWTs. You will need to provide Retool the path in the decoded JWT that corresponds with your user's identifying information.\n\n###\n\n","completion":" Finally, add <https:\/\/your.retool.instance\/oauth2sso\/callback> as a callback URL for your application and set `BASE_DOMAIN=https:\/\/retool.yourwebsite.com`. END"}
{"prompt":"Necessary environment variables\n\n###\n\n","completion":" In order for Retool to show the \"Login with SSO\" button, you **must** have all of the following environment variables set: END"}
{"prompt":"In order for Retool to show the \"Login with SSO\" button, you **must** have all of the following environment variables set:\n\n###\n\n","completion":" While not required, setting `BASE_DOMAIN=https:\/\/retool.yourwebsite.com` makes sure links are properly created. In the case of SSO, setting `BASE_DOMAIN` will help Retool create the right redirect URIs. END"}
{"prompt":"Configure SSO for your provider\n\n###\n\n","completion":" Follow the configuration guides to set up SSO with OIDC for [Auth0](https:\/\/docs.retool.com\/docs\/configure-auth0-authentication), [Google](https:\/\/docs.retool.com\/docs\/configure-google-sign-in-authentication), [Okta](https:\/\/docs.retool.com\/docs\/configure-okta-authentication), or [Azure AD](https:\/\/docs.retool.com\/docs\/configure-azure-ad-authentication). END"}
{"prompt":"Role mapping\n\n###\n\n","completion":" You can use [environment variables](\/reference\/environment-variables-reference) to map the roles returned from the OpenID response to your Retool permission groups. END"}
{"prompt":"You can use [environment variables](\/reference\/environment-variables-reference) to map the roles returned from the OpenID response to your Retool permission groups.\n\n###\n\n","completion":" The following example maps the `devops` and `support` roles to specific Retool permission groups. END"}
{"prompt":"The following example maps the `devops` and `support` roles to specific Retool permission groups.\n\n###\n\n","completion":" After setting these environment variables, a user's groups will sync the next time they log in to Retool over SSO. END"}
{"prompt":"Use authentication JWTs in resources\n\n###\n\n","completion":" One benefit of using this integration is that this makes it possible for you to re-use the tokens obtained throughout the SSO process in API calls you make from Retool to your backend services. END"}
{"prompt":"One benefit of using this integration is that this makes it possible for you to re-use the tokens obtained throughout the SSO process in API calls you make from Retool to your backend services.\n\n###\n\n","completion":" Here's an example of how you can set headers using these variables. END"}
{"prompt":"Here's an example of how you can set headers using these variables.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fe79245-Screen_Shot_2020-09-25_at_12.20.08_AM.png) END"}
{"prompt":"Reference JWT claims in Retool apps\n\n###\n\n","completion":" You can use JWT claims returned by your SSO provider to personalize Retool apps or [control component permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-component-permissions). Retool automatically includes these claims as the values of the `current_user.metadata.idToken` and `current_user.metadata.accessToken` keys. Access them using curly braces anywhere in your Retool app: `{{current_user.metadata.idToken.picture}}` END"}
{"prompt":"Custom claims\n\n###\n\n","completion":" You can add custom claims following instructions from your IdP. To add [custom claims to Okta](https:\/\/support.okta.com\/help\/s\/article\/How-to-add-custom-attributes-of-user-profile-as-claims-in-token), add attributes to the Retool profile, then add claims to the authorization server. In OneLogin, you add [custom claims](https:\/\/docs.retool.com\/docs\/sso-onelogin-oidc#parameters-page) from the **Parameters** page. END"}
{"prompt":"You can add custom claims following instructions from your IdP. To add [custom claims to Okta](https:\/\/support.okta.com\/help\/s\/article\/How-to-add-custom-attributes-of-user-profile-as-claims-in-token), add attributes to the Retool profile, then add claims to the authorization server. In OneLogin, you add [custom claims](https:\/\/docs.retool.com\/docs\/sso-onelogin-oidc#parameters-page) from the **Parameters** page.\n\n###\n\n","completion":" In Retool, custom claims are accessible in `current_user.metadata.` END"}
{"prompt":"Thin tokens and fat tokens\n\n###\n\n","completion":" Some OIDC Identity Providers don't send all the claims associated with a user during the authentication flow. This is called a [\"thin token\"](https:\/\/developer.okta.com\/docs\/concepts\/api-access-management\/#tokens-and-scopes)and is used in place of a \"fat token\" for performance reasons. If you find that the id token returned is lacking certain claims, you need to tell Retool to make an additional request to the `\/userinfo` endpoint to grab the fat token. END"}
{"prompt":"Some OIDC Identity Providers don't send all the claims associated with a user during the authentication flow. This is called a [\"thin token\"](https:\/\/developer.okta.com\/docs\/concepts\/api-access-management\/#tokens-and-scopes)and is used in place of a \"fat token\" for performance reasons. If you find that the id token returned is lacking certain claims, you need to tell Retool to make an additional request to the `\/userinfo` endpoint to grab the fat token.\n\n###\n\n","completion":" You do this by setting an additional environment variable: END"}
{"prompt":"You do this by setting an additional environment variable:\n\n###\n\n","completion":" During the authentication flow, Retool will replace the thin token with the fat token returned from this endpoint. END"}
{"prompt":"title: \"Configure SSO with SAML authentication\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to configure SSO with providers using SAML.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Self-hosted Retool deployments support Okta, Active Directory, and other SAML SSO providers. END"}
{"prompt":"Okta\n\n###\n\n","completion":" You must be in **Admin** mode to configure Okta and have admin permissions in Retool. To set up Okta as your identity provider: END"}
{"prompt":"You must be in **Admin** mode to configure Okta and have admin permissions in Retool. To set up Okta as your identity provider:\n\n###\n\n","completion":" ![IdP Metadata XML field in Settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/sso\/ecd12a0a-dfb3-4ff8-8c6c-837599adcc14.png) END"}
{"prompt":"Azure Active Directory\n\n###\n\n","completion":" **1. Customize your Entity ID in Retool** END"}
{"prompt":"**1. Customize your Entity ID in Retool**\n\n###\n\n","completion":" **2. Create an Azure Active Directory Enterprise application** END"}
{"prompt":"**2. Create an Azure Active Directory Enterprise application**\n\n###\n\n","completion":" **3. Assign users to the Retool application in Azure** END"}
{"prompt":"**3. Assign users to the Retool application in Azure**\n\n###\n\n","completion":" In order for users to access Retool using Azure Active Directory SSO, they must: END"}
{"prompt":"In order for users to access Retool using Azure Active Directory SSO, they must:\n\n###\n\n","completion":" Assign users to the Retool application and confirm their required attributes in the **Azure Active Directory admin center**. END"}
{"prompt":"Assign users to the Retool application and confirm their required attributes in the **Azure Active Directory admin center**.\n\n###\n\n","completion":" **4. Configure SAML settings for the Retool application in Azure** END"}
{"prompt":"**4. Configure SAML settings for the Retool application in Azure**\n\n###\n\n","completion":" You must also edit each claim and clear the value for the `Namespace` field. END"}
{"prompt":"You must also edit each claim and clear the value for the `Namespace` field.\n\n###\n\n","completion":" ![Set an empty value for Namespace](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b78882e5-12ff-43ec-bb91-86183bfb3f2b.png) END"}
{"prompt":"![Set an empty value for Namespace](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b78882e5-12ff-43ec-bb91-86183bfb3f2b.png)\n\n###\n\n","completion":" **5. Import Azure Federation Metadata into Retool** END"}
{"prompt":"**5. Import Azure Federation Metadata into Retool**\n\n###\n\n","completion":" **6. (Optional, but recommended) Turn on JIT User Provisioning** END"}
{"prompt":"**6. (Optional, but recommended) Turn on JIT User Provisioning**\n\n###\n\n","completion":" Just in time (JIT) user provisioning enables Retool to provision user accounts when users sign in via SAML for the first time. This means you won't have to manually invite each user to Retool first. To turn this on, simply toggle the switch on the **Settings** > **Advanced** page. END"}
{"prompt":"Just in time (JIT) user provisioning enables Retool to provision user accounts when users sign in via SAML for the first time. This means you won't have to manually invite each user to Retool first. To turn this on, simply toggle the switch on the **Settings** > **Advanced** page.\n\n###\n\n","completion":" **7. Test the integration** END"}
{"prompt":"Active Directory Federation Services\n\n###\n\n","completion":" Another common Identity Provider is Active Directory Federation Service. Below is a step-by-step guide for integrating Retool with ADFS 3.0 END"}
{"prompt":"Another common Identity Provider is Active Directory Federation Service. Below is a step-by-step guide for integrating Retool with ADFS 3.0\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3e35efe-Screen_Shot_2018-05-13_at_11.15.28_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3e35efe-Screen_Shot_2018-05-13_at_11.15.28_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0f2bbb3-Screen_Shot_2018-05-13_at_11.16.21_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/0f2bbb3-Screen_Shot_2018-05-13_at_11.16.21_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/267a749-Screen_Shot_2018-05-13_at_11.17.33_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/267a749-Screen_Shot_2018-05-13_at_11.17.33_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/875dfd4-Screen_Shot_2018-05-13_at_11.18.31_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/875dfd4-Screen_Shot_2018-05-13_at_11.18.31_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fda22e6-Screen_Shot_2018-05-13_at_11.19.22_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fda22e6-Screen_Shot_2018-05-13_at_11.19.22_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cf72806-Screen_Shot_2018-05-13_at_11.23.02_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cf72806-Screen_Shot_2018-05-13_at_11.23.02_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/960c7c2-Screen_Shot_2018-05-13_at_11.29.31_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/960c7c2-Screen_Shot_2018-05-13_at_11.29.31_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8957891-Screen_Shot_2018-05-13_at_11.33.07_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8957891-Screen_Shot_2018-05-13_at_11.33.07_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/43b3ce7-Screen_Shot_2018-05-13_at_11.34.49_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/43b3ce7-Screen_Shot_2018-05-13_at_11.34.49_PM.png)\n\n###\n\n","completion":" Copy the entire XML file to your clipboard and login to Retool as an admin user. Navigate to the **Settings** > **Advanced** page and add the copied XML file to the `IdP Metadata XML` field. END"}
{"prompt":"Copy the entire XML file to your clipboard and login to Retool as an admin user. Navigate to the **Settings** > **Advanced** page and add the copied XML file to the `IdP Metadata XML` field.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d960f63-Screen_Shot_2021-02-19_at_7.30.03_PM.jpg) END"}
{"prompt":"Other SAML Identity Providers\n\n###\n\n","completion":" If you don't use Okta or ADFS, use the following steps to configure your SAML identity provider service. END"}
{"prompt":"1. Set your Entity ID in Retool\n\n###\n\n","completion":" By default, Retool uses the Entity ID `https:\/\/tryretool.com`. You will need to customize this value to match the domain where you're hosting Retool. END"}
{"prompt":"By default, Retool uses the Entity ID `https:\/\/tryretool.com`. You will need to customize this value to match the domain where you're hosting Retool.\n\n###\n\n","completion":" Add the following [environment variable](\/reference\/environment-variables-reference#domains) to your `docker.env` file, replacing `retool.yourcompany.com` with your domain. Note: adding a new environment variable requires restarting the container for it to take effect. END"}
{"prompt":"2. Configure your Identity Provider\n\n###\n\n","completion":" You should reference the provided documentation from your identity provider to complete its setup. However, you will likely be asked to supply values for the **Sign on URL** and **Reply URL** fields. Use the following pattern, replacing `retool.yourcompany.com` with the **Entity ID** you supplied in step 1: END"}
{"prompt":"3. Match user attributes and claims\n\n###\n\n","completion":" Retool requires exactly the following attributes to be asserted for each user on login: END"}
{"prompt":"4. Assign users access to Retool\n\n###\n\n","completion":" Use your identity provider to assign users to have access to login to Retool. END"}
{"prompt":"5. Configure Retool with the Identity Provider Metadata\n\n###\n\n","completion":" Export the metadata to an XML file from your identity provider. There's usually a button to trigger a download from your IdP dashboard. Additionally, you can often find this data by navigating to <https:\/\/your.identityprovider.com\/federationmetadata\/2007-06\/federationmetadata.xml>. END"}
{"prompt":"Export the metadata to an XML file from your identity provider. There's usually a button to trigger a download from your IdP dashboard. Additionally, you can often find this data by navigating to <https:\/\/your.identityprovider.com\/federationmetadata\/2007-06\/federationmetadata.xml>.\n\n###\n\n","completion":" Copy the entire XML file to your clipboard and login to Retool as an admin user. Navigate to the **Settings** > **Advanced** page and paste the XML data to the `IdP Metadata XML` field. END"}
{"prompt":"Copy the entire XML file to your clipboard and login to Retool as an admin user. Navigate to the **Settings** > **Advanced** page and paste the XML data to the `IdP Metadata XML` field.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a29c14c-idp_metadata.png) END"}
{"prompt":"6. Enable JIT user provisioning\n\n###\n\n","completion":" This step is optional, but recommended. END"}
{"prompt":"This step is optional, but recommended.\n\n###\n\n","completion":" Just in time (JIT) user provisioning enables Retool to provision user accounts when users sign in via SAML for the first time. This means you won't have to manually invite each user to Retool first. To turn this on, toggle the switch on the **Settings** > **Advanced** page. END"}
{"prompt":"Just in time (JIT) user provisioning enables Retool to provision user accounts when users sign in via SAML for the first time. This means you won't have to manually invite each user to Retool first. To turn this on, toggle the switch on the **Settings** > **Advanced** page.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/56d0472-jit_user_provisioning.png) END"}
{"prompt":"title: \"Configure OneLogin OIDC SSO\"\nexcerpt: \"Learn how to configure OneLogin SSO on Retool using OpenID Connect (OIDC).\"\nhidden: false\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Use this guide to configure OneLogin SSO with OpenID Connect (OIDC) on Retool. Once configured, users can log in to Retool with their OneLogin credentials. END"}
{"prompt":"Requirements\n\n###\n\n","completion":" To configure OneLogin SSO, you must: END"}
{"prompt":"1. Create an OIDC application in OneLogin\n\n###\n\n","completion":" Follow the steps in the [OneLogin OpenID Connect Customer Connector guide](https:\/\/onelogin.service-now.com\/support?id=kb_article&sys_id=ed442c25db46255057fac24505961975&kb_category=93e869b0db185340d5505eea4b961934) to create a new OIDC application. Use the following settings. END"}
{"prompt":"Configuration page\n\n###\n\n","completion":" On the **Configuration** page, under **Redirect URIs**, enter `https:\/\/<your_retool_domain>\/oauth2sso\/callback`. END"}
{"prompt":"Parameters page\n\n###\n\n","completion":" On the **Parameters** page, select **Configured by admin** under **Credentials**. In this section, you can add custom claims—for example, `user_id`. END"}
{"prompt":"SSO page\n\n###\n\n","completion":" On the **SSO** page, select **Web** as the **Application type**. Select **POST** as the **Token endpoint**. END"}
{"prompt":"On the **SSO** page, select **Web** as the **Application type**. Select **POST** as the **Token endpoint**.\n\n###\n\n","completion":" Save the **Client ID** and **Client secret** to use in Retool. END"}
{"prompt":"2. Set environment variables in Retool\n\n###\n\n","completion":" In your Retool instance, set the following [environment variables](https:\/\/docs.retool.com\/reference\/environment-variables-reference). Retrieve the values for `CUSTOM_OAUTH2_SSO_CLIENT_ID` and `CUSTOM_OAUTH2_SSO_CLIENT_SECRET` from the **SSO** page in OneLogin. Replace `ONELOGINDOMAIN` with your OneLogin domain. END"}
{"prompt":"3. Restart Retool\n\n###\n\n","completion":" After you set your environment variables, restart your Retool instance to reload the SSO configuration. END"}
{"prompt":"title: \"Connect to Stripe\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect your Stripe account to Retool.\"\nhidden: false\n\n###\n\n","completion":" You can connect to [your Stripe account](https:\/\/stripe.com) and make it available as a [resource](https:\/\/docs.retool.com\/docs\/resources) in Retool. Once complete, your users can [write queries](https:\/\/docs.retool.com\/docs\/queries) that interact with Stripe data. END"}
{"prompt":"All users for Retool organizations on Free or Team [plans](https:\/\/retool.com\/pricing\/) have global **Edit** permissions and can add, edit, and remove resources. If your organization manages [user permissions](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) for resources, you must be a member of a group with [Edit all](https:\/\/docs.retool.com\/docs\/user-permissions#managing-resource-permissions) permissions.\n\n###\n\n","completion":" To create a Stripe resource, you need: END"}
{"prompt":"Stripe API authentication\n\n###\n\n","completion":" Retool authenticates with Stripe using a secret or restricted [API key](https:\/\/stripe.com\/docs\/keys). END"}
{"prompt":"2. Select the resource type\n\n###\n\n","completion":" Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Stripe** resource type. END"}
{"prompt":"Retool can connect to almost any API or database, and has built-in [integrations](\/docs\/resources#integrations) for popular data sources. Select the **Stripe** resource type.\n\n###\n\n","completion":" ![Select the resource](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/797f87a1-90a7-46a9-9f40-00a4c3dd2f8a.webp) END"}
{"prompt":"3. Configure the resource\n\n###\n\n","completion":" Specify a name and location for the Stripe resource. Retool displays the resource name and type in query editors to help users identify them. Next, configure the required settings. END"}
{"prompt":"General\n\n###\n\n","completion":" ![Configure settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/howto\/ca5ad206-51cd-43f1-ae3d-0713995ddb30.webp) END"}
{"prompt":"![Configure settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/howto\/ca5ad206-51cd-43f1-ae3d-0713995ddb30.webp)\n\n###\n\n","completion":" Click **Test Connection** to verify that Retool can connect to Stripe. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action. END"}
{"prompt":"Click **Test Connection** to verify that Retool can connect to Stripe. If the test fails, check the resource settings and try again. Testing a connection only checks whether Retool can successfully connect to the resource. It cannot check whether the provided credentials have sufficient privileges or can perform every supported action.\n\n###\n\n","completion":" ![Resource created](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/resources\/c563a168-27d5-4181-8f52-344601d137ea.webp) END"}
{"prompt":"Wrap up\n\n###\n\n","completion":" Your Stripe resource is now ready to use. To interact with Stripe data, select the resource in the query editor. You can specify the API endpoint to use when writing a query. END"}
{"prompt":"title: \"Supported web browsers\"\ncategorySlug: \"app-management\"\nparentDocSlug: \"app-management-concepts\"\nexcerpt: \"Learn about web browsers supported by Retool.\"\nhidden: false\n\n###\n\n","completion":" Retool officially supports the latest stable releases of the following desktop web browsers: END"}
{"prompt":"Retool officially supports the latest stable releases of the following desktop web browsers:\n\n###\n\n","completion":" Editing apps in alternative browsers, on mobile devices, and using beta or nightly builds is not officially supported. END"}
{"prompt":"title: \"Sync Google Groups to Retool\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"sso-guides\"\nexcerpt: \"Learn how to set up Google SSO with Google Sign-in and LDAP permission groups.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"Who is this guide for?\n\n###\n\n","completion":" If you answered yes to all of the above, keep reading. If not, check out our other options for SSO + Role Syncing. END"}
{"prompt":"Set up Google as your SAML Identity Provider\n\n###\n\n","completion":" In order to sync Google Groups to Retool, you must first setup Google as your SAML provider on Retool. For this part, you will need to be an admin on your Google Workspace. If you already use Google SAML you can skip ahead to the next section! END"}
{"prompt":"Create a custom SAML app on Google\n\n###\n\n","completion":" ![Example SAML settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ba041b6-saml-settings.png) END"}
{"prompt":"![Example SAML settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ba041b6-saml-settings.png)\n\n###\n\n","completion":" ![Example SAML attribute mapping](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e027099-saml-mapping-settings.png) END"}
{"prompt":"![Example SAML attribute mapping](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e027099-saml-mapping-settings.png)\n\n###\n\n","completion":" ![Enable this SAML application for all domain users](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8c02f93-saml-on.png) END"}
{"prompt":"Configure Retool to use the SAML app\n\n###\n\n","completion":" Now that the custom SAML app is setup on your Google Workspace, you need to configure Retool to use this for SSO. END"}
{"prompt":"Now that the custom SAML app is setup on your Google Workspace, you need to configure Retool to use this for SSO.\n\n###\n\n","completion":" ![Update IdP metadata in Retool](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4e72478-retool-idp-metadata.png) END"}
{"prompt":"Setup Google Secure LDAP Service\n\n###\n\n","completion":" Retool uses the Google Secure LDAP Service to fetch a user's Google Group memberships for syncing with Retool. You'll need to be an admin on Google Workspace for these next steps: END"}
{"prompt":"Retool uses the Google Secure LDAP Service to fetch a user's Google Group memberships for syncing with Retool. You'll need to be an admin on Google Workspace for these next steps:\n\n###\n\n","completion":" ![Enable LDAP application for all domain users](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b421a60-ldap-verify-user-cred.png) END"}
{"prompt":"![Enable LDAP application for all domain users](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b421a60-ldap-verify-user-cred.png)\n\n###\n\n","completion":" ![Enable read access for all domain users](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a7a39f2-ldap-read-user-info.png) END"}
{"prompt":"![Enable read access for all domain users](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a7a39f2-ldap-read-user-info.png)\n\n###\n\n","completion":" ![Enable read access to group information](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a60e961-ldap-read-group-info.png) END"}
{"prompt":"![Enable read access to group information](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a60e961-ldap-read-group-info.png)\n\n###\n\n","completion":" ![Download the LDAP certificate](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/61cdaf7-CleanShot_2021-10-27_at_11.52.12.png) END"}
{"prompt":"Configure Retool to use this LDAP service\n\n###\n\n","completion":" To configure Retool to pull Google Groups from this LDAP service, you will need to set the following environment variables: END"}
{"prompt":"To configure Retool to pull Google Groups from this LDAP service, you will need to set the following environment variables:\n\n###\n\n","completion":" Your Google Workspace domain needs to be described in domain component (DC) syntax. END"}
{"prompt":"Role Mapping\n\n###\n\n","completion":" Role mapping is used to map group email names from Google Groups to group names on Retool. The `LDAP_ROLE_MAPPING` environment variables uses an arrow syntax to express the mapping. For example, say you want to map the group`retool-admins@yourcompany.com` to the default `Admin` group on Retool and `support@yourcompany.com` to a `Support` Retool group. you would set: END"}
{"prompt":"Role mapping is used to map group email names from Google Groups to group names on Retool. The `LDAP_ROLE_MAPPING` environment variables uses an arrow syntax to express the mapping. For example, say you want to map the group`retool-admins@yourcompany.com` to the default `Admin` group on Retool and `support@yourcompany.com` to a `Support` Retool group. you would set:\n\n###\n\n","completion":" If you don't set this variable Retool will attempt to sync the user's group slugs only with groups that already exist on Retool; however, if you set this Mapping, Retool will automatically create the explicitly mapped groups on Retool if they don't exist already. END"}
{"prompt":"If you don't set this variable Retool will attempt to sync the user's group slugs only with groups that already exist on Retool; however, if you set this Mapping, Retool will automatically create the explicitly mapped groups on Retool if they don't exist already.\n\n###\n\n","completion":" During initial configuration, we suggest setting `LDAP_ROLE_MAPPING_DISABLED` to true. When true, Retool will not actually sync or create any new groups when logging in a user, but will show you logs for the steps it _would_ have performed. This allows you to debug your setup before actually changing groups for users. END"}
{"prompt":"title: \"Tag images for machine learning\"\ncategorySlug: \"legacy\"\nexcerpt: \"Build an app to draw bounding boxes around images and save them to the database.\"\nhidden: true\n\n###\n\n","completion":" **Let's say we're a self-driving car company, and need to label a _ton_ of images.** We'll build a tool where we take a list of image URLs, let the end-user draw bounding boxes around each image, and save the results back to an API, all in 5 minutes. END"}
{"prompt":"1. Get list of images\n\n###\n\n","completion":" Let's first switch to the `onboarding_db (readonly)`, since we provide you some pre-loaded data. END"}
{"prompt":"Let's first switch to the `onboarding_db (readonly)`, since we provide you some pre-loaded data.\n\n###\n\n","completion":" Then, write a SQL query to pull in all of our images: END"}
{"prompt":"Then, write a SQL query to pull in all of our images:\n\n###\n\n","completion":" Let's preview it. If that looks good, let's save it. Our query editor should look like this right now: END"}
{"prompt":"Let's preview it. If that looks good, let's save it. Our query editor should look like this right now:\n\n###\n\n","completion":" ![A query to pull in all our images.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cfabaac-Screenshot_2021-06-30_at_3.26.05_AM.png) END"}
{"prompt":"![A query to pull in all our images.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cfabaac-Screenshot_2021-06-30_at_3.26.05_AM.png)\n\n###\n\n","completion":" Great! Now let's drag on a `Table` from the right hand side. It should be automatically populated with data from your last query (in this case, the images). Great - that's it! Images ready to be labelled, in our `Table`. Your app should currently look like this: END"}
{"prompt":"Great! Now let's drag on a `Table` from the right hand side. It should be automatically populated with data from your last query (in this case, the images). Great - that's it! Images ready to be labelled, in our `Table`. Your app should currently look like this:\n\n###\n\n","completion":" ![A Table with all our images.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a9d3cd5-tag_images_table_drag.gif) END"}
{"prompt":"2. Render and label them\n\n###\n\n","completion":" Now let's render each image onto a tagging canvas. Let's drag in a `BoundingBox` component from the right hand side. It's near the bottom, so it's easier to use the search box on top: END"}
{"prompt":"Now let's render each image onto a tagging canvas. Let's drag in a `BoundingBox` component from the right hand side. It's near the bottom, so it's easier to use the search box on top:\n\n###\n\n","completion":" ![Searching for the Bounding Box component on the right hand side.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f1020cd-bounding_box_drag.gif) END"}
{"prompt":"![Searching for the Bounding Box component on the right hand side.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f1020cd-bounding_box_drag.gif)\n\n###\n\n","completion":" Let's drag it on, and then change the `image_url` to refer to what's currently selected in the table. That'd be `{{table1.selectedRow.data.image_url}}`. END"}
{"prompt":"Let's drag it on, and then change the `image_url` to refer to what's currently selected in the table. That'd be `{{table1.selectedRow.data.image_url}}`.\n\n###\n\n","completion":" Great! Now your `BoundingBox` should be showing the selected image in the `Table`. And when you select different rows in the `Table`, the `BoundingBox` will show a different image for tagging. END"}
{"prompt":"Great! Now your `BoundingBox` should be showing the selected image in the `Table`. And when you select different rows in the `Table`, the `BoundingBox` will show a different image for tagging.\n\n###\n\n","completion":" Even though our data currently has no bounding boxes, we probably want to show the bounding boxes - if there are any in the database. See the \"Initial Bounding Boxes\" on the right hand side? Let's change that to: `{{JSON.parse(table1.selectedRow.data.labels)}}`. That currently won't do anything, since we don't have any bounding boxes, but this'll come into use later. END"}
{"prompt":"Even though our data currently has no bounding boxes, we probably want to show the bounding boxes - if there are any in the database. See the \"Initial Bounding Boxes\" on the right hand side? Let's change that to: `{{JSON.parse(table1.selectedRow.data.labels)}}`. That currently won't do anything, since we don't have any bounding boxes, but this'll come into use later.\n\n###\n\n","completion":" ![A working BoundingBox component. When the selected row in the `Table` changes, the image in the `BoundingBox` changes too.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f1e3897-Screenshot_2021-06-30_at_3.38.29_AM.png) END"}
{"prompt":"![A working BoundingBox component. When the selected row in the `Table` changes, the image in the `BoundingBox` changes too.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f1e3897-Screenshot_2021-06-30_at_3.38.29_AM.png)\n\n###\n\n","completion":" Let's try labeling a few boxes before moving on to the next step. The `BoundingBox` supports panning and zooming when you hold down the Command key (on Macs), and Control key (on Windows \/ Linux). END"}
{"prompt":"Let's try labeling a few boxes before moving on to the next step. The `BoundingBox` supports panning and zooming when you hold down the Command key (on Macs), and Control key (on Windows \/ Linux).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4d6d491-Screenshot_2021-06-30_at_3.40.13_AM.png) END"}
{"prompt":"3. Save labels\n\n###\n\n","completion":" Cool! Now we just have to save the tags to our database. Let's drag on a `Button` and label it \"Save Tags\". Let's also make sure we create a `+New` [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) with `Action` set to `Trigger query` and `Query` set to `Create a new query`. END"}
{"prompt":"Cool! Now we just have to save the tags to our database. Let's drag on a `Button` and label it \"Save Tags\". Let's also make sure we create a `+New` [<<glossary:event handler>>](https:\/\/docs.retool.com\/docs\/event-handlers) with `Action` set to `Trigger query` and `Query` set to `Create a new query`.\n\n###\n\n","completion":" ![Creating a new query to save our labels.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cd4b903-Screenshot_2021-06-30_at_3.41.32_AM.png) END"}
{"prompt":"![Creating a new query to save our labels.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/cd4b903-Screenshot_2021-06-30_at_3.41.32_AM.png)\n\n###\n\n","completion":" Let's change the created query's resource to `onboarding_api`, since we want to `PUT` data back. Then fill in the values below to construct the `PUT` query. We're going to be `PUT`ting back to the selected image, whose `id` is `{{table1.selectedRow.data.id}}`. END"}
{"prompt":"Let's change the created query's resource to `onboarding_api`, since we want to `PUT` data back. Then fill in the values below to construct the `PUT` query. We're going to be `PUT`ting back to the selected image, whose `id` is `{{table1.selectedRow.data.id}}`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/363e9d2-new_query.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/363e9d2-new_query.gif)\n\n###\n\n","completion":" For the body, the key will be `labels`, and the value will be: END"}
{"prompt":"For the body, the key will be `labels`, and the value will be:\n\n###\n\n","completion":" ![Filling out our PUT.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/28ab6a8-Screenshot_2021-06-30_at_3.50.34_AM.png) END"}
{"prompt":"![Filling out our PUT.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/28ab6a8-Screenshot_2021-06-30_at_3.50.34_AM.png)\n\n###\n\n","completion":" And after the query is successfully ran, we want to refresh our original query, so we can see the new bounding boxes. So let's scroll down and change \"on success, trigger these queries\" to include our original query (`query1`): END"}
{"prompt":"And after the query is successfully ran, we want to refresh our original query, so we can see the new bounding boxes. So let's scroll down and change \"on success, trigger these queries\" to include our original query (`query1`):\n\n###\n\n","completion":" ![Refreshing query1 after our PUT is successful.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3546d10-Screenshot_2021-06-30_at_3.51.52_AM.png) END"}
{"prompt":"![Refreshing query1 after our PUT is successful.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3546d10-Screenshot_2021-06-30_at_3.51.52_AM.png)\n\n###\n\n","completion":" That's it! Let's save the query and try it out. Draw some bounding boxes, and press the `Button`. Your bounding boxes should be saved to the database, and your `Table` will refresh. Great - bounding boxes there! END"}
{"prompt":"That's it! Let's save the query and try it out. Draw some bounding boxes, and press the `Button`. Your bounding boxes should be saved to the database, and your `Table` will refresh. Great - bounding boxes there!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6f22b09-Screenshot_2021-06-30_at_3.53.37_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6f22b09-Screenshot_2021-06-30_at_3.53.37_AM.png)\n\n###\n\n","completion":" Since we set our `BoundingBox` to render boxes if they exist, you can click around to a different row in the `Table`. When you come back, you'll see that the bounding boxes are still there. So you can add some boxes, and then press save again - all without losing data. END"}
{"prompt":"4. Actually using it\n\n###\n\n","completion":" **This tool is now production-ready**. You can send the link to your coworkers, and they'll be able to use it to tag data - immediately. If you'd like, you can also build out an approval workflow (so managers have to approve labelled images), modify the SQL query to only pull in images that are unlabelled \/ assigned to the particular user (try the `current_user` variable), etc. END"}
{"prompt":"**This tool is now production-ready**. You can send the link to your coworkers, and they'll be able to use it to tag data - immediately. If you'd like, you can also build out an approval workflow (so managers have to approve labelled images), modify the SQL query to only pull in images that are unlabelled \/ assigned to the particular user (try the `current_user` variable), etc.\n\n###\n\n","completion":" If you give your operators [specific permissions](https:\/\/docs.retool.com\/docs\/user-permissions), they won't be able to edit the tool and change the queries - they'll just be able to use the tool you've created. END"}
{"prompt":"title: \"Store temporary data\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to use temporary storage with your app.\"\nhidden: false\n\n###\n\n","completion":" Temporary states are like scratch-pads for your app. You can store data in them while your app is running. They are accessible anywhere on your app inside `{{ }}`, and they support reads (`{{ temporaryState1.value }}`), as well as writes (`{{ temporaryState.setValue(3) }}`). END"}
{"prompt":"JavaScript Methods\n\n###\n\n","completion":" These methods can be used inside of a Run JS Code type query: END"}
{"prompt":"state.setValue(value: any)\n\n###\n\n","completion":" Sets `state.value` to the value passed in as an argument. Returns a void Promise. END"}
{"prompt":"Sets `state.value` to the value passed in as an argument. Returns a void Promise.\n\n###\n\n","completion":" For example, to set the value of `tempState` to a string \"user_123_456\": END"}
{"prompt":"state.setIn(path, value: any)\n\n###\n\n","completion":" Sets the value of `state.value` at a specified location. `path` accepts an array of keys or indexes to select, where each item represents a key or index in the path to the object to update. The last item of the `path` array is the key or index to update. The value is set without destroying and recreating other values. END"}
{"prompt":"Sets the value of `state.value` at a specified location. `path` accepts an array of keys or indexes to select, where each item represents a key or index in the path to the object to update. The last item of the `path` array is the key or index to update. The value is set without destroying and recreating other values.\n\n###\n\n","completion":" The following examples show objects before and after calls to `state.setIn`. END"}
{"prompt":"When to use temporary state\n\n###\n\n","completion":" Creating temporary states are helpful when: END"}
{"prompt":"Examples\n\n###\n\n","completion":" For in-depth examples on how to use temporary state, see [this talk from a Retool Community workshop](https:\/\/www.youtube.com\/watch?v=-yVNoKBRr4E) in May 2022 ([slide deck](https:\/\/docs.google.com\/presentation\/d\/181sVh8k2wf0HMuCDGZC9KdhP0G0M4CpvoiMO-R48zf8\/edit)). END"}
{"prompt":"title: \"Implement app testing using continuous integration\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-concepts\"\nexcerpt: \"Learn how to add Retool's tests to your CI system.\"\nhidden: true\n\n###\n\n","completion":" The [retool-onpremise](https:\/\/github.com\/tryretool\/retool-onpremise) repository can be configured to run the application tests in your continuous integration environment. You should be on v2.86 or later to use Testing in CI. END"}
{"prompt":"Setup\n\n###\n\n","completion":" Clone the [retool-onpremise](https:\/\/github.com\/tryretool\/retool-onpremise) repository. Edit the Dockerfile, picking the specific version of Retool you run in production. END"}
{"prompt":"Clone the [retool-onpremise](https:\/\/github.com\/tryretool\/retool-onpremise) repository. Edit the Dockerfile, picking the specific version of Retool you run in production.\n\n###\n\n","completion":" Next, clone the repository containing your Retool applications into the `retool` folder at the top level of the `retool-onpremise` repository. END"}
{"prompt":"Next, clone the repository containing your Retool applications into the `retool` folder at the top level of the `retool-onpremise` repository.\n\n###\n\n","completion":" The test runner assumes that your Retool applications are laid out in the following structure: END"}
{"prompt":"The test runner assumes that your Retool applications are laid out in the following structure:\n\n###\n\n","completion":" The test runner requires that the `retool` folder be a valid Git repository. END"}
{"prompt":"The test runner requires that the `retool` folder be a valid Git repository.\n\n###\n\n","completion":" You may also need to change the permissions on the `retool` folder to ensure that Docker can access the folder. The easiest way to do this is via `chmod` END"}
{"prompt":"You may also need to change the permissions on the `retool` folder to ensure that Docker can access the folder. The easiest way to do this is via `chmod`\n\n###\n\n","completion":" Copy the `docker.env.testing` file to `docker.env` and update it with any environment variables you need. END"}
{"prompt":"Copy the `docker.env.testing` file to `docker.env` and update it with any environment variables you need.\n\n###\n\n","completion":" Start Retool using Docker Compose. Make sure to use the testing profile to start the test runner. END"}
{"prompt":"Start Retool using Docker Compose. Make sure to use the testing profile to start the test runner.\n\n###\n\n","completion":" Once that's started, the tests need to be generated and run (eventually we will bundle up the following commands into 1 command): END"}
{"prompt":"Once that's started, the tests need to be generated and run (eventually we will bundle up the following commands into 1 command):\n\n###\n\n","completion":" Once localhost:3000 running the instance of Retool is spun up, run the following: END"}
{"prompt":"Once localhost:3000 running the instance of Retool is spun up, run the following:\n\n###\n\n","completion":" Here's the output of a successful test run: END"}
{"prompt":"GitHub Actions\n\n###\n\n","completion":" We've encoded the steps detailed above into a YAML (see below) for Github Actions that can be placed in your Github repository (in `.\/.github\/workflows\/`) to run Retool tests in CI. Note that the YAMLs are slightly different depending on whether you're using Source Control or git syncing. END"}
{"prompt":"For Source Control (recommended)\n\n###\n\n","completion":" To run CI on Source Control, ensure that you are using v2.86 or later of Retool! With Source Control, your tests will run automatically whenever you open a PR to update an app, so you can confidently update and maintain your Retool applications. END"}
{"prompt":"Instance Configuration\n\n###\n\n","completion":" The Retool CI instance is configured via YAML files in the `config` directory. Organizations, users, and resources can be created using these files. Note: this is currently only support for git syncing, support for source control is upcoming! END"}
{"prompt":"Organization\n\n###\n\n","completion":" Organization settings are defined in `config\/settings\/organization.yml`. The only required field is the organization name. END"}
{"prompt":"Users\n\n###\n\n","completion":" Each user gets is defined by a YAML file in the `config\/users` folder. The `sid` field can be any string. The password is stored bcrypt-hashed value. The default value, included below, is `password`. END"}
{"prompt":"title: \"Write CI tests\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to write continuous integration tests for your Retool apps.\"\nhidden: false\n\n###\n\n","completion":" Retool's testing feature enables you to write unit, end-to-end, and integration tests for your application. You write tests by using [JavaScript APIs](https:\/\/docs.retool.com\/reference\/javascript-api) to manipulate components, and by using [helper functions](#reference-testing-methods) to assert conditions. This guide walks you through writing a few simple tests. END"}
{"prompt":"Sample end-to-end test\n\n###\n\n","completion":" ![Sample application with modal to add new users.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d8b371a-Screen_Shot_2021-05-25_at_1.59.22_PM.png) END"}
{"prompt":"![Sample application with modal to add new users.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d8b371a-Screen_Shot_2021-05-25_at_1.59.22_PM.png)\n\n###\n\n","completion":" We'll write an end-to-end test for our form to ensure that it can correctly add new users when it's submitted. END"}
{"prompt":"We'll write an end-to-end test for our form to ensure that it can correctly add new users when it's submitted.\n\n###\n\n","completion":" ![Retool editor showing the menu to write new tests.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7d435d-Screen_Shot_2021-05-25_at_2.25.54_PM.png) END"}
{"prompt":"![Retool editor showing the menu to write new tests.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7d435d-Screen_Shot_2021-05-25_at_2.25.54_PM.png)\n\n###\n\n","completion":" To open the tests modal, navigate to the `tests` option in the top right menu of Retool. We'll use the editor inside of the menu to start writing our test. END"}
{"prompt":"To open the tests modal, navigate to the `tests` option in the top right menu of Retool. We'll use the editor inside of the menu to start writing our test.\n\n###\n\n","completion":" When we write a test, we want to use methods on components in Retool to change the state of the application and then make assertions against the state. To write a test submitting the form, we'll open the modal that contains the form, fill out each `textInput`, then submit the form. END"}
{"prompt":"When we write a test, we want to use methods on components in Retool to change the state of the application and then make assertions against the state. To write a test submitting the form, we'll open the modal that contains the form, fill out each `textInput`, then submit the form.\n\n###\n\n","completion":" First, we'll write a test that verifies the form is not enabled until all of its fields are completed. END"}
{"prompt":"First, we'll write a test that verifies the form is not enabled until all of its fields are completed.\n\n###\n\n","completion":" If you're ever unsure of what methods you can use, type the name of the component and look at the options in the auto complete. We have methods for most changes you'd want to make and values you'd want to access, and we're happy to add more if you don't see methods you need! END"}
{"prompt":"If you're ever unsure of what methods you can use, type the name of the component and look at the options in the auto complete. We have methods for most changes you'd want to make and values you'd want to access, and we're happy to add more if you don't see methods you need!\n\n###\n\n","completion":" **Make sure to `await` each action you perform so your test continues after the action is finished and your Retool app is updated.** END"}
{"prompt":"**Make sure to `await` each action you perform so your test continues after the action is finished and your Retool app is updated.**\n\n###\n\n","completion":" In this test, we use `assertCondition` on a property of the form (`form1.submitDisabled` in this case!) to ensure that our application has the state we expect it to after each step of the test. We can use `assertCondition` to assert any expression that we expect to be true after state is updated. END"}
{"prompt":"In this test, we use `assertCondition` on a property of the form (`form1.submitDisabled` in this case!) to ensure that our application has the state we expect it to after each step of the test. We can use `assertCondition` to assert any expression that we expect to be true after state is updated.\n\n###\n\n","completion":" Sometimes, however, `assertCondition` won't work because we want to wait for a change that happens outside of our application (like if we hit an API and want to wait for its response). To wait for external changes, we'll use `waitForCondition`. Here's an extension of the test that waits for our form the submit correctly and trigger an API response: END"}
{"prompt":"Sometimes, however, `assertCondition` won't work because we want to wait for a change that happens outside of our application (like if we hit an API and want to wait for its response). To wait for external changes, we'll use `waitForCondition`. Here's an extension of the test that waits for our form the submit correctly and trigger an API response:\n\n###\n\n","completion":" In the example above, submitting the form triggers an API that will update `addNewUser.data`. The `waitForCondition` function defaults to waiting for 10 seconds for a condition to become true. END"}
{"prompt":"Sample unit test\n\n###\n\n","completion":" We can also write unit tests that test business logic inside of Retool applications. We'll write a unit test for a transformer that sums all of the account balances in our table and displays the result. END"}
{"prompt":"We can also write unit tests that test business logic inside of Retool applications. We'll write a unit test for a transformer that sums all of the account balances in our table and displays the result.\n\n###\n\n","completion":" ![Transformer that sums the value of all account balances inside of our table.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e4a0ef0-Screen_Shot_2021-05-25_at_2.39.59_PM.png) END"}
{"prompt":"![Transformer that sums the value of all account balances inside of our table.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e4a0ef0-Screen_Shot_2021-05-25_at_2.39.59_PM.png)\n\n###\n\n","completion":" To write a unit test for our table, we'll want to change the data inside of the table. Note that this gives you the flexibility to set the data in your table to whatever you'd like, so you can test different scenarios. The transformer will automatically be run after the table's value changes and we can assert against its value. Here's a sample test that checks if the transformer sums to the correct value: END"}
{"prompt":"To write a unit test for our table, we'll want to change the data inside of the table. Note that this gives you the flexibility to set the data in your table to whatever you'd like, so you can test different scenarios. The transformer will automatically be run after the table's value changes and we can assert against its value. Here's a sample test that checks if the transformer sums to the correct value:\n\n###\n\n","completion":" If you're ever unsure what the shape of the data that you want to write a test for is, check the left hand panel and look at the data currently in the field you want to set. Getting the shape of data right is one of the hardest parts of Retool! END"}
{"prompt":"Writing a mock\n\n###\n\n","completion":" Often, when you're writing a test, you do not want to hit a live endpoint. You can stop all queries and network calls from firing during the execution of a test to ensure that you never accidentally write to a resource you don't want to. END"}
{"prompt":"Often, when you're writing a test, you do not want to hit a live endpoint. You can stop all queries and network calls from firing during the execution of a test to ensure that you never accidentally write to a resource you don't want to.\n\n###\n\n","completion":" ![Checkbox used to mock all queries](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/40a52e4-Screen_Shot_2021-10-27_at_2.41.21_PM.png) END"}
{"prompt":"![Checkbox used to mock all queries](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/40a52e4-Screen_Shot_2021-10-27_at_2.41.21_PM.png)\n\n###\n\n","completion":" By default, any query fired when network calls are disabled will return an empty JSON. If you want to customize responses for queries to have consistent, static data in your tests, you can use the `mock` function. The `mock` function takes the name of the query and the value you'd like to return (example below). Mocks are only valid for queries triggered while the test is being executed; you do not need to reset mocks at the end of the test. END"}
{"prompt":"By default, any query fired when network calls are disabled will return an empty JSON. If you want to customize responses for queries to have consistent, static data in your tests, you can use the `mock` function. The `mock` function takes the name of the query and the value you'd like to return (example below). Mocks are only valid for queries triggered while the test is being executed; you do not need to reset mocks at the end of the test.\n\n###\n\n","completion":" Here's a sample test that mocks `query1`: END"}
{"prompt":"Test that a button fires a query\n\n###\n\n","completion":" Say you have a `button1` that fires `query1` when it is a clicked and you want to ensure that piece of functionality in a test (but don't actually want to hit the `query1` endpoint). Here is a sample tests that tests if a button click fires a query: END"}
{"prompt":"Say you have a `button1` that fires `query1` when it is a clicked and you want to ensure that piece of functionality in a test (but don't actually want to hit the `query1` endpoint). Here is a sample tests that tests if a button click fires a query:\n\n###\n\n","completion":" Notice the `eventTriggers` API that lets you trigger any event handler on any component, the `assertEquals` method that lets you compare 2 values, and the `assertQueryCalledTimes` method that lets you check how many times a query was called. Here's how the test from above would look in the testing modal: END"}
{"prompt":"Notice the `eventTriggers` API that lets you trigger any event handler on any component, the `assertEquals` method that lets you compare 2 values, and the `assertQueryCalledTimes` method that lets you check how many times a query was called. Here's how the test from above would look in the testing modal:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ea1ba34-Screen_Shot_2021-10-27_at_2.37.14_PM.png) END"}
{"prompt":"Execution of tests\n\n###\n\n","completion":" Every time a test is run, the app is reset and loaded at its initial state. This means that all queries that run on page load\/model updates are fired and the test simulates exactly what the user sees when they load an app. As the test is executed, its calls manipulate the model and state of the Retool app by simulation user actions and it can contain assertions against the model to confirm desired behavior. END"}
{"prompt":"Every time a test is run, the app is reset and loaded at its initial state. This means that all queries that run on page load\/model updates are fired and the test simulates exactly what the user sees when they load an app. As the test is executed, its calls manipulate the model and state of the Retool app by simulation user actions and it can contain assertions against the model to confirm desired behavior.\n\n###\n\n","completion":" The app resets between runs of different tests and once you close the testing modal, the app returns to its original state as well. END"}
{"prompt":"`assertCondition(someCondition: boolean)`\n\n###\n\n","completion":" Returns successfully if `someCondition` is true, throws an error if it is not. END"}
{"prompt":"`assertEquals(actual: {}, expected: {})`\n\n###\n\n","completion":" Returns successfully if `actual` is equal to `expected`, throws an error otherwise. END"}
{"prompt":"`await assertQueryCalled(queryId: string)`\n\n###\n\n","completion":" Returns successfully if the query with the given `queryId` is called, throws an error if it is not. END"}
{"prompt":"`await assertQueryCalledTimes(queryId: string, callNumber: number)`\n\n###\n\n","completion":" Returns successfully if the query with the given `queryId` is called exactly `callNumber` times, throws an error if it is not. END"}
{"prompt":"`await waitForCondition(someFunction: () => boolean, options?: {timeout?: number})`\n\n###\n\n","completion":" Evaluates `someFunction` every half second for `timeout` milliseconds, returns successfully if it ever returns true and fails if it does not. The default `timeout` is 10000 milliseconds. END"}
{"prompt":"`await eventTriggers.event(componentId: string)`\n\n###\n\n","completion":" Triggers `event` on the component with the given `componentId` (example: `await eventTriggers.click('button1')`). END"}
{"prompt":"`await mock(queryId: string, returnObject: {})`\n\n###\n\n","completion":" Mocks the query with the given `queryId` to always return `returnObject`. END"}
{"prompt":"Mocks the query with the given `queryId` to always return `returnObject`.\n\n###\n\n","completion":" For methods that manipulate components (i.e. `textInput1.setValue('foo')` or `table1.selectRow(0)`), see [Scripting Retool](https:\/\/docs.retool.com\/docs\/scripting-retool) END"}
{"prompt":"title: \"Transform data with JavaScript\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to write JavaScript to manipulate data.\"\nhidden: false\n\n###\n\n","completion":" **Retool supports using longer snippets of JavaScript via transformers**. If you're looking to write a lot of JS, you shouldn't inline it between `{{ }}`. Transformers let you write larger, reusable, blocks of code. Transformers, once created, are scoped to the page. You get access to `moment`, `_`, etc., so you can write some pretty complicated code. END"}
{"prompt":"**Retool supports using longer snippets of JavaScript via transformers**. If you're looking to write a lot of JS, you shouldn't inline it between `{{ }}`. Transformers let you write larger, reusable, blocks of code. Transformers, once created, are scoped to the page. You get access to `moment`, `_`, etc., so you can write some pretty complicated code.\n\n###\n\n","completion":" If you find yourself using a string of JavaScript multiple times throughout your app, it might be worth pulling that out into a transformer. END"}
{"prompt":"Create a JavaScript transformer\n\n###\n\n","completion":" Click on the **Transformers** tab in the Query Editor, and click on **+ New** to create a transformer. END"}
{"prompt":"Click on the **Transformers** tab in the Query Editor, and click on **+ New** to create a transformer.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/24285b7-ts_create.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/24285b7-ts_create.gif)\n\n###\n\n","completion":" Transformers are written in JavaScript. The return value at the end is what becomes the value of the transformer in the rest of the app. Here's an example of using a transformer to split a string value from a table column. END"}
{"prompt":"Transformers are written in JavaScript. The return value at the end is what becomes the value of the transformer in the rest of the app. Here's an example of using a transformer to split a string value from a table column.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3fcb251-ts_select_row.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3fcb251-ts_select_row.gif)\n\n###\n\n","completion":" You can use the preview button to see the results of a transformer. Note that you have to save the transformer for the rest of the app to get the new value. END"}
{"prompt":"You can use the preview button to see the results of a transformer. Note that you have to save the transformer for the rest of the app to get the new value.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c2217d7-ts_preview.gif) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c2217d7-ts_preview.gif)\n\n###\n\n","completion":" You can use `{{ yourTransformerName.value }}` to reference the transformer in the rest of the app. END"}
{"prompt":"You can use `{{ yourTransformerName.value }}` to reference the transformer in the rest of the app.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ba1d8c3-Screen_Shot_2020-03-20_at_4.44.28_PM.png) END"}
{"prompt":"Delete a JS transformer\n\n###\n\n","completion":" Click on the transformer you want to delete from in the list of transformers. Then, click on the `...` next to the Save\/Saved button and click on delete. END"}
{"prompt":"Click on the transformer you want to delete from in the list of transformers. Then, click on the `...` next to the Save\/Saved button and click on delete.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/971e271-ts_delete.gif) END"}
{"prompt":"Query transformers\n\n###\n\n","completion":" Often transformers are used to change the results of a query into a different format. If you find yourself doing this, you can attach a transformer directly to the query. This changes the value of the query everywhere, so that when you use `query1.data`, you will get the results of the query **after** the transformer has been applied. END"}
{"prompt":"Often transformers are used to change the results of a query into a different format. If you find yourself doing this, you can attach a transformer directly to the query. This changes the value of the query everywhere, so that when you use `query1.data`, you will get the results of the query **after** the transformer has been applied.\n\n###\n\n","completion":" Here's an example using query transformers to return a specific field from the query results. END"}
{"prompt":"Here's an example using query transformers to return a specific field from the query results.\n\n###\n\n","completion":" [block:html]\n{\n\"html\": \"<div>\\n <embed src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ts_query_ts.mp4\\\" width=\\\"100%\\\" height=\\\"371\\\" \/>\\n<\/div>\\n\\n<style><\/style>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n\"html\": \"<div>\\n <embed src=\\\"https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ts_query_ts.mp4\\\" width=\\\"100%\\\" height=\\\"371\\\" \/>\\n<\/div>\\n\\n<style><\/style>\"\n}\n[\/block]\n\n###\n\n","completion":" After writing this query transformer, instead of having to write `query1.data.allFilms.films` everywhere, we can just write `query1.data`. END"}
{"prompt":"After writing this query transformer, instead of having to write `query1.data.allFilms.films` everywhere, we can just write `query1.data`.\n\n###\n\n","completion":" Query transformers work the same way as regular transformers. In the transformer, you are provided a field `data` which contains the results of the query without any modification. The return value from the transformer you write becomes the value of `yourQuery.data` in the rest of the app. END"}
{"prompt":"Query transformers work the same way as regular transformers. In the transformer, you are provided a field `data` which contains the results of the query without any modification. The return value from the transformer you write becomes the value of `yourQuery.data` in the rest of the app.\n\n###\n\n","completion":" If you want the unaltered results from the query, you can use `yourQuery.rawData` to access the results before transformation. END"}
{"prompt":"Transformers are read-only (basically)\n\n###\n\n","completion":" Transformers in Retool are read-only - they cannot affect the values of other components or state in Retool. They can only update _their own_ value via a `return` statement. This means that if you're writing JS in a Transformer, you **cannot**: END"}
{"prompt":"Transformers in Retool are read-only - they cannot affect the values of other components or state in Retool. They can only update _their own_ value via a `return` statement. This means that if you're writing JS in a Transformer, you **cannot**:\n\n###\n\n","completion":" To do any of these, you'll need to use a JS Code query. END"}
{"prompt":"Create a comment\n\n###\n\n","completion":" Use `\/\/` to create comments. END"}
{"prompt":"Return data\n\n###\n\n","completion":" To return data from the transformer, use the `return` syntax. END"}
{"prompt":"Include a variable from your app\n\n###\n\n","completion":" Use the `{{ }}` syntax to include a variable used elsewhere on the your app. The transformer will automatically re-run when the variable value changes. END"}
{"prompt":"Using query data\n\n###\n\n","completion":" To access the query results, use `{{sqlQuery.data}}`. If you need to access the original response of the query, use `{{sqlQuery.rawData}}`. END"}
{"prompt":"Convert query data to an array\n\n###\n\n","completion":" If you want to use query data as an array of objects, use the `formatDataAsArray()` syntax. END"}
{"prompt":"Sort an API query\n\n###\n\n","completion":" If your API doesn't support filtering using parameters, you can sort using the `sort()` syntax. END"}
{"prompt":"Modify query data\n\n###\n\n","completion":" To modify query data, use the `map()` syntax. The following example adds `1` to every query data value. END"}
{"prompt":"Filter an API query\n\n###\n\n","completion":" If your API doesn't support filtering using parameters, you can filter using the `.filter()` syntax. END"}
{"prompt":"Join two queries\n\n###\n\n","completion":" To join the result of a REST query with a SQL query in to one table, use the `zipWith()` syntax. END"}
{"prompt":"Failure conditions\n\n###\n\n","completion":" You can use “failure conditions” in queries to mark your queries as failing. In your query editor, in the “Response” tab, add rows to the “Failure conditions” table to use this feature. END"}
{"prompt":"You can use “failure conditions” in queries to mark your queries as failing. In your query editor, in the “Response” tab, add rows to the “Failure conditions” table to use this feature.\n\n###\n\n","completion":" The keys in this table are the conditions. If any of these conditions results in a <<glossary:truthy value>>, Retool will mark the query as failing, and display the error message specified in the value. END"}
{"prompt":"The keys in this table are the conditions. If any of these conditions results in a <<glossary:truthy value>>, Retool will mark the query as failing, and display the error message specified in the value.\n\n###\n\n","completion":" Let’s walk through a concrete use case. Let’s say you want to throw an error if your API returns fewer results than you've configured in a text input. You can set a failure condition specifying `{{ data.results.length < textinput1.value }}`. END"}
{"prompt":"Let’s walk through a concrete use case. Let’s say you want to throw an error if your API returns fewer results than you've configured in a text input. You can set a failure condition specifying `{{ data.results.length < textinput1.value }}`.\n\n###\n\n","completion":" ![Example: This query will fail when the number of countries returned is fewer than 251.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8237f5f-qfc.png) END"}
{"prompt":"![Example: This query will fail when the number of countries returned is fewer than 251.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8237f5f-qfc.png)\n\n###\n\n","completion":" Note that inside the failure conditions inputs, you have access to three properties `.data`, `.error` and `.metadata`. You can use `.data` to reference the the data returned by your query (rows in a database, the response of an API, etc.). The `.error` property is a best effort attempt at extracting an error out of the query's response. The `.metadata` property contains metadata about your query's response, like response headers for a REST API. Note that `.metadata` is generally only available for REST and GraphQL queries. END"}
{"prompt":"Note that inside the failure conditions inputs, you have access to three properties `.data`, `.error` and `.metadata`. You can use `.data` to reference the the data returned by your query (rows in a database, the response of an API, etc.). The `.error` property is a best effort attempt at extracting an error out of the query's response. The `.metadata` property contains metadata about your query's response, like response headers for a REST API. Note that `.metadata` is generally only available for REST and GraphQL queries.\n\n###\n\n","completion":" Failure conditions are especially useful to set when your resource always returns a success. For example, most GraphQL APIs always return a 200 even when there are errors contained in the response. END"}
{"prompt":"Error Transformers\n\n###\n\n","completion":" Retool lets you create custom error transformers to handle how you want your queries to throw errors. In your query editor next to the \"error transformer\" label, click \"enable\" to get started. END"}
{"prompt":"Retool lets you create custom error transformers to handle how you want your queries to throw errors. In your query editor next to the \"error transformer\" label, click \"enable\" to get started.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ea279e5-Screen_Shot_2020-07-06_at_4.41.09_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/ea279e5-Screen_Shot_2020-07-06_at_4.41.09_PM.png)\n\n###\n\n","completion":" Error transformers work as functions with three guiding principles: END"}
{"prompt":"Error transformers work as functions with three guiding principles:\n\n###\n\n","completion":" To make this a bit more concrete, let's imagine we're querying [a GraphQL endpoint that returns a list of continents](https:\/\/github.com\/trevorblades\/countries). We want our query to throw an \"Error: result set too large\" error if the returned list is longer than 5 items, and succeed otherwise. Here's what we'd write in our error transformer: END"}
{"prompt":"To make this a bit more concrete, let's imagine we're querying [a GraphQL endpoint that returns a list of continents](https:\/\/github.com\/trevorblades\/countries). We want our query to throw an \"Error: result set too large\" error if the returned list is longer than 5 items, and succeed otherwise. Here's what we'd write in our error transformer:\n\n###\n\n","completion":" If our result set has more than 5 items, the ternary operator returns a string – which Retool automatically interprets as an error, and passes along to the client. END"}
{"prompt":"If our result set has more than 5 items, the ternary operator returns a string – which Retool automatically interprets as an error, and passes along to the client.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f53f511-Screen_Shot_2020-07-06_at_4.30.51_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f53f511-Screen_Shot_2020-07-06_at_4.30.51_PM.png)\n\n###\n\n","completion":" If the result set has fewer than 5 items, the function returns `null`, which Retool interprets as a success, so no error is thrown. END"}
{"prompt":"If the result set has fewer than 5 items, the function returns `null`, which Retool interprets as a success, so no error is thrown.\n\n###\n\n","completion":" Error transformers have access to two query properties: `.data` and `.metadata`. You can use `.data` to reference the the data returned by your query (rows in a database, the response of an API, etc.). The `.metadata` property contains metadata about your query's response, like response headers for a REST API. In our above GraphQL example, the `.metadata` property contains our response headers, status, request metadata, and a couple of other useful items. END"}
{"prompt":"Error transformers have access to two query properties: `.data` and `.metadata`. You can use `.data` to reference the the data returned by your query (rows in a database, the response of an API, etc.). The `.metadata` property contains metadata about your query's response, like response headers for a REST API. In our above GraphQL example, the `.metadata` property contains our response headers, status, request metadata, and a couple of other useful items.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6836e54-Screen_Shot_2020-07-06_at_4.34.36_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6836e54-Screen_Shot_2020-07-06_at_4.34.36_PM.png)\n\n###\n\n","completion":" Error transformers are particularly useful for REST APIs or GraphQL endpoints that return `200` codes even when your request failed. You can parse the response, set up custom logic for what actually constitutes an error for the client, and display the appropriate message quickly. END"}
{"prompt":"title: \"Troubleshoot resource connections\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn about common data source connection issues and how to resolve them.\"\nhidden: false\n\n###\n\n","completion":" Retool can connect to many databases and APIs. Certain data sources may have specific setup requirements, such as allowed IPs or required keys. Where necessary, we document these requirements. Refer to the integration's documentation when configuring your resource and use the following information as you troubleshoot any connection issues. If you need to make changes with your data source, refer to their documentation for more information and guidance. END"}
{"prompt":"Retool can connect to many databases and APIs. Certain data sources may have specific setup requirements, such as allowed IPs or required keys. Where necessary, we document these requirements. Refer to the integration's documentation when configuring your resource and use the following information as you troubleshoot any connection issues. If you need to make changes with your data source, refer to their documentation for more information and guidance.\n\n###\n\n","completion":" Some resources include testing options that you can use to troubleshoot connection issues. These options are displayed when you create or edit a resource, and include a [debugging console](https:\/\/docs.retool.com\/docs\/debug-tools#resource-configuration-page) that displays detailed error information. END"}
{"prompt":"Allow Retool IP addresses to access your data source\n\n###\n\n","completion":" Certain resources use an <<glossary:allowlist>> of IP addresses to prevent unauthorized connections. [Add Retool's IP addresses to your allowlist](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses) if necessary. END"}
{"prompt":"Certain resources use an <<glossary:allowlist>> of IP addresses to prevent unauthorized connections. [Add Retool's IP addresses to your allowlist](https:\/\/docs.retool.com\/docs\/allow-retools-cloud-ip-addresses) if necessary.\n\n###\n\n","completion":" Each data source can use a different method for allowing remote connections. Refer to the data source's documentation to learn how you add allow IP addresses. END"}
{"prompt":"Verify your credentials or connection string is correct\n\n###\n\n","completion":" For databases like [PostgreSQL](https:\/\/docs.retool.com\/docs\/postgresql-integration) and [MongoDB](https:\/\/docs.retool.com\/docs\/mongodb), Retool allows you to connect using traditional credentials (username, database, password, port) and a _connection string_. END"}
{"prompt":"For databases like [PostgreSQL](https:\/\/docs.retool.com\/docs\/postgresql-integration) and [MongoDB](https:\/\/docs.retool.com\/docs\/mongodb), Retool allows you to connect using traditional credentials (username, database, password, port) and a _connection string_.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3d88279-db-connection-string.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3d88279-db-connection-string.png)\n\n###\n\n","completion":" Verify that your credentials are correct and that you're referencing the correct database. END"}
{"prompt":"Verify that your credentials are correct and that you're referencing the correct database.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f3acfc1-db-connection-string-example.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f3acfc1-db-connection-string-example.png)\n\n###\n\n","completion":" The final part of a connection string (`\/mydb`) references the database name. Ensure that your connection string references the correct database. If you copy a connection string from a console (like MongoDB Atlas), this may default to another database name. END"}
{"prompt":"Database or provider credentials\n\n###\n\n","completion":" You must provide a database username and password when connecting using traditional credentials or with a connection string. These credentials are often not the same as those used to access your data source's web console. END"}
{"prompt":"You must provide a database username and password when connecting using traditional credentials or with a connection string. These credentials are often not the same as those used to access your data source's web console.\n\n###\n\n","completion":" Create a new database user specifically for connecting with Retool and use these credentials to create the resource. END"}
{"prompt":"SSL and certificates\n\n###\n\n","completion":" Certain integrations support end-to-end encryption using SSL (e.g., [MongoDB](https:\/\/docs.mongodb.com\/manual\/tutorial\/configure-ssl\/)). This additional layer of security keeps your data safe and prevents threats like [man-in-the-middle](https:\/\/en.wikipedia.org\/wiki\/Man-in-the-middle_attack) (MITM) attacks. END"}
{"prompt":"Certain integrations support end-to-end encryption using SSL (e.g., [MongoDB](https:\/\/docs.mongodb.com\/manual\/tutorial\/configure-ssl\/)). This additional layer of security keeps your data safe and prevents threats like [man-in-the-middle](https:\/\/en.wikipedia.org\/wiki\/Man-in-the-middle_attack) (MITM) attacks.\n\n###\n\n","completion":" If SSL is available for a resource, Retool displays **SSL** on the resource connection page. END"}
{"prompt":"If SSL is available for a resource, Retool displays **SSL** on the resource connection page.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8ddbd4a-connect-using-ssl.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8ddbd4a-connect-using-ssl.png)\n\n###\n\n","completion":" If your database uses a self-signed certificate instead of a publicly signed certificate, you must configure Retool to trust the custom certificate. Check **Connect using SSL** and then check **Use a self-signed certificate**. END"}
{"prompt":"If your database uses a self-signed certificate instead of a publicly signed certificate, you must configure Retool to trust the custom certificate. Check **Connect using SSL** and then check **Use a self-signed certificate**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7121725-self-signed-cert.png) END"}
{"prompt":"Connect via SSH tunneling\n\n###\n\n","completion":" If you cannot allow Retool's IP address or need to use data on a private network, you can [create an SSH tunnel](https:\/\/docs.retool.com\/docs\/enabling-ssh-tunnels). SSH tunneling is not supported by all integrations. END"}
{"prompt":"Common error messages\n\n###\n\n","completion":" Retool reports on any errors when connecting to a data source. The following errors occur if any provided information is invalid (e.g., username and password are incorrect) or if Retool is unable to connect to the data source (e.g., Retool IP addresses not added to an allowlist). END"}
{"prompt":"title: \"Tutorials\"\ncategorySlug: \"legacy\"\nexcerpt: \"Learn how to build Retool apps for specific use cases with our tutorials.\"\nhidden: true\n\n###\n\n","completion":" These step-by-step tutorials walk you through some different types of Retool apps you can build. Each tutorial demonstrates a particular use case that you might find helpful as you build your own apps. END"}
{"prompt":"These step-by-step tutorials walk you through some different types of Retool apps you can build. Each tutorial demonstrates a particular use case that you might find helpful as you build your own apps.\n\n###\n\n","completion":" If you're new to Retool, we recommend you first check out our [quickstart guide](https:\/\/docs.retool.com\/docs\/quickstart). These tutorials assume some familiarity with Retool but link to relevant documentation where needed. END"}
{"prompt":"1. Get Twilio Access Keys\n\n###\n\n","completion":" You can find your _Account SID_ and _Auth Token_ under the \"API Credentials\" in your Twilio account settings dashboard. END"}
{"prompt":"You can find your _Account SID_ and _Auth Token_ under the \"API Credentials\" in your Twilio account settings dashboard.\n\n###\n\n","completion":" **Dashboard** > **Settings** > **General** END"}
{"prompt":"**Dashboard** > **Settings** > **General**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/be9d701-twiliodocs1.png) END"}
{"prompt":"2. Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"Twilio\" as the _type_. Enter your Account SID and Auth Token. END"}
{"prompt":"Create a new resource in Retool, and select \"Twilio\" as the _type_. Enter your Account SID and Auth Token.\n\n###\n\n","completion":" **Resources** > **Add** > **Twilio** END"}
{"prompt":"**Resources** > **Add** > **Twilio**\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f09949c-twiliodocs2.png) END"}
{"prompt":"3. Create Queries\n\n###\n\n","completion":" You can now select your newly-created Twilio resource from the _Resource_ dropdown when creating queries in your Retool apps. END"}
{"prompt":"You can now select your newly-created Twilio resource from the _Resource_ dropdown when creating queries in your Retool apps.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1945c25-twiliodocs3.png) END"}
{"prompt":"title: \"Enable two-factor authentication\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to configure two-factor authentication for your Retool organization.\"\nhidden: false\n\n###\n\n","completion":" Two-factor authentication (2FA) provides an additional level of security for your Retool organization. When enabled, users must enter a one-time passcode (OTP) generated by an authenticator app each time they log in. END"}
{"prompt":"Enable 2FA\n\n###\n\n","completion":" Retool organizations on any plan can enforce 2FA for their users. Admins can access this setting from **Settings** > **Advanced** under **Authentication Options**. For [Self-hosted Retool](https:\/\/docs.retool.com\/docs\/self-hosted) deployments, this applies to all domains in your organization. END"}
{"prompt":"Retool organizations on any plan can enforce 2FA for their users. Admins can access this setting from **Settings** > **Advanced** under **Authentication Options**. For [Self-hosted Retool](https:\/\/docs.retool.com\/docs\/self-hosted) deployments, this applies to all domains in your organization.\n\n###\n\n","completion":" ![Setting to require 2FA across entire organization](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/2eb1dc44-36ee-445f-9e67-99dd5052955e.png) END"}
{"prompt":"![Setting to require 2FA across entire organization](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/2eb1dc44-36ee-445f-9e67-99dd5052955e.png)\n\n###\n\n","completion":" After you enable 2FA, the user is presented with a QR code they must scan using an authenticator app (e.g., 1Password, Authy, or Google Authenticator) and then confirm the generated one-time passcode (OTP) to complete setup. Once complete, users must also enter a passcode during subsequent logins. END"}
{"prompt":"After you enable 2FA, the user is presented with a QR code they must scan using an authenticator app (e.g., 1Password, Authy, or Google Authenticator) and then confirm the generated one-time passcode (OTP) to complete setup. Once complete, users must also enter a passcode during subsequent logins.\n\n###\n\n","completion":" Users of Retool Cloud and Self-hosted organizations on the Enterprise plan can enable 2FA for their account even if it's not required for the organization. Users can enable and reset 2FA on their accounts from **Settings** > **Account**. END"}
{"prompt":"Reset 2FA for individual users\n\n###\n\n","completion":" Retool administrators can reset 2FA for individual users in the Users settings. Navigate to **Settings** > **Users**, then click the `...` menu for the user. Once reset, the user must setup 2FA again the next time they log in. END"}
{"prompt":"Retool administrators can reset 2FA for individual users in the Users settings. Navigate to **Settings** > **Users**, then click the `...` menu for the user. Once reset, the user must setup 2FA again the next time they log in.\n\n###\n\n","completion":" ![Reset 2FA of individual user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/08be2b0e-16c1-4950-8d45-15d76408dfb1.png) END"}
{"prompt":"![Reset 2FA of individual user](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/08be2b0e-16c1-4950-8d45-15d76408dfb1.png)\n\n###\n\n","completion":" Users of Retool organizations on the Enterprise plan can also reset their own 2FA from **Settings** > **Account**. END"}
{"prompt":"title: \"Update billing information\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to update your billing information in Retool.\"\nhidden: false\n\n###\n\n","completion":" You can update the billing address and tax ID for your Retool instance at any time using our customer portal. END"}
{"prompt":"You can update the billing address and tax ID for your Retool instance at any time using our customer portal.\n\n###\n\n","completion":" ![Retool-billing-page.jpg](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/64c36e1-Retool-billing-page.jpg) END"}
{"prompt":"title: \"Update self-hosted Retool\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to upgrade your self-hosted Retool deployment.\"\nhidden: false\n\n###\n\n","completion":" [block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block] END"}
{"prompt":"[block:html]\n{\n  \"html\": \"<div class=\\\"tag-container\\\"><div class=\\\"tag-section-small\\\"><a class=\\\"tag-blue\\\" href=\\\"https:\/\/retool.com\/pricing\\\">Self-hosted only<\/a><\/div><\/div>\"\n}\n[\/block]\n\n###\n\n","completion":" Self-hosted releases are different from Retool's cloud releases, and when you self-host, your version isn't automatically updated. If you decide to self-host, you can read more about [updating](https:\/\/docs.retool.com\/docs\/updating-retool-on-premise) and [release versions](https:\/\/updates.retool.com\/en?category=self-hosted%20release%20notes&role=s_kemHmglJ21233). END"}
{"prompt":"Self-hosted releases are different from Retool's cloud releases, and when you self-host, your version isn't automatically updated. If you decide to self-host, you can read more about [updating](https:\/\/docs.retool.com\/docs\/updating-retool-on-premise) and [release versions](https:\/\/updates.retool.com\/en?category=self-hosted%20release%20notes&role=s_kemHmglJ21233).\n\n###\n\n","completion":" There are a few high-level phases to work through to update a self-hosted version of Retool. These include: END"}
{"prompt":"1. Choose the version\n\n###\n\n","completion":" Check the [Releases](https:\/\/updates.retool.com\/en?category=self-hosted%20release%20notes&role=s_kemHmglJ21233) page to see each version of Retool and its changelog. Read the changelogs between your current version and the version you're upgrading to. Changelogs also contain instructions for managing deprecated features. END"}
{"prompt":"Check the [Releases](https:\/\/updates.retool.com\/en?category=self-hosted%20release%20notes&role=s_kemHmglJ21233) page to see each version of Retool and its changelog. Read the changelogs between your current version and the version you're upgrading to. Changelogs also contain instructions for managing deprecated features.\n\n###\n\n","completion":" Whenever possible, upgrade to the most recent version. In some cases, if a feature is deprecated in the newest version, you might want to upgrade to the version just before the latest so you can take time to migrate off the deprecated feature before upgrading to the newest version. END"}
{"prompt":"2. Pick apps to test with\n\n###\n\n","completion":" Here are some suggestions for picking the apps. END"}
{"prompt":"3. Schedule downtime for the upgrade\n\n###\n\n","completion":" Retool recommends scheduling downtime, even if it’s for a short time period or during off-peak hours. If you're running Retool on a single container or node, there will be downtime during the upgrade. During this time, explain to users that they shouldn't use or edit apps during the upgrade. You might want to make an announcement to your users at a few days in advance. END"}
{"prompt":"Retool recommends scheduling downtime, even if it’s for a short time period or during off-peak hours. If you're running Retool on a single container or node, there will be downtime during the upgrade. During this time, explain to users that they shouldn't use or edit apps during the upgrade. You might want to make an announcement to your users at a few days in advance.\n\n###\n\n","completion":" If you run multiple instances—for example, dev, staging, and production instances—you might consider scheduling separate downtimes for each: for example, upgrading dev first, and then staging, and then production. END"}
{"prompt":"If you run multiple instances—for example, dev, staging, and production instances—you might consider scheduling separate downtimes for each: for example, upgrading dev first, and then staging, and then production.\n\n###\n\n","completion":" The amount of time to schedule varies. For example, point-in-time recovery and taking database snapshots can impact the timeframe. If you're upgrading for the first time, make sure to work through the next section to establish a baseline. END"}
{"prompt":"Pre-update testing\n\n###\n\n","completion":" This section includes some recommendations but you should customize testing to fit your installation. Pre-update testing includes: END"}
{"prompt":"This section includes some recommendations but you should customize testing to fit your installation. Pre-update testing includes:\n\n###\n\n","completion":" By running your upgrade on a temporary instance, you can test out the upgrade process in a low-risk environment and build confidence for the upgrades in your main Retool instances. As you test, you might want to write or update an internal upgrade runbook. Your runbook can include specific context and commands for your company and become a resource for other colleagues. END"}
{"prompt":"By running your upgrade on a temporary instance, you can test out the upgrade process in a low-risk environment and build confidence for the upgrades in your main Retool instances. As you test, you might want to write or update an internal upgrade runbook. Your runbook can include specific context and commands for your company and become a resource for other colleagues.\n\n###\n\n","completion":" Testing on a sandbox instance is particularly recommended if: END"}
{"prompt":"1. Spin up a temporary Retool instance\n\n###\n\n","completion":" You can find instructions for spinning up a Retool instance in our [deployment guide](https:\/\/docs.retool.com\/docs\/deploy) but you should finish reading this section before getting started. END"}
{"prompt":"You can find instructions for spinning up a Retool instance in our [deployment guide](https:\/\/docs.retool.com\/docs\/deploy) but you should finish reading this section before getting started.\n\n###\n\n","completion":" If you have a permanent sandbox instance, you can use that instance instead of spinning up new infrastructure. You’ll likely still make use of the instructions below for seeding the instance with the latest version of your test apps. END"}
{"prompt":"The database\n\n###\n\n","completion":" Retool recommends seeding the temporary instance with your current apps by copying your existing Retool instance’s PostgreSQL database. If you run multiple instances, select the instance that you use when developing apps. It’s important to use a copy of your existing database. Don't connect to your existing Retool database: it will likely be altered in the course of upgrading and testing because upgrades often include database migrations. END"}
{"prompt":"Copy the data\n\n###\n\n","completion":" To make a copy of the data, you can use the built-in PostgreSQL `pg_dump` command to dump the database to a file, and then create a new database seeded with that file. There's an example of this on [Retool's storage database](https:\/\/docs.retool.com\/docs\/configuring-retools-storage-database) page. However, if you're using a managed PostgreSQL database, your cloud provider likely has a way to make a copy of the database and load it into a new database. END"}
{"prompt":"Allow the temporary instance to read the copied database\n\n###\n\n","completion":" For the new Retool instance to read the contents of the database, you must set the `ENCRYPTION_KEY` and `USE_GCM_ENCRYPTION` environment variables in the new Retool instance to the same value as in your current Retool instance. If you use Docker, you can run these commands after spinning up the instance. END"}
{"prompt":"Initial Retool version\n\n###\n\n","completion":" As the starting point, install your current version of Retool. You can find your current version by clicking the question mark in the lower right corner of the application editor. Use this version number in your deployment template files for the new instance. END"}
{"prompt":"General setup\n\n###\n\n","completion":" You might be able to use a simpler setup than what you usually run. For example, even if you usually run on Kubernetes, you might want to spin up the equivalent of a single AWS EC2 machine. This may be a good choice for you if you are highly confident in the mechanics of upgrading on your usual infrastructure, and primarily want to test the functionality of your Retool apps with the new Retool software. END"}
{"prompt":"2. Install the new version\n\n###\n\n","completion":" In this step, run the upgrade on the temporary Retool instance. [Follow the same steps](#3-install-the-new-version) used for production. END"}
{"prompt":"3. Test your apps\n\n###\n\n","completion":" Make sure the core functionality of your apps work as expected. You might want to write some test cases or a checklist to help with this process. END"}
{"prompt":"Make sure the core functionality of your apps work as expected. You might want to write some test cases or a checklist to help with this process.\n\n###\n\n","completion":" If your tests pass, you can move on to upgrading your production instances. If you find any issues, you can reach out to the Retool Support team for assistance. END"}
{"prompt":"Installation\n\n###\n\n","completion":" To complete the installation, you need to: END"}
{"prompt":"1. Remind your users about the downtime\n\n###\n\n","completion":" As a courtesy to your users, it’s helpful to send an additional announcement to them shortly before you begin the downtime. If you're using the Git Syncing feature to sync apps across multiple Retool instances, Retool recommends not promoting any of your apps between instances while you do the upgrade. It's better to upgrade instances individually. For example, you might upgrade your development instance first and then move to staging, and then production. END"}
{"prompt":"2. Create a backup\n\n###\n\n","completion":" You need to create a backup for each of your Retool instances so that you can restore them if needed. END"}
{"prompt":"You need to create a backup for each of your Retool instances so that you can restore them if needed.\n\n###\n\n","completion":" If you're deployed on a cloud platform like AWS, the cloud provider might have a convenient way to backup all of the state of your running instances. For example, AWS offers a way to backup EC2 instances [as an AMI](https:\/\/docs.aws.amazon.com\/prescriptive-guidance\/latest\/backup-recovery\/ec2-backup.html). END"}
{"prompt":"If you're deployed on a cloud platform like AWS, the cloud provider might have a convenient way to backup all of the state of your running instances. For example, AWS offers a way to backup EC2 instances [as an AMI](https:\/\/docs.aws.amazon.com\/prescriptive-guidance\/latest\/backup-recovery\/ec2-backup.html).\n\n###\n\n","completion":" If you would like to take the backup in a platform-agnostic way, here are the essential pieces: END"}
{"prompt":"3. Install the new version\n\n###\n\n","completion":" Retool releases can be pulled from [Docker Hub](https:\/\/hub.docker.com\/u\/tryretool). How you update depends on how you’ve deployed Retool. END"}
{"prompt":"Kubernetes deployment\n\n###\n\n","completion":" If you're running a multi-container deployment, check out our guide on [the order in which to upgrade your containers](https:\/\/docs.retool.com\/docs\/horizontally-scaling-retool#zero-down-time-upgrades). END"}
{"prompt":"4. Notify your users after the upgrade is complete\n\n###\n\n","completion":" As a courtesy to your users, it’s helpful to send an announcement to them to let them know they can use Retool again. END"}
{"prompt":"title: \"Upgrade deprecated components\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-guides\"\nexcerpt: \"Learn how to upgrade deprecated components to newer versions.\"\nhidden: false\n\n###\n\n","completion":" We regularly update our components with more functionality. Over time, we release new versions of components that we've rebuilt to provide additional features, such as accessibility improvements and deeper customization options. Whenever we publish a new version of a component, we deprecate the existing one. END"}
{"prompt":"We regularly update our components with more functionality. Over time, we release new versions of components that we've rebuilt to provide additional features, such as accessibility improvements and deeper customization options. Whenever we publish a new version of a component, we deprecate the existing one.\n\n###\n\n","completion":" You can continue to use deprecated components, but we recommend upgrading them. You can automatically upgrade deprecated components individually or select multiple components to upgrade at the same time. All configuration settings (<<glossary:event handlers>>, tooltips, etc.) transfer to the new component. END"}
{"prompt":"Upgrading individual components\n\n###\n\n","completion":" If a selected component in your app has been deprecated and a new version is available, click **Upgrade** in the Inspector. END"}
{"prompt":"If a selected component in your app has been deprecated and a new version is available, click **Upgrade** in the Inspector.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b4dd3d0-singleupgrade.png) END"}
{"prompt":"Upgrading multiple components\n\n###\n\n","completion":" Click the `...` button on the upper-right of the editor to open the **App actions menu**. Select **Upgrade components** to view a list of all deprecated components to upgrade. If there are no components to upgrade, this menu item is disabled. END"}
{"prompt":"Click the `...` button on the upper-right of the editor to open the **App actions menu**. Select **Upgrade components** to view a list of all deprecated components to upgrade. If there are no components to upgrade, this menu item is disabled.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3f1c981-Screen_Shot_2021-10-12_at_4.55.31_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3f1c981-Screen_Shot_2021-10-12_at_4.55.31_PM.png)\n\n###\n\n","completion":" Select the components you want to upgrade and click **Upgrade**. END"}
{"prompt":"Select the components you want to upgrade and click **Upgrade**.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/739ebc7-massupgrade.png) END"}
{"prompt":"Handling refactored fields\n\n###\n\n","completion":" We sometimes rename fields in new component versions to improve clarity and consistency. For example, the `suffix` field of a deprecated component becomes `textAfter` in the new version. Upgrading a component automatically updates any direct references to refactored fields. END"}
{"prompt":"We sometimes rename fields in new component versions to improve clarity and consistency. For example, the `suffix` field of a deprecated component becomes `textAfter` in the new version. Upgrading a component automatically updates any direct references to refactored fields.\n\n###\n\n","completion":" We also make a best-effort attempt to update fields in JavaScript queries or custom scripts used in event handlers. We do not alter any _indirect_ references to component fields, however, so you must update these manually. END"}
{"prompt":"title: \"Upload multiple files to Google Cloud Store or Amazon S3\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to upload files with Google Cloud Store or Amazon S3.\"\nhidden: false\n\n###\n\n","completion":" Let's say we have a **File Input** component with the **Selection type** option set to **Multiple files**. We want to upload all the selected files to GCS or AWS S3 through a connected resource. END"}
{"prompt":"Let's say we have a **File Input** component with the **Selection type** option set to **Multiple files**. We want to upload all the selected files to GCS or AWS S3 through a connected resource.\n\n###\n\n","completion":" That's what we'll build in just a few minutes! END"}
{"prompt":"That's what we'll build in just a few minutes!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b0a5daf-Screen_Shot_2021-08-30_at_12.56.55_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b0a5daf-Screen_Shot_2021-08-30_at_12.56.55_PM.png)\n\n###\n\n","completion":" You will need to create 2 queries: END"}
{"prompt":"Create a JS query\n\n###\n\n","completion":" Note that for Retool to actually wait to execute the _entire_ async function loop (e.g. resolve the Promise), you'll need to _return_ the function call. If you just call the function, it will work but your `onSuccess` triggers may act unpredictably. END"}
{"prompt":"Create an upload query\n\n###\n\n","completion":" In this example, `uploadToS3` is a query to the S3 Resource. END"}
{"prompt":"In this example, `uploadToS3` is a query to the S3 Resource.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3fbfbf8-Screen_Shot_2021-08-30_at_12.58.41_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/3fbfbf8-Screen_Shot_2021-08-30_at_12.58.41_PM.png)\n\n###\n\n","completion":" The data posted to S3 is listed below: END"}
{"prompt":"title: \"Upload photos to Amazon S3\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to build an app to upload images to Amazon S3 and save URLs to an API.\"\nhidden: false\n\n###\n\n","completion":" **Let's say we're Amazon, and want to upload some images for our <strike>books<\/strike> products.** We'll build a tool to **upload images to S3, and then save its URL to our API, all in 5 minutes.** END"}
{"prompt":"0. Set up S3 credentials\n\n###\n\n","completion":" Before uploading to S3, we'll have to add it as a resource. See [S3 Integration](https:\/\/docs.retool.com\/docs\/s3-integration-1) on instructions. You'll need to make a S3 IAM user for Retool, as well as whitelist our domain in the S3 CORS settings. END"}
{"prompt":"Making a new S3 IAM user\n\n###\n\n","completion":" Head over to [IAM](https:\/\/console.aws.amazon.com\/iam\/home), make a new user, and call it `retool-s3-uploader`. Only enable \"programmatic access\". END"}
{"prompt":"Head over to [IAM](https:\/\/console.aws.amazon.com\/iam\/home), make a new user, and call it `retool-s3-uploader`. Only enable \"programmatic access\".\n\n###\n\n","completion":" ![Creating an IAM user and setting the access type.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/70dca37-s31.png) END"}
{"prompt":"![Creating an IAM user and setting the access type.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/70dca37-s31.png)\n\n###\n\n","completion":" Hit \"next\" to grant the account permissions. The easiest is granting it full S3 permissions, but if you want, you can further restrict the permissions. You'll need to create a new policy, then attach the policy to the new user. END"}
{"prompt":"Hit \"next\" to grant the account permissions. The easiest is granting it full S3 permissions, but if you want, you can further restrict the permissions. You'll need to create a new policy, then attach the policy to the new user.\n\n###\n\n","completion":" Here's an example JSON IAM policy that works. You'll need to change the `YOUR_STATEMENT_ID` variable, as well as the `YOUR_BUCKET_NAME_HERE` variable. Keep both the `YOUR_BUCKET_NAME_HERE\/*` and `YOUR_BUCKET_NAME_HERE` - they're both necessary! END"}
{"prompt":"Configuring CORS\n\n###\n\n","completion":" Since we upload directly from your browser, you'll need to configure [CORS](https:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/dev\/cors.html) (cross origin resource sharing). Open up the S3 bucket, click the Permissions tab, and then click CORS configuration, and paste in the following JSON, which lets Retool upload directly in to your S3 bucket from the browser. END"}
{"prompt":"Since we upload directly from your browser, you'll need to configure [CORS](https:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/dev\/cors.html) (cross origin resource sharing). Open up the S3 bucket, click the Permissions tab, and then click CORS configuration, and paste in the following JSON, which lets Retool upload directly in to your S3 bucket from the browser.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/5f83628-Screen_Shot_2020-11-04_at_9.35.45_AM.png) END"}
{"prompt":"1. Upload images\n\n###\n\n","completion":" Let's drag on a `S3Uploader` from the right hand side, and then choose the right bucket: END"}
{"prompt":"Let's drag on a `S3Uploader` from the right hand side, and then choose the right bucket:\n\n###\n\n","completion":" ![Creating a new S3Uploader and configuring it.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/16a0d01-Screenshot_2018-08-08_12.10.08.png) END"}
{"prompt":"![Creating a new S3Uploader and configuring it.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/16a0d01-Screenshot_2018-08-08_12.10.08.png)\n\n###\n\n","completion":" Great! That's it — now let's try uploading a file by clicking on the button. After the file uploads, you should get a success notification. And now, you'll see that the `.lastUploadedFileUrl` is now a S3 URL: END"}
{"prompt":"Great! That's it — now let's try uploading a file by clicking on the button. After the file uploads, you should get a success notification. And now, you'll see that the `.lastUploadedFileUrl` is now a S3 URL:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a8c5208-Screenshot_2018-08-08_12.12.43.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a8c5208-Screenshot_2018-08-08_12.12.43.png)\n\n###\n\n","completion":" Great! Let's `POST` that URL back to our API, so we can persist it in the database. END"}
{"prompt":"2. Save the S3 URL, part 1\n\n###\n\n","completion":" See the right hand side of the `S3Uploader`? There's a `After Upload` callback. Let's click on it, and tell it to make a new query: END"}
{"prompt":"See the right hand side of the `S3Uploader`? There's a `After Upload` callback. Let's click on it, and tell it to make a new query:\n\n###\n\n","completion":" ![Making a new query to call after it uploads.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/293e918-Screenshot_2018-08-08_12.16.07.png) END"}
{"prompt":"![Making a new query to call after it uploads.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/293e918-Screenshot_2018-08-08_12.16.07.png)\n\n###\n\n","completion":" If we just want to persist images, we could just do a `POST` back to our API, which is pretty easy. END"}
{"prompt":"If we just want to persist images, we could just do a `POST` back to our API, which is pretty easy.\n\n###\n\n","completion":" ![POST back our image URL.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2527968-Screenshot_2018-08-08_12.41.45.png) END"}
{"prompt":"3. Pulling in `Products`\n\n###\n\n","completion":" But realistically, we probably want to attach our images to a specific database record, like a `Product`. To do that, we'll first have to pull in all our items. Let's write a SQL query: END"}
{"prompt":"But realistically, we probably want to attach our images to a specific database record, like a `Product`. To do that, we'll first have to pull in all our items. Let's write a SQL query:\n\n###\n\n","completion":" Great! Let's hit \"run\", and then \"save\" if it looks good: END"}
{"prompt":"Great! Let's hit \"run\", and then \"save\" if it looks good:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7c27960-Screenshot_2018-08-08_13.26.24.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7c27960-Screenshot_2018-08-08_13.26.24.png)\n\n###\n\n","completion":" After that, let's drag on a `Table` from the right hand side. It'll be automatically populated with data from your last query (`select * from products order by id`, in this case). END"}
{"prompt":"After that, let's drag on a `Table` from the right hand side. It'll be automatically populated with data from your last query (`select * from products order by id`, in this case).\n\n###\n\n","completion":" ![A table of products.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4f3f74a-Screenshot_2018-08-08_13.20.45.png) END"}
{"prompt":"![A table of products.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4f3f74a-Screenshot_2018-08-08_13.20.45.png)\n\n###\n\n","completion":" Great - table of products in. Now let's render the image itself from the `image_url` in our database. To do that, let's drag in a `Text` component from the right hand side, then set its value to be an `<img>` tag: END"}
{"prompt":"Great - table of products in. Now let's render the image itself from the `image_url` in our database. To do that, let's drag in a `Text` component from the right hand side, then set its value to be an `<img>` tag:\n\n###\n\n","completion":" ![Oh - the memories!](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b7c031c-Screenshot_2018-08-08_13.29.23.png) END"}
{"prompt":"4. Save the S3 URL in our database, part 2\n\n###\n\n","completion":" Nice! Now that we have a table of `Products`, and we can preview each image, we're ready to change the `image_url`. Let's do a `PUT` back via our API, like the screenshot below. END"}
{"prompt":"Nice! Now that we have a table of `Products`, and we can preview each image, we're ready to change the `image_url`. Let's do a `PUT` back via our API, like the screenshot below.\n\n###\n\n","completion":" ![Writing a PUT to update our Item.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8275880-Screenshot_2018-08-08_13.38.07.png) END"}
{"prompt":"![Writing a PUT to update our Item.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/8275880-Screenshot_2018-08-08_13.38.07.png)\n\n###\n\n","completion":" And now... after it's `PUT`, we want to refresh our SQL query, so it'll pull in the fresh data (including `image_url`). So let's add that to the \"On success, trigger these queries\" section: END"}
{"prompt":"And now... after it's `PUT`, we want to refresh our SQL query, so it'll pull in the fresh data (including `image_url`). So let's add that to the \"On success, trigger these queries\" section:\n\n###\n\n","completion":" ![Refresh our list of products after we upload the images.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/800e3bd-Screenshot_2018-08-08_13.40.24.png) END"}
{"prompt":"![Refresh our list of products after we upload the images.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/800e3bd-Screenshot_2018-08-08_13.40.24.png)\n\n###\n\n","completion":" That's it! Now when we upload an image, it'll call the trigger, which'll `PUT` back to our API. After that succeeds, it'll reload our SQL query to pull in our products again - this time with the updated `image_url`. END"}
{"prompt":"5. Actually using it\n\n###\n\n","completion":" **This tool is now production-ready**. If you don't want coworkers bugging you about uploading images to S3 + editing the database, just send them the link to this tool! If you [give them specific permissions](https:\/\/docs.retool.com\/docs\/user-permissions), they won't be able to edit the tool and change the queries - they'll just be able to use the tool you've created. Not bad for a few minutes of work! END"}
{"prompt":"title: \"URL query parameters\"\ncategorySlug: \"web-apps\"\nparentDocSlug: \"apps-concepts\"\nexcerpt: \"Learn more about URL query parameters to control apps on launch.\"\nhidden: false\n\n###\n\n","completion":" Retool's built-in URL query parameters allow you to control certain characteristics of an app when launched. You can also configure your own URL query parameters and deep link to specific sections or data. END"}
{"prompt":"Built-in URL query parameters\n\n###\n\n","completion":" You can launch an app and include any of the following parameters in its URL, allowing you to control the app's state when launched. For example, use URL parameters to load a previous release or use specific environments. Use the following URL format when including query parameters: END"}
{"prompt":"Custom URL query parameters\n\n###\n\n","completion":" You can specify your own URL query parameters to include custom values, allowing you to effectively sync its state to the URL. This makes it possible to link directly to specific records. END"}
{"prompt":"You can specify your own URL query parameters to include custom values, allowing you to effectively sync its state to the URL. This makes it possible to link directly to specific records.\n\n###\n\n","completion":" The following example shows an app that allows you to search for users and their purchases. You can use URL parameters to share a link to the app with a specific user already populated. END"}
{"prompt":"The following example shows an app that allows you to search for users and their purchases. You can use URL parameters to share a link to the app with a specific user already populated.\n\n###\n\n","completion":" ![Users and purchases tables](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7a274bd4-24cb-46c6-a0ec-b6bbb74adf9c.png) END"}
{"prompt":"![Users and purchases tables](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7a274bd4-24cb-46c6-a0ec-b6bbb74adf9c.png)\n\n###\n\n","completion":" To use deep links: END"}
{"prompt":"To use deep links:\n\n###\n\n","completion":" ![URL parameters highlighted in file menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/85268492-0168-44a9-868b-5f3a0142fe37.png) END"}
{"prompt":"![URL parameters highlighted in file menu](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/85268492-0168-44a9-868b-5f3a0142fe37.png)\n\n###\n\n","completion":" ![Storing page state in the URL.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4bf3269-Screen_Shot_2018-07-05_at_2.51.51_PM.png) END"}
{"prompt":"![Storing page state in the URL.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/4bf3269-Screen_Shot_2018-07-05_at_2.51.51_PM.png)\n\n###\n\n","completion":" Now the page has a URL that looks like this: <https:\/\/yourdomain.tryretool.com\/presentation\/UsersDashboard#customerId=45&purchaseId=1979&searchTerm=ja> END"}
{"prompt":"Now the page has a URL that looks like this: <https:\/\/yourdomain.tryretool.com\/presentation\/UsersDashboard#customerId=45&purchaseId=1979&searchTerm=ja>\n\n###\n\n","completion":" ![Reading page state from the URL.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/25b9b65-Screen_Shot_2018-07-05_at_2.57.01_PM.png) END"}
{"prompt":"![Reading page state from the URL.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/25b9b65-Screen_Shot_2018-07-05_at_2.57.01_PM.png)\n\n###\n\n","completion":" For example, set the default table index to read from the `customerId` URL parameter. END"}
{"prompt":"For example, set the default table index to read from the `customerId` URL parameter.\n\n###\n\n","completion":" ![Update default index to read from URL parameter](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b356c8da-ad9e-43de-9181-9fb49568e9c8.png) END"}
{"prompt":"![Update default index to read from URL parameter](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b356c8da-ad9e-43de-9181-9fb49568e9c8.png)\n\n###\n\n","completion":" Now, when you open up the URL <https:\/\/yourdomain.tryretool.com\/presentation\/UsersDashboard#customerId=45&purchaseId=1979&searchTerm=ja>, you'll see the correct selected customer and purchase. END"}
{"prompt":"title: \"View usage analytics\"\ncategorySlug: \"self-hosted-retool\"\nparentDocSlug: \"self-hosted-configuration-guides\"\nexcerpt: \"Learn how to access usage and adoption trends across your Retool organization.\"\nhidden: false\n\n###\n\n","completion":" As more users build and use Retool apps within your organization, it’s helpful to understand adoption patterns to better make decisions about your use of Retool. If you’re self-hosting Retool, you might run multiple instances, and seeing which users are using which apps can be difficult. END"}
{"prompt":"As more users build and use Retool apps within your organization, it’s helpful to understand adoption patterns to better make decisions about your use of Retool. If you’re self-hosting Retool, you might run multiple instances, and seeing which users are using which apps can be difficult.\n\n###\n\n","completion":" Retool offers a built-in Retool Usage Analytics page to admins that will aggregate usage across all your Retool instances. END"}
{"prompt":"Enable usage analytics\n\n###\n\n","completion":" If you’re self-hosting Retool, you might deploy multiple instances to isolate your production and non-production environments. Enabling Usage Analytics on a single instance will let you view application usage (and other sensitive data) across **all** of your instances. We recommend choosing whichever instance is the most secure and has the proper admins for viewing access to the Usage Analytics page. All Admins of that instance will have the ability to view usage in **Settings > Usage Analytics**. END"}
{"prompt":"If you’re self-hosting Retool, you might deploy multiple instances to isolate your production and non-production environments. Enabling Usage Analytics on a single instance will let you view application usage (and other sensitive data) across **all** of your instances. We recommend choosing whichever instance is the most secure and has the proper admins for viewing access to the Usage Analytics page. All Admins of that instance will have the ability to view usage in **Settings > Usage Analytics**.\n\n###\n\n","completion":" To enable Usage Analytics and view usage across all instances in an organization, set the `USAGE_API_TOKEN` environment variable on the chosen Retool instance. This environment variable is a manually granted Usage Analytics access token to ensure security. END"}
{"prompt":"To enable Usage Analytics and view usage across all instances in an organization, set the `USAGE_API_TOKEN` environment variable on the chosen Retool instance. This environment variable is a manually granted Usage Analytics access token to ensure security.\n\n###\n\n","completion":" If you are not set up with Usage Analytics, please reach out to your Retool account manager to receive a Usage Analytics access token. END"}
{"prompt":"View usage analytics\n\n###\n\n","completion":" Once Usage Analytics is enabled, admins will see a new page available in **Settings > Usage Analytics**: END"}
{"prompt":"Once Usage Analytics is enabled, admins will see a new page available in **Settings > Usage Analytics**:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b3878f77-b329-4cd5-bd94-f8b0d23303b2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b3878f77-b329-4cd5-bd94-f8b0d23303b2.png)\n\n###\n\n","completion":" Retool surfaces a variety of metrics per active instance of Retool: END"}
{"prompt":"Retool surfaces a variety of metrics per active instance of Retool:\n\n###\n\n","completion":" You can hover over the details of each metrics to learn more. END"}
{"prompt":"Are users de-duplicated across multiple instances? How?\n\n###\n\n","completion":" We assume emails uniquely identify users. If a user is accessing multiple Retool instances, they must use the same email on each instance to avoid being counted multiple times in active-user counts. This also means that we expect to see a temporary spike in usage for an organization undergoing a domain migration. END"}
{"prompt":"I’m currently using the imported Usage Analytics app. What changes for me?\n\n###\n\n","completion":" Previously, we provided an [importable Usage Analytics App](https:\/\/github.com\/tryretool\/retool-app-exchange\/tree\/main\/usage-viewer) that you could import into your instance to view usage on that instance. Moving forward, you should remove the Usage Analytics app and set up a Usage Analytics access token so that you can get accurate and comprehensive usage data for all your Retool instances. Retool is no longer maintaining the importable Usage Analytics Retool app. END"}
{"prompt":"How do I get a usage analytics environment variable?\n\n###\n\n","completion":" If you’re self-hosting Retool, please reach out to your account manager for a usage analytics access token. END"}
{"prompt":"How is the usage analytics environment variable generated, and why do we need it?\n\n###\n\n","completion":" The usage analytics environment variable is a password that you need in order to get Usage Analytics data on your deployments from Retool’s Usage Analytics API. The token follows JWT format, but doesn’t contain any sensitive info and can be treated as a random string. END"}
{"prompt":"Which instance should I choose to surface usage analytics?\n\n###\n\n","completion":" We recommend customers choose whichever instance is the most secure and has the proper admins for viewing access to the Usage Analytics page. END"}
{"prompt":"title: \"Configure user permissions\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to control how much access users have to your Retool apps and resources using Granular Permissions.\"\nhidden: false\n\n###\n\n","completion":" As a Retool **admin**, you can use Permission Groups to control which users have access to specific apps and resources. See [Inviting users and authentication](https:\/\/docs.retool.com\/docs\/inviting-users) to learn how to invite users to Retool. END"}
{"prompt":"As a Retool **admin**, you can use Permission Groups to control which users have access to specific apps and resources. See [Inviting users and authentication](https:\/\/docs.retool.com\/docs\/inviting-users) to learn how to invite users to Retool.\n\n###\n\n","completion":" If you can't see **Organization Settings** > **Permissions** your account is not an **admin** and will not be able to perform the tasks described in this guide. END"}
{"prompt":"Managing users individually\n\n###\n\n","completion":" The Users page displays all invited, suggested, enabled, and disabled users in your org. END"}
{"prompt":"The Users page displays all invited, suggested, enabled, and disabled users in your org.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/df52461-_Screen_Shot_2021-04-14_at_3.23.45_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/df52461-_Screen_Shot_2021-04-14_at_3.23.45_PM.png)\n\n###\n\n","completion":" You can search users by name or email, sort by name or when they were last active, and filter the list by user type. END"}
{"prompt":"Filtering users\n\n###\n\n","completion":" While on the Users page, you can select the filter dropdown to select which users should be displayed. Please note that disabled users do not appear with the **All users** filter by default, and can only be viewed when the **Disabled users** filter is explicitly selected. END"}
{"prompt":"While on the Users page, you can select the filter dropdown to select which users should be displayed. Please note that disabled users do not appear with the **All users** filter by default, and can only be viewed when the **Disabled users** filter is explicitly selected.\n\n###\n\n","completion":" ![User list filter](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/16a4a4f-Screen_Shot_2021-04-14_at_3.23.59_PM.png) END"}
{"prompt":"Updating a specific user\n\n###\n\n","completion":" On the Users page, you can also select any individual user. Once a user is selected, you'll see a modal that gives you more access and status details about the user. END"}
{"prompt":"On the Users page, you can also select any individual user. Once a user is selected, you'll see a modal that gives you more access and status details about the user.\n\n###\n\n","completion":" When a user account is pending in the invited or suggested status, you'll have additional options to manage the pending state. END"}
{"prompt":"When a user account is pending in the invited or suggested status, you'll have additional options to manage the pending state.\n\n###\n\n","completion":" **For invited users**, the invite can be revoked, or resent. Invited users can also be added to permission groups which will determine their access when they first login. END"}
{"prompt":"**For invited users**, the invite can be revoked, or resent. Invited users can also be added to permission groups which will determine their access when they first login.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e3d72cb-Screen_Shot_2021-04-14_at_3.31.19_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e3d72cb-Screen_Shot_2021-04-14_at_3.31.19_PM.png)\n\n###\n\n","completion":" **For suggested users**, the request can be declined or approved by admins. These users cannot be added to groups until approved. END"}
{"prompt":"**For suggested users**, the request can be declined or approved by admins. These users cannot be added to groups until approved.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/569abcb-Screen_Shot_2021-04-14_at_3.55.03_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/569abcb-Screen_Shot_2021-04-14_at_3.55.03_PM.png)\n\n###\n\n","completion":" While in this user modal, you can also navigate to the **Apps** tab to show a list of folders and pages that the user is able to access, with the corresponding access level shown for each item. Items listed here represent access across all of a users groups. END"}
{"prompt":"While in this user modal, you can also navigate to the **Apps** tab to show a list of folders and pages that the user is able to access, with the corresponding access level shown for each item. Items listed here represent access across all of a users groups.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/15919c4-Screen_Shot_2021-04-14_at_3.29.04_PM.png) END"}
{"prompt":"Managing users at the group level\n\n###\n\n","completion":" Within Retool, admins manage permissions by creating access groups. Every org has at least 4 default groups. These groups have the following special properties which cannot be changed: END"}
{"prompt":"Within Retool, admins manage permissions by creating access groups. Every org has at least 4 default groups. These groups have the following special properties which cannot be changed:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f21b862-Screen_Shot_2021-04-14_at_10.14.36_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f21b862-Screen_Shot_2021-04-14_at_10.14.36_PM.png)\n\n###\n\n","completion":" From the groups page, you can see how many apps, resources, and members belong to each group. You can also quickly add members to a group by clicking on the users: END"}
{"prompt":"From the groups page, you can see how many apps, resources, and members belong to each group. You can also quickly add members to a group by clicking on the users:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e115c17-Screen_Shot_2021-04-19_at_1.25.16_PM.png) END"}
{"prompt":"Group Admins\n\n###\n\n","completion":" Admins can assign Group Admins to manage membership for any custom groups. They can grant any number of group members the Group Admin privileges to add new users or remove existing users. Group Admins will be able to see all users within an org, but are not able to modify any aspect of their group beyond membership (e.g. app and resource permissions). END"}
{"prompt":"Admins can assign Group Admins to manage membership for any custom groups. They can grant any number of group members the Group Admin privileges to add new users or remove existing users. Group Admins will be able to see all users within an org, but are not able to modify any aspect of their group beyond membership (e.g. app and resource permissions).\n\n###\n\n","completion":" ![Group members](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/12477a43-9c95-4512-820d-e70e5aef2476.webp) END"}
{"prompt":"Configuring group permissions\n\n###\n\n","completion":" To configure a group, click its name or **Edit** to access the group detail page. Here, you can configure group membership, the apps, folders, and resources a group can access, and other additional settings. END"}
{"prompt":"To configure a group, click its name or **Edit** to access the group detail page. Here, you can configure group membership, the apps, folders, and resources a group can access, and other additional settings.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/758317b-Screen_Shot_2021-04-14_at_10.23.22_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/758317b-Screen_Shot_2021-04-14_at_10.23.22_PM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/01febc0-Screen_Shot_2021-04-14_at_10.22.37_PM.png) END"}
{"prompt":"Managing group access to apps\n\n###\n\n","completion":" For a Retool app, there are 3 tiers of access: END"}
{"prompt":"For a Retool app, there are 3 tiers of access:\n\n###\n\n","completion":" These can be set globally, for an entire folder with a folder default, or for specific pages. The checkbox selections cascade for folders, so it's easy to quickly add many apps to a group. END"}
{"prompt":"These can be set globally, for an entire folder with a folder default, or for specific pages. The checkbox selections cascade for folders, so it's easy to quickly add many apps to a group.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/6cf7773-Screen_Shot_2021-04-14_at_10.22.47_PM.png) END"}
{"prompt":"Managing group access to folders\n\n###\n\n","completion":" Setting a permission for an app folder will affect **all new apps that are created or moved to that folder**. For **Own** and **Edit** folder permissions, users will also have the ability to create new apps within that folder. END"}
{"prompt":"Setting a permission for an app folder will affect **all new apps that are created or moved to that folder**. For **Own** and **Edit** folder permissions, users will also have the ability to create new apps within that folder.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/e1c4e4f-Kapture_2021-04-15_at_07.54.09.gif) END"}
{"prompt":"Managing resource permissions\n\n###\n\n","completion":" Resource permissions have two tiers of access: **Use** and **Edit**. **Use** allows users to view the resource's configuration, and write queries against it in creator mode. **Edit** includes **Use** permissions and also allows users to update the resource's configuration. END"}
{"prompt":"Resource permissions have two tiers of access: **Use** and **Edit**. **Use** allows users to view the resource's configuration, and write queries against it in creator mode. **Edit** includes **Use** permissions and also allows users to update the resource's configuration.\n\n###\n\n","completion":" Like app permissions, resource permissions can be set globally, for an entire resource folder with a folder default, or for specific resources. The checkbox selections cascade for folders so you can add multiple resources to a group. END"}
{"prompt":"Like app permissions, resource permissions can be set globally, for an entire resource folder with a folder default, or for specific resources. The checkbox selections cascade for folders so you can add multiple resources to a group.\n\n###\n\n","completion":" ![Resource permissions](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/d09c7d32-3403-41c2-bc99-67648c9daa6e.png) END"}
{"prompt":"Managing group access to resource folders\n\n###\n\n","completion":" Setting permissions for a resource folder affects all new resources created or moved to that folder. Users in groups with **Edit** resource folder permissions also have the ability to create new resources within that folder. END"}
{"prompt":"Setting permissions for a resource folder affects all new resources created or moved to that folder. Users in groups with **Edit** resource folder permissions also have the ability to create new resources within that folder.\n\n###\n\n","completion":" Note that only admins and users in groups with **Edit all** resource access can create new resource folders. END"}
{"prompt":"Managing additional access\n\n###\n\n","completion":" Groups can also have a configurable [Workspace](https:\/\/docs.retool.com\/docs\/workspaces), [Query library](https:\/\/docs.retool.com\/docs\/query-library) access, and access to the user list. END"}
{"prompt":"Groups can also have a configurable [Workspace](https:\/\/docs.retool.com\/docs\/workspaces), [Query library](https:\/\/docs.retool.com\/docs\/query-library) access, and access to the user list.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/7beb49b-Screen_Shot_2021-04-14_at_10.23.04_PM.png) END"}
{"prompt":"Managing component permissions\n\n###\n\n","completion":" In the left panel of the editor, there is a `current_user` object that has metadata about the current user that is logged in, including their permission groups. You can disable buttons or hide components by using the `current_user` object in JS expressions within `{{ }}`. END"}
{"prompt":"In the left panel of the editor, there is a `current_user` object that has metadata about the current user that is logged in, including their permission groups. You can disable buttons or hide components by using the `current_user` object in JS expressions within `{{ }}`.\n\n###\n\n","completion":" For example, in a `Hide when true` field for a button, you could write `{{current_user.groups.map(group => group.name).includes('Marketing')}}` to hide that button for users in the Marketing permission group. END"}
{"prompt":"For example, in a `Hide when true` field for a button, you could write `{{current_user.groups.map(group => group.name).includes('Marketing')}}` to hide that button for users in the Marketing permission group.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2b0140b-Screen_Shot_2021-04-26_at_10.27.40_PM.png) END"}
{"prompt":"Managing record-level permissions\n\n###\n\n","completion":" You can restrict access to database records by referencing attributes on the `current_user` object in your query logic. For example, `current_user.email` uniquely identifies the user running the query. Retool instances integrated with OpenID SSO providers also expose identifying information on the [current_user.metadata.idToken](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#referencing-id-token-claims-in-retool-applications) object. END"}
{"prompt":"You can restrict access to database records by referencing attributes on the `current_user` object in your query logic. For example, `current_user.email` uniquely identifies the user running the query. Retool instances integrated with OpenID SSO providers also expose identifying information on the [current_user.metadata.idToken](https:\/\/docs.retool.com\/docs\/sso-generic-openid-provider#referencing-id-token-claims-in-retool-applications) object.\n\n###\n\n","completion":" As an example, let’s say you’re building a Retool app that displays data about an employee’s compensation. This information is confidential, and should only be viewable by an employee’s manager. Your `employees` table contains a `manager` field, populated with the manager’s email address. You can use the following query to restrict access to the appropriate manager: END"}
{"prompt":"Preventing query spoofing\n\n###\n\n","completion":" Retool uses [prepared statements](https:\/\/docs.retool.com\/docs\/sql-in-retool#prepared-statements) to transmit query variables to your database as part of the network request. To prevent a user from manipulating the network request to pass in arbitrary values to the prepared statement, you can enable the **Prevent query variable spoofing** feature under **Settings** > **Beta**. END"}
{"prompt":"Retool uses [prepared statements](https:\/\/docs.retool.com\/docs\/sql-in-retool#prepared-statements) to transmit query variables to your database as part of the network request. To prevent a user from manipulating the network request to pass in arbitrary values to the prepared statement, you can enable the **Prevent query variable spoofing** feature under **Settings** > **Beta**.\n\n###\n\n","completion":" When this feature is enabled, Retool rejects network requests that refer to `current_user` attributes that don’t match the expected values for the user making the query. END"}
{"prompt":"title: \"Configure multiple environments\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"data-sources-configuration-guides\"\nexcerpt: \"Learn how to create and use multiple environments for production and testing.\"\nhidden: false\n\n###\n\n","completion":" If you're on a paid plan, your Retool organization is initially set up with _production_ and _staging_ environments: END"}
{"prompt":"If you're on a paid plan, your Retool organization is initially set up with _production_ and _staging_ environments:\n\n###\n\n","completion":" Administrators of Retool organizations on Cloud or with an on-premise deployment of Retool Self-hosted v2.87+ can create any number of separate environments to build, run, and test apps. All [administrators and editors](https:\/\/docs.retool.com\/docs\/user-permissions#managing-users-at-the-group-level) can access and use these environments. END"}
{"prompt":"Create a new environment\n\n###\n\n","completion":" Administrators create and manage environments using the **Environments** settings for your Retool organization: END"}
{"prompt":"Administrators create and manage environments using the **Environments** settings for your Retool organization:\n\n###\n\n","completion":" Click **Create new** to create a new environment. All environment must have a unique name and display color. END"}
{"prompt":"Click **Create new** to create a new environment. All environment must have a unique name and display color.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/c93f20e-Screen_Shot_2022-03-29_at_10.24.21_AM.png) END"}
{"prompt":"Configure environment resources\n\n###\n\n","completion":" Multiple environments allow you to display and test against nonsensitive (non-production) data. You can set up connections to your data sources (e.g., database or API) and add environment-specific credentials within the same resource. END"}
{"prompt":"Multiple environments allow you to display and test against nonsensitive (non-production) data. You can set up connections to your data sources (e.g., database or API) and add environment-specific credentials within the same resource.\n\n###\n\n","completion":" Each resource must be configured for your organization's default environment. New resources are configured for the default environment automatically. END"}
{"prompt":"Each resource must be configured for your organization's default environment. New resources are configured for the default environment automatically.\n\n###\n\n","completion":" To configure a resource for a specific environment: END"}
{"prompt":"To configure a resource for a specific environment:\n\n###\n\n","completion":" You don't need to configure a resource for every environment. Keep in mind that you cannot switch to an environment while editing an app if it hasn't been configured with a resource that is referenced by the app. END"}
{"prompt":"You don't need to configure a resource for every environment. Keep in mind that you cannot switch to an environment while editing an app if it hasn't been configured with a resource that is referenced by the app.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/10c3b80-Screen_Shot_2022-03-29_at_10.27.26_AM.png) END"}
{"prompt":"Switch environments\n\n###\n\n","completion":" You can switch between environments that are configured with resources directly from the App editor. Users with edit or admin access can also switch environments in preview mode. You cannot switch to an environment that is not configured with a required resource. END"}
{"prompt":"You can switch between environments that are configured with resources directly from the App editor. Users with edit or admin access can also switch environments in preview mode. You cannot switch to an environment that is not configured with a required resource.\n\n###\n\n","completion":" ![Here, the [dev] internal_retool (readonly) resource is only configured for the production environment, so you can't toggle to other environments until you provide appropriate configurations.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/37b4e9da-a793-4982-8595-62735437c7bc.png) END"}
{"prompt":"![Here, the [dev] internal_retool (readonly) resource is only configured for the production environment, so you can't toggle to other environments until you provide appropriate configurations.](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/37b4e9da-a793-4982-8595-62735437c7bc.png)\n\n###\n\n","completion":" You can quickly access resource settings and configure them for other environments by clicking **Edit resource** in the bottom panel. END"}
{"prompt":"You can quickly access resource settings and configure them for other environments by clicking **Edit resource** in the bottom panel.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2b4c1f4-Screen_Shot_2022-03-29_at_10.31.38_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/2b4c1f4-Screen_Shot_2022-03-29_at_10.31.38_AM.png)\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/666c342-Screen_Shot_2022-03-29_at_10.32.20_AM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/666c342-Screen_Shot_2022-03-29_at_10.32.20_AM.png)\n\n###\n\n","completion":" Switching environments automatically reloads the app to use the appropriate resources and credentials. END"}
{"prompt":"Use specific environments across apps\n\n###\n\n","completion":" Retool saves your most recently selected environment to your browser cache and automatically uses it the next time you open an app. For example, if you switch to a staging environment in one app, the next app you open automatically uses the same staging environment. END"}
{"prompt":"Retool saves your most recently selected environment to your browser cache and automatically uses it the next time you open an app. For example, if you switch to a staging environment in one app, the next app you open automatically uses the same staging environment.\n\n###\n\n","completion":" You can link directly to a Retool app and include the `_environment` [URL query parameter](https:\/\/docs.retool.com\/docs\/url-query-parameters) to automatically open it with a specified environment. END"}
{"prompt":"Reference the selected environment\n\n###\n\n","completion":" The `retoolContext` object contains the `environment` property that corresponds to the name of the environment currently in use. Use `{{ retoolContext.environment }}` to reference this anywhere you need to surface the environment in your app. END"}
{"prompt":"The `retoolContext` object contains the `environment` property that corresponds to the name of the environment currently in use. Use `{{ retoolContext.environment }}` to reference this anywhere you need to surface the environment in your app.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/1816b89-globals-retoolContext-environment.png) END"}
{"prompt":"1. Get Vertica Details & Whitelist Retool IP Address\n\n###\n\n","completion":" You can get your database connection details from whoever set up the database. You'll also need to get them to [whitelist the Retool IP address](https:\/\/docs.retool.com\/docs\/connect-database-resource#connecting-your-database). END"}
{"prompt":"2. Add to Retool\n\n###\n\n","completion":" Create a new resource in Retool, and select \"Vertica\" as the _type_. END"}
{"prompt":"Create a new resource in Retool, and select \"Vertica\" as the _type_.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a2198a7-vertica-create-resource.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a2198a7-vertica-create-resource.png)\n\n###\n\n","completion":" Enter your database connection details. END"}
{"prompt":"Enter your database connection details.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/49814e0-vertica-edit-details.png) END"}
{"prompt":"3. Create Queries\n\n###\n\n","completion":" You can now select your newly-created Vertica resource from the _Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes). END"}
{"prompt":"You can now select your newly-created Vertica resource from the _Resource_ dropdown when creating queries in your Retool apps. You can toggle between **SQL mode** for raw SQL statements or the **GUI mode** for [structured writes](https:\/\/docs.retool.com\/docs\/sql-writes).\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/36f1113-vertica-query-editor.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/36f1113-vertica-query-editor.png)\n\n###\n\n","completion":" You can display the results of Vertica queries as with any other query in Retool: END"}
{"prompt":"You can display the results of Vertica queries as with any other query in Retool:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/a9d65ef-vertica-display-results.png) END"}
{"prompt":"Load data\n\n###\n\n","completion":" When you drag a Virtualized Table component to the Canvas, it automatically displays data from one of your queries. If you don't have any queries, Retool populates the table with test data in JSON format. You can change the data displayed in a virtualized table by editing the **Data** property. END"}
{"prompt":"When you drag a Virtualized Table component to the Canvas, it automatically displays data from one of your queries. If you don't have any queries, Retool populates the table with test data in JSON format. You can change the data displayed in a virtualized table by editing the **Data** property.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/09239b99-46a0-4d00-9e7d-03bb4476b8c6.png) END"}
{"prompt":"Set Source keys\n\n###\n\n","completion":" Set an optional **Source** key on each column to pull data from your datasource. For example, you could set **Source** to `id` to populate the table column with data from the datasource's `id` column. END"}
{"prompt":"Set an optional **Source** key on each column to pull data from your datasource. For example, you could set **Source** to `id` to populate the table column with data from the datasource's `id` column.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/31fa77db-3075-49d9-a770-c78f6ad428ee.png) END"}
{"prompt":"Change column types\n\n###\n\n","completion":" When you add tables to the Canvas, Retool infers column types from the table's data. You can set column types manually by clicking on the column in the **Inspect** tab and selecting the type from the **Format** dropdown. END"}
{"prompt":"When you add tables to the Canvas, Retool infers column types from the table's data. You can set column types manually by clicking on the column in the **Inspect** tab and selecting the type from the **Format** dropdown.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/b4e7c27a-542a-41ba-afd0-da12931d9ac2.png) END"}
{"prompt":"Custom columns\n\n###\n\n","completion":" To create columns that don't exist in your original datasource (known as custom columns), click **+ Add** next to **Columns**. In the **Value** field, write a column expression to define the column. For example, you could use the `first_name` and `last_name` columns to create a **Full Name** column by referencing the current row’s data: `{{ currentSourceRow.first_name + “ “ + currentSourceRow.last_name }}`. END"}
{"prompt":"To create columns that don't exist in your original datasource (known as custom columns), click **+ Add** next to **Columns**. In the **Value** field, write a column expression to define the column. For example, you could use the `first_name` and `last_name` columns to create a **Full Name** column by referencing the current row’s data: `{{ currentSourceRow.first_name + “ “ + currentSourceRow.last_name }}`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/ad0a8833-7f99-43e1-bf40-83f78557dcfc.png) END"}
{"prompt":"Delete and hide columns\n\n###\n\n","completion":" If there are columns in your datasource that you don’t want to display, you can delete them by clicking the **X** icon next to the column name. END"}
{"prompt":"If there are columns in your datasource that you don’t want to display, you can delete them by clicking the **X** icon next to the column name.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/de83fa15-6617-40d2-a1d1-e06fc4b89d16.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/de83fa15-6617-40d2-a1d1-e06fc4b89d16.png)\n\n###\n\n","completion":" You can also hide columns that you want to reference but not display. This is most common for `id` columns. END"}
{"prompt":"You can also hide columns that you want to reference but not display. This is most common for `id` columns.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0db33214-c731-4b65-a3a8-a5ef6b4db9ef.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/0db33214-c731-4b65-a3a8-a5ef6b4db9ef.png)\n\n###\n\n","completion":" Users won’t see the column in the table, but you can still access the column data. For example, you could use `{{ tableName.selectedRow.id }}` to access the selected row's ID. END"}
{"prompt":"Set a Primary key column\n\n###\n\n","completion":" Retool recommends setting a **Primary key** column for virtualized tables. It should be a unique column that identifies each row of data. If you have an `id` column in your datasource, Retool sets the **Primary key** to this column. You can also manually set it to any column that is guaranteed to be unique. END"}
{"prompt":"Retool recommends setting a **Primary key** column for virtualized tables. It should be a unique column that identifies each row of data. If you have an `id` column in your datasource, Retool sets the **Primary key** to this column. You can also manually set it to any column that is guaranteed to be unique.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/9bbd9c94-1b1e-4d06-a5d1-8c023f8961ee.png) END"}
{"prompt":"Persisting row selection\n\n###\n\n","completion":" Setting a primary key allows Retool to keep track of rows even while they are not in view. A common use case would be filtering data in a JavaScript Transformer outside of the table. In that case, you'd want to keep track of the `selectedRow`, even if it’s currently filtered out. You could accomplish this by setting `Persist Row Selection` to true. Notice how the Table is remembering (persisting) the `selectedRow` even though it’s currently filtered out of the Table’s data. END"}
{"prompt":"Setting a primary key allows Retool to keep track of rows even while they are not in view. A common use case would be filtering data in a JavaScript Transformer outside of the table. In that case, you'd want to keep track of the `selectedRow`, even if it’s currently filtered out. You could accomplish this by setting `Persist Row Selection` to true. Notice how the Table is remembering (persisting) the `selectedRow` even though it’s currently filtered out of the Table’s data.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/7efd0b38-11ce-4e89-9b05-d2a868c366b7.png) END"}
{"prompt":"title: \"Deploy Retool Workflows on Self-hosted\"\ncategorySlug: \"retool-workflows\"\nparentDocSlug: \"retool-workflows-guides\"\nexcerpt: \"Learn how to get Retool Workflows deployed to your on-premise environment.\"\nhidden: true\n\n###\n\n","completion":" Retool Workflows is a queue-based execution environment that will be deployed alongside your current Retool deployment. Under the hood, Retool Workflows uses [Temporal](https:\/\/temporal.io\/) to orchestrate running each workflow amongst a pool of workers. END"}
{"prompt":"Retool Workflows is a queue-based execution environment that will be deployed alongside your current Retool deployment. Under the hood, Retool Workflows uses [Temporal](https:\/\/temporal.io\/) to orchestrate running each workflow amongst a pool of workers.\n\n###\n\n","completion":" Managing the deployment is relatively simple with the provided Retool + Workflows helm chart. Below, we’ll go into more depth around configuration options. END"}
{"prompt":"Managing the deployment is relatively simple with the provided Retool + Workflows helm chart. Below, we’ll go into more depth around configuration options.\n\n###\n\n","completion":" Without any extra configuration, Retool Workflows can process ~5-10 QPS (roughly, 5-10 concurrent blocks executed per second). This can be increased by further provisioning workers and the queue. For production use cases, we highly recommend using a separate Postgres database for the queue. END"}
{"prompt":"Dev\/sandbox environment instructions\n\n###\n\n","completion":" Retool provides a `docker-compose-with-workflows.yml` file in the [retool-onpremise repository](https:\/\/github.com\/tryretool\/retool-onpremise\/blob\/master\/docker-compose-workflows.yml). This manages all the required services for Retool and Workflows. For testing, Retool strongly suggests setting up a new environment with dedicated compute and Postgres instances. Retool with Workflows requires a minimum of 12GB of memory and 4 vCPUs if run on a single compute instance. After the infrastructure is created, you can follow the instructions in our `README`, with three important caveats: END"}
{"prompt":"Production environment instructions\n\n###\n\n","completion":" The provided `docker-compose` configuration can process 5-10 QPS, and you should be able to use the same configuration as in the test environment. For higher throughput requirements we highly recommend using our Helm chart for deployment. If you have any questions regarding scaling and throughput needs, please reach out to us at [support@retool.com](mailto:support@reotol.com)! END"}
{"prompt":"Dev\/sandbox environment instructions\n\n###\n\n","completion":" The Helm chart repository URL is `https:\/\/charts.retool.com` and named `retool-wf`. You’ll use those images to run workflows. Retool's Helm chart requires Helm `>=v3.7`. END"}
{"prompt":"The Helm chart repository URL is `https:\/\/charts.retool.com` and named `retool-wf`. You’ll use those images to run workflows. Retool's Helm chart requires Helm `>=v3.7`.\n\n###\n\n","completion":" For the test environment, we recommend using the same database for the Retool DB and Workflows Queue. This should reliably support ~5 QPS. END"}
{"prompt":"For the test environment, we recommend using the same database for the Retool DB and Workflows Queue. This should reliably support ~5 QPS.\n\n###\n\n","completion":" Before [deploying the helm chart](https:\/\/github.com\/tryretool\/retool-workflows-helm), set the following parameters in `retool-helm-workflows\/values.yml`. END"}
{"prompt":"Separate queue database\n\n###\n\n","completion":" For a production deployment, we highly recommend using a separate datastore for the Workflows Queue. In particular, it would be best to use [AWS Aurora Serverless V2](https:\/\/aws.amazon.com\/rds\/aurora\/serverless\/?nc2=h_ql_prod_db_aav2) configured to an ACU (cpu) provision ranging from 0.5 ACU -> 8 ACU. As a rule of thumb, 1 ACU can provide around 10 QPS. The Workflows Queue is write-heavy (around 100:1 write to read operations) and Aurora Serverless can scale to accommodate spikes in traffic without any extra configuration. END"}
{"prompt":"For a production deployment, we highly recommend using a separate datastore for the Workflows Queue. In particular, it would be best to use [AWS Aurora Serverless V2](https:\/\/aws.amazon.com\/rds\/aurora\/serverless\/?nc2=h_ql_prod_db_aav2) configured to an ACU (cpu) provision ranging from 0.5 ACU -> 8 ACU. As a rule of thumb, 1 ACU can provide around 10 QPS. The Workflows Queue is write-heavy (around 100:1 write to read operations) and Aurora Serverless can scale to accommodate spikes in traffic without any extra configuration.\n\n###\n\n","completion":" In the Helm chart, set `retool-temporal-services-helm` `persistence` to the new AWS Aurora DB credentials. END"}
{"prompt":"Scaling workers\n\n###\n\n","completion":" Each workflow worker can process around ~5-10 QPS. Increase the workflow `replicaCount` if this is not high enough for your needs. You should be able to scale this to around ~40 QPS, using ~4 workflow workers, before needing any other infrastructure changes. END"}
{"prompt":"For Kubernetes deployments without Helm\n\n###\n\n","completion":" Retool strongly recommends you use option 1 to deploy to a Kubernetes cluster that doesn't use Helm to manage applications. END"}
{"prompt":"Option 1: Use Helm Template\n\n###\n\n","completion":" Install the [Helm CLI](https:\/\/helm.sh\/docs\/intro\/install\/#through-package-managers) and follow steps 1-4 in the [configuring our Helm Chart README](https:\/\/github.com\/tryretool\/retool-workflows-helm). After completing those steps, you can use Helm to generate the Kubernetes manifests and apply them to your cluster by running the command below from the `retool-workflows-helm` directory. END"}
{"prompt":"Install the [Helm CLI](https:\/\/helm.sh\/docs\/intro\/install\/#through-package-managers) and follow steps 1-4 in the [configuring our Helm Chart README](https:\/\/github.com\/tryretool\/retool-workflows-helm). After completing those steps, you can use Helm to generate the Kubernetes manifests and apply them to your cluster by running the command below from the `retool-workflows-helm` directory.\n\n###\n\n","completion":" This approach is preferred because you don't need to configure the same values in multiple places and it makes configuration bugs less likely. END"}
{"prompt":"Option 2: Use raw Kubernetes manifests\n\n###\n\n","completion":" If you can't use the Helm CLI, Retool provides Kubernetes manifests you can manually configure. These are in the [retool-onpremise repository](https:\/\/github.com\/tryretool\/retool-onpremise\/tree\/master\/kubernetes_workflows). Most of the required configuration settings can be found in the `retool-secrets.template.yaml` and `temporal-secrets.template.yaml` files, but you also need to change these values: END"}
{"prompt":"If you can't use the Helm CLI, Retool provides Kubernetes manifests you can manually configure. These are in the [retool-onpremise repository](https:\/\/github.com\/tryretool\/retool-onpremise\/tree\/master\/kubernetes_workflows). Most of the required configuration settings can be found in the `retool-secrets.template.yaml` and `temporal-secrets.template.yaml` files, but you also need to change these values:\n\n###\n\n","completion":" After these values are configured, you can run `kubectl apply -f -R kubernetes_workflows` to apply the required manifests. END"}
{"prompt":"Postgres with TLS\n\n###\n\n","completion":" In some cases, you may need to use a Postgres instance with TLS enabled. In this case, please ensure that the following environment variables are set on the `temporal` container: END"}
{"prompt":"In some cases, you may need to use a Postgres instance with TLS enabled. In this case, please ensure that the following environment variables are set on the `temporal` container:\n\n###\n\n","completion":" In the Helm chart, you can find documentation on how to set these environment variables in the `retool-workflows-helm` `values.yaml` file. END"}
{"prompt":"Airgapped deployments\n\n###\n\n","completion":" If you are not seeing the Workflows tab show up, you may need to turn on the feature flag directly on your deployment database. This is often the case when running air-gapped deployments. To manually turn on the feature flag, run the following query on your deployment database: END"}
{"prompt":"If you are not seeing the Workflows tab show up, you may need to turn on the feature flag directly on your deployment database. This is often the case when running air-gapped deployments. To manually turn on the feature flag, run the following query on your deployment database:\n\n###\n\n","completion":" If you aren't executing the script in a Node.js environment, you'll need to replace `{{ moment() }}` with the current timestamp in milliseconds. END"}
{"prompt":"Bring your own Temporal\n\n###\n\n","completion":" You can use your own Temporal Cluster deployment with Retool Workflows. This can lower infrastructure maintenance, server costs, and scaling overhead. END"}
{"prompt":"You can use your own Temporal Cluster deployment with Retool Workflows. This can lower infrastructure maintenance, server costs, and scaling overhead.\n\n###\n\n","completion":" To configure Retool Workflows to use your current Temporal cluster: END"}
{"prompt":"title: \"Route users to specific apps\"\ncategorySlug: \"org-and-user-management\"\nparentDocSlug: \"org-user-management-guides\"\nexcerpt: \"Learn how to use Workspaces to automatically route end users to pre-specified Retool apps.\"\nhidden: false\n\n###\n\n","completion":" Admins can configure _workspaces_ for specific permission groups. Users without **Edit** access who are members of a group with an associated workspace are automatically routed to a specific Retool app when they log in. For example, you can route all Customer Support representatives automatically to a Customer Support Retool app containing links to all the apps they might need to use. END"}
{"prompt":"Configure a workspace\n\n###\n\n","completion":" To configure a workspace, go to **Settings** > **Permissions** and select the permission group you'd like to apply the workspace to. In the **Additional** tab, select an app under **Workspace homepage**. Users in the chosen permission group are automatically directed to this app when they log in. END"}
{"prompt":"To configure a workspace, go to **Settings** > **Permissions** and select the permission group you'd like to apply the workspace to. In the **Additional** tab, select an app under **Workspace homepage**. Users in the chosen permission group are automatically directed to this app when they log in.\n\n###\n\n","completion":" ![Configure a workspace in Settings](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/961bf637-4c7c-4480-87cd-3b03063d2ae9.png) END"}
{"prompt":"Workspace routing\n\n###\n\n","completion":" Users with **Edit** access to any apps are routed to the Retool homepage when they log in, even if a workspace homepage is set for their groups. Users who are members of multiple groups with workspaces can switch between workspaces using their profile menu in the top right hand corner of the page. END"}
{"prompt":"Users with **Edit** access to any apps are routed to the Retool homepage when they log in, even if a workspace homepage is set for their groups. Users who are members of multiple groups with workspaces can switch between workspaces using their profile menu in the top right hand corner of the page.\n\n###\n\n","completion":" ![Using multiple workspaces](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/permissions\/58f49cf3-b4af-4705-aade-29963494c7bc.png) END"}
{"prompt":"title: \"Write raw Firebase queries\"\ncategorySlug: \"data-queries\"\nparentDocSlug: \"data-queries-guides\"\nexcerpt: \"Learn how to write queries directly against the Firebase Admin SDK in Retool.\"\n\n###\n\n","completion":" You can write queries against the Firebase Admin SDK if you have existing Firebase queries, or if you want to work more granularly with `firebase-admin`. If you haven't created a Firebase resource yet, see the [Connect to Firebase](https:\/\/docs.retool.com\/docs\/firebase-integration) guide before continuing. END"}
{"prompt":"1. Create a Firebase query\n\n###\n\n","completion":" Get started by creating a Firebase query and selecting **Raw mode** in the dropdown. END"}
{"prompt":"Get started by creating a Firebase query and selecting **Raw mode** in the dropdown.\n\n###\n\n","completion":" ![Selecting Raw mode in the query editor](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fd0bd1e-Screen_Shot_2021-01-22_at_12.41.06_PM.png) END"}
{"prompt":"2. Write the query\n\n###\n\n","completion":" In the query editor, you can write JavaScript queries which call the `firebase-admin` SDK. In **Raw mode**, you don't need to use curly braces `{{ }}` to reference Retool data such as `textinput.value`. END"}
{"prompt":"In the query editor, you can write JavaScript queries which call the `firebase-admin` SDK. In **Raw mode**, you don't need to use curly braces `{{ }}` to reference Retool data such as `textinput.value`.\n\n###\n\n","completion":" ![Using raw mode to write a query](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/549b484-Screen_Shot_2021-01-22_at_12.58.44_PM.png) END"}
{"prompt":"Predefined Firebase variables\n\n###\n\n","completion":" You can use the following predefined variables in Firebase queries. END"}
{"prompt":"You can use the following predefined variables in Firebase queries.\n\n###\n\n","completion":" The `admin.firestore` package contains mostly static helper methods. To perform actions on your Firestore database, use `db.firestore()`. END"}
{"prompt":"Example Firebase queries\n\n###\n\n","completion":" Below are some example queries you can use if you aren't sure where to start with Firebase queries. END"}
{"prompt":"title: \"Connect to Zendesk\"\ncategorySlug: \"data-sources\"\nparentDocSlug: \"api-connection-guides\"\nexcerpt: \"Learn how to connect Zendesk to Retool.\"\nhidden: false\n\n###\n\n","completion":" _Note: Retool currently only supports connecting to Zendesk's API via our REST API integration._ END"}
{"prompt":"Authentication\n\n###\n\n","completion":" Zendesk supports [3 different authentication methods](https:\/\/developer.zendesk.com\/rest_api\/docs\/support\/introduction#security-and-authentication) for using the support API: basic auth, API Tokens, and OAuth. We'll run through all of them here. END"}
{"prompt":"Basic Auth with the Zendesk API\n\n###\n\n","completion":" Using basic auth is easy, but you'll first need to enable it in your Zendesk API settings: END"}
{"prompt":"Using basic auth is easy, but you'll first need to enable it in your Zendesk API settings:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bf9bd13-Screen_Shot_2020-11-13_at_2.59.25_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bf9bd13-Screen_Shot_2020-11-13_at_2.59.25_PM.png)\n\n###\n\n","completion":" Once you've enabled basic auth in Zendesk, head over to Retool ([create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one). Click on the “Resources” tab up top, tap on the “Create new” button on the top right, and choose “REST API” as your resource type. END"}
{"prompt":"Once you've enabled basic auth in Zendesk, head over to Retool ([create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one). Click on the “Resources” tab up top, tap on the “Create new” button on the top right, and choose “REST API” as your resource type.\n\n###\n\n","completion":" Start by pasting your Zendesk subdomain (ours is `retooldocs.zendesk.com`) + `\/api\/v2` into the \"Base URL\" field. Then, from the \"Authentication\" dropdown below, choose \"Basic Auth.\" Enter your username (email) and password, click \"Create resource,\" and you're ready to go. END"}
{"prompt":"Start by pasting your Zendesk subdomain (ours is `retooldocs.zendesk.com`) + `\/api\/v2` into the \"Base URL\" field. Then, from the \"Authentication\" dropdown below, choose \"Basic Auth.\" Enter your username (email) and password, click \"Create resource,\" and you're ready to go.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fd7326d-screencapture-shopifygraphql-retool-resources-new-restapi-2020-11-13-15_23_49.png) END"}
{"prompt":"API Tokens with the Zendesk API\n\n###\n\n","completion":" To authenticate with the Zendesk API via an API Token, head over to your API settings. You'll need to enable Token Access, and then create a token: END"}
{"prompt":"To authenticate with the Zendesk API via an API Token, head over to your API settings. You'll need to enable Token Access, and then create a token:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fa00b93-Screen_Shot_2020-11-13_at_2.59.25_PM_copy_2.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/fa00b93-Screen_Shot_2020-11-13_at_2.59.25_PM_copy_2.png)\n\n###\n\n","completion":" To create a token, click \"Add API Token\" and give it a name. Once you've got it copied to the clipboard or saved elsewhere, head to your Retool homepage ([create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one). Click on the “Resources” tab up top, tap on the “Create new” button on the top right, and choose “REST API” as your resource type. END"}
{"prompt":"To create a token, click \"Add API Token\" and give it a name. Once you've got it copied to the clipboard or saved elsewhere, head to your Retool homepage ([create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one). Click on the “Resources” tab up top, tap on the “Create new” button on the top right, and choose “REST API” as your resource type.\n\n###\n\n","completion":" Start by pasting your Zendesk subdomain (ours is `retooldocs.zendesk.com`) + `\/api\/v2` into the \"Base URL\" field. Then, from the \"Authentication\" dropdown below, choose \"None\" - we'll do it in the request headers. Scroll up to the \"Headers\" section and add an `Authorization` header. It should be of type `Basic`, and the actual token is going to be a Base64-encoded combination of your username (email) and API token. The format should look like: END"}
{"prompt":"Start by pasting your Zendesk subdomain (ours is `retooldocs.zendesk.com`) + `\/api\/v2` into the \"Base URL\" field. Then, from the \"Authentication\" dropdown below, choose \"None\" - we'll do it in the request headers. Scroll up to the \"Headers\" section and add an `Authorization` header. It should be of type `Basic`, and the actual token is going to be a Base64-encoded combination of your username (email) and API token. The format should look like:\n\n###\n\n","completion":" `<username>\/token:<token>` END"}
{"prompt":"`<username>\/token:<token>`\n\n###\n\n","completion":" So for us, it looks like `docs@retool.com\/token:6wiIBWbGkBMo1mRDMuVwkw1EPsNkeUj95PIz2akv`. Finally, we need to Base64 encode this - you can use a free tool on the web [like this one](https:\/\/www.base64encode.org\/). The final header value should look something like: END"}
{"prompt":"So for us, it looks like `docs@retool.com\/token:6wiIBWbGkBMo1mRDMuVwkw1EPsNkeUj95PIz2akv`. Finally, we need to Base64 encode this - you can use a free tool on the web [like this one](https:\/\/www.base64encode.org\/). The final header value should look something like:\n\n###\n\n","completion":" `Basic anzdGluJldG9vbC5jb20vdG9rZW46TnVMVDNScElxWEIzelU5SW1EcFhVVkF5N3QwZjZJOEZSQllOam9TVA==` END"}
{"prompt":"`Basic anzdGluJldG9vbC5jb20vdG9rZW46TnVMVDNScElxWEIzelU5SW1EcFhVVkF5N3QwZjZJOEZSQllOam9TVA==`\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/35c76fe-Screen_Shot_2020-11-13_at_4.07.06_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/35c76fe-Screen_Shot_2020-11-13_at_4.07.06_PM.png)\n\n###\n\n","completion":" Click \"Create resource\" and you should be good to go! END"}
{"prompt":"OAuth with the Zendesk API\n\n###\n\n","completion":" To authenticate via OAuth (check out [Zendesk's docs here](https:\/\/support.zendesk.com\/hc\/en-us\/articles\/203663836-Using-OAuth-authentication-with-your-application)), navigate to the \"OAuth clients\" section of your Zendesk API settings. You'll need to create a new client application for Retool, and copy the resulting Client Secret and ID. END"}
{"prompt":"To authenticate via OAuth (check out [Zendesk's docs here](https:\/\/support.zendesk.com\/hc\/en-us\/articles\/203663836-Using-OAuth-authentication-with-your-application)), navigate to the \"OAuth clients\" section of your Zendesk API settings. You'll need to create a new client application for Retool, and copy the resulting Client Secret and ID.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d635aab-Screen_Shot_2020-11-13_at_4.15.17_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d635aab-Screen_Shot_2020-11-13_at_4.15.17_PM.png)\n\n###\n\n","completion":" In the \"Redirect URLs\" section, paste in `https:\/\/oauth.retool.com\/oauth\/user\/oauthcallback` - this is the callback URL Retool uses for [authenticating via OAuth schemes](https:\/\/docs.retool.com\/docs\/connect-api-resource#oauth-20). Once you click \"Save\" you should see your Client Secret - keep that in a safe place, as Zendesk won't display it again. END"}
{"prompt":"In the \"Redirect URLs\" section, paste in `https:\/\/oauth.retool.com\/oauth\/user\/oauthcallback` - this is the callback URL Retool uses for [authenticating via OAuth schemes](https:\/\/docs.retool.com\/docs\/connect-api-resource#oauth-20). Once you click \"Save\" you should see your Client Secret - keep that in a safe place, as Zendesk won't display it again.\n\n###\n\n","completion":" Once you've finished creating your client application in Zendesk, head over to Retool ([create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one). Click on the “Resources” tab up top, tap on the “Create new” button on the top right, and choose “REST API” as your resource type. END"}
{"prompt":"Once you've finished creating your client application in Zendesk, head over to Retool ([create an account](https:\/\/login.retool.com\/auth\/signup) if you don’t have one). Click on the “Resources” tab up top, tap on the “Create new” button on the top right, and choose “REST API” as your resource type.\n\n###\n\n","completion":" Start by pasting your Zendesk subdomain (ours is `retooldocs.zendesk.com`) + `\/api\/v2` into the \"Base URL\" field. Then, from the \"Authentication\" dropdown below, choose \"OAuth 2.0\". There are a few fields you'll need to fill out: END"}
{"prompt":"Start by pasting your Zendesk subdomain (ours is `retooldocs.zendesk.com`) + `\/api\/v2` into the \"Base URL\" field. Then, from the \"Authentication\" dropdown below, choose \"OAuth 2.0\". There are a few fields you'll need to fill out:\n\n###\n\n","completion":" Finally, you'll need to add a Header to your request that references Retool's magic `OAUTH2_TOKEN` variable that gets inserted at request time. It should look like `Authorization: Bearer OAUTH2_TOKEN`. Here's what the final setup should look like: END"}
{"prompt":"Finally, you'll need to add a Header to your request that references Retool's magic `OAUTH2_TOKEN` variable that gets inserted at request time. It should look like `Authorization: Bearer OAUTH2_TOKEN`. Here's what the final setup should look like:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f62441d-Screen_Shot_2020-11-13_at_5.58.23_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f62441d-Screen_Shot_2020-11-13_at_5.58.23_PM.png)\n\n###\n\n","completion":" You can test the OAuth flow by clicking the \"Test OAuth integration with your own account\" button, or do so in your query when you choose this resource from the dropdown. END"}
{"prompt":"Basic query: getting tickets\n\n###\n\n","completion":" Start by creating a new query in your query editor (“+ new”) and selecting your Zendesk API resource from the “Resource” dropdown. Our Base URL is pre-populated from when we created the resource, so we [just need to append](https:\/\/developer.zendesk.com\/rest_api\/docs\/support\/tickets) `tickets.json` to the end. Click preview, and you should see your results! END"}
{"prompt":"Start by creating a new query in your query editor (“+ new”) and selecting your Zendesk API resource from the “Resource” dropdown. Our Base URL is pre-populated from when we created the resource, so we [just need to append](https:\/\/developer.zendesk.com\/rest_api\/docs\/support\/tickets) `tickets.json` to the end. Click preview, and you should see your results!\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/b42fef4-Screen_Shot_2020-11-13_at_3.31.02_PM.png) END"}
{"prompt":"Server side pagination: getting tickets\n\n###\n\n","completion":" You might have too many tickets to display in a Retool table without overloading the frontend. Retool supports server side pagination with table components, so you can re-run your request every time a user switches pages. To get started, we've built a basic `GET` query that lists our tickets from the `tickets.json` endpoint. You can pull that data into a table component by referencing the query's data: in our case, `{{ getTickets.data.tickets }}`. END"}
{"prompt":"You might have too many tickets to display in a Retool table without overloading the frontend. Retool supports server side pagination with table components, so you can re-run your request every time a user switches pages. To get started, we've built a basic `GET` query that lists our tickets from the `tickets.json` endpoint. You can pull that data into a table component by referencing the query's data: in our case, `{{ getTickets.data.tickets }}`.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d600158-Screen_Shot_2020-11-17_at_12.45.16_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/d600158-Screen_Shot_2020-11-17_at_12.45.16_PM.png)\n\n###\n\n","completion":" Zendesk's tickets endpoint [supports multiple methods for pagination](https:\/\/developer.zendesk.com\/rest_api\/docs\/support\/introduction#pagination) - in this tutorial, we're going to use limit-offset. END"}
{"prompt":"Zendesk's tickets endpoint [supports multiple methods for pagination](https:\/\/developer.zendesk.com\/rest_api\/docs\/support\/introduction#pagination) - in this tutorial, we're going to use limit-offset.\n\n###\n\n","completion":" **1. Update the table settings** END"}
{"prompt":"**1. Update the table settings**\n\n###\n\n","completion":" To get started, click on your table component, head over to the right sidebar, and scroll down to the \"Pagination\" section. Toggle \"Server side paginated\" on, and select \"Limit offset based\" from the dropdown. In the \"Number of rows in this table\" field, reference the `count` field from the `getTickets` query with `{{ getTickets.data.count }}`. You can leave the \"Selected page\" field at the default. END"}
{"prompt":"To get started, click on your table component, head over to the right sidebar, and scroll down to the \"Pagination\" section. Toggle \"Server side paginated\" on, and select \"Limit offset based\" from the dropdown. In the \"Number of rows in this table\" field, reference the `count` field from the `getTickets` query with `{{ getTickets.data.count }}`. You can leave the \"Selected page\" field at the default.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/35e5fb5-Screen_Shot_2020-11-17_at_12.44.51_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/35e5fb5-Screen_Shot_2020-11-17_at_12.44.51_PM.png)\n\n###\n\n","completion":" **2. Update the query** END"}
{"prompt":"**2. Update the query**\n\n###\n\n","completion":" Once the table is configured, head over to your `getTickets` query (or whatever you've named it). You'll need to add two URL Parameters. We've named our table `table1`, so if you've updated your table name, you'll need to adjust this code accordingly. END"}
{"prompt":"Once the table is configured, head over to your `getTickets` query (or whatever you've named it). You'll need to add two URL Parameters. We've named our table `table1`, so if you've updated your table name, you'll need to adjust this code accordingly.\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bcbb6d6-Screen_Shot_2020-11-17_at_12.44.39_PM.png) END"}
{"prompt":"![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/bcbb6d6-Screen_Shot_2020-11-17_at_12.44.39_PM.png)\n\n###\n\n","completion":" Save your query, and you should be good to go. Here's what the final setup should look like: END"}
{"prompt":"Save your query, and you should be good to go. Here's what the final setup should look like:\n\n###\n\n","completion":" ![](https:\/\/d3399nw8s4ngfo.cloudfront.net\/docs\/rd\/f24c03e-Screen_Shot_2020-11-17_at_12.44.24_PM.png) END"}
